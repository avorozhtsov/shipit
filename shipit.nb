(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1617988,      30850]
NotebookOptionsPosition[   1607754,      30670]
NotebookOutlinePosition[   1608220,      30687]
CellTagsIndexPosition[   1608177,      30684]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["lib", "Subsection",
 CellChangeTimes->{{3.889030437783991*^9, 
  3.8890304409716578`*^9}},ExpressionUUID->"4f4cf1d8-f2d1-49b2-b312-\
b41c649c86d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Plot", ",", " ", "ListPlot", ",", "RegionPlot"}], "}"}], ",", 
    RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889030463701173*^9, 3.889030483982093*^9}, {
  3.889377944443901*^9, 3.8893779452403383`*^9}},
 CellLabel->
  "In[1100]:=",ExpressionUUID->"1d132e17-1033-4b33-98bf-7e1016d58862"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ToV", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "//", "Normal"}], "//", "Values"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8894168845378304`*^9, 3.889416905516755*^9}, {
  3.889423432401697*^9, 3.8894234326684713`*^9}},
 CellLabel->
  "In[1101]:=",ExpressionUUID->"720a1e1f-02e0-4bab-8467-9b41316284d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GIndex", "[", 
    RowBox[{"mean_", ",", "\[Sigma]_", ",", "ksi_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["ksi", 
     SuperscriptBox["\[Sigma]", "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["mean", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "\[Sigma]"}], 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "mean", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["mean", 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MossIndex", "[", 
     RowBox[{"mean_", ",", "\[Sigma]_", ",", " ", "l_", ",", "psi_"}], "]"}], 
    ":=", 
    RowBox[{"(", 
     RowBox[{"mean", "+", 
      RowBox[{"\[Sigma]", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Max", "[", 
         RowBox[{"psi", ",", 
          RowBox[{"l", "+", 
           RowBox[{"Log", "[", "\[Sigma]", "]"}]}]}], "]"}], "]"}]}]}], 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PIndex", "[", 
    RowBox[{"mean_", ",", "\[Sigma]_", ",", " ", "l_"}], "]"}], ":=", 
   RowBox[{"mean", " ", "+", " ", 
    RowBox[{"l", " ", "*", "\[Sigma]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889375290070734*^9, 3.889375632215225*^9}, {
  3.889375671393537*^9, 3.889375824951871*^9}, {3.889376331418127*^9, 
  3.889376334323812*^9}, {3.889378400001135*^9, 3.889378444469137*^9}, {
  3.889378851657432*^9, 3.889378854634918*^9}, {3.8893789332200327`*^9, 
  3.88937895825655*^9}, {3.889379189773321*^9, 3.889379199259532*^9}},
 CellLabel->
  "In[1102]:=",ExpressionUUID->"7bfe74ec-87bd-462d-a1f5-1f06cf9bf641"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanB0", "=", 
   RowBox[{"-", "0.5"}]}], ";", 
  RowBox[{"sigmaB0", "=", "1.0"}], ";", 
  RowBox[{"l0", "=", "1.1"}], ";", " ", 
  RowBox[{"a0", "=", "0.09"}], ";", " ", 
  RowBox[{"b0", "=", "0.5"}], ";", 
  RowBox[{"ms0", "=", "0.75"}], ";"}]], "Input",
 CellChangeTimes->{{3.889413201018927*^9, 3.889413206451325*^9}, {
  3.889413384059664*^9, 3.889413390343498*^9}, {3.889413698315248*^9, 
  3.889413701700427*^9}, {3.8894140710478983`*^9, 3.889414129436462*^9}},
 CellLabel->
  "In[1105]:=",ExpressionUUID->"47669576-38a6-48d9-bd34-043292119571"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"PIndex", "[", 
         RowBox[{"mean", ",", "sigma", ",", "l"}], "]"}], "<", " ", 
        RowBox[{"PIndex", "[", 
         RowBox[{"meanB", ",", "sigmaB", ",", "l"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", "sigma", ",", "0.0"}], "]"}], "<", " ", 
        RowBox[{"GIndex", "[", 
         RowBox[{"meanB", ",", "sigmaB", ",", "0.0"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MossIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"ms", " ", "*", " ", "sigma"}], ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l", "+", "a"}], ")"}], "2"], ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l", " ", "+", "a", "-", " ", "b"}], ")"}], "2"]}], "]"}],
         "<", " ", 
        RowBox[{"MossIndex", "[", 
         RowBox[{"meanB", ",", 
          RowBox[{"ms", " ", "*", " ", "sigmaB"}], ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l", "+", "a"}], ")"}], "2"], ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"l", " ", "+", "a", "-", "b"}], ")"}], "2"]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mean", ",", " ", 
       RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"sigma", ",", " ", "0.1", ",", "1.2"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meanB", ",", " ", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", " ", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaB", ",", " ", "1"}], "}"}], ",", " ", "0.1", ",", "2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "l0"}], "}"}], ",", " ", "0.1", ",", "2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ms", ",", " ", "ms0"}], "}"}], ",", " ", "0.7", ",", "1.2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", " ", "a0"}], "}"}], ",", " ", 
     RowBox[{"-", "0.5"}], ",", "1.0"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", " ", "b0"}], "}"}], ",", " ", 
     RowBox[{"-", "0.5"}], ",", "1.0"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8894124718039923`*^9, 3.889412472856257*^9}, {
  3.8894125245792437`*^9, 3.889413188788889*^9}, {3.889413301440948*^9, 
  3.889413419401896*^9}, {3.889413487964747*^9, 3.889413512566596*^9}, {
  3.889413576071022*^9, 3.889413626076021*^9}, {3.8894137129191236`*^9, 
  3.889413766955277*^9}, {3.889414025900002*^9, 3.889414046068054*^9}, {
  3.8894140815523167`*^9, 3.889414132474622*^9}},
 CellLabel->
  "In[1106]:=",ExpressionUUID->"5df03ea6-3bcf-4d5d-9c6a-4b7cc388400f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.09, $CellContext`b$$ = 
    0.5, $CellContext`l$$ = 
    1.1, $CellContext`meanB$$ = -0.5, $CellContext`ms$$ = 
    0.75, $CellContext`sigmaB$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`meanB$$], -0.5}, -2, 0}, {{
       Hold[$CellContext`sigmaB$$], 1}, 0.1, 2}, {{
       Hold[$CellContext`l$$], 1.1}, 0.1, 2}, {{
       Hold[$CellContext`ms$$], 0.75}, 0.7, 1.2}, {{
       Hold[$CellContext`a$$], 0.09}, -0.5, 1.}, {{
       Hold[$CellContext`b$$], 0.5}, -0.5, 1.}}, Typeset`size$$ = {
    540., {264., 272.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.09, $CellContext`b$$ = 
        0.5, $CellContext`l$$ = 
        1.1, $CellContext`meanB$$ = -0.5, $CellContext`ms$$ = 
        0.75, $CellContext`sigmaB$$ = 1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      RegionPlot[{$CellContext`PIndex[$CellContext`mean, $CellContext`sigma, \
$CellContext`l$$] < $CellContext`PIndex[$CellContext`meanB$$, \
$CellContext`sigmaB$$, $CellContext`l$$], \
$CellContext`GIndex[$CellContext`mean, $CellContext`sigma, 
           0.] < $CellContext`GIndex[$CellContext`meanB$$, \
$CellContext`sigmaB$$, 
           0.], $CellContext`MossIndex[$CellContext`mean, $CellContext`ms$$ \
$CellContext`sigma, ($CellContext`l$$ + $CellContext`a$$)^2, \
($CellContext`l$$ + $CellContext`a$$ - $CellContext`b$$)^2] < \
$CellContext`MossIndex[$CellContext`meanB$$, $CellContext`ms$$ \
$CellContext`sigmaB$$, ($CellContext`l$$ + $CellContext`a$$)^2, \
($CellContext`l$$ + $CellContext`a$$ - $CellContext`b$$)^2]}, \
{$CellContext`mean, -1.2, 0.5}, {$CellContext`sigma, 0.1, 1.2}], 
      "Specifications" :> {{{$CellContext`meanB$$, -0.5}, -2, 
         0}, {{$CellContext`sigmaB$$, 1}, 0.1, 2}, {{$CellContext`l$$, 1.1}, 
         0.1, 2}, {{$CellContext`ms$$, 0.75}, 0.7, 
         1.2}, {{$CellContext`a$$, 0.09}, -0.5, 
         1.}, {{$CellContext`b$$, 0.5}, -0.5, 1.}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {399., 407.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.889412700365855*^9, 3.889412783975114*^9}, {
   3.88941282920898*^9, 3.889412880624058*^9}, {3.889412913633871*^9, 
   3.889412922638686*^9}, {3.889412959539083*^9, 3.889413048045472*^9}, 
   3.889413082941484*^9, 3.889413217746265*^9, 3.8894132985730543`*^9, {
   3.889413354647337*^9, 3.889413448317663*^9}, 3.889413482549098*^9, {
   3.889413520205061*^9, 3.889413592932477*^9}, 3.889413626835799*^9, {
   3.889413709726491*^9, 3.8894137161468697`*^9}, {3.8894137556935368`*^9, 
   3.8894137738247633`*^9}, 3.889413857318954*^9, {3.889413964353466*^9, 
   3.8894139653609867`*^9}, 3.8894140519199533`*^9, {3.889414122978012*^9, 
   3.889414133106621*^9}, 3.889466378378025*^9, 3.88946652353477*^9, 
   3.889498464856903*^9},
 CellLabel->
  "Out[1106]=",ExpressionUUID->"79e7c4be-1907-4b5c-9e51-e8a2d43e9f5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import", "Subsection",
 CellChangeTimes->{{3.8890304500635023`*^9, 3.889030457368888*^9}, 
   3.889375494772086*^9},ExpressionUUID->"bd8d119b-d1e7-44a4-a52e-\
87cfc5a6832b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "file", "=", "\"\<~/projects/shipit_all/shipit/shipit_results.txt\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.88902724259061*^9, 3.889027296158798*^9}},
 CellLabel->
  "In[1107]:=",ExpressionUUID->"60cee4bc-e606-4eb5-8a39-dba4a2812d39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fields", "=", 
   RowBox[{"StringSplit", "[", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<result\\tresult_sigma\\tm\\tseed\\tweeks\\ttrials\\tmean\\tsigma\\\
terror\\tp1\\tp2\\tp3\\tp4\\tp5\>\"", ",", "\"\<\\t\>\""}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intFields", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<m\>\"", ",", " ", "\"\<seed\>\"", ",", " ", "\"\<weeks\>\"", ",", 
     " ", "\"\<trials\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"types", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[Rule]", "\"\<Number\>\""}], ")"}], "&"}], "/@", 
     "fields"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"types", "[", "#", "]"}], "=", "\"\<Integer\>\""}], ";"}], 
     ")"}], "&"}], "/@", "intFields"}], 
  ";"}], "\[IndentingNewLine]", "types"}], "Input",
 CellChangeTimes->{{3.88903168770947*^9, 3.889031873100232*^9}, {
  3.889416338731955*^9, 3.8894163423330317`*^9}},
 CellLabel->
  "In[1108]:=",ExpressionUUID->"3c244c23-0c4d-4a38-85ea-633840ecce39"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"result\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"result_sigma\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"seed\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"weeks\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"trials\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"mean\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"sigma\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"error\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p1\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p2\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p3\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p4\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p5\"\>", "\[Rule]", "\<\"Number\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8890318734433804`*^9, 3.889368963504406*^9, 3.889414174277903*^9, {
   3.8894156023302517`*^9, 3.889415628782955*^9}, 3.889415870699273*^9, {
   3.889416348884781*^9, 3.889416355175255*^9}, 3.889419000658574*^9, 
   3.889422290690771*^9, 3.8894234067298927`*^9, 3.88942778799988*^9, {
   3.88942783436517*^9, 3.889427843302849*^9}, 3.889438398285016*^9, 
   3.889446898761757*^9, 3.889450244255002*^9, {3.889460485103146*^9, 
   3.889460537679134*^9}, 3.889460854502822*^9, 3.889461843775066*^9, 
   3.889463905554027*^9, 3.8894663785595284`*^9, 3.889466523755361*^9, 
   3.889498465031646*^9},
 CellLabel->
  "Out[1112]=",ExpressionUUID->"d43cdfe4-965c-4332-a211-a42567324d91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data0", "=", 
  RowBox[{"SemanticImport", "[", 
   RowBox[{"file", ",", " ", "types"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8890297680831747`*^9, 3.889029780917309*^9}, {
   3.889029821524221*^9, 3.889029822970726*^9}, {3.8890298571496067`*^9, 
   3.889029887481098*^9}, {3.889029919809422*^9, 3.889029921044608*^9}, 
   3.889031414618245*^9, {3.889031602410425*^9, 3.889031680406893*^9}, {
   3.88903188022434*^9, 3.889031881342936*^9}},
 CellLabel->
  "In[1113]:=",ExpressionUUID->"4e325b7e-ef20-4324-92e3-924a577ad2ef"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5968645099502998538427571180763810556105970103800006758920], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
            1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
            1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
            1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
            1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "result" -> TypeSystem`PackageScope`AtomShape[60], 
                "result_sigma" -> TypeSystem`PackageScope`AtomShape[60], "m" -> 
                TypeSystem`PackageScope`AtomShape[34], "seed" -> 
                TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
                TypeSystem`PackageScope`AtomShape[34], "trials" -> 
                TypeSystem`PackageScope`AtomShape[34], "mean" -> 
                TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
                TypeSystem`PackageScope`AtomShape[60], "error" -> 
                TypeSystem`PackageScope`AtomShape[60], "p1" -> 
                TypeSystem`PackageScope`AtomShape[60], "p2" -> 
                TypeSystem`PackageScope`AtomShape[60], "p3" -> 
                TypeSystem`PackageScope`AtomShape[60], "p4" -> 
                TypeSystem`PackageScope`AtomShape[60], "p5" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
             "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1292], "Meta" -> 
         Association["ID" -> 184645231001202], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
            1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
            1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
            1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
            1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "result" -> TypeSystem`PackageScope`AtomShape[60], 
                "result_sigma" -> TypeSystem`PackageScope`AtomShape[60], "m" -> 
                TypeSystem`PackageScope`AtomShape[34], "seed" -> 
                TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
                TypeSystem`PackageScope`AtomShape[34], "trials" -> 
                TypeSystem`PackageScope`AtomShape[34], "mean" -> 
                TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
                TypeSystem`PackageScope`AtomShape[60], "error" -> 
                TypeSystem`PackageScope`AtomShape[60], "p1" -> 
                TypeSystem`PackageScope`AtomShape[60], "p2" -> 
                TypeSystem`PackageScope`AtomShape[60], "p3" -> 
                TypeSystem`PackageScope`AtomShape[60], "p4" -> 
                TypeSystem`PackageScope`AtomShape[60], "p5" -> 
                TypeSystem`PackageScope`AtomShape[60]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
             "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1292], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 1292, 
         "DataColumnCount" -> 14, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "result"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["result_sigma", 
                    Style[
                    "result_sigma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result_sigma"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["m", 
                    Style[
                    "m", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "m"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "m"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["seed", 
                    Style[
                    "seed", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "seed"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "seed"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["weeks", 
                    Style[
                    "weeks", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "weeks"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "weeks"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["trials", 
                    Style[
                    "trials", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "trials"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "trials"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["mean", 
                    Style[
                    "mean", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "mean"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "mean"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["sigma", 
                    Style[
                    "sigma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "sigma"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "sigma"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "error"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["p1", 
                    Style[
                    "p1", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "p1"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "p1"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.107221"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000253268"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["30000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5347630010785354"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.56906"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00431528"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.06"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0044558524911441824"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.86569"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00634405"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.06"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.26344469059818736"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3.16529"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00851785"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.06"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.21953694304455424"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.11578"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000469301"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.06"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.0585833977129868"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.84098"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0012685"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.06"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.083360131000961152"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.28217"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00157991"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.25023972798601236"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.36526"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00307238"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.1310460762102569"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.43432"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00322969"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.2369530127798266"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.764317"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000287629"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27396609465590616"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.05551"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000618834"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.24114228241793684"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.79257"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00314261"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.067306586082253664"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.531408"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000127014"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.6958239999999996"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.93277"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00386352"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.1848761880806588"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.06908"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00530496"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.3117427649203234"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.878366"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000407175"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2.0063342912741024"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.39442"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00116108"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.067510167714275816"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.989096"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00180956"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.4105835776960616"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.383867"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000123926"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.6751457599999964"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.03666"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00248017"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.2604734623585817"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1292, 1], {1, 1292 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1292, 1], {1, 1292 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1292, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1292, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1292, 1], {1, 1292 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1292, 1], {1, 1292 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[
                   TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {1027., {443.7010498046875, 452.2989501953125}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {1027., {443.7010498046875, 452.2989501953125}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5968645099502998538427571180763810556105970103800006758920,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.889029817012073*^9, 3.889029827654345*^9}, 
   3.889029857893655*^9, 3.8890298885178347`*^9, 3.889029922497549*^9, 
   3.88903141596944*^9, 3.889031577302822*^9, 3.889031669163117*^9, 
   3.889031883146748*^9, 3.889368965861712*^9, 3.889414177975058*^9, {
   3.889415604133572*^9, 3.889415630682116*^9}, 3.889415872471183*^9, 
   3.889416357067378*^9, 3.8894190025176477`*^9, 3.889422292646707*^9, 
   3.8894234085415783`*^9, 3.8894277891272917`*^9, {3.889427835344602*^9, 
   3.8894278445736303`*^9}, 3.8894384000392113`*^9, 3.889446899985999*^9, 
   3.8894502461680098`*^9, {3.889460486128544*^9, 3.889460539519411*^9}, 
   3.889460856388871*^9, 3.889461845647533*^9, 3.889463907484208*^9, 
   3.8894663805750523`*^9, 3.889466525688808*^9, 3.8894984662434673`*^9},
 CellLabel->
  "Out[1113]=",ExpressionUUID->"c2195926-12b3-490e-be23-bf9b58de1a81"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KeyFn", "[", "r_", "]"}], ":=", 
   RowBox[{"HK", "[", 
    RowBox[{
     RowBox[{"r", "[", "\"\<m\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<sigma\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<error\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataHash", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k", "=", 
        RowBox[{"KeyFn", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"dataHash", ",", " ", "k", ",", "Null"}], "]"}], "==", 
           "Null"}], " ", "||", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dataHash", "[", "k", "]"}], "[", "\"\<weeks\>\"", "]"}], 
           "<", 
           RowBox[{"r", "[", "\"\<result\>\"", "]"}]}], "||", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dataHash", "[", "k", "]"}], "[", "\"\<result\>\"", "]"}],
            "<", 
           RowBox[{"r", "[", "\"\<result\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dataHash", "[", "k", "]"}], "=", "r"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ")"}], 
     "&"}], "/@", 
    RowBox[{"data0", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<weeks\>\"", "]"}], "\[GreaterEqual]", 
        "10000"}], "&"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"Values", "[", "dataHash", "]"}], "]"}], "//", "Sort"}], " ", 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889030798386899*^9, 3.889030801181291*^9}, {
   3.8890308335623703`*^9, 3.889031146093865*^9}, 3.88903117947878*^9, {
   3.889031285916507*^9, 3.889031294939742*^9}, {3.889031350276247*^9, 
   3.889031380241672*^9}, {3.889031423685122*^9, 3.889031493606927*^9}, {
   3.889031898304885*^9, 3.8890319196363983`*^9}, {3.8890324024790497`*^9, 
   3.8890324191273746`*^9}},
 CellLabel->
  "In[1114]:=",ExpressionUUID->"cf960611-826b-45e3-bc8e-8532f989fa4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "data0", "]"}], ",", 
   RowBox[{"Length", "[", "dataHash", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.889031318696292*^9, 3.889031329624084*^9}, {
  3.88903138665021*^9, 3.889031408215726*^9}, {3.8890319301362047`*^9, 
  3.889031934959474*^9}},
 CellLabel->
  "In[1118]:=",ExpressionUUID->"332717e4-74bd-4692-ae49-6a666b76c651"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1292", ",", "1292"}], "}"}]], "Output",
 CellChangeTimes->{{3.8890313265879707`*^9, 3.889031332870666*^9}, {
   3.889031387950015*^9, 3.8890314091064463`*^9}, {3.889031927697496*^9, 
   3.8890319356173697`*^9}, 3.889032436922762*^9, 3.889368966506472*^9, 
   3.889414178953875*^9, {3.88941560497355*^9, 3.88941563152026*^9}, 
   3.889415873306142*^9, 3.889416357916798*^9, 3.889419003371043*^9, 
   3.8894222935275393`*^9, 3.889423409385272*^9, 3.889427789930882*^9, {
   3.889427836195373*^9, 3.889427845368801*^9}, 3.889438400907226*^9, 
   3.8894469008040667`*^9, 3.889450247047863*^9, {3.88946048702085*^9, 
   3.88946054042632*^9}, 3.889460857238579*^9, 3.8894618465531607`*^9, 
   3.889463908320784*^9, 3.889466381418366*^9, 3.889466526524284*^9, 
   3.8894984669376707`*^9},
 CellLabel->
  "Out[1118]=",ExpressionUUID->"66bfca7c-7a48-492f-b5b5-bbffa494f4e6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mean = -1, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.8894520303150587`*^9, 
  3.88945203992778*^9}},ExpressionUUID->"eac29dc3-ffb9-4189-ae37-\
62b0961b373e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prefilteredData", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"Select", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}], " ", "&&",
         " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
         RowBox[{"-", "1"}]}]}], "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.889030767684058*^9, 3.88903078596043*^9}, {
  3.8890320456500893`*^9, 3.889032046260572*^9}, {3.889032222416234*^9, 
  3.8890322969357767`*^9}, {3.889422327978612*^9, 3.8894223284087763`*^9}},
 CellLabel->
  "In[1119]:=",ExpressionUUID->"2f39dd8a-877f-4fd8-b498-99dcd78d6037"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"prefilteredData", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "35"}], ")"}], 
      " ", "&&", " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], " ", 
     "&"}], " ", "]"}], "]"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.889380575860787*^9, 3.889380587559224*^9}, {
  3.889422441601982*^9, 3.889422442254023*^9}},
 CellLabel->
  "In[1120]:=",ExpressionUUID->"30deb7bb-5bbf-430c-bd28-bb891ff26509"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.090343711, "result_sigma" -> 0.00028731905, "m" -> 3, 
        "seed" -> 1, "weeks" -> 2000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.438, "p2" -> 0.9895, "p3" -> 0,
         "p4" -> 0, "p5" -> 0], 
       Association[
       "result" -> 0.10015606, "result_sigma" -> 0.00040817355, "m" -> 4, 
        "seed" -> 1, "weeks" -> 2000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.5402049, "p2" -> 0.9995724, 
        "p3" -> 2169.52, "p4" -> 0, "p5" -> 0], 
       Association[
       "result" -> 0.1112366, "result_sigma" -> 0.00044208304, "m" -> 6, 
        "seed" -> 1, "weeks" -> 2000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.61, "p2" -> 1.6, "p3" -> 0, 
        "p4" -> 0, "p5" -> 0], 
       Association[
       "result" -> 0.11126097, "result_sigma" -> 0.00055364472, "m" -> 5, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.5972444912954862`16., "p2" -> 
        2.0966395730700116`17., "p3" -> -0.00009792736761504017, 
        "p4" -> -8.884862009986716*^-6, "p5" -> 0.0002849267701336251`19.], 
       Association[
       "result" -> 0.1115522, "result_sigma" -> 0.00057170463, "m" -> 51, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.609136421438426, "p2" -> 
        2.1612879740719375`17., "p3" -> 0.042943787715527475`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.1120355, "result_sigma" -> 0.00042904229, "m" -> 1, 
        "seed" -> 1, "weeks" -> 10000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.5161033231128185`17., "p2" -> 
        0.08353271083074429`17., "p3" -> 0.6120921363087963`16., "p4" -> 
        0.9630067833140874`16., "p5" -> 0.0616550012548513`16.], 
       Association[
       "result" -> 0.11251245, "result_sigma" -> 0.00072277858, "m" -> 52, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11290486, "result_sigma" -> 0.00056634384, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.9807262863019222`16., "p2" -> 
        0.8241151447318499`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11306275, "result_sigma" -> 0.00073258697, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.0051553747283584`17., "p2" -> 
        0.7375824007923694`16., "p3" -> -0.023013424818385666`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60], "p5" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Meta" -> 
     Association["ID" -> 184679590739571], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60], "p5" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     9, "DataColumnCount" -> 14, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0903437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000287319"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.438"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.100156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000408174"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.540205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111237"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000442083"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111261"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000553645"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5972444912954862"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111552"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000571705"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.609136"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000429042"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5161033231128184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112512"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000722779"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112905"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000566344"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9807262863019222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.113063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000732587"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0051553747283584"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "4ab58cc5-e34b-4c22-93d7-d6f639c1d416"][{6, 
      Key["weeks"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{959., {238.2010498046875, 246.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{959., {238.2010498046875, 246.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8893805880850697`*^9, 3.8894141810403423`*^9, {3.8894156062016993`*^9, 
   3.889415631604748*^9}, 3.889415877273336*^9, 3.889416359241789*^9, 
   3.88941900344766*^9, 3.8894222935996428`*^9, 3.889422338883649*^9, 
   3.8894224428698072`*^9, 3.8894225160000134`*^9, 3.889423409491037*^9, 
   3.889427790067422*^9, 3.889427845475492*^9, 3.8894279115890617`*^9, 
   3.88943840100249*^9, 3.88944690236038*^9, 3.88944693923627*^9, 
   3.889450247141918*^9, 3.889460487093454*^9, 3.889460857329729*^9, 
   3.8894618466404867`*^9, 3.889466381507422*^9, 3.8894665266417627`*^9, 
   3.889498467036477*^9},
 CellLabel->
  "Out[1120]=",ExpressionUUID->"711a8840-5f15-4edc-ab8b-5931fbffae40"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d1", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "1"}], ")"}], " ",
         "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d5", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "5"}], ")"}], " ",
         "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d52", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "52"}], ")"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d51", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "51"}], ")"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d7", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "7"}], ")"}], " ",
         "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d71", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "71"}], ")"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}]}], "  ", 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889029964413473*^9, 3.889030014644607*^9}, {
   3.889030058869574*^9, 3.889030065474325*^9}, {3.889030108058992*^9, 
   3.889030189457815*^9}, {3.889030276502334*^9, 3.889030302556431*^9}, {
   3.889030336670285*^9, 3.8890303829140472`*^9}, {3.889030563165979*^9, 
   3.889030564173089*^9}, {3.889030615463028*^9, 3.889030655967799*^9}, {
   3.8890307385461283`*^9, 3.88903074033993*^9}, {3.889031956349987*^9, 
   3.889031958829611*^9}, {3.889032006546339*^9, 3.889032012565119*^9}, {
   3.889032071894038*^9, 3.889032082228984*^9}, 3.889032193256177*^9, 
   3.8890322501592617`*^9, {3.8893724114421988`*^9, 3.889372415814137*^9}, 
   3.889372463337228*^9, {3.889376945293167*^9, 3.889376954216332*^9}, {
   3.889416392491241*^9, 3.889416398484396*^9}, {3.889422447708993*^9, 
   3.8894224591012087`*^9}},
 CellLabel->
  "In[1121]:=",ExpressionUUID->"7d565826-7f76-41ed-9285-6e8766d7c391"],

Cell[CellGroupData[{

Cell[BoxData["d7"], "Input",
 CellChangeTimes->{{3.8893805586119633`*^9, 3.889380559159822*^9}},
 CellLabel->
  "In[1127]:=",ExpressionUUID->"00815652-bf83-4001-8aa9-9b621f9df248"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.063549537, "result_sigma" -> 0.000022308488999999998`, 
        "m" -> 7, "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        0.9528361472649454`16., "p2" -> 0.8307288151183363`16., 
        "p3" -> -0.020974412762232726`18., "p4" -> Missing["NoInput"], "p5" -> 
        Missing["NoInput"]], 
       Association[
       "result" -> 0.076832177, "result_sigma" -> 0.000048756009000000003`, 
        "m" -> 7, "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, 
        "mean" -> -1, "sigma" -> 1, "error" -> 3, "p1" -> 0.513291080440395, 
        "p2" -> 1.874357782109246`16., "p3" -> 0.00641603952612518`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.085648398, "result_sigma" -> 0.000027071689000000004`, 
        "m" -> 7, "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 4, "p1" -> 
        0.9696318632647971`16., "p2" -> 0.8385489724943735`16., 
        "p3" -> -0.02517164183342396`17., "p4" -> Missing["NoInput"], "p5" -> 
        Missing["NoInput"]], 
       Association[
       "result" -> 0.094111433, "result_sigma" -> 0.000060749334000000004`, 
        "m" -> 7, "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 6, "p1" -> 
        0.5195280889437036`16., "p2" -> 1.9097760914877593`17., "p3" -> 
        0.011639526203488767`18., "p4" -> Missing["NoInput"], "p5" -> 
        Missing["NoInput"]], 
       Association[
       "result" -> 0.099897894, "result_sigma" -> 0.00014797984, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 1.0016535973600678`17., "p2" -> 
        0.7461857280439517`16., "p3" -> -0.019133961330098058`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10307861, "result_sigma" -> 0.00016421464, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 0.9996197135086305`16., "p2" -> 
        0.7623964934430931`16., "p3" -> -0.020532852709498943`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10525415, "result_sigma" -> 0.00012209455, "m" -> 7, 
        "seed" -> 1, "weeks" -> 10000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 12, "p1" -> 0.9841804341057462`16., "p2" -> 
        0.7969443002678183`16., "p3" -> -0.02207205158446448`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10722092, "result_sigma" -> 0.00025326757, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5347630010785354`16., "p2" -> 
        1.9738814126886406`17., "p3" -> 0.011087517275857453`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10751011, "result_sigma" -> 0.00018449096, "m" -> 7, 
        "seed" -> 1, "weeks" -> 10000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 0.9854973773289398`16., "p2" -> 
        0.7945737135044886`16., "p3" -> -0.022245188942953933`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10817166, "result_sigma" -> 0.00023262059, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 1.0011749958822755`17., "p2" -> 
        0.7726207622047019`16., "p3" -> -0.02298769233041938`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.1096869, "result_sigma" -> 0.00021164856, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 20, "p1" -> 0.979439316560466, "p2" -> 
        0.7858497705406517`16., "p3" -> -0.02193015116322246`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11067428, "result_sigma" -> 0.00034662553, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 1.0089789085905383`17., "p2" -> 
        0.7569461006633791`16., "p3" -> -0.022275753111854375`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11129297, "result_sigma" -> 0.0003047625, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 25, "p1" -> 1.010670895171669`16., "p2" -> 
        0.7682553624798412`16., "p3" -> -0.023160971674419016`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11240108, "result_sigma" -> 0.00030245897, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.95636996777575, "p2" -> 
        0.7977641012533296`16., "p3" -> -0.020788254863148822`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11284848, "result_sigma" -> 0.00063674359, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 1.0194866403119105`17., "p2" -> 
        0.746905985204251, "p3" -> -0.021858416607298536`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11306275, "result_sigma" -> 0.00073258697, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.0051553747283584`17., "p2" -> 
        0.7375824007923694`16., "p3" -> -0.023013424818385666`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 16], "Meta" -> 
     Association["ID" -> 184722540412531], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 16], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     16, "DataColumnCount" -> 14, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0635495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000223085"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9528361472649454"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0768322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000048756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.513291"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0856484"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000270717"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9696318632647972"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0941114"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000607493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5195280889437036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0998979"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00014798"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0016535973600678"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.103079"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000164215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9996197135086306"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.105254"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000122095"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9841804341057462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107221"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000253268"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5347630010785354"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10751"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000184491"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9854973773289398"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108172"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000232621"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0011749958822756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109687"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000211649"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.979439"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110674"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000346626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0089789085905384"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111293"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000304762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.010670895171669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112401"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000302459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.95637"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000636744"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0194866403119106"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.113063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000732587"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0051553747283584"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{970., {367.7010498046875, 376.2989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{970., {367.7010498046875, 376.2989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.889380559863311*^9, 3.889414189302903*^9, {3.8894156065240602`*^9, 
   3.889415631940392*^9}, 3.889415877591652*^9, 3.889416359589053*^9, 
   3.88941900378539*^9, 3.8894222939361897`*^9, 3.889422339323979*^9, 
   3.889422516403479*^9, 3.889423409922078*^9, 3.889427790386662*^9, 
   3.8894278458358994`*^9, 3.889427911985924*^9, 3.889438401416314*^9, 
   3.889446902708274*^9, 3.88944693958764*^9, 3.889450247547386*^9, 
   3.889460487428574*^9, 3.88946085772941*^9, 3.889461847043668*^9, 
   3.88946638191278*^9, 3.889466527057061*^9, 3.889498467367569*^9},
 CellLabel->
  "Out[1127]=",ExpressionUUID->"b55998e7-2a2d-4aee-bcd5-08b0faecf125"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d51"], "Input",
 CellChangeTimes->{{3.889069374111171*^9, 3.889069374506027*^9}, 
   3.889372428333143*^9, {3.889376957648897*^9, 3.889376958505329*^9}, {
   3.889380540932358*^9, 3.889380549429281*^9}, {3.889416402832114*^9, 
   3.8894164031009617`*^9}},
 CellLabel->
  "In[1128]:=",ExpressionUUID->"5d3a39eb-b708-4c34-8109-8424b045371e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.084473258, "result_sigma" -> 0.000031749229000000004`, 
        "m" -> 51, "seed" -> 1, "weeks" -> 15000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 4, "p1" -> 0.52083434494543, 
        "p2" -> 2.020649800273122`16., "p3" -> 0.05346845123188382`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.093471751, "result_sigma" -> 0.00005654181000000001, "m" -> 
        51, "seed" -> 1, "weeks" -> 15000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.5275691165236802`16., "p2" -> 
        2.0302176832102283`17., "p3" -> 0.04779199956493297`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.095796011, "result_sigma" -> 0.00009072874000000001, "m" -> 
        51, "seed" -> 1, "weeks" -> 15000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.48928870459493523`17., "p2" -> 
        2.028131743195285`16., "p3" -> 0.13277987986729378`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10664028, "result_sigma" -> 0.00018811216, "m" -> 51, 
        "seed" -> 1, "weeks" -> 1000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5888137735181296`16., "p2" -> 
        2.154468997499631`16., "p3" -> 0.0446686586814917`16., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10736122, "result_sigma" -> 0.00021953792, "m" -> 51, 
        "seed" -> 1, "weeks" -> 1000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 20, "p1" -> 0.5514841882442971`16., "p2" -> 
        1.88033861731638, "p3" -> 0.05291249559507851`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10862776, "result_sigma" -> 0.00032163768, "m" -> 51, 
        "seed" -> 1, "weeks" -> 1000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 0.6908872819213311`16., "p2" -> 
        2.120196119794914`16., "p3" -> -0.10517942300830033`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10929837, "result_sigma" -> 0.00030442346, "m" -> 51, 
        "seed" -> 1, "weeks" -> 1000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 0.5952648453957121`16., "p2" -> 
        2.09080824873128, "p3" -> 0.04531391057320391`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.1115522, "result_sigma" -> 0.00057170463, "m" -> 51, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.609136421438426, "p2" -> 
        2.1612879740719375`17., "p3" -> 0.042943787715527475`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 8], "Meta" -> 
     Association["ID" -> 184713950477939], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 8], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     8, "DataColumnCount" -> 14, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0844733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000317492"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.520834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0934718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000565418"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5275691165236802"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.095796"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000907287"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4892887045949352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10664"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000188112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5888137735181296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107361"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000219538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5514841882442971"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000321638"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6908872819213311"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109298"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000304423"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5952648453957121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111552"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000571705"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.609136"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{970., {219.7010498046875, 228.2989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{970., {219.7010498046875, 228.2989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.88906937632344*^9, 3.889368971992674*^9, 3.8893724287985563`*^9, 
   3.889372466213614*^9, 3.889376958944023*^9, {3.889380543209638*^9, 
   3.8893805505663023`*^9}, 3.889414192463738*^9, {3.889415606924713*^9, 
   3.889415632379024*^9}, 3.8894158780119257`*^9, 3.88941636000904*^9, 
   3.889416403544619*^9, 3.889419004193653*^9, 3.889422294335021*^9, 
   3.8894223397493057`*^9, 3.889422516804716*^9, 3.8894234103776503`*^9, 
   3.8894277906479673`*^9, 3.889427846237722*^9, 3.889427912379498*^9, 
   3.88943840184417*^9, 3.889446903069696*^9, 3.889446939999271*^9, 
   3.8894502479835052`*^9, 3.8894604876713123`*^9, 3.889460858130945*^9, 
   3.889461847466208*^9, 3.889466382352647*^9, 3.889466527512492*^9, 
   3.889498467734107*^9},
 CellLabel->
  "Out[1128]=",ExpressionUUID->"bdf8f2ae-5828-4c1c-98eb-45ef4a37a0ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d5", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"d52", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"d7", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"d1", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}},
 CellLabel->
  "In[1129]:=",ExpressionUUID->"001ea2e4-62e4-4aaa-a1d4-e3ae4b2d1829"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEP7FMmbPOfqd1vD+F/sNc+M2917fxFUD6Dw5s2
GRdj6Q1QPocD7+Wf0mvnbobyBRxWBbCqntq8FcqXcOAz2Rw+j28HlK/gEHVU
4uEO/51QvpLDj/scUbP2wfgqDiIs/fnvpXZB+RoO0d9uKcmvgvF1HJzu3Z2Q
Lrwbytdz+GeyxCHUGsY3cFgiemxzeCKMb+JQsESJZdY+GN/M4WXxvSk6bHug
fEsHsfnLl500hPHtHM4I3989uQDKb3B0+L+oInhmNUzewYGrR3/n1Tl77AGk
MVSq
       "]],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.063451094}, {4., 0.085557554}, {6., 0.094823714}, {8., 
       0.099833579}, {10., 0.10302701}, {12., 0.10527504}, {15., 
       0.10734006}, {16., 0.10817961}, {20., 0.10963081}, {22., 0.11033208}, {
       25., 0.11118878}, {35., 0.11251245}, {32., 0.11258885}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.063549537}, {3., 0.076832177}, {4., 0.085648398}, {6., 
       0.094111433}, {8., 0.099897894}, {10., 0.10307861}, {12., 
       0.10525415}, {16., 0.10722092}, {15., 0.10751011}, {16., 0.10817166}, {
       20., 0.1096869}, {22., 0.11067428}, {25., 0.11129297}, {30., 
       0.11240108}, {32., 0.11284848}, {35., 0.11306275}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEP7G1umJsXm/XbQ/gf7PP/XT79fekiKJ/BIeOb
RHKS3AYon8Nh2UK7DQ1TN0P5Ag5Gr5QuOmzbCuVLOOjWv0vLY98B5Ss4NKS9
F3jvtxPKV3LY3bHUfNIuGF/Fwa9ow5mpCrugfA2HTpt3DF8WwPg6DpZy1gcT
xXZD+XoOMYsD7giZwvgGDp95LuTwRsP4Jg6FCzZEZhyD8c0cLkXpLFjNsQfK
t3R4r2DS9c8YxrdzUPBdff1xCYzv4DBxsYDxwYlQfoOjw+ZNtSei1+2xBwAn
JVXr
       "]],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{594.6432291666663, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0, 0.11306275}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889030422694726*^9, 3.889030430557761*^9}, {
   3.8890305422184772`*^9, 3.889030569896326*^9}, 3.88903069740131*^9, 
   3.889030743601815*^9, 3.889031962542047*^9, 3.889032020113357*^9, 
   3.889032053482287*^9, 3.889032096237144*^9, 3.889032136958708*^9, 
   3.8890321785348883`*^9, {3.889032253194138*^9, 3.8890323086646442`*^9}, 
   3.889032449209029*^9, 3.889368974960205*^9, 3.889372433819969*^9, 
   3.88937248003358*^9, {3.889376981017105*^9, 3.889377040467388*^9}, 
   3.8893806277140427`*^9, 3.889414195525628*^9, {3.8894156072598343`*^9, 
   3.889415632716937*^9}, 3.889415878359005*^9, 3.8894163603826313`*^9, {
   3.889416414893971*^9, 3.889416417150708*^9}, 3.8894166876197233`*^9, 
   3.8894173905959387`*^9, 3.889419004499219*^9, 3.889422294632004*^9, 
   3.889422340134244*^9, 3.889422517149392*^9, 3.889423410756605*^9, 
   3.889427791031938*^9, 3.889427846584293*^9, 3.8894279127258377`*^9, 
   3.8894384022169113`*^9, 3.889446903402521*^9, 3.8894469403866873`*^9, 
   3.889450248341078*^9, 3.8894604880468903`*^9, 3.889460858495612*^9, 
   3.889461847816641*^9, 3.889466382718521*^9, 3.889466527888666*^9, 
   3.889498468010755*^9},
 CellLabel->
  "Out[1129]=",ExpressionUUID->"dc12906a-7cce-40d3-8e31-2bb11dc0520b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"d5", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d52", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d7", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.10", ",", "0.115"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.889427876336645*^9, 
  3.889427947817156*^9}, {3.88944693178889*^9, 3.889446932573399*^9}},
 CellLabel->
  "In[1130]:=",ExpressionUUID->"6b6352dd-6c70-409c-a7ed-a70f45f3cac9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.666281696500874, 0.1}, {9., 0.10056462}, {10., 0.1019735}, {
       12., 0.10415835}, {14., 0.10576484}, {15., 0.1063741}, {16., 
       0.10695408}, {20., 0.1083771}, {22., 0.10946921}, {25., 0.1101347}, {
       30., 0.11109279}, {32., 0.11176811}, {35., 0.11126097}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.104227083660176, 0.1}, {10., 0.10302701}, {12., 
       0.10527504}, {15., 0.10734006}, {16., 0.10817961}, {20., 0.10963081}, {
       22., 0.11033208}, {25., 0.11118878}, {32., 0.11258885}, {35., 
       0.11251245}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.064203154258353, 0.1}, {10., 0.10307861}, {12., 
       0.10525415}, {15., 0.10751011}, {16., 0.10722092}, {16., 0.10817166}, {
       20., 0.1096869}, {22., 0.11067428}, {25., 0.11129297}, {30., 
       0.11240108}, {32., 0.11284848}, {35., 0.11306275}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0.1},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{580.5234374999998, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 36}, {0.1, 0.115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889417125559224*^9, 3.889417133680567*^9}, {
   3.889417181179405*^9, 3.889417186534473*^9}, {3.889417400480833*^9, 
   3.889417436607944*^9}, {3.889419004550765*^9, 3.8894190191440973`*^9}, 
   3.889422294681538*^9, {3.889422340180067*^9, 3.88942234590205*^9}, 
   3.889422517198204*^9, 3.889423410833082*^9, {3.88942779109921*^9, 
   3.8894278053508472`*^9}, 3.889427846644739*^9, {3.8894278786297503`*^9, 
   3.8894279483220587`*^9}, 3.889438402261737*^9, {3.889446903444839*^9, 
   3.889446940458634*^9}, 3.889450248399753*^9, 3.889460488098948*^9, 
   3.889460858549233*^9, 3.889461847874483*^9, 3.889466382772607*^9, 
   3.8894665279519997`*^9, 3.889498468071198*^9},
 CellLabel->
  "Out[1130]=",ExpressionUUID->"f5ecec8f-d9e5-4b3c-a940-0f29cb43efb4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResultVsError", "[", 
   RowBox[{
   "data_", ",", " ", "mean_", ",", " ", "sigma_", ",", " ", "methods_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prefilteredData", ",", " ", "method"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prefilteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "sigma"}], 
           " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", "mean"}]}], 
          "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"method", " ", "=", " ", "#"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prefilteredData", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "method"}], 
               ")"}], "&"}], " ", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
           "]"}], "//", "Sort"}]}], "\[IndentingNewLine]", ")"}], "&"}], "/@",
       "methods"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8894516015997972`*^9, 3.889451707470255*^9}, {
  3.889451745784664*^9, 3.8894518040441427`*^9}, {3.889451835185034*^9, 
  3.8894518413784533`*^9}},
 CellLabel->
  "In[1131]:=",ExpressionUUID->"9d5db487-4793-418a-8efe-0141e9d26873"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dss", "=", 
  RowBox[{"ResultVsError", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
    RowBox[{"{", 
     RowBox[{"5", ",", "52", ",", "7"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889451819849722*^9, 3.8894518307564487`*^9}, {
  3.889451874733609*^9, 3.88945189397722*^9}},
 CellLabel->
  "In[1132]:=",ExpressionUUID->"1d72ea0a-69ea-4791-b7da-8dd5468a20f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association["InitialData" -> {
         Association["error" -> 0.5, "result" -> 0.015219877], 
         Association["error" -> 1, "result" -> 0.036373069], 
         Association["error" -> 2, "result" -> 0.062915043], 
         Association["error" -> 3, "result" -> 0.076624698], 
         Association["error" -> 4, "result" -> 0.084774622], 
         Association["error" -> 6, "result" -> 0.093973061], 
         Association["error" -> 8, "result" -> 0.098872714], 
         Association["error" -> 9, "result" -> 0.10056462], 
         Association["error" -> 10, "result" -> 0.1019735], 
         Association["error" -> 12, "result" -> 0.10415835], 
         Association["error" -> 14, "result" -> 0.10576484], 
         Association["error" -> 15, "result" -> 0.1063741], 
         Association["error" -> 16, "result" -> 0.10695408], 
         Association["error" -> 20, "result" -> 0.1083771], 
         Association["error" -> 22, "result" -> 0.10946921], 
         Association["error" -> 25, "result" -> 0.1101347], 
         Association["error" -> 30, "result" -> 0.11109279], 
         Association["error" -> 32, "result" -> 0.11176811], 
         Association["error" -> 35, "result" -> 0.11126097]}, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[60], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 19, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 19], "Meta" -> 
       Association["ID" -> 184791259889268], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[60], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 19, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 19], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 19, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
       19, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0152199"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0363731"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.062915"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0766247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0847746"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0939731"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0988727"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.100565"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.101974"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.104158"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.105765"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.106374"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.106954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108377"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109469"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111093"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111261"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{216., {393.2010498046875, 401.7989501953125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{216., {393.2010498046875, 401.7989501953125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association["InitialData" -> {
         Association["error" -> 2, "result" -> 0.063451094], 
         Association["error" -> 4, "result" -> 0.085557554], 
         Association["error" -> 6, "result" -> 0.094823714], 
         Association["error" -> 8, "result" -> 0.099833579], 
         Association["error" -> 10, "result" -> 0.10302701], 
         Association["error" -> 12, "result" -> 0.10527504], 
         Association["error" -> 15, "result" -> 0.10734006], 
         Association["error" -> 16, "result" -> 0.10817961], 
         Association["error" -> 20, "result" -> 0.10963081], 
         Association["error" -> 22, "result" -> 0.11033208], 
         Association["error" -> 25, "result" -> 0.11118878], 
         Association["error" -> 32, "result" -> 0.11258885], 
         Association["error" -> 35, "result" -> 0.11251245]}, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 13, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 13], "Meta" -> 
       Association["ID" -> 184799849823860], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 13, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 13], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
       13, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0634511"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0855576"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0948237"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0998336"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.103027"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.105275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10734"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10818"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109631"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110332"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.112589"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.112512"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{201., {282.2010498046875, 290.7989501953125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{201., {282.2010498046875, 290.7989501953125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association["InitialData" -> {
         Association["error" -> 2, "result" -> 0.063549537], 
         Association["error" -> 3, "result" -> 0.076832177], 
         Association["error" -> 4, "result" -> 0.085648398], 
         Association["error" -> 6, "result" -> 0.094111433], 
         Association["error" -> 8, "result" -> 0.099897894], 
         Association["error" -> 10, "result" -> 0.10307861], 
         Association["error" -> 12, "result" -> 0.10525415], 
         Association["error" -> 15, "result" -> 0.10751011], 
         Association["error" -> 16, "result" -> 0.10722092], 
         Association["error" -> 16, "result" -> 0.10817166], 
         Association["error" -> 20, "result" -> 0.1096869], 
         Association["error" -> 22, "result" -> 0.11067428], 
         Association["error" -> 25, "result" -> 0.11129297], 
         Association["error" -> 30, "result" -> 0.11240108], 
         Association["error" -> 32, "result" -> 0.11284848], 
         Association["error" -> 35, "result" -> 0.11306275]}, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 16, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 16], "Meta" -> 
       Association["ID" -> 184808439758452], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
         Association[{All, "error"} -> 1, {All, "result"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]]], 
            DirectedInfinity[1], 2, {All}]], 16, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 16], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
       16, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0635495"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0768322"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0856484"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0941114"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0998979"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.103079"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.105254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10751"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107221"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108172"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109687"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110674"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111293"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.112401"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.112848"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.113063"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{201., {337.7010498046875, 346.2989501953125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{201., {337.7010498046875, 346.2989501953125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.889451837375661*^9, 3.889451843938586*^9}, {
   3.8894518753629208`*^9, 3.889451894778858*^9}, 3.889460488178009*^9, 
   3.8894608586338863`*^9, 3.889461847956015*^9, 3.8894663828605947`*^9, 
   3.889466528054268*^9, 3.88949846814854*^9},
 CellLabel->
  "Out[1132]=",ExpressionUUID->"f37413a8-864f-47f0-a8a1-2cfe1dd01d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.10", ",", "0.115"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8894519119696293`*^9, 3.889451912362995*^9}},
 CellLabel->
  "In[1133]:=",ExpressionUUID->"99731d28-9a44-468b-b117-9080e5dcafe9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.666281696500874, 0.1}, {9., 0.10056462}, {10., 0.1019735}, {
       12., 0.10415835}, {14., 0.10576484}, {15., 0.1063741}, {16., 
       0.10695408}, {20., 0.1083771}, {22., 0.10946921}, {25., 0.1101347}, {
       30., 0.11109279}, {32., 0.11176811}, {35., 0.11126097}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.104227083660176, 0.1}, {10., 0.10302701}, {12., 
       0.10527504}, {15., 0.10734006}, {16., 0.10817961}, {20., 0.10963081}, {
       22., 0.11033208}, {25., 0.11118878}, {32., 0.11258885}, {35., 
       0.11251245}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.064203154258353, 0.1}, {10., 0.10307861}, {12., 
       0.10525415}, {15., 0.10751011}, {16., 0.10722092}, {16., 0.10817166}, {
       20., 0.1096869}, {22., 0.11067428}, {25., 0.11129297}, {30., 
       0.11240108}, {32., 0.11284848}, {35., 0.11306275}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0.1},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 36}, {0.1, 0.115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8894519138843527`*^9, 3.889460488492399*^9, 
  3.889460858981283*^9, 3.889461848289009*^9, 3.889466383172864*^9, 
  3.889466528380897*^9, 3.889498468437029*^9},
 CellLabel->
  "Out[1133]=",ExpressionUUID->"e40601a6-d3cd-4fab-8db2-3062a053899e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mean = -0.5, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.889422375176359*^9, 3.889422382819119*^9}, {3.889452020107152*^9, 
  3.889452047781554*^9}},ExpressionUUID->"64966230-c00f-4c00-9795-\
bad0c7ee1069"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dss", "=", 
   RowBox[{"ResultVsError", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"-", "0.5"}], ",", " ", "1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", "52", ",", "7", ",", "71"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.889451942596156*^9, 3.8894519598148527`*^9}, {
  3.889452081299705*^9, 3.889452083557353*^9}},
 CellLabel->
  "In[1134]:=",ExpressionUUID->"3122e93f-25ab-4f21-9466-64b09e6a48d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"dss", ",", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}, {3.889451964156145*^9, 
  3.889451968845459*^9}},
 CellLabel->
  "In[1135]:=",ExpressionUUID->"63f23d75-17c3-47ed-b54c-8ecb3f7bb301"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18636645}, {4., 0.26300043}, {8., 0.31742528}, {10., 
       0.33043646}, {16., 0.34940924}, {22., 0.36000259}, {32., 0.36803995}, {
       35., 0.37164968}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18731015}, {4., 0.26403958}, {6., 0.29836762}, {8., 
       0.31842208}, {10., 0.33175771}, {16., 0.35089251}, {22., 0.36084319}, {
       32., 0.36969102}, {35., 0.37229}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18721214}, {4., 0.26422815}, {6., 0.29757036}, {8., 
       0.31767168}, {10., 0.33038625}, {16., 0.34974436}, {22., 0.36019753}, {
       32., 0.3682693}, {35., 0.3714348}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18734631}, {4., 0.26409156}, {6., 0.29872239}, {8., 
       0.31852661}, {10., 0.33183499}, {16., 0.35108758}, {22., 0.36052112}, {
       32., 0.36868478}, {35., 0.37326644}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0, 0.37326644}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889030422694726*^9, 3.889030430557761*^9}, {
   3.8890305422184772`*^9, 3.889030569896326*^9}, 3.88903069740131*^9, 
   3.889030743601815*^9, 3.889031962542047*^9, 3.889032020113357*^9, 
   3.889032053482287*^9, 3.889032096237144*^9, 3.889032136958708*^9, 
   3.8890321785348883`*^9, {3.889032253194138*^9, 3.8890323086646442`*^9}, 
   3.889032449209029*^9, 3.889368974960205*^9, 3.889372433819969*^9, 
   3.88937248003358*^9, {3.889376981017105*^9, 3.889377040467388*^9}, 
   3.8893806277140427`*^9, 3.889414195525628*^9, {3.8894156072598343`*^9, 
   3.889415632716937*^9}, 3.889415878359005*^9, 3.8894163603826313`*^9, {
   3.889416414893971*^9, 3.889416417150708*^9}, 3.8894166876197233`*^9, 
   3.8894173905959387`*^9, 3.889419004499219*^9, 3.889422294632004*^9, 
   3.889422340134244*^9, {3.8894224676012707`*^9, 3.889422476182213*^9}, 
   3.889423411471429*^9, 3.889427793168687*^9, 3.889427848403096*^9, 
   3.889427954489884*^9, 3.889438404275371*^9, 3.889446905697734*^9, 
   3.889446955800953*^9, {3.889450237995195*^9, 3.889450249267652*^9}, 
   3.8894519695402803`*^9, 3.889452093914188*^9, 3.889460488589555*^9, {
   3.88946052197646*^9, 3.889460541773057*^9}, 3.889460859042595*^9, 
   3.8894618483438063`*^9, 3.8894663832273493`*^9, 3.889466528464797*^9, 
   3.8894984684911757`*^9},
 CellLabel->
  "Out[1135]=",ExpressionUUID->"76b8ffd9-7d57-4adf-a8f1-efde5a2a6759"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30", ",", "0.4"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.8894224891272783`*^9, 
  3.889422495356296*^9}, {3.889446951297909*^9, 3.88944695205163*^9}, {
  3.889451977786235*^9, 3.8894519782004147`*^9}},
 CellLabel->
  "In[1136]:=",ExpressionUUID->"9bb06c9a-b635-41de-88cc-73292431abac"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.719314430816071, 0.3}, {8., 0.31742528}, {10., 
       0.33043646}, {16., 0.34940924}, {22., 0.36000259}, {32., 0.36803995}, {
       35., 0.37164968}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.162794710004656, 0.3}, {8., 0.31842208}, {10., 
       0.33175771}, {16., 0.35089251}, {22., 0.36084319}, {32., 0.36969102}, {
       35., 0.37229}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.2417393484606984`, 0.3}, {8., 0.31767168}, {10., 
       0.33038625}, {16., 0.34974436}, {22., 0.36019753}, {32., 0.3682693}, {
       35., 0.3714348}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.129024016093538, 0.3}, {8., 0.31852661}, {10., 
       0.33183499}, {16., 0.35108758}, {22., 0.36052112}, {32., 0.36868478}, {
       35., 0.37326644}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0.3},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->{709.661458333333, Automatic},
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 36}, {0.3, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889417125559224*^9, 3.889417133680567*^9}, {
   3.889417181179405*^9, 3.889417186534473*^9}, {3.889417400480833*^9, 
   3.889417436607944*^9}, {3.889419004550765*^9, 3.8894190191440973`*^9}, 
   3.889422294681538*^9, {3.889422340180067*^9, 3.88942234590205*^9}, {
   3.889422467655325*^9, 3.889422495977412*^9}, 3.889423411547264*^9, 
   3.88942779347316*^9, 3.8894278484537077`*^9, 3.889427954541298*^9, 
   3.8894384043222237`*^9, 3.889446905744976*^9, 3.889446955864916*^9, {
   3.889450238051792*^9, 3.889450249318795*^9}, 3.889451980144051*^9, 
   3.889460488963252*^9, {3.889460522048863*^9, 3.889460547041313*^9}, 
   3.889460859091094*^9, 3.8894618483855457`*^9, 3.8894663832951097`*^9, 
   3.889466528520143*^9, 3.889498468542993*^9},
 CellLabel->
  "Out[1136]=",ExpressionUUID->"69682e3c-82ab-4b83-b961-20ccbb64686e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["mean = -1.5, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.889422375176359*^9, 3.889422382819119*^9}, {3.88945149821452*^9, 
  3.889451498375552*^9}, {3.889452058222687*^9, 
  3.8894520585302763`*^9}},ExpressionUUID->"461467d7-8212-49d3-916c-\
b6def20576c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dss", "=", 
   RowBox[{"ResultVsError", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", "52", ",", "7", ",", "71"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8894520676155653`*^9, 3.889452071066574*^9}, {
  3.889452105257896*^9, 3.8894521054582787`*^9}},
 CellLabel->
  "In[1137]:=",ExpressionUUID->"2fdc68bc-65d0-4d05-8ff6-4b471c186d72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"dss", ",", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}, {3.889452001485681*^9, 
  3.889452006564324*^9}},
 CellLabel->
  "In[1138]:=",ExpressionUUID->"3e382268-e028-4f51-9054-3ad0d574cabf"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.02195861}, {4., 0.029560042}, {6., 0.032660581}, {8., 
       0.034324747}, {10., 0.035481888}, {12., 0.036219335}, {16., 
       0.037413202}, {20., 0.037822894}, {22., 0.03818361}, {32., 
       0.038686869}, {35., 0.038766459}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022239702}, {4., 0.029995578}, {6., 0.033231377}, {8., 
       0.034875798}, {10., 0.036105398}, {16., 0.037760104}, {22., 
       0.03846831}, {32., 0.03929236}, {35., 0.039288718}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022288979}, {4., 0.030077075}, {6., 0.03279503}, {8., 
       0.035011712}, {10., 0.036190794}, {16., 0.038124617}, {22., 
       0.038993018}, {32., 0.039344982}, {35., 0.039337798}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022330435}, {4., 0.03012301}, {6., 0.033303715}, {8., 
       0.035040403}, {10., 0.036160423}, {16., 0.03787111}, {22., 
       0.038559652}, {32., 0.039433188}, {35., 0.039538667}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.020981940166666886`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0.020981940166666886`, 0.039538667}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889030422694726*^9, 3.889030430557761*^9}, {
   3.8890305422184772`*^9, 3.889030569896326*^9}, 3.88903069740131*^9, 
   3.889030743601815*^9, 3.889031962542047*^9, 3.889032020113357*^9, 
   3.889032053482287*^9, 3.889032096237144*^9, 3.889032136958708*^9, 
   3.8890321785348883`*^9, {3.889032253194138*^9, 3.8890323086646442`*^9}, 
   3.889032449209029*^9, 3.889368974960205*^9, 3.889372433819969*^9, 
   3.88937248003358*^9, {3.889376981017105*^9, 3.889377040467388*^9}, 
   3.8893806277140427`*^9, 3.889414195525628*^9, {3.8894156072598343`*^9, 
   3.889415632716937*^9}, 3.889415878359005*^9, 3.8894163603826313`*^9, {
   3.889416414893971*^9, 3.889416417150708*^9}, 3.8894166876197233`*^9, 
   3.8894173905959387`*^9, 3.889419004499219*^9, 3.889422294632004*^9, 
   3.889422340134244*^9, {3.8894224676012707`*^9, 3.889422476182213*^9}, 
   3.889423411471429*^9, 3.889427793168687*^9, 3.889427848403096*^9, 
   3.889427954489884*^9, 3.889438404275371*^9, 3.889446905697734*^9, 
   3.889446955800953*^9, {3.889450237995195*^9, 3.889450249267652*^9}, 
   3.889451513038618*^9, 3.8894521091177893`*^9, 3.8894604893742037`*^9, 
   3.8894608591580467`*^9, 3.889461848434081*^9, 3.8894663833805227`*^9, 
   3.889466528581517*^9, 3.8894984685901814`*^9},
 CellLabel->
  "Out[1138]=",ExpressionUUID->"6aa5b6fb-88cc-4cec-bc96-455defcc4160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.035", ",", "0.040"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.8894224891272783`*^9, 
  3.889422495356296*^9}, {3.889446951297909*^9, 3.88944695205163*^9}, {
  3.889451539078417*^9, 3.8894515586032257`*^9}, {3.88945211794936*^9, 
  3.8894521183827677`*^9}},
 CellLabel->
  "In[1139]:=",ExpressionUUID->"23923018-d684-41d1-96fe-395a82c55278"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{9.167105823750088, 0.035}, {10., 0.035481888}, {12., 
       0.036219335}, {16., 0.037413202}, {20., 0.037822894}, {22., 
       0.03818361}, {32., 0.038686869}, {35., 0.038766459}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.20202016916071, 0.035}, {10., 0.036105398}, {16., 
       0.037760104}, {22., 0.03846831}, {32., 0.03929236}, {35., 
       0.039288718}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.98943285505093, 0.035}, {8., 0.035011712}, {10., 
       0.036190794}, {16., 0.038124617}, {22., 0.038993018}, {32., 
       0.039344982}, {35., 0.039337798}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.953471204960253, 0.035}, {8., 0.035040403}, {10., 
       0.036160423}, {16., 0.03787111}, {22., 0.038559652}, {32., 
       0.039433188}, {35., 0.039538667}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5., 0.035},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5, 36}, {0.035, 0.04}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889417125559224*^9, 3.889417133680567*^9}, {
   3.889417181179405*^9, 3.889417186534473*^9}, {3.889417400480833*^9, 
   3.889417436607944*^9}, {3.889419004550765*^9, 3.8894190191440973`*^9}, 
   3.889422294681538*^9, {3.889422340180067*^9, 3.88942234590205*^9}, {
   3.889422467655325*^9, 3.889422495977412*^9}, 3.889423411547264*^9, 
   3.88942779347316*^9, 3.8894278484537077`*^9, 3.889427954541298*^9, 
   3.8894384043222237`*^9, 3.889446905744976*^9, 3.889446955864916*^9, {
   3.889450238051792*^9, 3.889450249318795*^9}, 3.889451513090069*^9, 
   3.889451543883011*^9, 3.889452119792882*^9, 3.8894604897568407`*^9, 
   3.889460859220798*^9, 3.88946184848111*^9, 3.88946638344471*^9, 
   3.889466528645611*^9, 3.8894984686289997`*^9},
 CellLabel->
  "Out[1139]=",ExpressionUUID->"1cc5484a-b88a-4cdc-8ec5-9fec209b89b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Region plot", "Subsection",
 CellChangeTimes->{{3.8893758560120363`*^9, 
  3.889375862123891*^9}},ExpressionUUID->"3fbacd10-c07b-41af-b25c-\
d9cba457eef9"],

Cell[CellGroupData[{

Cell["m = 7", "Subsubsection",
 CellChangeTimes->{{3.889380218299718*^9, 
  3.889380220625326*^9}},ExpressionUUID->"8adf1496-2492-4465-89e2-\
41ea67ee9cec"],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "munfl"}], "]"}]], "Input",
 CellChangeTimes->{{3.889376237371978*^9, 3.889376260975976*^9}},
 CellLabel->
  "In[1140]:=",ExpressionUUID->"e18a4dbb-dc6f-4359-9593-5949a867db27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d7", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "16"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377635105544*^9, 3.8893776905797873`*^9}, {
  3.889377732532257*^9, 3.889377741455358*^9}},
 CellLabel->
  "In[1141]:=",ExpressionUUID->"9c64219a-d132-435c-9f99-c78840f78893"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.10722092, "result_sigma" -> 0.00025326757, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5347630010785354`16., "p2" -> 
        1.9738814126886406`17., "p3" -> 0.011087517275857453`18., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.10817166, "result_sigma" -> 0.00023262059, "m" -> 7, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 1.0011749958822755`17., "p2" -> 
        0.7726207622047019`16., "p3" -> -0.02298769233041938`17., "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 2], "Meta" -> 
     Association["ID" -> 184898634071669], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     2, "DataColumnCount" -> 14, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107221"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000253268"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5347630010785354"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108172"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000232621"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0011749958822756"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{948., {108.7010498046875, 117.2989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{948., {108.7010498046875, 117.2989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8893776373797617`*^9, 3.889377691269004*^9}, 
   3.889377741861915*^9, 3.8894158792613993`*^9, 3.889419075308975*^9, 
   3.889466383500277*^9, 3.88946652869423*^9, 3.889498468680252*^9},
 CellLabel->
  "Out[1141]=",ExpressionUUID->"d9b1b0c0-5a55-4545-be55-5299ecec5ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ship", "=", "0.97559"}], ";", " ", 
  RowBox[{"s", "=", "0.8029"}], ";", " ", 
  RowBox[{"ksi", "=", 
   RowBox[{"-", "0.022"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g7", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GIndex", "[", 
        RowBox[{"mean", ",", 
         RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", "<=",
        "  ", 
       RowBox[{"GIndex", "[", 
        RowBox[{"meanB", ",", 
         RowBox[{"s", " ", "*", " ", "sigmaB"}], ",", "ksi"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", 
        "*", "ship"}], " ", "<=", " ", "mean"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.889375869271365*^9, 3.889375989293068*^9}, {
   3.8893761135803747`*^9, 3.889376218885538*^9}, {3.889376268361972*^9, 
   3.889376289643519*^9}, {3.889376354208544*^9, 3.889376364650154*^9}, {
   3.889376417185766*^9, 3.8893764504554777`*^9}, {3.8893764963322287`*^9, 
   3.889376527894845*^9}, {3.889376568956876*^9, 3.889376614749627*^9}, 
   3.8893777799916286`*^9, {3.889377841521777*^9, 3.8893778779374647`*^9}, {
   3.8893779605269213`*^9, 3.889377971038549*^9}, {3.889379364299802*^9, 
   3.889379372647895*^9}, {3.8894158885834513`*^9, 3.889415897415433*^9}},
 CellLabel->
  "In[1142]:=",ExpressionUUID->"9d163b7f-4f28-4bd5-8413-3ddaa13eabdc"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztmndQlEm3xkFRkcWECVxxUVAJRgyggofVFTELRhAUMGJgURADuiAgKCqu
CC66BnTBhCAKYlg+G5EcJA0wRIcMQ5gBRRHT9au6T1N3rPvnrVv31vqP9Stm
3j7nebtPP316Rtv/arG1h5ycnENPObl//+9xZdKP06a9YebKwq6Gw96UPPeo
9uPENs7KoowZc9ZKOYf2mOHzW3YL5ykL8kJ82sWc43x//dt/aANns3TlwguG
tZwFynelVzdUcY6/6j9s+ecKzkLNtCUb5xdzlt7ueczxZD7ngdZHdn++msHZ
ZFtbobpePOeEFxd7fSi7wfnI0ICVx9vvEniS2/1GjykJnL84zXa3Dc3ivD3a
XknjtIDziknaBQNMSzjPuNNy7evX15yh35qcOw4D6AHXDwz9wNAPDP3A0A8M
/cDQDwz9wNAPDP3A0A8M/cDQDwz9wNAPDP3A0A8M/cDQDwz9NK51Rr9oZVw/
MPQDQz8w9ANDPzD0A0M/MPQDQz8w9ANDPzD0A0M/MPQDQz8w9ANDPzD0A0M/
MPR7F6v5ddaKFK4fGPqBoR8Y+oGhHxj6gaEfGPqBoR8Y+oGhHxj6gaEfGPqB
oR8Y+oGhHxj6gaEfGPpZj1qiNfjWK64fGPqBoR8Y+oGhHxj6gaEfGPqBoR8Y
+oGhHxj6gaEfGPqBoR8Y+oGhHxj6gaEfGPpVznuq5fo1j+sHhn5g6AeGfmDo
B4Z+YOgHhn5g6AeGfmDoB4Z+YOgHhn5g6AeGfmDoB4Y+ge+WPrYPL+T6gKEP
GPqAoQ8Y+oChDxj6gKEPGPqAoQ8Y+oChDxj6gKEPGPqAoQ8Yeiy8K1q0Yl0J
1wMMPcDQAww9wNADDD3A0AMMPcDQAww9wNADDD3A0AMMPcDIt8vGpWxOzwqe
Lxj5gpEvGPmCkS8Y+YKRLxj5gpEvGPmCkS8Y+YKRLxj5FSp6GwQWiXh+YOQH
Rn5g5AdGfmDkB0Z+YOQHRn5g5AdGfmDkB0Y+96uyPPwiqng+YOQDRj5g5ANG
PmDkA0Y+YOQDRj5g5ANGPmDEfyJueLqHVw2PH4z4wYgfjPjBiB+M+MGIH4z4
wYgfjPjBiNfugt3gA5Z1PF4w4gUjXjDiBSNeMOIFI14w4gUjntlO4dZ7Jjfw
eMCIB4x4wIgHjHjAiAeMeMAYf/DijrDNvcR8fDDGB2N8MMYHY3wwxgdjvGZN
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
7KM/dtrqCmaYo5t2+3A9ZQa9tY3ya2F7RjNNh9RWUpht0nNORw5VpQ/1nzC9
kBrNxtyb9tMjFm5tXhmdJ6K85NXCHj1T2NN36zRj3Kto5tpXxqq9hWzespOJ
+oJasqq0vrSpuZpNGGWYvlPSSHITq9T3W4jZecuCmncTWmh7nt7Os/ptbIyi
XVPhhW6/8M998j/3yf/cJ//fu0/+5374v94P/3+7r/3fvg9FfLLna9l4/qfu
HxEPGPGAEY/seP/d/R7Gkz3/gzEeGOOBMZ7s89EvwPPBeD4Yzwfj+WA8X/Z5
OA/heWA8D4zngfE82e/j/ITvg/F9ML4v+3n4SXwejM/L/h39EfxdltEfgb+f
3/P33cv+esnPR2DsF2Ccr8Dwn+gX4vwGxvkP/Qb4dTD8MPoPOF+iv4Dz6H93
n4DzLfoHOF+gf4DzMPoHOD/jfIrzCfoB2A+RH/ZD2fxl6zvyRb2TzVe2fsjm
J3tfjvxk+/uY/8gX+WO+/T2Q9hl2SNjI8uJH8w8l8f6e5y/ypSNzM3l/Gucb
9KfRn0U/Eecb9O9l++vo76Pfj347+vHoR2K+QV/0j9HvR78d8aLfCMb5HvqD
oT/Od/g7GH9HPz3n9z1mU8am8X46GP0IvD8w9gPcT6DfjX4t4sN8AaP/C8b8
AWN+QH/MB+iN+QC9sb5k1xvyw3kQ+WA/Rj5T43qIy1Sq+fvHepRdn8gX9yXI
F+tTdr1iPuN8i/mD9Yv1jP0KjP47+tn4PPYT9KvR/8d6ll3fmO83DFWyD/ZL
IvT/sd6x/lF/wbhfQD8cn0e9Rb8d9wOoF6gfqMdg3G/g/I7Pox7jvgr3P6g3
qD+o12Dcr+F+DJ9H/VY8U5xyKqaUcJ8FPaE/8oMeiA/54PmIB/rj/YLxfvE+
8HzohfcBxvuAfhgfekB/MPSGPogP+UJfMPRE/ogf+1Oq2y8KP1skcX/eW3dQ
1nb9VO7P28N0dcKd07g/35JWYiffnE7D4rR6mp6v+u73h6q3et3fU9DtZ/fH
HIpKSMzh/vCj26Bpw0IFFJaYV6kkzPru92EHyhym6U0t4n4i9MKo/irRlTRS
/ZzmhmFpPH/MT7OtEa0mq6tJI2PXb0qteTxfzDf7WKOIso81tHSCWtyC6cV8
PmD+3O2l7RN0t460Puz2Elh17++ov88jKhMX2jWQm8IxweNe7Sz5wRbNLPlk
srub8PS0nZTteb9mn97QFLrXdrNnuLiRmUbuSmh7k0bp2RvX76RGpl+l0KG1
JJ0UtQw2ZdTWsRLzM196XM6g2cYDjK2Wilio/o655htySCnk1Ov358rYlx+a
D23Yl0vJiqI/L44sYL31G++9kxfQ1SEzXLRv5DKVSS7KHfsKaKDvHvUjisnM
ftGRmpjTQhLm1F3Su/eQjTLfnO+VV0rPz8g5VIUF0xfnCrMFk19/WyenR7o6
JlFGwnOph3YVpa6TnyD+9l4CE1UVr1ZX0wlN3Yy05EIKb3XY5X2jluZZ5eYM
+LuMdLXvvE/eWk8THIOmWQ3s/r0v9vMdHm96frqRQqJo8bqTXfW8PmJ//zEk
RSAXmcn9TahKesSm6CyKPC/ydv1WL7F+mq/bLN+YVcTXD/Z/ldGbTg/0yqeA
/JXS9yr5vB6inlanxE2yf11Av/dO+SSZkcz9gfHarvrsjn995w/66OjeWjag
nLbaXLVz6RnF/cLA2J9+lhh48d+fwT+MH1rWoHG12z9MSm5aKKcmosh7Sgei
2sP4er54QCiq0Ov2E/AXorduOXK1Ivrk9uiNwtUEvp5RjxUtf/Z67llFPjlt
brYe2Xz9oj407MjJ0xxfQ2MMRq+KG1LI6x3qwREtHTYlr5Zmf7A1NlxSxv3C
pmUfX9xfJmVJb/rd2qqZQgo0Yc2Ekd8O4s/9I6sGp9KNiafUg4dLmGG2cWz4
gxSqGdWqcOJKDdsi53t5q1oWzbZ+ed1zRQ2z77r/rmVlFrVmiveucKhiLxO8
dSenv6LFm4dZaDAhqyHbpPC7eeQhLD/Sz1rAVATnhbbLBVQ1NFFL82wmQz++
0iOupd2UMWlo54B8vRIyyhx06qkgmKkqOBu2/VZO8b2/Zg9xeUgBKmNrtu8V
0efFKx+2RT6nxmUTjZ2WVlJg6djwVzrPaXd0R2Sf+ZU0d8BE/R7uGTRrb/GX
i72qST+p90LXlHwqjjuifCahhpySHdVOJhRTWOsv3te96ui2/hqLHlGvqWDy
Ry2VRQ3UZdbfQ2VmBQ1eNsfdpKjbXxWF+LSktddzf2/WElRS8yyJ+/tn62aP
dr6WzP3E25OWbekJGdwPXFmWv216YPd+cDb/TeGKICHtql22NKm4nTm/sJrt
6Z1Ej/6a41ksaGezolL15vsmkVdt7OWEc23M8ZfR40oXJdOpPkU/ZE5vY0Fa
v4q9jydz/+aoNC/YNyuVvOcuccjf2sJmtowba7QxlVoP3gjwFDWz8FlVn2Zd
SKWdzL3T91YT6+OXetP5pzQ6LVy2qO5eE4ttadbXVk/jfm9tk+He8+PTqXMI
dSTtFbPHNzu1pFFppFDYEKGj3sC+PG02DKvv9neCibs+/NUvh/pvqXGJMqli
chdzXMc2v6Jho620o9dVshapznPbJ9l0zz9uWUgPEavTaJo93yOH+von7zGf
0c6ubrM3qq7p9n99n4zKeaaTTC3DKuInS6TMIkJn/+voZO7/Fu/tl9Y5MoWi
BqmbHLeSsKThr/7eE5xCnc6x80JM6liQwKm6Vj6TLHZvH7iH1bK1Y2rD36/O
JGWF8BVavWq5f2uOWqI3TVTCfusyP/ryXS7dm3XqmdmNEmYvqA10V+r+ffeJ
SOvoB0e/7SMf7w9O9yzhfvO005Q+mg2FzGRswNIwi3zq3B9jsXF9Ad/fxbHv
Q+6lJ7LpJYHyolLht/W+uEMpL4HZD2kQyW0o5n71hBzr+1ixhBoCEjqU/BO4
f30ReChnfscTttbdYobblxLuZx9mG76O8S2lCa7GfQ5IY7m/xf7ew23Mmwrv
ejrofumtjaCcnw96m9q03RjYwCT+7oG+rek0b65peJhHNdtWrbMoQpxFz+cN
sT3pX8GaBxhNO1yVQ3Nfzeh4apXPFIMPTDj8WEDKawpntVRlsykrnpkfmVZI
kXYLJZmmaax5/qMRkvgi0o7PfxK5OYHinM8ZbHhWSbaVFgrZB1Jp2JxHOyov
VJFjTb8xvx1/RV1z7N/+6lJNcoO+3npqmkfpldPcGi1qKEZj6G23hQU09oW/
9S79Wlo9etGgXguE1LdkX3CHSh2VqfxZvYZKyW2CaNKJt3U0JlC7zl7ShwU6
DHsZtraCmh8O/nj7/BOyMA+Qj68QUb+slnNTS24zn/lvb4+/XUYtp7Xsd4bc
pvBztTXbFUT0H5eE6YM=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
qNU094+9OzXlO6WmfbfE3vsf3+R3EA==
          "]], PolygonBox[CompressedData["
1:eJwt1FmIyFEUx/F7GDH2ZZgZxjAN2ZJSakpNqSkNTZOx74x9m7GOnez7vhMp
yhsND5JddiJRigck3iSSrSzf0/k9fDr/5Xb/955z7r+gsrqiqk5KaQAycMBS
WoH2aILJqEADtMRlLEMnFOIibqA76mM9rqILumEKhqIhWmE11uAf38on3sU9
9MRvnp0mnsLfFGMucX0LPZCJiXiFEnzi/TPifHzjuog4FcPRCFmoxGv0x2fG
jCZeQWfc53438S0G4gf3T4nV+Mp1H+ViFf6kyInvfT8aKweLsBg/eZ9HHIkX
KPY88GwE8Tn6ojZFbtahq3K0U3Pkac1vsA2bGFtKHGaxxyI987Xu0ly+5iEW
a/a11vDsjJ75dVviDsxDO9VgMJ6gt9c2xbuF+J5izB3cVm68Jlsxx2Iu74Gx
eIl+njfGjCdeU60/cr/B14m66IAZGIOmyMYJfMAgZCg3S/ArRY5OWtTEa9Ga
uEA1zdIaZ1v0nPfaF+5riRfQEfUw16JnMtUT3iub9a0S1Wapeq1Ye1mLpD3t
w3S0UY334h3KtMblFmegUD20XTUrVc8cJr5HuUUPr1QOstVDvvfjFr3oOajB
NIu9eg+dJ05CgfZ0zCKnnsvm2IhZyFWOfW17LHqtTLWtUm68xt77W5QbPwMH
Lc5gvmrivXgUzSx68hEeo5dycg5nLc5aC+JNizPtZ9nP5BHMRI7muG7xz/B/
hf8THuKBeqOXxo7TXnK0lwkWc+cqd4cseqtctRhl8S/ymvwH636LPA==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHeU1sUZhXdnFOxKUZDmgvQSigusgFIiRUDqCrouIpDsooaAGJCAKIkt
9hJjV9RoFEuwEAsRNQRFgkFRFPHEY85JIooISDUg4L3nfb6z/nHPtLfPzJ3f
9zWfPH3ML1NRUdGK4qKirHaZBq8LlwsHNbdJ+FooStFuFvYJXwgbhe9pvxSO
kIGpwu8ke0Djr9AvTqH3jXCo+tvUfis0VD8Lhwi1UsxtF1IK2S3Fsba1OHQs
67mt2LKcbe/Hv/0dpvEOtTsdj/q71O4W6qSI1bJHqb9H7XfC0Sna/wtHppD1
Wu0UsdhWPfJxPeriz+PDU/ixjwYp4nGMx6eol2M7gdZr9amp104kb9ejMfnb
50+EJkJToXmKWB3jAmG6cCxrztP+m9EegV5t1kpS5GP93wgzhOOERcTRSmiE
f/tuzbxjn5miXi2E+1Pk31K4N0X+Jwsn4dM+2qDnXNvSuh4d8eH82qfYb+fd
gdZrncnHeXRC1nl0Yc5+upGP6/FnfHQX2uHHdp8RfkUeVwmXkuNC4isVumKv
hFrs4/y6pns51z2wb9s9aR37IKG30Efoi61uzHVi3/rQOqde5O+108nHOrNT
+OgnXC3MIpdxwghhpHCGcCo23hPKhAHCT+l77Xni6y+chk/7GIie4xpMTF5f
LfxFuEwYwpzjOpPWOZ2FD/tfgs9hxDSQGozGrm2UC8PRO5vWOVwrzEF3DLL2
82vkxwqjsGdb4/HhuS3cc9+Xc5izzz8IVwrThImsnSvME84TLhDOx1ZhbTT+
5xJrBbLlxPtuCr4z100RJmCjjD33Of0ZcxOpewf29QPkJwuvCpXCJObGEUcl
fjx+Ddkq4Z/CcmF+Ch71ufP5+0TjqcLFwhphpXCF8DehWrgoBc/t59xuhlvN
JwUutq2PyKcae1PIYxMcVuDmA9gq8LvX3sb/NPaqcO62wsWZnCqp5Xa40hyy
Gw41L5jLPWd+2QUXm6d2wNHW2QmHerwHXrb+ATjXXLOX+3lMquFryzlP32Gv
7YeXCxzv1ms3peC+meRmfrPdAi+bs5yTuaghZ64Ba5m5BsRqTmpMPo3QKcJG
fXJoitw9Kfh6BrGat0qoi/mnGXmWMC7wuPXvFi5JwfU+b2dQf3NvC3I0h7ck
F/s3v7VONdzanpg814o8PNcu1XB0G3Jrx9g5dUTfcZnbupKPOa3AzZ2Qc6yd
WTsJ2QJnd2Ht5hRcbF42P5uLT0nB4aXEUODZHsRYxrgD+Zfhrxdj++/NuC16
3VMN//bGvznNHHdLCp6dTYx9WTN/9kO/M7LWN9/2J4Za5NyIOLwPA/A9kL25
VbgGW143Bw5nbQRj2zYHDk41nDsEf54bhF3rDcP2SPRvS8Gn5k5zlXnk58ia
x8aiPwod2zXnFXh6NGvmfnP60FTD1+X4GMf4jhTfbnPRMY+Ox8a5jC1rjqtE
3xxQgdz5rN0p3JCCmz1n7plCfOOxYf6chB3z5wXYmoDsZPxNxEZv8nRttvEd
6btrrqtC/q/C0hR87nvie28e+C193x9zqjnuFym4w/fM3GLuNb9WM3cJ808L
T6X4nvA+z2avHeNU5F8UXkjxtvrO+bz73vVA3ufzOWFxivfeMc3A/yvCyyne
y+Hs8zBqMY/alrMn3uvr6Xv+TeGNFO/Ijci7jm8JK1K8HX8UHk3BR47rKmK7
Dl+2+bjwWKr5TlxAbDOZc7z/EFaleIP9dvlNujDF96G/B+uS69Xka9vXkovP
1O348jt+F3Ycw23I/p7cKqjzLdibi/5Y9KzvHyw3oFOB7Sex5zrcSS1cG9+X
KmzfgT37fIL4vLeLqEkD/Xb5nrrNw0cF9XANpxPXn8jz4RScVkodHqAW9Ri7
Jj57N1HLheiYA+9hbxYgZ36vg+zj1P0+5k9m/Bj7cy9rLfBpX34PfMdfSnEO
1zI2l5knzbnm28X0vUfm5GdTnItF1MJ2LqXfivZp5n3Gn8em7TxH7o1Vt4Pk
2hMZn/362HU9ZqHTHf+L0TUn+fwPpT6OqTU27M93bQ4yPksFvjiPHN//kY0l
yLxE7kPJ7xlqbm4wR/iOvMvYHLQaX/2x8wq6nnuRGJbidxLtUuw8xB60pL4L
id9zD7J3vou+L+aXv6e4P747/g70Ga1Cxt98PnuvMW+eXy98jP56dC3/qbAh
BZe5vxL7q5ibhs4KfLl9i/4axpb3u/Ye+2afb+J3ObHOx/Ya5F+gXj5jV+Jv
GvVeTQ09Z74wx76DvvvLqLtreLzOzL4f2X+H3JdTlyryWIXuG8zPp/a2czk1
MHdfTB7vE8NK6vI2dXANzdUf0bf9D4V1xPMB40nU3/3J2FuLzY/RryaXdciu
Q979KchY95EU970UO47P7/zr6LvOS1gbQA3XMvchMdlOZ9Vqe4p72UX9nSnu
0yfkfxF5bqAOG8jd8/Ukv5dadVV/T4r7VFv93ezjBHxVkuN66rOcvus3FX/V
5LuMWvn7wd86fpdt+7Ac9vuq/XeKe/eZcGqOu/AvoVEO7hqk9kAK3jDvnpDj
DIxQe0iOd+BCtcfm4GL/t3Qk/y/ZdrMc9tup3cQ52S80zHE226vdnOK92CWM
zPG9Nkbt2BxvwKE5/NnXqBw1cvzjc9iyndbq18nxtpytdlyO96aD2nNyvEtH
q63K8c5sE/rkuP//FZrn4BOvH4XMRqFNjjNQrfY47H8ltM1xT78mN+dVrvbw
HG9cxxy+7fd/QqscXNRUbZMc392uzefU3/tcK8deO5b/pIinJEddbsXnlyn8
+l7Wz3HXeqntkeO9cbxfcG59purmOFd+fx2X3+hjcuyZ98t6ZegOV3tWjrdz
aI5z7DN8kHPgM+DYzyT+njnOis9Jd/VLc7yZW33ecryFvhP+09L3oljtkBzf
N1uEATne7ME57o9lTlHbLcdvrP5qd6S4o99wVnxOfLcysXnPq9mX09R+m4Lv
T1e/X467/QOeCVKV
          "]], PolygonBox[CompressedData["
1:eJwtk9mLz1EYxr/OO/Y1+5IwlitcWLLvNIwRxr6PwYWSGSEuLGXfGYSE7JSU
UlJKSkr+BSH7miU33Mjn6TkXn87zfn/n+zvved7n26O6pnJtKoqiDEpgahRF
OWzk4S74Bn2pT7FqYz/0QDiNroG3sIT6Hms5zEfPg+3J7/RHD4Yz6FroiW4C
+9DHoSn6D2td8rPG1KVwDL0XmoXf0d790BL9l/UEHIBV1F9Z18AzGEn9QufA
efgE1Tx7zLoaxqLH6A7oi9AZ3QV2oEvhH3SiPpT87AuspH6azxgf9kB3vwy9
0C3CvZyESegfrFfhGnyAKp49VK/QKvyO9h6EQC+CO8me90b3Cf9WlXvRf+q/
1NPEsKe1+YxB6AlwJdnjEnQ3OILeDQ3Qi+EuehNMRpfBevROSOiucBi9Idn7
SriRPAPNtmH4Xc14Fnom7Eneswz9Pvf6AOZSzw7P7iYsR3/Md3+UPOs54d/q
sjdtYEuyR0vR73KW7sO0cCaVxevJXr3WvZM9Wxi+g3q/nXz3ivBeebAA/VJz
gls5C+1ga3Im5M0b5SLZI826A2xLnrm8/Z5nLY/bU6+AJ8l7OoYzqOwp88pm
83BWldHfMDqctUswAP2cdV3yNzSdun54VkehCPesXjWjRmFP5MXm5LM/5yyr
h6HUQ8LZPQsj0D9z9s9B6/CMNBt53DY8E81CHsibUdQXskevsqfyUt+IvOke
7k0eTUHXC2dHmVEWZoR7UyY0m3Hhu2pGw9DDw73pm/yVe1RvOvM/GuWEbw==

          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0tlSDgAYx+HPkixRqAv4zrgH7kGRtZSIsiUi+65SIqQsRZYkIaKslc9a
JKRQUqLGgRnX4PlmHDwz78E7/6NfMC0rYf2oQCAQYjThO46ZzCaedHIpoJxq
GmihnS76GOI3f/jLOGNBltPAXe5wj8N8I43bVDLCea5SQB/LuEU9FfSSyhry
GCCfQ5zjK0tZzRmGOcsBmjlICyncpJ03tNHBW6rZzxeSuUE5vzjNZa6wl33s
oYzPJJHJLr6zm52coofFZHCSn5Syncfs4AlLqOMFL3nOa15xiW10s4jrHGeI
E1xkK59YSC3H+EEJVaxiC7ls5ihdLGAlm+gnh2yK+UAi6YR4xkM20MQjNvKR
+VyjiEGOcIEs3jOPGtZRyDsSWEErT7nPWhp5QDjSTuaG/7Q1h1nMIJbpTGMq
MUQzhclEMYmJTGA8keE+iWAsY/73/w/+PWn2
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0mk3lGEAx+Fn0CqkjZLKUtGukrRRytpmQntqjNLp0OnD+Cg+jWi3DMOM
nUqu5/TiOr//3HO/mDPPUxL7GB2IBEEwxLgxxhq5GUHwiWHOZwbBBU5zixln
DXqRas5wm1nnd3Q/63aj/tMiPcBnu0Yvc4kr1DLi/Jqm9Kqm9bqO6lMNmLPP
ahPNRGjhIMVk8Iwv7h3Sr1qn9dxg3ueb+k2fayYL9jltpY173OUwWdxnEw9Y
dPeIftcXupkle4u+5Iddoj/1lW5l2a7Sh7TziCilbKODLjpZcTdb+9hOGTt4
Sw6rvs/T9+RSzk7ekc8xjvLLvW7dxZq9W18zZh/XcX2je/ht79UYE3aFTmqP
7uOPXaBxEnalTmmvFvLXfqxPOMkppp2d0KQOMEg/H+gjHv6+8LkSpSV8TuE7
Fv5/5LDq/VthmSUWWWCeOdKkmGWGJNNMkWCSicj/93kDMBlV1A==
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.889375990391972*^9, {3.88937617221568*^9, 3.8893762197557*^9}, {
   3.889376263756877*^9, 3.889376270028407*^9}, {3.8893764354150467`*^9, 
   3.889376451812408*^9}, 3.88937661663085*^9, 3.889377885199638*^9, {
   3.8893779523214903`*^9, 3.889377972616592*^9}, 3.889379376280369*^9, 
   3.889415879502219*^9, 3.8894190780053177`*^9, 3.88946638414719*^9, 
   3.889466529347353*^9, 3.8894984692106524`*^9},
 CellLabel->
  "Out[1144]=",ExpressionUUID->"5ddfeccf-6898-46a3-9804-4bc86d4f3bca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ship", "=", "1.0"}], ";", " ", 
  RowBox[{"s", "=", "1.0"}], ";", " ", 
  RowBox[{"ksi", "=", 
   RowBox[{"-", "0.06"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g7a", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GIndex", "[", 
        RowBox[{"mean", ",", 
         RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", "<=",
        "  ", 
       RowBox[{"GIndex", "[", 
        RowBox[{"meanB", ",", 
         RowBox[{"s", " ", "*", " ", "sigmaB"}], ",", "ksi"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", 
        "*", "ship"}], " ", "<=", " ", "mean"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.889375869271365*^9, 3.889375989293068*^9}, {
   3.8893761135803747`*^9, 3.889376218885538*^9}, {3.889376268361972*^9, 
   3.889376289643519*^9}, {3.889376354208544*^9, 3.889376364650154*^9}, {
   3.889376417185766*^9, 3.8893764504554777`*^9}, {3.8893764963322287`*^9, 
   3.889376527894845*^9}, {3.889376568956876*^9, 3.889376614749627*^9}, 
   3.8893777799916286`*^9, {3.889377841521777*^9, 3.8893778779374647`*^9}, {
   3.8893779605269213`*^9, 3.889377971038549*^9}, {3.889379364299802*^9, 
   3.889379372647895*^9}, {3.8893808223886623`*^9, 3.88938086272535*^9}, {
   3.8893809436559753`*^9, 3.8893809579424553`*^9}, {3.889419084139812*^9, 
   3.889419092086376*^9}},
 CellLabel->
  "In[1145]:=",ExpressionUUID->"a2e28d99-75ee-4711-ba28-022aaadb6330"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztmntUzVnc/5O7cS2SUCiEIfci5tN0k3LNpUQhhdzFNKgZISLVjJBbKk0J
uUVEYleTpKjT/XTvnDpdTrdzQtSQx7PW895nrazn+eP547d+6/cb/1iv1Vnf
7/68zt6fz2fvfUY77rZ2VlZSUnLvqqT0n/97Xp0yfMaMd2x5X2F77SEvSvnp
N93YZDnnvhXpswxXyziHK8868XtmI+epZtmhJ1qknOO9dz/zH1LL2SKtb36g
gYRzbt9bsuC1Ys4Jwf5qS76UcRZqv7ZyMCnkLLvR9ciuUzmcB67z2PElOJ2z
0WZ5/shJCZyTEi91bysJ4+wxJGDZ8ZZbBJ7ifq/Oc2oS5449cw9vCH/LectD
xz6jfHM5L52imzfAvIjzrJuNIV+/lnOGv1WCmy4DKJr7A8MfGP7A8AeGPzD8
geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwNyrk08PEJsb9geEP
DH9g+APDHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4a32s
/XXO0lfcHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4A8Mf
GP7A8AeGv3WaVjqqkRncHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB
4Q8Mf2D4A8MfGP7A8AeGP5HxUx23r9ncHxj+wPAHhj8w/IHhDwx/YPgDwx8Y
/sDwB4Y/MPyB4Q8Mf2D4A8MfGP7A8AeGv3Oti2Ido/K5PzD8geEPDH9g+APD
Hxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4WvBrYqFS22KuC8wfIHh
CwxfYPgCwxcYvsDwBYYvMHyB4QsMX2D4AsMXGL7A8AWGLzD8tNvvLzHsWsb9
gOEHDD9g+AHDDxh+wPADhh8w/IDhBww/YPgBww8YfsDwA0b8+b289M8VVPD4
wYgfjPjBiB+M+MGIH4z4wYgfjPjBiB+M+MGIH4z4wYgfjHjvid96+twR83jB
iBeMeMGIF4x4wYgXjHjBiBeMeMGIF4x4wYgXjHhOxg9N8zxWxeMBIx4w4gEj
HjDiASMeMOIBIx4w4gEjHjDiAWP8GwM3qv66ppqPH4zxgzF+MMYPxvjBGD8Y
4wdj/GCMH4zxzd0TtW6nXi0fHxjjA2N8YIwPjPGBMT4wxgfG+MAYj6rlh4hN
3aV8PGCMB4zxgDEeMMYDxnjAeF+DNjWvKa7n7wPjfWC8D4z3gfE+MJ7/8stJ
g2XRjfz5YDwfjOeD8XwwnhdckH3E3LuZPw+M54Hx+Xhbf+fguzL+eXBSvU9c
T+1SihvRddeOvFwq3vOyeahLAe0SBCqtOSIktdb9MXukr2iU18SzZpNLyE8p
d/6YxieUo/9i7PTCcrqfb6O+ThzDkj7orvsjSUS6osfX+klesqBM14jjFyvJ
afN//stn+2/GN7nvkpBHfegVt9sCzotEk6atHlXClhzrYeBqWsPnJ9h/+9pK
jbRKNs5+2ZGtGnWkcffTlzGNFZyVJ7xIVYmsZkr6l9McZIrvF+xWPepuH686
JhxYpboqpYEcNlYfaJ/fzB5IJ9tbBTWRyx86egf7yZm52DBn1BwZ9zUjs+Lj
cB0578/gB7469yvwA1+d6xX8wFfnfAgf8NV5PSNe+MD8Rfyd5yfiQ7yYDx6W
8+4cO1NGkb1vBGxJyCOfhwWXtr5Ko357M2ON1EvpTKzOFeGyu8xgh3tTXwMx
3er5aJ/0Yy6Tag040lYpoWnxytISlUoWlBOmWv1HHUUcdM7MbZYwtzsN60qc
66nLA7/D8SeamO5Gz+bUQc3Uy6/w1emYYjpSKS+2Dyygi8tHVloFxbFxa0ap
9tKuJM2XQ9eIcwuYsG9MxPuMaqrXiCmxPVLFfBIWGIgOSbl/jBfjh/93H77q
6N7L4vMVjP5nzoUl028bCWjmheO7LI2LaX+k7Lz6JE8+f8Gon2l6hgnO4X5s
0eH814MWi+hX++UfN4SLeLzSv46dVd7YwOcTGOtzwYoSXyP1RjZvf3Ha23FN
pN2UN/qDewufX2Csv2yzo5rnClrYp7OxU+zrZLQ/cMLY1aMUjL9jPqK/Q7yj
VQZ/udKeR3bPDceu3FHI+wHEd/14/33TZzykDQHTItQcFf0Gvk/ML8SHfIP4
cs4fjLQwlLIl3rOvZxsq8hfiUa8RTFJ3kbMjI52DyvfJ+HoCI590zi/4/s5n
uonPFgj5/EB+6ZxvsJ72u1/qpRL5gqoth3XRbyrj+aZz/sH6itFeGT+k1998
viH/ID+BUa+9hpUv/+CewTqmb1vX8amK5xvkIzDq1fOOkG6SWRXsfvWXJml4
Lc83nfMP1ucw/dSYN29qmePlM0cKljVwX53zEdZrnP6B6UXRMjZkydjByZ+b
eX+B8QcFD/PunpTKVMxf6nftr+hXMN4eRqXa2f6lLLnNNq35aQ1Z2oclnp5T
/t1+qszM4M/hdkKyK725NXd4KveN+XY6Neu6wVHF/kNnxkubaMtyqinZUXDk
UzT3jfmXEV3gXlOr6F91fWuyX/9WSUcHWJVG38/l+Q3xbG048tAqrYqMHhUX
BR4W8/yGeB6HeY/fcLuWjNqCzpcHVX9Xb9s/3S86frSB0iQ2S6QNTdwf5vOY
x2kRX1MU9fbkwJOn0scq6mFPD+W4jy8V+T9v++i7+5zl1G1/js/H5+XkxKz1
+x75tl/dw8qMd6dTxiNV94FLSmlYbot3/8abTLRg2v0hzmKq/UN1aGTXXKa1
+pG1xfRqas2qWOK4TcwsnH/Y2vBPHckslZYfT5OwvFgb/9Tf6unBohcRPiZN
zNbh5Nqyec1k9Kru6fWPxeQYuOCiU2IBCQs1t9UIC/l6nxqmWdqgl0UbkrLC
oouLv+X/kMcPrRhf7730nyakaaynhMuZAQP/ElFR+Eia4hzHih8k1LuOr6Qv
A20+9VFP5PPH13rl4oNJAmZtv3mNzy8SMm4pn/3BoYA9XnWzMel9NTWovR/s
9ZeiXqM+J5elxk1wrCEdFf/13ROEfL5N7fdQXU+jirnvtPDp8VxKh/ZJepjv
U9Rr1OddphWBUfPqyelG8sTVflV8veiu3Bjnf7eW5x9/25ODH/7ZwK7ObPOP
/a2JjAvlnjZHZTz/rNkx98+fTrUwj5j3fS8Ml9OAs/GWTrNbWNGoqrVHPir6
m13Sy+/N1xbwej3Cp2R5UX4JBSkLrua6CL6r38XNjpXd+ivqd2DkjSmfpolp
XFif7RkT3L+r5+Gyjp+vF4hpW4jWmVN6r3k+QT66NV6wqVG7itf3J+ddI93j
qylf8/mV37NKeD5BP2SX57vMsWctr/cPLjh/tLikqPeyV2d+zSlX1Pvb1k5z
yno3k5pm0q8G+Q3f1X+NTV2dP9xq5vkl/tGymx9/kVF+fe+yLCshedo6aj1R
KSR/7fjIKK9ntFDv0MJXoysoWTKzMrnmbxZV/JuZrrSSltyJONceV8QG/Zj7
Wjm2hhxK6yW2HkXsqd6I86k3aqj97Q/9Mn6sYx0qjYamHQ3UKBdsG5AnYw6S
gtOL7GVkGxPxoqegiF7MiYoR6wqpdb+jmdujXPJMDrMX7C2i1KvnllicSf72
Pf/9cHNKGZ0cM2R34IlXlLRKJecn7TJ6omH6z8uWKJJ/mTyoUFRBtWTj51vx
jF3Ov9rWbX4l7QoVbTUMSmPDLoV0tN+uog07N2aqqJexs6ZZ3tIDtTT9dOpH
J/cattp0zv7pPzWQUHViaOXzarZDt0DeXldP6s+tEgPKpGz7kwLT4S8aqdsF
1x5/tjazX989SK35p5lC1U2Xpjc2s1OzbUZ2+dRMl4ZdPzX8npwNdiWdg/Ey
3q8EGF3Wcd6RT7PFhxvmFpRSgL/8XYNmAe9f3vhpf4oU5VN2gsk/m1tb2IYf
ri4faiXn9ajBe5vp7j0SXm/yzZ+S9vI63t88lIWca4ksppQps7Yol+WQ7fEJ
xS0pRdTHK9NsiDybqntHRzwZq+h35hXdsWn3FVFuw+HQ9esiaL2yqbByoIha
NQ9vFEuCvtWZy642xiKqionKn7w6m3Xve2rVZ4GEqgpNAmNuCFh94jrb+7sl
ZPGg6d3hXmI2NOzDAHVBHe0qf5wVECBi5YFzI5ddqSMVkx905HEVrGhGd+8L
cxX9Uo9hn5f4bm0i8RDt6gqHehbg2WT7urWRsvtIpWGx9czLrdalbqSiXzp9
0k01Z4ic2oxlfSePaGELVS+r92qQkYZFsiA/SNEPoT+y0Yp4cmu+nEZtsR8q
3V/C+wmlQ2+fjPk9nyp2Kve8mVBID6IbIzTaFOdj6J+Ue0TFrX9XyPuTETKt
spAt3z7v82zTpnUFvL96+ui13cT4GHJs9Nl1/kgFTS0pkmg63eH9I/ot+7nT
DB0vVPD+RSV9W6qJeQV1uA3r3/zh8Xf92POd3Y9fU6ummD/Dfc7czP6uPzvz
9Od00w915LD7zoWj3aVsRXuK1mKHRrKbtWbf+UTF/hD92suxw437uTXy/uPQ
45WZTTqNVKbcpVtUbB3v5/Rla3v0MZazCkGVntRXRiP1Mkx+/kOxP0R/t7TH
8+7vr8po+5w9N1J6Kfq7DLfBK8s1i+jindPOBluF1PD5eYlWxysSWg1ce7p3
GQ1sX9jaTTeR8mc6p2zxKidX79OJRXcesnVfPi02TRFTgp6zY7ZvAjtzZrlF
yclKkm5ztxkVncfmhIqWnjtbTa6ro+smf3zLZlSm/2Pe/9v+MbnPm2nGlez+
jBLdk+u+9Qdtz063p5Qz/XnbeyYW1tJniphXFlbNnFLbp/Ytq6fAH7cdHbay
lt2apGprGNxAKeZrdrWOaGaz32Um7g1qpljN7rGTtsqY7z11g9DJMlK5XTjT
rqWK3VBZ5rtlZD35fLy4MroqgyYOzVBtPVtCmjuzJwz5eJF1GZ+xt1s3MWmY
/DBOyfgVc4zrH3bGqopW+3V9cMKlhC1/kn2jdWgthVprl2pua2Tur40+WJY2
0b/36//er/97v/7v/fr/r/fr/96f/8/35/+v32//336fjPF2Hs//qftajAeM
8XR+///2PhTv73y+A8b7wXh/5+ej38XzwXg+GM8H4/lgPL/z83CehOeB8Tww
ngfG8zp/HvtxfB6Mz3f+O86n8Hcw9ic3t8WeGfdPGt9Pg1EfwOi/e7nsLj48
IYvv38HY3+F8FPt/MM4LcP6D/SEY5ws4v8B5ROfzbTD2Izi/wH4S50HY/+C8
B/HjfAf1DvEhPyMe5KfO8XRe753j6fz7CMSD+f3fnddjfmD8iAffJ/YvR027
FI/IekPrhWpJyxxq2PtVg5XcB2fz81HcLwQcPfRTUXQRw/5xtqW1f4tGNsP+
D+fDuE/AfQH2c2uov5vVl2DC/QHuH3A+e2dl9NDwkTmE82XsXzE+nNfALxj1
Aftp/B2Mv+P+YbhH2mOvnwTk937i5eSb9ZxxnoTvC4z8jPudDD2HhXulOfw8
DPMFjPUVZqCSeaDfS8L5Ou6TwDh/w3wCYz3hPAT3P7j/gA/MNzDO2/F9Yb6B
cV+F7wvzDYz5hO8L/Qh84rwd78P67bye4Rv7bfhF/YZf3I9hvmG9d17/8I/7
JvjH+u+cD7CecH+G+Yr1j/XD++X/YtyH4L4Pn0d+x/0c7lc63/eCO593YL4j
f2O+4L4G94nIL53zDdYrzmOwPpCPMX9wX4TzEeS/zvkQ+QTxYr0iXnwejM8j
fnwe+VxFN2aTWsi3+dj4ps3puaJ/xfxR2Ztwo6NHJu9nXZR2H8qdL+D97F5V
T2/VIVnUEnzBZFSi5LvfM2a0zZ8omZvD+72RynYlFkG5vF96OMtj+yF1IR3V
sUu59Mvf3/0+ylxJecCIe4r6vOPq3/cynoiofMaZQ/bPGF+v+H6URo4tKKhX
1Mf2WX8/S10soTj3Hy3Xhhby9Qn/87qoMB/3aroSfqvErl3O5F20zzWffUvX
3YaNlY+uYC2/m0V9KcwjoxMTHU0MclmCR3fD2TWFpBKwp7JC0sDirb94jjws
oCLzxbp2/RqYw9XB+wxeCCh0+hj9ssQ6dsC/wSb1QBZZ7/L93NW4kpmO2nGz
dlwuTTSp63NyrogtMitNiDLII7E8xWFzbBELFGu5NFwqIN3yld2SvuYzlZWL
bO9UCmnitn+alvlmsvj1x5SuXCqmXvWCOINfU9mGEQ/yzZRKKWZ7YfSH5hjm
RbPmbij+1ndr9RP0WXWFPricnZ27XkROB3/+uuBeDCVaRh0OHCYmN8PxLSm+
KSQ06K55cEMlfV6WbHxiZiqJn1qci/CtJJW72Qcs+uZQsd2nJv+OKrq4Ys8I
3ZP55HJi0rWLjyWktt7Tzd+rlLyXu02eMraG11OPmAkqy6/XkM/UrdbXNMt4
fUU/8fi0/+ju6zOov0a4WfgDKc8XqLdlq6tdGwZm836iKeWQaGlINtWyQVkq
MhHPFyf7BMuCz5fyfIF6fNRqcUjOmALaYZ58rGWwkK8Htf4nlH7qp/i9Iuqz
+WazKyIqVpxn/HrXatD6EqqIWCq6eeUNzy9Yf7+FeMxJ/xa3TPeHGeN6POL1
20D10sHXdT7892uo53/GT5jkpiWi9/m6hmWbbvP8gXwz236/yQprRT+4I+Oi
6bORVVSx4XalcUQqzycxnoWzdz0T8HyCfqBvwlpNjcdV5BoYWf9+Qh7PJ7zf
WXOxuItEQiu0kk8ND5aze1oTPvcWvaU5WtVhXppyNjuxdnrE0gxiJKwasVnG
DlvRo1OfMmjJlurX747XsJijo1WXLsim2Z9PebSq1rDAxIDInH3f9luBvut6
r5Uw6d+fL4dNyqF5B1acjfcuYyr+k6qVNuST+bGwja9Citj946G/v79WQE3j
9GbsXZvD+h6oOZ49p4hm6zmpeXRLY8scBe3l90sofFM/9Quuicza751Af0cZ
pcSrjWiZEMSuFffb7n29gixuiY/bzLlBBZe+aIVcF5HulDmV9maJJAt0cDHM
EdPUscaaI8dm0pWHLkp5ZlU0N32h87WdOXSp5anOXyoS8rilNM+texEdW/8m
78ddin731tPLHicmveX1Tyc9++QrP0X9Kt/n/9TRKY/XJ/0/F5wr1Sjk+TXx
/bAs9dJy2ic1mSAsamHOPRyMS0VvaMjeH5aOy2lh22a/CcutUfQ/Bx5nyKrj
Mulwb+Xh00jGvAa2tRiNzKSLJRWDBl9sZmuXnLs63j+TTM0PHL26uYmpqL6Q
rRgiIM8hffpbxzaxtJ/3bdBXEvD+qOPNlVV+EQLqxuSn1hs0Mh1JvsejLQJa
lr3E3q9nPbP9rGF5qr+iH/LPHzeRqnLIcUVFa5i8immGLPzL1S6HdBaL+lgu
qmIxTRuXb7meQ9bnZ+StvC5mYQ4tFsG/5PL+aKWPSWO1VyUFsA6Vlvhk2n4j
53eZnqIfUu+2JVJ3UA1dn9n9xtdtxWSd4BawIbaagqckncpNLqbcsBXT4l9X
03rl3ttlhi3MJDzvzgOHt7wfyjU6p7s/4S2FJi9wO6/+LX+GLnJc9DCL1C6p
qcmv1bI+JuKjx0uz6EVxj7sT+tby/kPYenm89fwKlmBg6tn4WtE/JZi+rWoz
zKf2sZPEtkElzMjsbIukPZ88BetDfk9S9MOCMBsV80l5rL9dh5qxn6K/erDp
U2iQbhG5bZacmvpHFrObfnvr3dpv+7xMmxL/6wJeTz8HJ51LC4lharMs3pZW
ftt3uTTEd22LYk7vNg7uZ6n4fevBA7k51058471XOtasucH7Ne2OIu8oyRz2
m63maK2uInKIc01WfnCe9x/OO2bu3NNFzkalS2/ZumTQCB/vz7USKTPw773c
elgWhS/0l/+8q5o1hMw7cflxNl3+a4Bj73li5qRnXVV/O5daisf1lgiFTGNz
1sLB84XU+ovHzoPvkpnTUaPVrx+V0qitPX/RrnvGps9PNz+jXU6XXPX12o5H
Ub+BO6Oux4tIKC0Ud7n6jAplXu+3uonJIzc8quR1LtFxt/HRdhJ6kG3ot89c
SGe9KzQ8VappZUXbse1Ls8iwZ/THaWFVZFSrf+2raTkpFWRuc/asoen7v7ib
fE1nCXeKMscsKqHN4lOuGrfTaV3685t2dZX0HzYVoZU=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXn8l1MWx5+LSkXWaNVCZYmiFCqSdvEjUipRNLJU9jVEiEFEtuwkyRay
xJCRypKQUIgIDYZQjHXMec99P6+vP07ne59z77mfz7nL83l+NRsxtv+Y9Yqi
mBL/rB9+q7AUxrOt9TyfEnZf2PSwxmEbhtUMq2d8g7D6+mph2xivFdYwrHpY
jbAGxmk38hm5mti3dljLsM3CNg9rFrZR2MZh24VtErZp2LZhdWy38BljdpID
2Juaj/GtzLdF2Pb6LcN2DKvrmNaOg1O3sJ3DdglrI+6Gtuvb3t05wNjWOJx2
1VOnDsabh7WzLnDdzTjtjsbhtIcervuID06d5QD2PY3Dey99S3NsbF06+ayV
POqJe++wHczb1dzw3ldP37fC5oW9FLbfX2rQQ57w66mHx4FiAktvebYP66On
Tn311KOX4+h3gJwZ389a0K4yHzwO0lOD/mFd5DFADmA/TM+6HWKc+g0RK3MO
NA6nwfIhNtQ42AcZ7x52uL6HPJq43kfYF34nmpdxR8pz/7BjxQqW4XKD6wg9
NTtaD9ejHEe/v4Ud7PhjjFODUeY7NOw4PTU4Xk8NRosF7GP0cD3B+EA5tXEt
xxqnTqfIbZjWRz4nGadOJ+vpd6r94H2aHh6n6+F9ljzhcab8aV8gbnCdEzZS
3ufqqd9449T4PPnDe5xx2hcah/dFenhfJj5wXSpu+E0wDu+L9fA739xgusRn
jLk77Oqwa8ImmoO8l5sbrn/XnxF2j30nh/VMmfMVYVeFnS3Xq+UJjxvEPcEx
54nlWj11uk4/3tzj7He9/Bk/xTjtSc7DHDeaG643y4163OQz2lN9Br9b9NRv
c14EKa/hrT6D9x1hV8qpU8Rbp1yDu5wbfncap80+5Sx2DZsmT/hxv8wOe6LI
75YpcpouZ9p9Usb0UNgM49Tsfj38tow+66WM8QG5wXWmcdqPhN0u9ll6MD4Z
dq9zznb9wPiocTg9pmcvPGhuava4zxjzjJhmymeaeZ8yN/ye1s8wdq085/iM
8ewhzg3nZK64wft82MO25zsH2F8wDt5/6sG7wDjzzxMr/F40TnuhcXC9rAfL
YvOSb5Fzg6VfyjxfCdsqfm8Q9myRbaa1fy3sOcd0iXiblGv2ujnI+4a5wfKm
fp61mG5tlhR5f8B1qXzAu8w5wMX7g3uYu3u5z5hnhXl5j33ofLSHBJaqlLm+
b1+4fqCn31dhK8M+CXsv7FXn+8h84FolDub8wvHM87Hxt8NqxjwbpvzsiPD9
U86BVuJd/H+dEc+qp8xvtTnA/rXzfxr2bz1z7ht924Wti9/fhn0W9nnYgJTb
P4Y1iN+1Us73fdiXcvpBT+41jgP7Ouf4JmytcdobR46NUu77n7DvzPeznny/
h/1kfFDKsT/CfjG+VozLrXfj6LNJyvFSX27l3Kvsu1/EO6ScOxmvaz3edU0+
1bMGpe6kpmhJdBc6DN3XtMjvbPRfM9voo+a2axlHg6Ej0VRoL/QR+gGdgc7j
XYkGQqc2/sscbY2hPVs4Hg3a0jbY0VdorZrOU47f1fH1zb2z9WjtmHo+o11H
XOBGw7ZyDjQUe79nUdFwXc2HhukmZ3RXezl3sE2ujrZL3dlRDnvaLvUl7c9d
Q/Z6dfk3kFM7sTRxnnbi6+T4xsbhXM1x9eXXTdw7iX0fa9pdDqXWLLVnD2PU
oLNz7Og41qyn76IziooG5Y7gnc37a6Kc0Vp9HYOm6i9ntFk/OR9oGw5Vtjsa
Z3wXxx1cVHRqlVgONS+cBtgudeqAoqIvB8lpsG3qMdB+4ENTDbMGQ+zXx2dH
iOMo+7EXhtqvt/Gh1nGQecE+3DH0Q+eMLSp6dIRzo7uOlxt6bKRcj7UNt1G2
4XyM40s9WurT4+zH3CeaFyyjbZc6dXRR0Zcnif0U24PFOEZ8Z7q+w1zXU+TE
s9OLis4eXlS06alFRZueZt06uJ7l90mfoqJBz5HbONvMjY66SE5os/PkeoFt
uI23Pcr4uKKiTUuteqH9Sg06Qc6X2IbzpbbBiua6rKhozcvlPNF+zIEuRHdx
aV5hjc712SSxTLYfOhRtdqU8J9lm/c5ybKlBJxu7s8iaCdzosuuKil6cKj/0
2PXyudE2fG6yfaHxKeJmXKlJb7YfPG81b2s1HXw7p6w1U8p47xIT/O62faUY
0Xkj5Xa2nO+xH5zQF9OKirYueU6zH+9vdAeag3cP98sOYkenoeH6Bo79w9ZP
GTfap9Sb+PvFhx6bJb8H7ddHTTS1qOjLR8WNvkPnoWcfsg6lZn1EDo87hjnQ
Y3PEjiacXVS0Zqk98U+KfY4x5kCjPSfn2eYF+7PmbaO+A/PeKes5+IJjruOp
0VJrBia0XKlD8S8UFX250Dnm2Y85X7LdT102R6wLiorOnW8/9OYrYgM3uuxV
x6PN3nROdNxi8S2yH3hft32vczwhvsXGZtmeW1S06RvOvcQ55st1ievY17Ws
UsctFBP65F3nXmabMejBj5yP9+nyoqJB33e+D20vMr7MuRlXatsV9quuxnzb
+dBJK4uKTvrEvLy/PzPvF7bJu+ov/dB+X5l3tf1W+uzLoqJH6ddfjQmOYSlr
XPTuU9Zggbm/cUw7dd9a50ZXolkHqGfpt1vK+rV2yvOhM78rKvqVdi016Rfm
XVdUdOta+6FbfzQ/49GnPxUV/Uq7W8p6uk7KMfTmb47/xX5DU/5mqJayvv3d
sd1T1qmbplzTb8WPtv3DsWjY/5qTO7XwbwFNwm/hd3Uv7zPu9L6eLfZS0/B1
/aY9KKyGe4uzuIHfYM3Cb+03GOu/od8XS90T7IcDxM652j7lb5KPXVvqSA0P
swbUcbvwjdT924Y19FviENeEcc3D1/e7ZY21hj/fC9s5doeU22us5SZ+G7QI
v43fAHwLtPD34daS+u6Yco3428MuKX/b8w7oKib2x64pf3+W9djae2GflPHV
s3Z1vUOrixnuNYwvdU228H1Z29yr5dTIPVTLOsBld3GXnLZxvfcIv5nrvbn4
CzE2c43g0VRcDeRSSyzNredyzyjnBlwtxVbHvcoaNbS+4IHT9vJi33BfP+Ae
20lu7C3eo7xD26bc5x8+29na4mnfZo621ratteZ3x5T39J/xu33KtfjF88fZ
Xutzfv9qzl3Mz7P29qdWe1mv3z0nv+k7WsM9/c1crG0r15dne9iHvNTyFjF3
kRcaobNcqFk38axvH+qE39v+zLufc7Wzzr96F3V1rTa1D3jx3e3P+e2d8hnm
u6OX9e5hH8Zx5omdYc07ia2XY1jf5HPG9jYPz+HGO2aq90Mf9zO6o6+/y//P
4HuIe4H3KO/QL8Pf6L4v/17G+38pe0Tuy8MvS/ncfEMt3fcrwz6Vw8iwufbn
jueu/1eR7xXuRu6Wn1jnlM8Gz7g33/FOYgz3Un9/M3ZJ+MWu0xVh063VB2Er
XLMfwq5O+dzQ9037fxI22/pzb3AvcwZvCv+w+T8M/6jr+HT4k91v34dNTPlu
ehuM7oPLw+5N+ZyNCVvo2DfCz3C9Xg1/Vcp78xrxgQ0Mg8X/nnnJeXDKd/c7
3sOsC3v4wJTb/KZ26IaF9iFWzXFVju1nf/qWdVzhvT1QzAc5Xw2fEePu4t7u
b00G+Hydcw4xf5XjuQ8HyYd9/nn4ySnfoS+EPZ/yffBc2LMpn+9DU56D/HPC
jxfDz+biXTnYnKzRx64x67s6bErK5/vJsEkp31eHmLe22GlzJ5dagffsZa4l
6zg6bE3Kd/GqsDtSPn93h91gPceF3ZXyHcDeZ0+znxl3u2OJv2ufl8MWpHxn
TQiblvK787qwtSnf6y+FzUv5nrgn7OaU9/sIcrtn7gz/Vsrn+7WwRSnffQ+F
jbL+L6ZcO+rG+ZuV8hk8P+zBlO++R8JOdE3B+7iY2ePsV/bq2eHvS/md8VjY
WGvOWTkp5fNyafj51pazcrxrd1HKOMBwZNhTKb8/LrCO1HCG3G5z7w0Qz/3h
j075Ljoh5XukkXW61lodm/J9xF10jGvPug9PeZ+xx663LtSEfTfT51+HTU35
vXecbX5f7NrUlNMz8rot5fuIu+iclNeA+nO+P0r5vLyecr2o1f8Ar0SfdQ==

          "]], PolygonBox[CompressedData["
1:eJwt1GmIzWEUx/H/sYREZA9j7pgxg0xGJktCMnVLKVJqEmbIzsienexjy07k
hWlERGSJsUV2MTK2bIMkSV7wRonv6fxefHrmP/c+z/88Z7mp0rKRs+okSZJG
PSy0JJmODsjGAkxFe3TGJHzFcNzj+3NZS9AKmZiN++iHf3w+n3Uy2iEL0/Ad
o/wcPp/C+g0jUMPzDdZXGIS2WIsNaIKuWILtaIl8jMdnpFHO/jLWnyjGX55n
sP7AaPzmeR7rRLRBCsuwE61RgE04hI4oRAWOoCEaYRXW6O88TMAXDMNJzt/i
eUEf5WARZiIDOdjvcWCszlxvkfNs3fG1cu65HoxzmINO6IZtFjnPVA52YTly
dadKfEIRmuGocuS56cJ6FmeUG4/poGLM0Z13WOQopZy8tKhhlmpyQj3gtc9V
bOPQXTHuVY7yVPMDqqHXznvoGq6jJ6o4Y6VFzb3WDXBVNSnQdy7gPFroHVW4
gh5eJ/ZfVk/k6393cBe98SeJ3lqts73HvHdXoL5FD3vtlqKuavgO7zEETVGD
Z4p1IGs1nmIADG/xRu/yPTdVQ69dLzzHC4u9/o7D+IChqtEe/MIYxXQapyx6
1WfQe2kz+lr01CXc0tmN8RAX0Rz9sRWPLGrtOfPe36i7+Az47K3TXp9Bn53F
uktasey2mEWPyXt1n8Wses/6bJVb9JbP2BM8Vi08Jx9RazH7fsfbFjNVqJr4
XR4oVr/TcRyzmB3/DfkP1viHSw==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ISfnwvv/CYzJpQ72zCXX5Pn/KW9nvQ==
          "]], PolygonBox[CompressedData["
1:eJwtlFmIj1EYhz/nHeSCC6SxG1nHWEuWiGQZ+5jBmLE2ZBAzdhcuXblRsiYS
SfZ9kBAhOykppaSk5I6Q3fPr9108nef8+773nPN+v/Mvqqkvr0tZlo2HAlgZ
WdYLTvJjAyzFu8Ix/CK0wmfBHfwejMFL4Sq+A1rj/eA0fgXa4JVwH38AJeEa
evcULMDbwxH8LPyCtczfMm6GUXif8LOX4S9sYP6BcSv8gZHhvW7RQfDR4bW3
wQ+Yyfw2YzX8hKHMzzPWQiN8E3zCt0MLfDgcx/fDd6hn/oqxCjrhQ+AcfhS+
QRnzm4wToQgfBheSe1aDdw4/qzV74iPgUnKPu+HNw73Vmm3xQXAG3wnL8Fo4
gJ+Apvg0uJ685iK8AB7jT/LedQ/vXT1ch//Oe/kO1oR7oLO/yc/WAfYkn3EK
PhWu4aVQFz6jzvYSVod7ql6+hvXhb6Dev0/eWxO4kbzHyfgkmJBcU2sNDn9r
rVmFzwn3XhkZiM+FR8k9qA5nTNl6CIXhTClLh2E6/jXfq9asYF4e/la3kmtF
+F3V3BjOiLLxMc9SMRxMzpSyMAAOJWeiS7hn6tU+aBfuiXqxG3qHe6Czq8YX
WMX8RfKZ+4fX1Fqq2THcQ/Vur57BPzPuSr5D85nPC9fWnegR/ob6dsrAbPxf
nv270Dd8R3Q3dOcW4mPDtZWJJXhjeIo/y/emjClb2mMzfEa4V7ojyrYypSwp
48qyauhdZXoxPi7cC9VcEc6osvk8OdvLw66M67+iZXiv+s/4D6GEk+4=
          
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt09lSDgAYBuA/skWWcAHO1DVwD7gBpGSvbJV9C5G02SmSrShLlJSdSEVR
QpIlSZYinTRjPP+Mg2fmPfpm3pn3mxIdP2tZSCAQqGEIwTyZSKYzk1hSSCeP
EqqppYUOuullgEH+MsGxRCqo4wnpPGYPtSRQxns+0EE+HznNbnqJ5zJXyOMn
S0nmKAMcYxcPeUQNwXKXaOMtb3hHO6dI4wdLKOUiR/jOYpLYQR87SeUwPSxk
Na+5x30qecB2vrGIEg7yh0OcpJCtbGMzB+gmjlW08oo7bOI6d9nCVxZwgX30
s58CNvKF+ZxnA7l0EcNKsvlNDuu5yW1uEUsxL2jmOS9p4QTr+Mw8zlFEFp3M
ZQV7+UUma7lBNVVEc5anPKOBJho5zho+MYczpFBPBtcoZzbLuUoUESTbWwwz
mMZUJjGRiOAWGc84xhLOGEYTxihGMoLhDCOUof//4h9Fj3aK
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0lszllEYgOH1fZ+9lH1lm1IiCpWiEBUVRai0kUjaCWVXnHXkxEzTjD/Q
L/DbpOzpMh1cc7/zzDzrnVmzSoYnesYjIYQVNnyskxoNoZiLLLNKeyyEO7Ty
jBjPqaGW43zi98Geruk97eAu9+nkj3mXJvCARLr5az6ueSRxkxcMkM9LLnGZ
AiZYt1OnG9qjvTwkmT42zSe1kBRuMUgcr7hCEUMUM0wqV9my+1lPcIjbvCae
Eeop4Q0nGSWNUuY5RQOHOc0Xtp15TXd0Ss9whDbe8o4PvOc6ZXzkLGOk08iu
/WktJ4MKZtgzb9J9fayZPCKLShY4RzNVfOU82dwgMMsFcqhmjggtROnnKU/I
5RjfOMov//3JD5ZY5DvzB3fJKP20UUsRKSSTRCIJxBNHjCgRAvve5h677LDN
FpuR/2/3H6+sQCU=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889380828427709*^9, 3.8893808635346203`*^9}, {
   3.889380945263989*^9, 3.889380959010755*^9}, 3.889415879601756*^9, 
   3.889419092964837*^9, 3.889466384609774*^9, 3.8894665297819147`*^9, 
   3.889498469624897*^9},
 CellLabel->
  "Out[1147]=",ExpressionUUID->"e5f28d57-824c-439f-aa2b-b35083849842"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 5", "Subsubsection",
 CellChangeTimes->{{3.889380228262825*^9, 
  3.889380230033225*^9}},ExpressionUUID->"1b28e14a-0ab9-443a-b381-\
2c7da4e680d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d5", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "16"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377905780076*^9, 3.889377913635694*^9}},
 CellLabel->
  "In[1148]:=",ExpressionUUID->"565733fc-b3a9-41ff-aaa1-97daad2d241a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.10695408, "result_sigma" -> 0.00020217373, "m" -> 5, 
        "seed" -> 1, "weeks" -> 15000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5990056283281517`16., "p2" -> 
        2.110329451461667`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 1], "Meta" -> 
     Association["ID" -> 184902929038966], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 1, "DataColumnCount" -> 14, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.106954"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000202174"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5990056283281517"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{948., {90.2010498046875, 98.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{948., {90.2010498046875, 98.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.889377919265396*^9, 3.8893793823201933`*^9, 
  3.8894158796497087`*^9, 3.889419102108678*^9, 3.889466384674323*^9, 
  3.889466529848119*^9, 3.8894984696722517`*^9},
 CellLabel->
  "Out[1148]=",ExpressionUUID->"c563c8f0-efba-4e86-9f44-e1b7fe5e8db6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean", " ", "+", " ", 
   RowBox[{"lStop", " ", "*", " ", "\[Sigma]"}]}], " ", "<", " ", 
  RowBox[{"meanBase", " ", "+", " ", 
   RowBox[{
   "lStop", " ", "*", " ", "\[Sigma]Base"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"mean", " ", ">", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"sigma", "-", "sigma0"}], ")"}], "*", "lShip"}]}]}], "Text",
 CellChangeTimes->{{3.889378766629274*^9, 3.88937879133603*^9}, {
  3.8893789869544907`*^9, 3.889379086625688*^9}, {3.889379131581746*^9, 
  3.8893791359039583`*^9}, {3.889419106079623*^9, 
  3.889419106659741*^9}},ExpressionUUID->"90abd3a3-2556-49ca-9f28-\
e159214f4f47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"lShip", "=", "0.599"}], ";", " ", 
   RowBox[{"lStop", "=", "2.11"}], ";", " ", 
   RowBox[{"sigma0", "=", "0.0"}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"g5", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{"mean", ",", "sigma", ",", "lStop"}], "]"}], " ", "<=", "  ", 
       
       RowBox[{"PIndex", "[", 
        RowBox[{"meanB", ",", "sigmaB", ",", "lStop"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{
         RowBox[{"-", "mean"}], ",", 
         RowBox[{"sigma", "-", "sigma0"}], ",", "lShip"}], "]"}], "  ", "<=", 
       " ", 
       RowBox[{"PIndex", "[", 
        RowBox[{"0", ",", "sigma0", ",", "ksi"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8893791385519047`*^9, 3.889379142357905*^9}, {
   3.8893792201528807`*^9, 3.889379292239603*^9}, {3.889379327762835*^9, 
   3.8893793574983597`*^9}, {3.8893793879484997`*^9, 3.889379432882966*^9}, 
   3.889379470718635*^9, {3.889380076754243*^9, 3.889380135004732*^9}, {
   3.889419139724086*^9, 3.8894192097288513`*^9}, 3.8894637706368628`*^9},
 CellLabel->
  "In[1149]:=",ExpressionUUID->"ed6f1265-02a3-4031-8256-9b6380b6220a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
0DjLvn4QviYnjzcR5Bdxwimjnb9U17L6g3h3FI9LNDSv5+zDms34Vn31DfOV
qc+eJbOvg3OeZOVXcayd5toq1jp0lf/yPjnFu27NstYi2vM69evskjcsP2H9
Reoub5UN6nvfcHHeqeKzu4o6J/3VGT4qi+UrrMdsk9FnB8YLKEBu+Y4/xSpY
vkJ8DtEbXo7MrSNrN/8bjpbVv9TvbctNHhrVCEnrvd+761ObWP5C/Ps7li51
oWYyXHkzwnBA2y/1UjlOwbdGua8+bgj9mnCzsJ3t995petVaLh1kL/To2O5Z
Qc13lrjdjMyl5r0pCzZ9LiYjPc+31gUFlB1ynac1KIH2r89Z9PleGX0vq9/X
I/WBK9xr4OOhX0Oig9pOR4hUcDubbY2M5/zsp5ab+u14J+C8OZkjsXGNtOrD
VqeT4k3cFF2t2a6BLTTKc0n52Y2t3KZx1Wua1NvILW9W0kxdPp0rd1pZvbKv
PrsJ3EP2ahRQ+50Hs72keGw9HRUPuZG/OY/lA/EzOz83+qbSjdq3r+0k+XR5
Wt0OCbEMcsnhJ/k48Yj/MXBAKC+CRC5Kf9FR66vfmqEveDOHVpJgzJ9Be6Ke
sHru4GQgXLjiKcsnMs8URvs4pnB/rX6s0Xi2mm6YmOgaF+RwbyZuNt4wuq+e
z666u+uufS1FmurpRln31fd1Gg/FUqZVcasD7MfKdDeQYP0y6VlKPFbPUM9H
7H+0te6PRnp27G7+saNVbP9LffbY9e5wDXf22JS5jq4/+8Vm/zgVo1q2/uOL
h46XetzMHbDk/zXjYCvxrfyC6+f11XvUd9F7vpVm3a3UWe576e7YvnpfvPlD
81mHdrZfkvnhxSdedHKaTa55EfodtFtiXZXZ3r76j/pe7L/spSw/j9TyQgRq
C4pYvkS/lRuj+SX/St/5RPHd4VJnTMvokvJWj4TZqb/0Awono60aI8vJS3fz
nYcCHZZP0X+ZXXMfVBXZ9z44US0u23ZCDY3Luy5wM0j9pX8Q/5Sh1ZRWQ3bK
+h7SekUs36IfM/rgcHGLYh3rJxrO5KvO5fX1E/ONzzn7LRSS4qY7Av6yepZP
kY9XiO2RyvRqYv1F+cvEqOBVray/UPY8PFQysI3mV7wzcD3c158i32qpXwrj
zrbT++PNvdu/F1G56sdhn9YV0ivvbzKBlrnULR3KHeoqpsxpS+VnJfhT4wmv
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
BMsh
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
keMbthc7d7k54a/8Pfqm87qkzG82GBtO8XZR4ZSrigqPLHnle44xDy7ykbHf
dx6xP7CNv0+cd7T8roy92nkDU+aUcEHirdEGv/C3z4sKv4QvVZHrlTH4/jTk
sJR55NYp12WV8d/Vbo15fKFfYnxpm7F1tpm73vYxcsy15gHf25L/fVtU+OXX
2m+03U2uuq6o8NHSHjv45eCUuey2ctgNYmHuJmMcnjL3rS7/3aR/7OGV3xWZ
f27W76G+UZwLeOj3+jkhZT5aQ076L233jO+dt/j7Apr7lnuXO5X3omHKv9vp
a+f9xB3NuedscQ/Ui/5d/Y3aKGV+zz7ez3uFuUd5bji3+8Z3Xbny3iG7b/G+
ojkn2Cd/a6x27Vn37taD+tZP+V4rfwNUla/vE7qWvyv2T/l3AuNdrDfr2sn9
gu8Goets8RsD/Y3rsJ38/sCU+T19/B6vJ97jQu9gTQuxkHvjlOtb/v2GOlPD
Zinb8wZgt6O2LVLmGdQAv9STuvVy3VjjNiljK38z1RLX1vattgZ7uJ+OTBlb
bX3vbZ2r27dRfHXdK9WsAxhZ871S3gc7iQUc5W88zkVN8yEX9kb7LfYH7xxv
HDXb17WubT7V9HeQ+w9paH2apmx7W5Fr2ch6Uo/9rEkt1/Uz4zS1nnwfoS19
zew/xDn0N0/5nPzJvcj30+rm1h/dwm/w4BNMs10b3jvqdKC1Yryl/vHTSv+c
3yPFzR3VxnXizPDmzfWMwXvGer74vq7IPlrrp731vc657cyHM4WfRfHdMeX2
IteH+2utcxjj7HGWuIu5h38xBjXgfHCWqurvKPuZ28l9hab9od+dU953nZ3z
oTE5Y5yvrn5v8NzR5uzxJh9vntwf/a0HvgfoZ3Hoae6LRSFTUz4rnIWeqXKv
8f2td0IP9zXf3L9/L3IefK9zLvab7evu/u/hN/PfC/22dX8r5HXXNZnbSm0H
Of+N0PNcd+xWaftOyHzXDh9v6mdpyKUp78fy73dwnN7mBi7+74XflvzW5M7m
7v6hyPEHWp9tzQF86MHmw90+xPk1/AbvV6FvTfkOeDVkibUiJrGZyzmHS7Mf
rww9MeV7/OKQ+1M+B1eFfsV1nx7ymHvy7NBzUr4vxoZclPL98Vnoe1K+X9aG
3J3yubk8ZK578qXQL6Z85kaELLNua0LfkfJd9nHI7Smf+/UhN6Z8h94c8rh7
6YbQz7hPrg95VFzcz33s72P7B89RX/Pv4L5cZA362c/cY52/2fp+p2aMe/uj
0LNSvquuCVmQMs/+ImRSymfrS/ylfBdODnkk5TW81vVgLVaHzEj5nnuZGqR8
Z8wOecJ1XxF6ecr3yokhz6Z8hz4UclvK+5T1ed41Yg0fdh3vDFnoPqH271r/
B0LfkvJZHOk6sUajUl4/1u65kLNCDk75t8KDKb/r94Z+2vqA6S5xEecMY3E+
hqV8Rlir4dZ5vuvNWoPvVDG+FvrClN8D9tdQ14L1vM81ZU89ZW6npbxX2CdP
hpyZ8jliLyxy3clxtHme4n5iL7GvV6a8t29yb7GvZqZ8ZjgvV7uWrONJrhNr
NMV1ZU352xx/9+FvVCenvCfYD78CGz2FxA==
          "]], PolygonBox[CompressedData["
1:eJwt1GmITnEUx/F7polkyRZZBg8z1pAhDaWmlHpKiWkSM8gYW5ixL1mym7Hv
y4wlRLwUIfsyIg2yNyWJ0oS8kxDjezq/F5/Ofe69/+Wec/5PqqR8XFlGkiRp
ZOKqJckN9EMLrMNGNEJP3MIjDEETXEAp6hnbi1itMf5uO8zGJ4zBT96ZRfyI
0fjB7zriKjRwnU/cbrEHX7s5SvAOI1HHO0eJmyzWao8nqEUVz4YSH+INhmuP
81CM1sjCS7xCntasIb7GMAzGTjxGD7TEIizB7yTu7cZnjMUv7t0j3scg1PB7
NfEQ2iAXh7EGOWiLyRbf7N96hffPEs/gL9f/cJ7rczBk4K7FnLlaw+daq2c+
5yTcwUDl4DZxGQagP4rwFiNQyfPrxGv6tr56thR/knjHx+5FK82xAist9pZN
3Kd72crpCWxBb3TwNbAQ3dFUtViAlGryFcfwnfnGEw+iDF2Usy84oloXEuux
X7kqIG7AfHSz6MlvOGnRWxNUy3J0VU39eqpFL/q9D6iw6N00jmtPvpfGOKA1
C1STKu2pUDW5iQfqlUyL3t5h0ave43MwUbnthKd4ZtGbnuM9Fj2ZpRy/x2at
PQqXNYeP7YMZ2nNaOfNcb1VuPed+NtZrL35GSjWnz+Vn8gXxuUVv5inXUyx6
0XN+CRctzmJH1W6mxbXX8LRFz3uvd7bo/V0WveRn4JRq4LlvhuUWPei95z25
GHMtxvoZ8l6Yrl5JqZbTLM6y19T/G7ZpLv+P+A8h44pZ
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlulvlFUUxmdOC1O11SrYVrRiBaqItVYEV4oo4oKiVrCIRWhLqV0EY3CN
aJQYI25xQ427cY9L1LjFfYt7/KL+D35whRamFevz5P4m83745dz3zr33Pfc5
yztNPRs7NkQul/tNVIiL9bBS7CdOFn/kc7kd4j6NfxGtYiSf5v8UO8Vf4m8x
ypyfdzH3j7iMPWMir/G47L9iN/u9tkvzK8QhYnmktRMix3gcRnjP9Eh+FcUi
jaeIOhFRPrsyymdMimT9/slYrz1UVIiC6Im0p0rswdj79sRO5uxR/K7JrN0b
67UzRLXYRwxFWlcr9mXstavReabo5HffoQmf7dPUzL56fp+Kree+p4kDxIGi
GXuQOAzbKBYQy+3EZxQd+zjH+2dxXgMxHyHuY+g3wdw4c6PEcBwtdvO8gvj9
R/x3ZXJkJ/va0a2aXMgTmyE0q87EaRJxKRCnSnSuysSm9FzD3lK8vXaeOAJd
F0Z6917EMXhPDRrXEpNO8r82o/epkfJsfzFftBDnUux9xuXs9x360NKaHi+O
Jj4Xio5I+TsbWyTXm9BtDv76vmdEenaeHoktcM8Z3OUoxn7vJWIV8WzFNmTy
Y5poY+z8WMqz8+UYrHNmiThc/J5P58/nHT7zOM5tQlv7vAytS77Owf8z8bvA
/hZ8Po8zffZqrP0/R8xFm2Z0s88XoGPJ1zb8Pwm/G9kzF03t17EZPefhbxfr
ivSlInnexvnNxMdxcr2skb00Uv10YHcwvwB91sn2Rjm32onPKZFyznPrGFuH
brE2Uj6twtYx7zxz7vWL9ZHqexrWMTxdLGaun3EDvizBn8WZfSeiUSNrz2a9
9TgXnZxjy4iZNTgf3Zeie1vm/tvpvR3osJAY+16DYiDK9W/rvL4oUl/w3CDj
Ir3Cv7nnu3aGI9XeWmyp7s5CE/veiv8Pil+JvWvO3y330s/Ep5Hy6AvxJfdc
xLlTMu/wmQ+ITzjnFvE+50zw/ahAt340/VncESmnbxUfRspH678GnT4WH6Hf
9+J+9HxXvIPej4tvItXAi+IFYtWJDu49zin3virmhpi/Sbwdqc7sy3v4Y/+c
M+7nfYwbsH3M1zOuIw5dxGI2Y8eiVJMz0akbrZyr7i/ugbN49jmV+FnB/V0v
/oas5JzSd3CY8eviNWLbwz2dP67HAfwZoT6dY+vR33dxvrmW2qEXfQbYP8Z3
2e9zDS7nN8/bDkY59wb5vZczC/juOLqOnAs3o0OpVn33LeKDSHn5lrgB3fz/
6N5IOXqVeIL1m8R1jK8R14uDxdfi7kg98XaxmXOeFE9F6rP3RMpL+/CmeCNS
D3hZvBQp754WV0eqd2vuWurk/Zt477O82+99VbwSqT89Kq6M1KNuFI9E6psb
xbWR6v1z2a2ResUP4sdIPeIr9nj9d+LbSH3dd3qMezn3n4mU/7eJnyJ9V54T
z4sTxJ2R6so5fBe6tLB2A+udK93EwXXvunXNXiG24edm4mENHxIPR/oebOM+
XjOMPs7D/wENPAfJ
          "]], PolygonBox[CompressedData["
1:eJwt0tkrpXEcx/Hjae7cnXLjAiPCyTLZl0Q6dsZBKbnzBwxGZCvkYIgsJXvW
jN0QZrLO2LLMyPCnuJf3r+dz8ep5zvL8fr/n8/l+rK4p+2I5HI54fEArH3oR
jhx8wxPKEYhd/IAb2RjGC6oQCi9GEYMCnKMbYYjFPv6gCBE4wE/kIhi/0K77
SHRgQPd5OMEZCrXmJjaQgUzMYBq+iMIVLuBCMdp0BrN3EOrxjEo4cYMpJOAz
jnCPEkSjEXt6d39Mog5vPmTI9RaD2jsRi1jQfz/hDrP6zazZjB1kwQ8rWEYA
UvCIJSSjFE1YRzpe2XOE6xySlHkLVpGqNb6jB2n6bl6dheoZc/b/qNA7/OY6
jjh1tGbZM5GjPbfRhXyduVMZmWxCLHs2vOrerW461J3pqB/Xlp2VS1lfqhuT
+bE6cWqPCcuewUCd6VAdmW5y1d2Q9jYdfsWWZsHMwKkyNNkV6l371H2Fsv0L
jzI2s16rbM3Mm9luUDdmxv/hQV16lO2YZc+2yfgdLENf1A==
          
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt01lTDQAYBuCTpRBl6we4q/EX+A9ymf0QWbOXypYWirJvUZTEEbJEiEih
shQRUUiW1EwXZlx7zoyLZ+a9+m7e95sWTJ29JiIQCDQygnCOI4GZJJJMOgWU
EKKOZtrppo8BhvnDX2Icm84K6qljL7e5wz6+sZxazjJEOZcopI8UbnCTM3xl
GevZw3cKyKeMzySzjnc85RkPaGE3X1jKdU4zSCkh8uhlCdfI5RQ9LGYtu+gn
h52U8JFFpPKWJpq5zxOy+USQGk7wm5Nc4CLb2cE2jtPNAsIlHWWAY2zlEY9p
ZCFX6eA17XTyhiqy+MB8rnCYXxyhkvNkkMkWDvGeuazmAD85SBoNpPOQeVzm
OS9o4xUvOcdmuphDNcX8YD8VrGIjm9hAK0Xc5R5JrOQWCcSGu7GvWcwgnqlM
YTKTmEhseINMYDzRjGMsY4giktGMYuT/H/gHpaNuRQ==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0kdOlAEABeB/ZuGChQmJCTEgCTuuoMfgACw4wAwgTUSBQTqidEVQaSLN
QlF6kyq93oK6YkPCl7D48vLW76VkRNMioSAIYqSHg+BMSZUR9qjkJQMMUkCU
VjLZp4oPtLHIEuMUMcYrqjkgi4+8ZpUallnhH+2s8Ye/TFDMJLUcU0cJQwwz
Qjaf6KCedd6yQSeb/GeaUqaI8Y5DnjNDGT/4yQty+EwuR7znK19o4IRG3vCL
34ySRxfdNLHFDtv0sMsc88xSzgLNnNJCBf18p5B8evlGH09J5hlPSCKRxyTw
iHgeEscDwtza+IZrrrjkgvPQ/QfuAKyTT3Q=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.889380139003048*^9, 3.889415879916923*^9, {3.889419111620132*^9, 
   3.889419210284894*^9}, 3.889463771352777*^9, 3.889466384942193*^9, 
   3.889466530133807*^9, 3.889498469880615*^9},
 CellLabel->
  "Out[1151]=",ExpressionUUID->"3bdacf2e-61f3-471f-9f45-82cd0f80ed01"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 52", "Subsubsection",
 CellChangeTimes->{{3.889380243489545*^9, 
  3.889380245519685*^9}},ExpressionUUID->"507022c4-24c1-4844-83a5-\
dcbf3a7836d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d52", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "15"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377905780076*^9, 3.889377913635694*^9}, {
  3.889380256770393*^9, 3.88938028161279*^9}},
 CellLabel->
  "In[1152]:=",ExpressionUUID->"84ce365c-f28b-4758-aa56-27df99d4d922"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.10734006, "result_sigma" -> 0.00016948247, "m" -> 52, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 2.023271677219686`16., "p2" -> 
        0.00006085206644041772, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 1], "Meta" -> 
     Association["ID" -> 184907224006262], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 1, "DataColumnCount" -> 14, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10734"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000169482"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.023271677219686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{925., {90.2010498046875, 98.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{925., {90.2010498046875, 98.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.889377919265396*^9, 3.8893793823201933`*^9, {3.889380258167441*^9, 
   3.889380282101261*^9}, 3.8894158799985847`*^9, 3.8894663849886637`*^9, 
   3.889466530182683*^9, 3.8894984699249*^9},
 CellLabel->
  "Out[1152]=",ExpressionUUID->"93ef4edd-e5af-4c1b-a347-c4da3904246d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"lStop", "=", "2.02"}], ";", "  ", 
   RowBox[{"lShip", "=", 
    RowBox[{"lStop", " ", "+", " ", "0.0000608"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"sigma0", "=", 
    RowBox[{
     RowBox[{"PIndex", "[", 
      RowBox[{"meanB", ",", " ", "sigmaB", ",", " ", "lStop"}], "]"}], "/", 
     "lStop"}]}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"g52", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{"mean", ",", "sigma", ",", "lStop"}], "]"}], " ", "<=", "  ", 
       
       RowBox[{"PIndex", "[", 
        RowBox[{"meanB", ",", "sigmaB", ",", "lStop"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{
         RowBox[{"-", "mean"}], ",", "sigma", ",", "lShip"}], "]"}], " ", "<=",
        " ", 
       RowBox[{"PIndex", "[", 
        RowBox[{"0", ",", "sigma0", ",", "lShip"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8893791385519047`*^9, 3.889379142357905*^9}, {
   3.8893792201528807`*^9, 3.889379292239603*^9}, {3.889379327762835*^9, 
   3.8893793574983597`*^9}, {3.8893793879484997`*^9, 3.889379432882966*^9}, 
   3.889379470718635*^9, {3.889380076754243*^9, 3.889380135004732*^9}, {
   3.8893802913994837`*^9, 3.889380415489606*^9}, 3.8893806621417503`*^9, 
   3.8893807259274673`*^9, {3.889463679201809*^9, 3.889463689801283*^9}, 
   3.8894637593184633`*^9},
 CellLabel->
  "In[1153]:=",ExpressionUUID->"42a5c055-f0c9-4623-89c4-7cfa56a30532"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
TGrcuezLntBYMpNd8+ZFYgnJ2OXYLqxLY+ulJiVN+FpBVieNMybV57KHtZb3
bvlWkaZ9arck4wq2UHXOt/1Pf/T3bB/1w4urWVGllfcHzToKY9Nfr0lpZoYx
e2o0dzRT4BFF0+0eRVRgOcbPc2I2nV5+sdUiOYHMPCKc1ScWk5zppbh29Ve0
3OyPEgO/IhLKNano7L1HatvGGatuE1CX/6oe2oqpbNfoQb3mOFeQV2/zj9H3
s9g6Oi76klxJ7ctX9V3yayF7pBGdbWdeTeGrBsx8eqOSHdV1SllkLiKT/a4L
ulXUsGLVZ5EvO+vodECDzS+ffuSrGa63vDubqPVTj8iM6ibm6tPD172tiYJK
I5hWQAtz9BYuc08Rr0d7+pruK9dtod3FGT1/H97G5NVt9r92b6Hj2+4u25He
yi4HLPRU3NFCThn70j7samVS92RMGie38PXebdLGEHsZIV8/d5iHjtqUUs/r
qSmtjs+VYn7kGz3lAzcbf+SVIf23zP2STS750Uqy17zZq12TYqbsEpJzpMtB
SwtP9vJl0ZQnP+odh5T4ibmr3Uil9HUw+/yO11MddzxMG0bV0IIUs0h1pSLW
O7999dKQaqp2W/r5e0IRq/mmqZ2ZXE3DbE4Y7zEUsT4znXVFmg00yribmadj
LSs0719wIbmePCLlVyiNLyHb5zMyS7ZlUbtKytPwGvH5JuqxruPdTesCsnj9
9HX4YcGuykwamek1e2Z8yU/1mt6y6fuangmp14B1ozzO5DOXtQsPKH+tIlOD
4NXK3cX7a9RvC7fVpj2Sq+b1zbyJKgM+RFZRSUvJlGkaP9d3x2tHeN8/2UAK
Aef+PrtbXO/Jn+znNsPiHdnO8z09LymDAkMnd9rZZZHugFX1thPzyTL+9JvC
7snUVZb43GZbEYVnhSi0erygeO2gpXmfi+l8glZH/4D7LF56grGbVhmN8pGO
XHTqGsVNFRTKTXxHCrubx4bMSmSq9Tup5+tyGi8lDEy/l8rUJjzenu1bQccW
mlQcWpXDXOXbDNZoVZGGxeVeSUFCtqxmz2gj8/cUbOWh6W9bxW4P+DQxKFlE
JZs6Dn2sr2N9j2SbPulsoHVe0rMEEe9Z3y9Th400r6fzDvtPzNZoYlZmA5bq
+DbRiy0PZ3SaN7Ndrsd7tU9uJuf5U9a6S7Uyy4S34+O/NZPdJrsFsvZp1LVd
3bYgsYAGhnYzL3V7xtTuDBuh87WM3vi2m90/28D2jmGqu5MbSW2/hvaFyFzS
vXDnepFPLk0+YrbYedIjio+ac+GgTym1H9nx15Yhmcw195qGi3klWa2ZN01B
SsBqZp/cHOJbQ/cn+8wXFFSwpRZ9Les7a8l8jYyBmnwNu7VKf/XvvnX056pD
i15MaWHvQ8MUtlxq/v/7Zon75v/r98X/1+53/7fdt/5Pv+/8736/iP5K9ue/
6v4O/ZHcz4LRH8n2/7P3ZWgfjPbBaB+M9iXb+4/up9AeGO2B0R4Y7YHRnuT7
sV/H+8F4PxjvB+P9YLxf8u+x38ffg/H3YPy95PPYz+B5MJ6X/HfUY/h3MPYj
7zJ7nLFKu87r2xidTK/3fk/4/mVh9/NWK6+/5PsdMPZHOH9D/Yr9H+o97Pew
/wJjv4b9N/Zzkudt2G9jf4j9NfaP2E+jHsd+GvUs9nOIH4z9l+Tv5eAD65Vk
/JK/r0H88CGZHyXjl7yvR/zwIXlfDR8Yj4gfPjA+ML7gA34wHnAe3ZYT82ps
gz8/T140a+LdxWNv8/O0kaWFDxceTeTn2xnn9y6drP6an0efWtSteGTmG34e
jvNVnNfhfB3nnTjvxvk2zttxvo7z1mszB6fb9U8knLfjfB7npTg/x3kgzgMw
PsCYbzhfxPk6znfB+L6IF98X8eL8FfHge4LxPREf5g/GD+o/MO4H4BvPo17K
9j16Y6meiMm4zPnaKYri8w/zEfUUGOe3e+t2jMldEMufRz2C888945aobnj7
gs9PyfmK8Yrze3xPzF/MZ6ynYJ9T9nOLIooY9od4HusZ9n+4T5A8T+f12T+M
+xecB0uet+M+gp+3/5Ov8f1xHo/7BOQDyfyA+YD7D5yvI18gfyB/gnE/gv0q
nkc+xX4a9x/4Pvie8AW/eB/aRz5GPsL4AGN8YP5iPIHx/THewBhfGA/oD74X
xgMY4wHfD/1FfpbM18hX+H6S9yd4Hozn8T3xPHzie4Hxvfh5xT++0mp27orq
EudvlXfCpBnL6n/6ve6YMNPNVz0eUcapDYmDL4r3I5hP8aXHNZ1a4ni9qzr4
ld/3Lxm0fLxLz6qaop9+rxa7wXq4f3o25ehZdPMJfvDT72n84oIu7Rv7jmSH
+PVMUgwnyfP/Yc4q/Xp0ieuHRxerz12fW0W9Flf2Lpcu5OMJ4++Uju6bfTer
SfPl1y8Okdms8sxndavzeZRmEOgx5mUj2+z1ebxhQhCtW3xrh6GoloXvHK1z
7HoMXVWdvrnPvWpWvPFkXPTjl9TY7bnhy0MVbHuXtcVDpRSaKdRffHymkH1c
reVaMD+DRO2XDMtnlLL29PS3NsWZ5BhxW9eY/Vi/r+lfPSiXS4rWTD1laQY7
cZgd3D+/gMzXh485FvqSLViqs9ja5kf+PrZ3wyWTGLYgKd9TVq6U1ISeR4QG
Zsz5za+TXZSFdPVE283T9x7Sl7MddYMcyygkuN3w9YZoqni4/ZfuMWU0Ki8r
86v/a9IPCZE+tbaCpOzfPlE5kUc3Xk0YmB5dRZbPot/ebS+hPhG7vqxc++/W
8yLPfrPl3/P13N5+1t4zGn58PbdXcr53zCqcDDzD9F+pNvL5gfnW7XDdVhfh
feqYPHJJqLWI51fMP4tzp82qtWNplYZfmHq0uB5Ss89Uuyio/KkeGNuuOKVC
/w11pPYLle5RweeX3YEVLkPHlfH5hXpB22OdVotSOgW79e8tEyTg+RX5OfLc
aoULO7JoyeFuSbJT83k90apgl1Bz7Off/zWWxyq8ti+keUdLXc94p/P5eiku
5dRC9WQ+X1FvfLxbODyjSlxvuGvsCPjNqIR8jBO7e0eL6w/Md+92R3/Lp6U0
eV1XoZaR10+/h5BXuujhuFRcP5er2xpkWJZTln2zTFNZNK9fBn486z5nSwKv
X1DPvD/X483aURW8nrmf/NojMLuChpud79WalMrzg5lHZo9Af3F9g3onSnNj
P+UzlfTg/eZebGUuz9/I/ycybxvUt1WRTMdO/dgnJbweLBl4LWSXegMzbNCu
nHbnNlW25O86GFHPbtiEljUuukeKE8aeKnavY+HWQfJ95/zIn33uH/E1eM+K
TeZqObnE0f2aWXsNB1Wx7dKaOcdESfQ18aV5n7wyVn9D6aid0VuyV76y/uUY
IbumOMVr/cYMkj1+/bB1RyGLUbuxIc8mm67OemxW7pzNTnwaNT7nRh4pL/bO
3T4ihR1r2/a0X3Eh9Xv1PXiadyyrT//YpZ9cQgt1dd55l95ivUbcG251Q0Bf
heOTM/L+oirbIR+mNwjJrLpWaajKS6psj5yT6VZO/tpl1/16Z9BiQdNYI+VK
srube1x2YTaFny6uk2qopD1bHxXXd2ZSwAKBjlJgJZ1enNimG11I4b2OTQ9y
q+brSdbhxxO9X73k68XKzM/+43Rzeb42sPnu8cS0htdjAlbzxiCyjIR3+waW
CR9QpLDh0a21ZZSn2dZw5ZyArlhsVev7pIY2fomMsfQRkK5b6Zbw6BqafCZa
cHl3NdO5abGnbV4C3er5ePtEYRULuWO8fMTqRF6/afn4NtYHJpHR19Y3bani
eq5ytN6SqwsqWcjNS8VrXZJ5ffc6f/Y+14OvqePTvWPTW8T13vnDESsDx+Qy
xZXTLFSLxfVe6xT7TyvD8kj2VvRgl+pMNjI1+w6zyef1X1zOWx3FgQUULD/D
RuNaJq8H/eWvRGZcaGIu6243+X04T4OXXbd7YlzPRiU2Si2VjSCV/jfPdT0R
sckKBhpp+x6T6a+TrA+OqGWaA9OWU94zsqqb6vTkeA27GjE0ulwpnk65+AbN
yxawjV8Vl5+Ry6SOJ0HmGv7FbKP9Ux/1v7JIcf7N01EmBWxkus9I9/k5JPRw
uX6vKpKF7n+55mlRKUk7+Ap0q66wa43br2yw+bHvlX4QJ511iaL+DPIpcRPS
wLnZqZbCHDrc+vCO7doqan74KqxkRAEVBv558FflarJzYsJ242IqLG7x+1Bf
TVO7EvQ29y5jYw3dHQ1FaTTv7eXOpndJTBi0wvHZjSKaayr4dHprEg1NGXd1
XEM5nT5YfN4oLJOORFqc+cut8sf3H+23qL2B0eXC2Dv6YdReMW9TdWg501i7
pGnY41Qy2nH2gLLxWyYcfVtnjFwhOZZG6MvsjmOhrSqyo+eXkKlXafeINEby
5wodtiiXk9SqV7f357whO5uhFkXRFfRvGUE8vQ==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHnc11MWx783W1JSIhQtsrZKKpJo0UI9LQpRKrINGlvGluwhpSSMpVTK
kl1ZS6bNkmRsIUaYscwgszAxZua8u+/v69cf5zm/+733nu2ee87nPk1GjRl4
TrWiKMbHny2C7xyUgvh2Z9CDQQ8E7R5UPWjboF2KvHbLoF3lWwXtJt86qL4y
WNcwaBv3N3Ce8f5BO6lzD2XXCGoctF1QzaBmQbWDdgjaM2h7x3v5rU7QEUEt
gloG7Ru0Y1C9oEbKQ9berq0btI+cdU3UUyuoubZg+yHqYF8r/cS/g7SPfW30
B/8OkBOntnJ8au0+1rXTJvYf6Hwjba9vXFvK0ddRn4nBwXJs6hDU1LlO2ohP
h8qJwWFB+xnj9trLnsP1E51dnG/uXC3j+0bQy0F/COqqTcSghz7j69HagY09
9RmfesnxtbecmB3pPtYdpU3s7+M846HqYG1fZeN3leeBr4P1gTM/Rh8YD/Eb
9nbTXmJ/fFB35fZTHrKO3WztcXLWnaB+fDpRjk+/UQf7Tg0aEDQwaIT+EI+R
cmwfJUfnyXL8GG5c+qivtTFtG5euf/BTgk5yHrnD1M+e09Q5KOgsbcH20/1G
PM40Rth6rj4g42zXEo8xxhpfz/Eb4zOUwf7fOn+iOjsXOafOUx5+PBY0I2hm
0IXGghhcrixsaRF+NUs5BhcHjTZ+l8jxaaz7iNll+sP+S51nPCHoAvXUCHn/
ct94Y4F/V8rx6QrPjLmr9RmfrpETm2vl+DROe9lzfdD56rvOecZXKRtZNwb9
Tp8OSnnPHUET9Q3bb9Um9k3SN2IzWY7OW+TYe7P7WDdV39g/xXnG97oOeTep
H33T9Q2fbpdj+236z9xPQT8ay98H3aAfd8mRN0172XOP/qDvbucneuaT9GOm
HD/uk2PvbH0gBrP8xvghdaNzjvPovF+OvQ87j86+EduOKfs013l8pS/dqaz5
rsXep9SN7EeNF/Y+oX3Y8rh2M37Sb7M9b+7eiKBHlMf+p5WHjbXClo3asrDI
vRFbnpHj37Ny/Hhe+5D3n6BflPei9nGHFsmxa7Ece19wH+s6pezbkqCXnMf2
59SDDur1Au1apk3YstRvjJf7jX0r5NhIfg/X/5V+Q/+r2oqNr/iNcVXYc1jK
trzmPLZTh6gT1OXV2oR+ahv1mx61tsg9hnlqPHWSuvm2utHzjhz9rUPPfinr
eUsfsD0BVII+DvZ+0Crl/iXok6A/Bf3Rtcj9MOjNoDVBO8S+/6nnU/djFxiE
vkz/HhBrjghaF78/d/9HQR9o+5uO12jXemV8oO73lPulY/SAiej14IyeIfvb
4D8E/S3oz9r+rZx938m/Cqob67cI+rrIhL7PitxHiR/9YkPQX5UH9tpFfYNi
X/eU/dg6+FYpyx4cvE/K+0o8x54SzzEGrzVwDG5r6PgrfVqfj2GTT+C56saP
deuMDefwsZxzBpc1MtYlJgPHgD/ANU2LCh5qoWxwyv7608JxHfft5TcwwOHa
wVowENgHfAHOAPPtq75a6mlSVDBcG31upe7G7gPHgDubaR92g3PAMzuov1lR
wX8H6F871zEGV5QYCt69qGCmnsoAmxysT50cl9iuk/5wvzrrXxfHzfWbMTlB
DpKvNfWvsXZz3zoUFUzZUT+7GrumzreXyKk++tRTH+h79IsbjA3z4JPt1FP6
3VvfiGU3dbTW727qBxdx/+lh9Jayp92kDnymdlQVFax2rD5Tawbq8zGOicFg
x52dH6Bu9pU4cYjr2opNqrTreHXgJ/hnqP5RF0vsBh9mbEY4B065VD9KzDfK
cx6q3BIjjigqGHGk9oGFRmvvaY5ZB965QFvALWO0HZxypj6d5Ri7z3aMvnMc
EwvwFDiKWkVvWK5dY1w3WHlnGMfTtQP8d666sXWsNuH/ec6dpI30kBI3Yy+4
b6x+jvZcyZ2WKePCfxrL85VV4kLW9Uu59/+7yDk0TLnYdZmxxmdw0Tj3g3eu
LSpYcLy+XeUYX692fJbzVxQVLFhiw2tcxx7wyVRtvF4dYM8JxgFbwEIldoOT
xyXOm2RML3fteOVNMWYTlFtiwcnaNMUxtk7TDmy6zTEywCyz1AlOAa+A7+5Q
JvcTfAROKnEeY+7W3Y5LvDjd8x+nrROVx7qDxF/XGZvp2oFvM9SNfXO0qcSF
M/QDG8Fa1DLuWb+igvnYQx8FIyxT7lznSkyJLDDgXHXTh6gj1BX6UBvHXWNN
t6BqKfdh+tKnRe699FB66vubfQMrrPXbe377xPmv3IOMrx3vEnJrp4zhqK30
0rLWfubagSnjhkLswJqPlIt+evyqzXSCQeiL9MTVylprTD50vHvK2J1cae+d
KPHwRmNVP75vLzY9OPjPznP/yFdyldgQoy+U9aN5gk3gBXDDGu1FN317neOy
fzPuLgbB52NSxhbEfOegminLJc/AwA8aJ/awfq/ge1sXZoBpg/7BOQdfaU0g
39qbc/OCzwzaxm/Mkd9dxJ+v6wPfyU/wKN8Xy7uIG7t6Hl/oA78/Us7hQf8t
Mu+izLuCPx70TfzuHPzQlLH3TsG38/3J/GjX3Bv8yaB6QY8EjVDOg8FP0OaH
gw8Lmhe/9xfTvltk+/j9qpy5d1zT3N+Tgz9kfB8NGuXeJ4KfljKGJJanG8+F
wRcENQ16JujpoOpBj9HvjMMDwY8PuohcCX6353ig50APA29+Z/6D/cHkYGnu
APHgTcLbgvsL1udtQW8p3x/LnFvg/MtFfstwTrxfeEu8qtyl5v1q961xvNxc
ZLzCXHzL8yV2nHX5nmHt89rI+Gltxc49Un6D8a2tfuLjvsFbpfy2oy+1NCbE
oIVr9kk5d/nezr2n6BP2Ukv41s7Y8buta47w3nEPyLPWqXLmrT3H/tpU5Xwb
v5N3v5rXi8wV4tU/5TfYr8YU/auKytvp7aLyLi3fqQs9h43GgLpRvlef0Z53
lP+wMWWujXZiO2+Fvwf/vqi8T3ivkGfbmmPUkQ2u4Y3Db+rLVuYp64ek/Pbg
XpdvHtbM9/zQ/aj5Qd7dV+Q3L2/jWeYO4/L9/KLjl8yHlcaAXJnpPtY+ojx0
zPAbemabI0+aD+QCNXSOsXqqqLzP0XePssr/Pcw3Zvcqj7lm5sxYz7Gz59XB
WnaH8TzKmB7tb+4v/a6vtYJ639d6yPzRxvkudXKG78Z4aso94GXul3WEfKdv
cQd4L++Wik296fOg61N+C96Qcp3lLHhjNkj53r+dct2pqd1VqVJfq6xv2NVP
O3ulfN4/eO69PHvW9nc9d2GA9afw9zrPnz3kwI3WLHzsEXRk0JZBvZX5g3Ho
Y6w2GMfvtaG3vnR3P72qh2Nq9ZF+5zf+N0w5N68LWqquq1OuidUc11XORcFn
pXwm64LfE7Rj0IecZ1CdoPVBF6bcsy8Ovthc+iTlPlHP+LLvO+9FPf3if5v0
GPrLZcHnBzUK+izoEs/z8uCzPZP3g9+aMi4ZFzQn5XuK7CbKvynl/kpdwib6
ND26trKXFDlvqI/k+rSUexjn9UXwiSnbRd8Di4Adbkm5n3HuB5gzdfW/ccpY
gTsELqHe0Mf4nwv1BcxTxzX0sSUp17qrgl+Zcp7+on3Yxr5dU95H7zjUPNyo
3dj8XPBrPKvbg75UXy9zYYM1as+U6xT3kvtJPT/Zu8o75VJjTZxvTtn/GsZy
a+N5lLnJnV0WfEXKPePElO/h9pudK3k9POVzwp8JKd89ZI01V36yvuAb9Wek
+USMqBMdzDfO/DbP/XZrBHiYfJziGs7/DXPgheDnp9y7yOvnjM+ioBdTrnOn
ppyX5B+48RBz9RDH89TDb/DkKSnn/Y5+6+gazqST51XdGBOfvY0fNXB5ypiD
mO+qf5wp+BEc+Y33mL7Avd7G35wdfIjfuceDXP9KymdA/Kv5nT77sfWF2sK9
5b6BYbq6jjWNzbVN/5cKPinlHF8d9FrKfY/6BKanXoERyOda5td0c2xM0P0p
19YexhidDY0recB9o45S87nb6OEeURueNebHpWwHcw2MMXYPTbkWs//OlDEc
9ryeMhbchCGDr9LmNUFvpnwvu5gL4Iby7tEXf/Z+zjX3W3gu/wdqGId0
          "]], 
         PolygonBox[CompressedData["
1:eJwt1Hloz3Ecx/Hvey2EmGOX2fiRo4kopZRSK7WS1pJrzH0Nm3Nz39dcYY4Z
4h+J9g8hOXKUY7kLkRZ/IPafKBLyfPV+//Ho/b1+3+P9eb9+qRlVpZVpSZIU
Ix1TLEleYzjOsl9HXYse6IjTaME4tMZhfEYJ/nJ9A/ULSpHgBL5iLNIwF+9R
jG9ccol6Bb3QBrPRjFF6DueXUa+hD/rhAD5hDH5x/jH1EV6xPZj6EjVxbhj1
BXbjB/tDqU/w1PzafxyrpE5HJ+TiKm6iP35z/ga1CYPi2DbsRCukMA8fMBrf
uX4pdS/aoi/K4p30LvWcn0p9gxG4zf406luM1Hewv5K6Bn/YLqAuRzV+sp9P
nYl3KMJHjk2kXo/e1LC/gDoJ7ZGFRSiPtcvBQkxGB2TjPM7Fu+k346Nn6tUs
jlVQJ6AdMrEBR5GBAXiAhxgYPb4V1+hcob4Rd2Jba7TH/J6Z0aO7eI4h6Iwd
WILu0eMV5t+UFT1oim/IjjVZrPdEF+ThjPkMava6xb3moGvc81n8Ji+eedC8
5wXRk33R8/z45npsRM+YkZMxA6l45mXMR2/zGb6IC+azrWduQlW8i+GI+czl
Rg9XxxrlxJorS4diFpQpzfp+8yxq5pXNVeazqYzex71Ye63B1uipeplunsVj
MSvKpLJ43DxbyqSyfMp8dpVpzeY68yxrRpU9zbRmWRlUdmvNs68MN5rPtGZZ
/xHK7vZ4tjKsbOwyz7Yyollfb549zbxmeYv5f0NR9Hpz9Eo9/w+ER4lL
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmU1lUZx2fuTwVUBAQZYSAFFxhoAGUTnARpskEBHRYFIhRKs1wAo1Qy
irTMfWk1yCDNUAQ3CipALZWwMGw77cupU53jkqIo4kLP5zyf90x/fM9dn/U+
93t/7ztg4aLpl5a6urp19XV1VbQrY/BY4IUY/zjaVYELAofG4vTAipJ7WH87
0Dv6BwU6oSTw35h7KVCi/3K0u+tzfU+0rwUOiP4r0b4a2B94sT5lqpJ7Wasv
qQP5A0vu3SPQxdxPSsq+E+gc/dej3RvoVlIvvhxWcp3xIdHfF+2bge76ip0e
tvh7hLqxcXDgjfqU6VJSN2PiJA7s9SzpNzH1skX+cPWx1mBu8LFPSV3oHhp4
V+CowBWBCwNdA31dx9+PGkNj4Eh1dFGuu74frT18ObbkeWBzoD4RU/+SeUFm
gHt7abuH8se4F/l+2kXmOPVh/3hb4mjWNvqG2WLz3epl7Sl9HRL4jn40BbYE
1gQ+EhiuHPY/pu3BgUHaIR8jtc3cCcaJXyfasjZCHayt9tzJ59bAvYGLAmv1
ZXSgRRn0nawfjE8yBuJ7j+vYuSpwsbKT3Dcu0BoYr44ZgTMCU1xrNjcTA2MC
YwOn2iJ/ifMT1DFMP96rPHPvU3eLuie5PsUW+z93/vTApdprC7zfGE4JzFRm
qmhV92nqZt90dWBnvf32wJnuQ9/PAhsCiwLT/k/Ha94N7s4sbbD+hcDlJTmE
uIea34cDi9V/tnux8wF9RceSwJzABwOXBeYHFgTmuX62+Rui3tuNYXbg3MBc
9Z1nO08dc1yb65nNdG66443KLyzJTXDFfnkNrmD8orxCnX0ixksD55fkJXgR
foQ74cq35Du4ocZ/tPDDL/TvQ4FNtujZFtgc+HhJHoRPsL1brmS8o2Q9TS7J
R/BDJ2OZb97gLPgE3uDOcTcONR7uN/d8n/zIvto9P8444Yxu2oMneuh3T8fE
jw7uGvHBIb2sg96OazzbvXRwZU99bXAf/vXRPvvgDfji2pL8WONC+KFRfUe5
Dz+OdozeAY4bjONY/YAf4JrO2mnQl4HKEH9f/eitHDLcDWr/NNcGmSM4bbA+
wXVN+owf1PjQ0sGPzfrKHPV6XWBZSc7D/nD3YRPOGVE6OO4E42lWL3wGl41S
F3dgtL6OUBd2xrqGzEmO0THOMbpPMb4bSnLcJcrDOeO1zXqNL1tc62as/bQB
50xwDU5o1Q4cNal0cN9EbU9yPEw7Nb5rVabFfKPrpsDyktx2a+BzJWsbHXAV
PAUHTlZnjR9ZuztwV8n3FX1wzDRluO/tjuGSWcrBBzO0zdpUdc1QBv6DH89y
bZYyrY7RAb/BR+cow52El2p8BL/cFri6JLfNdY57e0vJ76wl6p6nHPe9zRzC
UQvcP9P1Gp/N1d63AneWfGfhEvjlw4FHS/Lxc/XJPwu1vddvHe4Hd407x73+
YuDKkvfuu4F7Sr6nnypZv9yB+wPrSr6RVyrbqK+cG7XxdMl3o02/L/Mc5xgr
+fl0yRpk/0OBB0u+E59RT5vnv0TZMe6n/q9RJ3n5fuB7Jfnzen3FzzsCXy9Z
6/i+TD/x9wrjJTeXm59+7mvUzlXa+nzgk+75UbQ/LPkGEN9n9RN/lxvLzcbA
/I3GOcE4Vhg7d5E7OdI4rjbGLZ4j78oyz6PRPF+r78vVO0H7N2uL2qMO27V/
k34x97DzfPj/2zPF5q3aJZ+36Qs5v0V/8YXa4l0jjhvMzZfUSyyPl/wdsVK/
vlE69t5hHu90nbhWOkYner5c8u7whn7TM7ldG+d4ntd5Nl9xfrZ7V6nncfvP
1ycHrPZ8qVPqFf682DFn+mTgCffRX6Nv37bPu4meu+1zD3gD4P2fBraX5OX+
zlM7QyK3/9EOOtDFfdyqfJMt92qwcvfYv1B7XfXpLu2u0w4+P1CSj+CiZ+zD
g9yb9Z7vWmVGuWenayvM3Wz3P6SexY6Rva/kezPKlvFFxnuv/m/Qj0XqfVA9
1OZXS94ravZrJWv2kZK1xzlyb+AlvnmeDexyzDnwLcX3BfPw10L3c9/gMepl
i/lc6tr5+kCMcDwcABcsUN8Tnin6flCSHzYpi86Nyiyw3ajdNdpCdptrzFNf
1NlK57apc7N99vA7Gs6lDrH/pHr4hsQnvhUfdd8F+rVZfx5TP7Lke2vpqJmt
nsUqZdlzYtTbyCrzTi7hd74pz7MPz2/3/NDDG8rbybvJ9wnfMf0d895M9Hz5
7p/smSO71rmnnec+w6u1OifG1Z4z573YvTvcv8Nxm/5gd4h6t9t/yn6TZ7TL
WDZbK5v0fac6aZ+xv8H+euPe5VnsDfyjZM2c6/nO1xfiWeTeZ92/UxvUUlPk
9Z8l7yWxcZbUJ9+CcDbcfUjsed54+b+kq/+ZnBntWyX5+4jov2SdDI3+yyXr
99eBPlVy16Boe1bJwS3R/rLke3NW9A+oku9nRNujSs5+IdBcJW9WVe5jzyvK
Izst2j0l37bx0T+5Sl6G+/dbS+0x17nKN6RLtM+ZkzeNAf/7R/uvku/qXwLH
V3lffhvoWyVHjYu2VMn5Z0R7YJXvzx8DA6vkhwHRdtLW6dG+XZLXf08tVsk5
fw4cUyVXTIn2sCrfoqnRHm5+/hYYXOV9GRXtvpI8c2T0G6r8DcqZv+654+Nv
SvpJvn9VMufkhXedN717lfklt38PjK2yvt/RV/wcUWVNUA/UxRvWBr7/rqT/
+PXXkr5x5r2qPHdi+lPJuMhBu3mgdg6usn5GRzumSt4cVmWtLDV/fyiZQ2qn
t/PdqswR+dkdGF7lb1PqaKq54i2qr/KevmpNEPdBVZ4TZ/Q/6CIeoA==
          "]], 
         PolygonBox[CompressedData["
1:eJwtk1lLlmEQhl/f0ai0FSuhwoQ2otTKsoxK2zuLTjouooJChbK0aFfbTdHK
AgkiCCKQCILoZ2S7pQkJJtVBtm9eNzMHF3PP8/G988zM/RTsqNpamSZJUgGZ
MEhSYElyglgFPbCJ/BFxJ2ShZ8Al9HFI0flwAX0UvsMq8pvE3ZCJHiBehGPw
GcZxdorYDAvRxbAHXQtL0SVQh74GT2E1+S1iDoxEfyA2pX7HV7COs07iFhiD
/kS8AifhBazh7C6xBKaiF8FV9Bnohg3kD4jbYBr6N/EwnIPnMJ2z88S58BX6
oAEOwUx+yzGvdRkWm/ekXlTjD7yHs/FNzc7MZ6EZzkKPh9PoFvgJ5eS3U5/J
r7iz7qqZbES/JW6HhzCbfA7Ux9k3yCNvJO6CteiX0fu92E2X7pXhO9JsEtib
+oxU+1nMWneoMJ+Ber8Tu/gRu9VOVprXVK0OWEb+jtgO18M7k2B/6h7SrLOh
OvWZr0e/jt3dh83kveG1x7HbUeZe1I5XoJebe+1G6t5TTdWSB+W1MvPf5Dl5
YT55a3jib+xYuz0Co83voNq60//oWb1qJhPNd6TdaMb98C/+K0/IiyPM30JT
eOMLHAyPZJjvQLPfB2PNPSOv6A1MNu9ZvR6AKeih8JZ2WEo+z/y/7eGlJeZv
Q55agH4T3m2DXHOPyBua+ZPYUUfsfIL5G9Tbk+eKyAvNa9fErD7GtzSzYWhS
fwg=
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0llTDgAUBuAvO0WIH2Dc5D/kP+CmUJaSJRFZylqSJVkiW9nKkpSUFMpW
spcklKIihbgw0y/wfDNdPDPn5rwX57yz4lMWrA8JBAKNjCI4z2QOc5lPIunk
UEAptSM7LXTQyyB/+ccwE4XNZg213KWGexziG6u5wyX+UMR1cuhjFbep5iK9
rGQjB/jBQfZxga+sYAPvaOMp2dTRxH56SKSKcwxxnhL28oUEKingN4VcI4U9
ZJHJWbpZTvCYp/nFGTJ4QiMNxHOLZlp4QytvucpuulhGBSf5ySmusIvPLOUm
O8mnkyWsYzv97CCdE3wilmRe85BH3Ocx2+ggjnLyGOQ4l0njI4u5QRnH+MAi
1rKF72xlM0dpJ4YkDjPAEVKpZxMPWEgpz3nBM17xkmJyeU908L+6NY8oIplB
BNOZxlTCmcJkwghlUrCTTGA84xjLGEaP9P8/WfxtBw==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0sdSU2EAhuETqhQVBSwIakSkCCqCqHS7KKDGGVcsGBi3sMIr8j7gGlSK
omBvIaGGUER4zrB45v3+/ElmMifRodHYSCQIgteMZwRB3OGVvqE9MwhW9Ssp
+p3X9LieYN3u0Ld6Ut9pp6b1Gxt0OU9qmU5pt27qd2rtKzTSxFVOseWuWVu4
xg/nfzyxt7Vcd/SR/tefVNjTekt39ReBfZsZ+7S+1zsa4bddp9f5Yt/QM2Rw
kzZa+eMuS5+SyVmyeUwOf90f0GfkEiXutTy9ywf7nM7qPc1nwS7Q+3y0K/WT
NmhC6zWpBzVGIec5RC+HWXR/RJ9TRBVH6aOYai4w530PtIQlu1QfMm/X6Gft
0WMs2xf1EpdZcR7jJcMMMsCL8FmE3xs+b5qoDp9x+LvY9h/aYpMN0qyTYo1V
VlhmiUWSJJjw+YXI/n9xD3OHUcE=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.889380139003048*^9, {3.889380398675531*^9, 3.889380416439521*^9}, 
   3.889380662713396*^9, 3.889380740000821*^9, 3.889415880287828*^9, 
   3.889419228068434*^9, {3.889463681237279*^9, 3.889463692667734*^9}, 
   3.88946376086882*^9, 3.8894663852429733`*^9, 3.889466530430256*^9, 
   3.8894984701356707`*^9},
 CellLabel->
  "Out[1156]=",ExpressionUUID->"5e66c298-148f-45e1-9b38-7e49408857b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"g52", ",", " ", "g7a"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.889380667118821*^9, 3.889380670430738*^9}, {
  3.8893809702950583`*^9, 3.889380972995967*^9}},
 CellLabel->
  "In[1157]:=",ExpressionUUID->"949685b9-8161-4e1a-84b9-1f19282cc285"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
TGrcuezLntBYMpNd8+ZFYgnJ2OXYLqxLY+ulJiVN+FpBVieNMybV57KHtZb3
bvlWkaZ9arck4wq2UHXOt/1Pf/T3bB/1w4urWVGllfcHzToKY9Nfr0lpZoYx
e2o0dzRT4BFF0+0eRVRgOcbPc2I2nV5+sdUiOYHMPCKc1ScWk5zppbh29Ve0
3OyPEgO/IhLKNano7L1HatvGGatuE1CX/6oe2oqpbNfoQb3mOFeQV2/zj9H3
s9g6Oi76klxJ7ctX9V3yayF7pBGdbWdeTeGrBsx8eqOSHdV1SllkLiKT/a4L
ulXUsGLVZ5EvO+vodECDzS+ffuSrGa63vDubqPVTj8iM6ibm6tPD172tiYJK
I5hWQAtz9BYuc08Rr0d7+pruK9dtod3FGT1/H97G5NVt9r92b6Hj2+4u25He
yi4HLPRU3NFCThn70j7samVS92RMGie38PXebdLGEHsZIV8/d5iHjtqUUs/r
qSmtjs+VYn7kGz3lAzcbf+SVIf23zP2STS750Uqy17zZq12TYqbsEpJzpMtB
SwtP9vJl0ZQnP+odh5T4ibmr3Uil9HUw+/yO11MddzxMG0bV0IIUs0h1pSLW
O7999dKQaqp2W/r5e0IRq/mmqZ2ZXE3DbE4Y7zEUsT4znXVFmg00yribmadj
LSs0719wIbmePCLlVyiNLyHb5zMyS7ZlUbtKytPwGvH5JuqxruPdTesCsnj9
9HX4YcGuykwamek1e2Z8yU/1mt6y6fuangmp14B1ozzO5DOXtQsPKH+tIlOD
4NXK3cX7a9RvC7fVpj2Sq+b1zbyJKgM+RFZRSUvJlGkaP9d3x2tHeN8/2UAK
Aef+PrtbXO/Jn+znNsPiHdnO8z09LymDAkMnd9rZZZHugFX1thPzyTL+9JvC
7snUVZb43GZbEYVnhSi0erygeO2gpXmfi+l8glZH/4D7LF56grGbVhmN8pGO
XHTqGsVNFRTKTXxHCrubx4bMSmSq9Tup5+tyGi8lDEy/l8rUJjzenu1bQccW
mlQcWpXDXOXbDNZoVZGGxeVeSUFCtqxmz2gj8/cUbOWh6W9bxW4P+DQxKFlE
JZs6Dn2sr2N9j2SbPulsoHVe0rMEEe9Z3y9Th400r6fzDvtPzNZoYlZmA5bq
+DbRiy0PZ3SaN7Ndrsd7tU9uJuf5U9a6S7Uyy4S34+O/NZPdJrsFsvZp1LVd
3bYgsYAGhnYzL3V7xtTuDBuh87WM3vi2m90/28D2jmGqu5MbSW2/hvaFyFzS
vXDnepFPLk0+YrbYedIjio+ac+GgTym1H9nx15Yhmcw195qGi3klWa2ZN01B
SsBqZp/cHOJbQ/cn+8wXFFSwpRZ9Les7a8l8jYyBmnwNu7VKf/XvvnX056pD
i15MaWHvQ8MUtlxq/v/7Zon75v/r98X/1+53/7fdt/5Pv+/8736/iP5K9ue/
6v4O/ZHcz4LRH8n2/7P3ZWgfjPbBaB+M9iXb+4/up9AeGO2B0R4Y7YHRnuT7
sV/H+8F4PxjvB+P9YLxf8u+x38ffg/H3YPy95PPYz+B5MJ6X/HfUY/h3MPYj
7zJ7nLFKu87r2xidTK/3fk/4/mVh9/NWK6+/5PsdMPZHOH9D/Yr9H+o97Pew
/wJjv4b9N/Zzkudt2G9jf4j9NfaP2E+jHsd+GvUs9nOIH4z9l+Tv5eAD65Vk
/JK/r0H88CGZHyXjl7yvR/zwIXlfDR8Yj4gfPjA+ML7gA34wHnAe3ZYT82ps
gz8/T140a+LdxWNv8/O0kaWFDxceTeTn2xnn9y6drP6an0efWtSteGTmG34e
jvNVnNfhfB3nnTjvxvk2zttxvo7z1mszB6fb9U8knLfjfB7npTg/x3kgzgMw
PsCYbzhfxPk6znfB+L6IF98X8eL8FfHge4LxPREf5g/GD+o/MO4H4BvPo17K
9j16Y6meiMm4zPnaKYri8w/zEfUUGOe3e+t2jMldEMufRz2C888945aobnj7
gs9PyfmK8Yrze3xPzF/MZ6ynYJ9T9nOLIooY9od4HusZ9n+4T5A8T+f12T+M
+xecB0uet+M+gp+3/5Ov8f1xHo/7BOQDyfyA+YD7D5yvI18gfyB/gnE/gv0q
nkc+xX4a9x/4Pvie8AW/eB/aRz5GPsL4AGN8YP5iPIHx/THewBhfGA/oD74X
xgMY4wHfD/1FfpbM18hX+H6S9yd4Hozn8T3xPHzie4Hxvfh5xT++0mp27orq
EudvlXfCpBnL6n/6ve6YMNPNVz0eUcapDYmDL4r3I5hP8aXHNZ1a4ni9qzr4
ld/3Lxm0fLxLz6qaop9+rxa7wXq4f3o25ehZdPMJfvDT72n84oIu7Rv7jmSH
+PVMUgwnyfP/Yc4q/Xp0ieuHRxerz12fW0W9Flf2Lpcu5OMJ4++Uju6bfTer
SfPl1y8Okdms8sxndavzeZRmEOgx5mUj2+z1ebxhQhCtW3xrh6GoloXvHK1z
7HoMXVWdvrnPvWpWvPFkXPTjl9TY7bnhy0MVbHuXtcVDpRSaKdRffHymkH1c
reVaMD+DRO2XDMtnlLL29PS3NsWZ5BhxW9eY/Vi/r+lfPSiXS4rWTD1laQY7
cZgd3D+/gMzXh485FvqSLViqs9ja5kf+PrZ3wyWTGLYgKd9TVq6U1ISeR4QG
Zsz5za+TXZSFdPVE283T9x7Sl7MddYMcyygkuN3w9YZoqni4/ZfuMWU0Ki8r
86v/a9IPCZE+tbaCpOzfPlE5kUc3Xk0YmB5dRZbPot/ebS+hPhG7vqxc++/W
8yLPfrPl3/P13N5+1t4zGn58PbdXcr53zCqcDDzD9F+pNvL5gfnW7XDdVhfh
feqYPHJJqLWI51fMP4tzp82qtWNplYZfmHq0uB5Ss89Uuyio/KkeGNuuOKVC
/w11pPYLle5RweeX3YEVLkPHlfH5hXpB22OdVotSOgW79e8tEyTg+RX5OfLc
aoULO7JoyeFuSbJT83k90apgl1Bz7Off/zWWxyq8ti+keUdLXc94p/P5eiku
5dRC9WQ+X1FvfLxbODyjSlxvuGvsCPjNqIR8jBO7e0eL6w/Md+92R3/Lp6U0
eV1XoZaR10+/h5BXuujhuFRcP5er2xpkWJZTln2zTFNZNK9fBn486z5nSwKv
X1DPvD/X483aURW8nrmf/NojMLuChpud79WalMrzg5lHZo9Af3F9g3onSnNj
P+UzlfTg/eZebGUuz9/I/ycybxvUt1WRTMdO/dgnJbweLBl4LWSXegMzbNCu
nHbnNlW25O86GFHPbtiEljUuukeKE8aeKnavY+HWQfJ95/zIn33uH/E1eM+K
TeZqObnE0f2aWXsNB1Wx7dKaOcdESfQ18aV5n7wyVn9D6aid0VuyV76y/uUY
IbumOMVr/cYMkj1+/bB1RyGLUbuxIc8mm67OemxW7pzNTnwaNT7nRh4pL/bO
3T4ihR1r2/a0X3Eh9Xv1PXiadyyrT//YpZ9cQgt1dd55l95ivUbcG251Q0Bf
heOTM/L+oirbIR+mNwjJrLpWaajKS6psj5yT6VZO/tpl1/16Z9BiQdNYI+VK
srube1x2YTaFny6uk2qopD1bHxXXd2ZSwAKBjlJgJZ1enNimG11I4b2OTQ9y
q+brSdbhxxO9X73k68XKzM/+43Rzeb42sPnu8cS0htdjAlbzxiCyjIR3+waW
CR9QpLDh0a21ZZSn2dZw5ZyArlhsVev7pIY2fomMsfQRkK5b6Zbw6BqafCZa
cHl3NdO5abGnbV4C3er5ePtEYRULuWO8fMTqRF6/afn4NtYHJpHR19Y3bani
eq5ytN6SqwsqWcjNS8VrXZJ5ffc6f/Y+14OvqePTvWPTW8T13vnDESsDx+Qy
xZXTLFSLxfVe6xT7TyvD8kj2VvRgl+pMNjI1+w6zyef1X1zOWx3FgQUULD/D
RuNaJq8H/eWvRGZcaGIu6243+X04T4OXXbd7YlzPRiU2Si2VjSCV/jfPdT0R
sckKBhpp+x6T6a+TrA+OqGWaA9OWU94zsqqb6vTkeA27GjE0ulwpnk65+AbN
yxawjV8Vl5+Ry6SOJ0HmGv7FbKP9Ux/1v7JIcf7N01EmBWxkus9I9/k5JPRw
uX6vKpKF7n+55mlRKUk7+Ap0q66wa43br2yw+bHvlX4QJ511iaL+DPIpcRPS
wLnZqZbCHDrc+vCO7doqan74KqxkRAEVBv558FflarJzYsJ242IqLG7x+1Bf
TVO7EvQ29y5jYw3dHQ1FaTTv7eXOpndJTBi0wvHZjSKaayr4dHprEg1NGXd1
XEM5nT5YfN4oLJOORFqc+cut8sf3H+23qL2B0eXC2Dv6YdReMW9TdWg501i7
pGnY41Qy2nH2gLLxWyYcfVtnjFwhOZZG6MvsjmOhrSqyo+eXkKlXafeINEby
5wodtiiXk9SqV7f357whO5uhFkXRFfRvGUE8vQ==
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwt1Hloz3Ecx/Hvey2EmGOX2fiRo4kopZRSK7WS1pJrzH0Nm3Nz39dcYY4Z
4h+J9g8hOXKUY7kLkRZ/IPafKBLyfPV+//Ho/b1+3+P9eb9+qRlVpZVpSZIU
Ix1TLEleYzjOsl9HXYse6IjTaME4tMZhfEYJ/nJ9A/ULSpHgBL5iLNIwF+9R
jG9ccol6Bb3QBrPRjFF6DueXUa+hD/rhAD5hDH5x/jH1EV6xPZj6EjVxbhj1
BXbjB/tDqU/w1PzafxyrpE5HJ+TiKm6iP35z/ga1CYPi2DbsRCukMA8fMBrf
uX4pdS/aoi/K4p30LvWcn0p9gxG4zf406luM1Hewv5K6Bn/YLqAuRzV+sp9P
nYl3KMJHjk2kXo/e1LC/gDoJ7ZGFRSiPtcvBQkxGB2TjPM7Fu+k346Nn6tUs
jlVQJ6AdMrEBR5GBAXiAhxgYPb4V1+hcob4Rd2Jba7TH/J6Z0aO7eI4h6Iwd
WILu0eMV5t+UFT1oim/IjjVZrPdEF+ThjPkMava6xb3moGvc81n8Ji+eedC8
5wXRk33R8/z45npsRM+YkZMxA6l45mXMR2/zGb6IC+azrWduQlW8i+GI+czl
Rg9XxxrlxJorS4diFpQpzfp+8yxq5pXNVeazqYzex71Ye63B1uipeplunsVj
MSvKpLJ43DxbyqSyfMp8dpVpzeY68yxrRpU9zbRmWRlUdmvNs68MN5rPtGZZ
/xHK7vZ4tjKsbOwyz7Yyollfb549zbxmeYv5f0NR9Hpz9Eo9/w+ER4lL
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmU1lUZx2fuTwVUBAQZYSAFFxhoAGUTnARpskEBHRYFIhRKs1wAo1Qy
irTMfWk1yCDNUAQ3CipALZWwMGw77cupU53jkqIo4kLP5zyf90x/fM9dn/U+
93t/7ztg4aLpl5a6urp19XV1VbQrY/BY4IUY/zjaVYELAofG4vTAipJ7WH87
0Dv6BwU6oSTw35h7KVCi/3K0u+tzfU+0rwUOiP4r0b4a2B94sT5lqpJ7Wasv
qQP5A0vu3SPQxdxPSsq+E+gc/dej3RvoVlIvvhxWcp3xIdHfF+2bge76ip0e
tvh7hLqxcXDgjfqU6VJSN2PiJA7s9SzpNzH1skX+cPWx1mBu8LFPSV3oHhp4
V+CowBWBCwNdA31dx9+PGkNj4Eh1dFGuu74frT18ObbkeWBzoD4RU/+SeUFm
gHt7abuH8se4F/l+2kXmOPVh/3hb4mjWNvqG2WLz3epl7Sl9HRL4jn40BbYE
1gQ+EhiuHPY/pu3BgUHaIR8jtc3cCcaJXyfasjZCHayt9tzJ59bAvYGLAmv1
ZXSgRRn0nawfjE8yBuJ7j+vYuSpwsbKT3Dcu0BoYr44ZgTMCU1xrNjcTA2MC
YwOn2iJ/ifMT1DFMP96rPHPvU3eLuie5PsUW+z93/vTApdprC7zfGE4JzFRm
qmhV92nqZt90dWBnvf32wJnuQ9/PAhsCiwLT/k/Ha94N7s4sbbD+hcDlJTmE
uIea34cDi9V/tnux8wF9RceSwJzABwOXBeYHFgTmuX62+Rui3tuNYXbg3MBc
9Z1nO08dc1yb65nNdG66443KLyzJTXDFfnkNrmD8orxCnX0ixksD55fkJXgR
foQ74cq35Du4ocZ/tPDDL/TvQ4FNtujZFtgc+HhJHoRPsL1brmS8o2Q9TS7J
R/BDJ2OZb97gLPgE3uDOcTcONR7uN/d8n/zIvto9P8444Yxu2oMneuh3T8fE
jw7uGvHBIb2sg96OazzbvXRwZU99bXAf/vXRPvvgDfji2pL8WONC+KFRfUe5
Dz+OdozeAY4bjONY/YAf4JrO2mnQl4HKEH9f/eitHDLcDWr/NNcGmSM4bbA+
wXVN+owf1PjQ0sGPzfrKHPV6XWBZSc7D/nD3YRPOGVE6OO4E42lWL3wGl41S
F3dgtL6OUBd2xrqGzEmO0THOMbpPMb4bSnLcJcrDOeO1zXqNL1tc62as/bQB
50xwDU5o1Q4cNal0cN9EbU9yPEw7Nb5rVabFfKPrpsDyktx2a+BzJWsbHXAV
PAUHTlZnjR9ZuztwV8n3FX1wzDRluO/tjuGSWcrBBzO0zdpUdc1QBv6DH89y
bZYyrY7RAb/BR+cow52El2p8BL/cFri6JLfNdY57e0vJ76wl6p6nHPe9zRzC
UQvcP9P1Gp/N1d63AneWfGfhEvjlw4FHS/Lxc/XJPwu1vddvHe4Hd407x73+
YuDKkvfuu4F7Sr6nnypZv9yB+wPrSr6RVyrbqK+cG7XxdMl3o02/L/Mc5xgr
+fl0yRpk/0OBB0u+E59RT5vnv0TZMe6n/q9RJ3n5fuB7Jfnzen3FzzsCXy9Z
6/i+TD/x9wrjJTeXm59+7mvUzlXa+nzgk+75UbQ/LPkGEN9n9RN/lxvLzcbA
/I3GOcE4Vhg7d5E7OdI4rjbGLZ4j78oyz6PRPF+r78vVO0H7N2uL2qMO27V/
k34x97DzfPj/2zPF5q3aJZ+36Qs5v0V/8YXa4l0jjhvMzZfUSyyPl/wdsVK/
vlE69t5hHu90nbhWOkYner5c8u7whn7TM7ldG+d4ntd5Nl9xfrZ7V6nncfvP
1ycHrPZ8qVPqFf682DFn+mTgCffRX6Nv37bPu4meu+1zD3gD4P2fBraX5OX+
zlM7QyK3/9EOOtDFfdyqfJMt92qwcvfYv1B7XfXpLu2u0w4+P1CSj+CiZ+zD
g9yb9Z7vWmVGuWenayvM3Wz3P6SexY6Rva/kezPKlvFFxnuv/m/Qj0XqfVA9
1OZXS94ravZrJWv2kZK1xzlyb+AlvnmeDexyzDnwLcX3BfPw10L3c9/gMepl
i/lc6tr5+kCMcDwcABcsUN8Tnin6flCSHzYpi86Nyiyw3ajdNdpCdptrzFNf
1NlK57apc7N99vA7Gs6lDrH/pHr4hsQnvhUfdd8F+rVZfx5TP7Lke2vpqJmt
nsUqZdlzYtTbyCrzTi7hd74pz7MPz2/3/NDDG8rbybvJ9wnfMf0d895M9Hz5
7p/smSO71rmnnec+w6u1OifG1Z4z573YvTvcv8Nxm/5gd4h6t9t/yn6TZ7TL
WDZbK5v0fac6aZ+xv8H+euPe5VnsDfyjZM2c6/nO1xfiWeTeZ92/UxvUUlPk
9Z8l7yWxcZbUJ9+CcDbcfUjsed54+b+kq/+ZnBntWyX5+4jov2SdDI3+yyXr
99eBPlVy16Boe1bJwS3R/rLke3NW9A+oku9nRNujSs5+IdBcJW9WVe5jzyvK
Izst2j0l37bx0T+5Sl6G+/dbS+0x17nKN6RLtM+ZkzeNAf/7R/uvku/qXwLH
V3lffhvoWyVHjYu2VMn5Z0R7YJXvzx8DA6vkhwHRdtLW6dG+XZLXf08tVsk5
fw4cUyVXTIn2sCrfoqnRHm5+/hYYXOV9GRXtvpI8c2T0G6r8DcqZv+654+Nv
SvpJvn9VMufkhXedN717lfklt38PjK2yvt/RV/wcUWVNUA/UxRvWBr7/rqT/
+PXXkr5x5r2qPHdi+lPJuMhBu3mgdg6usn5GRzumSt4cVmWtLDV/fyiZQ2qn
t/PdqswR+dkdGF7lb1PqaKq54i2qr/KevmpNEPdBVZ4TZ/Q/6CIeoA==
           "]], 
          PolygonBox[CompressedData["
1:eJwtk1lLlmEQhl/f0ai0FSuhwoQ2otTKsoxK2zuLTjouooJChbK0aFfbTdHK
AgkiCCKQCILoZ2S7pQkJJtVBtm9eNzMHF3PP8/G988zM/RTsqNpamSZJUgGZ
MEhSYElyglgFPbCJ/BFxJ2ShZ8Al9HFI0flwAX0UvsMq8pvE3ZCJHiBehGPw
GcZxdorYDAvRxbAHXQtL0SVQh74GT2E1+S1iDoxEfyA2pX7HV7COs07iFhiD
/kS8AifhBazh7C6xBKaiF8FV9Bnohg3kD4jbYBr6N/EwnIPnMJ2z88S58BX6
oAEOwUx+yzGvdRkWm/ekXlTjD7yHs/FNzc7MZ6EZzkKPh9PoFvgJ5eS3U5/J
r7iz7qqZbES/JW6HhzCbfA7Ux9k3yCNvJO6CteiX0fu92E2X7pXhO9JsEtib
+oxU+1nMWneoMJ+Ber8Tu/gRu9VOVprXVK0OWEb+jtgO18M7k2B/6h7SrLOh
OvWZr0e/jt3dh83kveG1x7HbUeZe1I5XoJebe+1G6t5TTdWSB+W1MvPf5Dl5
YT55a3jib+xYuz0Co83voNq60//oWb1qJhPNd6TdaMb98C/+K0/IiyPM30JT
eOMLHAyPZJjvQLPfB2PNPSOv6A1MNu9ZvR6AKeih8JZ2WEo+z/y/7eGlJeZv
Q55agH4T3m2DXHOPyBua+ZPYUUfsfIL5G9Tbk+eKyAvNa9fErD7GtzSzYWhS
fwg=
           "]]}]}, {}, {}, {}, {}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0llTDgAUBuAvO0WIH2Dc5D/kP+CmUJaSJRFZylqSJVkiW9nKkpSUFMpW
spcklKIihbgw0y/wfDNdPDPn5rwX57yz4lMWrA8JBAKNjCI4z2QOc5lPIunk
UEAptSM7LXTQyyB/+ccwE4XNZg213KWGexziG6u5wyX+UMR1cuhjFbep5iK9
rGQjB/jBQfZxga+sYAPvaOMp2dTRxH56SKSKcwxxnhL28oUEKingN4VcI4U9
ZJHJWbpZTvCYp/nFGTJ4QiMNxHOLZlp4QytvucpuulhGBSf5ySmusIvPLOUm
O8mnkyWsYzv97CCdE3wilmRe85BH3Ocx2+ggjnLyGOQ4l0njI4u5QRnH+MAi
1rKF72xlM0dpJ4YkDjPAEVKpZxMPWEgpz3nBM17xkmJyeU908L+6NY8oIplB
BNOZxlTCmcJkwghlUrCTTGA84xjLGEaP9P8/WfxtBw==
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0sdSU2EAhuETqhQVBSwIakSkCCqCqHS7KKDGGVcsGBi3sMIr8j7gGlSK
omBvIaGGUER4zrB45v3+/ElmMifRodHYSCQIgteMZwRB3OGVvqE9MwhW9Ssp
+p3X9LieYN3u0Ld6Ut9pp6b1Gxt0OU9qmU5pt27qd2rtKzTSxFVOseWuWVu4
xg/nfzyxt7Vcd/SR/tefVNjTekt39ReBfZsZ+7S+1zsa4bddp9f5Yt/QM2Rw
kzZa+eMuS5+SyVmyeUwOf90f0GfkEiXutTy9ywf7nM7qPc1nwS7Q+3y0K/WT
NmhC6zWpBzVGIec5RC+HWXR/RJ9TRBVH6aOYai4w530PtIQlu1QfMm/X6Gft
0WMs2xf1EpdZcR7jJcMMMsCL8FmE3xs+b5qoDp9x+LvY9h/aYpMN0qyTYo1V
VlhmiUWSJJjw+YXI/n9xD3OHUcE=
         "]]}}}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
oCLzxbp2/RqYw9XB+wxeCCh0+hj9ssQ6dsC/wSb1QBZZ7/L93NW4kpmO2nGz
dlwuTTSp63NyrogtMitNiDLII7E8xWFzbBELFGu5NFwqIN3yld2SvuYzlZWL
bO9UCmnitn+alvlmsvj1x5SuXCqmXvWCOINfU9mGEQ/yzZRKKWZ7YfSH5hjm
RbPmbij+1ndr9RP0WXWFPricnZ27XkROB3/+uuBeDCVaRh0OHCYmN8PxLSm+
KSQ06K55cEMlfV6WbHxiZiqJn1qci/CtJJW72Qcs+uZQsd2nJv+OKrq4Ys8I
3ZP55HJi0rWLjyWktt7Tzd+rlLyXu02eMraG11OPmAkqy6/XkM/UrdbXNMt4
fUU/8fi0/+ju6zOov0a4WfgDKc8XqLdlq6tdGwZm836iKeWQaGlINtWyQVkq
MhHPFyf7BMuCz5fyfIF6fNRqcUjOmALaYZ58rGWwkK8Htf4nlH7qp/i9Iuqz
+WazKyIqVpxn/HrXatD6EqqIWCq6eeUNzy9Yf7+FeMxJ/xa3TPeHGeN6POL1
20D10sHXdT7892uo53/GT5jkpiWi9/m6hmWbbvP8gXwz236/yQprRT+4I+Oi
6bORVVSx4XalcUQqzycxnoWzdz0T8HyCfqBvwlpNjcdV5BoYWf9+Qh7PJ7zf
WXOxuItEQiu0kk8ND5aze1oTPvcWvaU5WtVhXppyNjuxdnrE0gxiJKwasVnG
DlvRo1OfMmjJlurX747XsJijo1WXLsim2Z9PebSq1rDAxIDInH3f9luBvut6
r5Uw6d+fL4dNyqF5B1acjfcuYyr+k6qVNuST+bGwja9Citj946G/v79WQE3j
9GbsXZvD+h6oOZ49p4hm6zmpeXRLY8scBe3l90sofFM/9Quuicza751Af0cZ
pcSrjWiZEMSuFffb7n29gixuiY/bzLlBBZe+aIVcF5HulDmV9maJJAt0cDHM
EdPUscaaI8dm0pWHLkp5ZlU0N32h87WdOXSp5anOXyoS8rilNM+texEdW/8m
78ddin731tPLHicmveX1Tyc9++QrP0X9Kt/n/9TRKY/XJ/0/F5wr1Sjk+TXx
/bAs9dJy2ic1mSAsamHOPRyMS0VvaMjeH5aOy2lh22a/CcutUfQ/Bx5nyKrj
Mulwb+Xh00jGvAa2tRiNzKSLJRWDBl9sZmuXnLs63j+TTM0PHL26uYmpqL6Q
rRgiIM8hffpbxzaxtJ/3bdBXEvD+qOPNlVV+EQLqxuSn1hs0Mh1JvsejLQJa
lr3E3q9nPbP9rGF5qr+iH/LPHzeRqnLIcUVFa5i8immGLPzL1S6HdBaL+lgu
qmIxTRuXb7meQ9bnZ+StvC5mYQ4tFsG/5PL+aKWPSWO1VyUFsA6Vlvhk2n4j
53eZnqIfUu+2JVJ3UA1dn9n9xtdtxWSd4BawIbaagqckncpNLqbcsBXT4l9X
03rl3ttlhi3MJDzvzgOHt7wfyjU6p7s/4S2FJi9wO6/+LX+GLnJc9DCL1C6p
qcmv1bI+JuKjx0uz6EVxj7sT+tby/kPYenm89fwKlmBg6tn4WtE/JZi+rWoz
zKf2sZPEtkElzMjsbIukPZ88BetDfk9S9MOCMBsV80l5rL9dh5qxn6K/erDp
U2iQbhG5bZacmvpHFrObfnvr3dpv+7xMmxL/6wJeTz8HJ51LC4lharMs3pZW
ftt3uTTEd22LYk7vNg7uZ6n4fevBA7k51058471XOtasucH7Ne2OIu8oyRz2
m63maK2uInKIc01WfnCe9x/OO2bu3NNFzkalS2/ZumTQCB/vz7USKTPw773c
elgWhS/0l/+8q5o1hMw7cflxNl3+a4Bj73li5qRnXVV/O5daisf1lgiFTGNz
1sLB84XU+ovHzoPvkpnTUaPVrx+V0qitPX/RrnvGps9PNz+jXU6XXPX12o5H
Ub+BO6Oux4tIKC0Ud7n6jAplXu+3uonJIzc8quR1LtFxt/HRdhJ6kG3ot89c
SGe9KzQ8VappZUXbse1Ls8iwZ/THaWFVZFSrf+2raTkpFWRuc/asoen7v7ib
fE1nCXeKMscsKqHN4lOuGrfTaV3685t2dZX0HzYVoZU=
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXn8l1MWx5+LSkXWaNVCZYmiFCqSdvEjUipRNLJU9jVEiEFEtuwkyRay
xJCRypKQUIgIDYZQjHXMec99P6+vP07ne59z77mfz7nL83l+NRsxtv+Y9Yqi
mBL/rB9+q7AUxrOt9TyfEnZf2PSwxmEbhtUMq2d8g7D6+mph2xivFdYwrHpY
jbAGxmk38hm5mti3dljLsM3CNg9rFrZR2MZh24VtErZp2LZhdWy38BljdpID
2Juaj/GtzLdF2Pb6LcN2DKvrmNaOg1O3sJ3DdglrI+6Gtuvb3t05wNjWOJx2
1VOnDsabh7WzLnDdzTjtjsbhtIcervuID06d5QD2PY3Dey99S3NsbF06+ayV
POqJe++wHczb1dzw3ldP37fC5oW9FLbfX2rQQ57w66mHx4FiAktvebYP66On
Tn311KOX4+h3gJwZ389a0K4yHzwO0lOD/mFd5DFADmA/TM+6HWKc+g0RK3MO
NA6nwfIhNtQ42AcZ7x52uL6HPJq43kfYF34nmpdxR8pz/7BjxQqW4XKD6wg9
NTtaD9ejHEe/v4Ud7PhjjFODUeY7NOw4PTU4Xk8NRosF7GP0cD3B+EA5tXEt
xxqnTqfIbZjWRz4nGadOJ+vpd6r94H2aHh6n6+F9ljzhcab8aV8gbnCdEzZS
3ufqqd9449T4PPnDe5xx2hcah/dFenhfJj5wXSpu+E0wDu+L9fA739xgusRn
jLk77Oqwa8ImmoO8l5sbrn/XnxF2j30nh/VMmfMVYVeFnS3Xq+UJjxvEPcEx
54nlWj11uk4/3tzj7He9/Bk/xTjtSc7DHDeaG643y4163OQz2lN9Br9b9NRv
c14EKa/hrT6D9x1hV8qpU8Rbp1yDu5wbfncap80+5Sx2DZsmT/hxv8wOe6LI
75YpcpouZ9p9Usb0UNgM49Tsfj38tow+66WM8QG5wXWmcdqPhN0u9ll6MD4Z
dq9zznb9wPiocTg9pmcvPGhuava4zxjzjJhmymeaeZ8yN/ye1s8wdq085/iM
8ewhzg3nZK64wft82MO25zsH2F8wDt5/6sG7wDjzzxMr/F40TnuhcXC9rAfL
YvOSb5Fzg6VfyjxfCdsqfm8Q9myRbaa1fy3sOcd0iXiblGv2ujnI+4a5wfKm
fp61mG5tlhR5f8B1qXzAu8w5wMX7g3uYu3u5z5hnhXl5j33ofLSHBJaqlLm+
b1+4fqCn31dhK8M+CXsv7FXn+8h84FolDub8wvHM87Hxt8NqxjwbpvzsiPD9
U86BVuJd/H+dEc+qp8xvtTnA/rXzfxr2bz1z7ht924Wti9/fhn0W9nnYgJTb
P4Y1iN+1Us73fdiXcvpBT+41jgP7Ouf4JmytcdobR46NUu77n7DvzPeznny/
h/1kfFDKsT/CfjG+VozLrXfj6LNJyvFSX27l3Kvsu1/EO6ScOxmvaz3edU0+
1bMGpe6kpmhJdBc6DN3XtMjvbPRfM9voo+a2axlHg6Ej0VRoL/QR+gGdgc7j
XYkGQqc2/sscbY2hPVs4Hg3a0jbY0VdorZrOU47f1fH1zb2z9WjtmHo+o11H
XOBGw7ZyDjQUe79nUdFwXc2HhukmZ3RXezl3sE2ujrZL3dlRDnvaLvUl7c9d
Q/Z6dfk3kFM7sTRxnnbi6+T4xsbhXM1x9eXXTdw7iX0fa9pdDqXWLLVnD2PU
oLNz7Og41qyn76IziooG5Y7gnc37a6Kc0Vp9HYOm6i9ntFk/OR9oGw5Vtjsa
Z3wXxx1cVHRqlVgONS+cBtgudeqAoqIvB8lpsG3qMdB+4ENTDbMGQ+zXx2dH
iOMo+7EXhtqvt/Gh1nGQecE+3DH0Q+eMLSp6dIRzo7uOlxt6bKRcj7UNt1G2
4XyM40s9WurT4+zH3CeaFyyjbZc6dXRR0Zcnif0U24PFOEZ8Z7q+w1zXU+TE
s9OLis4eXlS06alFRZueZt06uJ7l90mfoqJBz5HbONvMjY66SE5os/PkeoFt
uI23Pcr4uKKiTUuteqH9Sg06Qc6X2IbzpbbBiua6rKhozcvlPNF+zIEuRHdx
aV5hjc712SSxTLYfOhRtdqU8J9lm/c5ybKlBJxu7s8iaCdzosuuKil6cKj/0
2PXyudE2fG6yfaHxKeJmXKlJb7YfPG81b2s1HXw7p6w1U8p47xIT/O62faUY
0Xkj5Xa2nO+xH5zQF9OKirYueU6zH+9vdAeag3cP98sOYkenoeH6Bo79w9ZP
GTfap9Sb+PvFhx6bJb8H7ddHTTS1qOjLR8WNvkPnoWcfsg6lZn1EDo87hjnQ
Y3PEjiacXVS0Zqk98U+KfY4x5kCjPSfn2eYF+7PmbaO+A/PeKes5+IJjruOp
0VJrBia0XKlD8S8UFX250Dnm2Y85X7LdT102R6wLiorOnW8/9OYrYgM3uuxV
x6PN3nROdNxi8S2yH3hft32vczwhvsXGZtmeW1S06RvOvcQ55st1ievY17Ws
UsctFBP65F3nXmabMejBj5yP9+nyoqJB33e+D20vMr7MuRlXatsV9quuxnzb
+dBJK4uKTvrEvLy/PzPvF7bJu+ov/dB+X5l3tf1W+uzLoqJH6ddfjQmOYSlr
XPTuU9Zggbm/cUw7dd9a50ZXolkHqGfpt1vK+rV2yvOhM78rKvqVdi016Rfm
XVdUdOta+6FbfzQ/49GnPxUV/Uq7W8p6uk7KMfTmb47/xX5DU/5mqJayvv3d
sd1T1qmbplzTb8WPtv3DsWjY/5qTO7XwbwFNwm/hd3Uv7zPu9L6eLfZS0/B1
/aY9KKyGe4uzuIHfYM3Cb+03GOu/od8XS90T7IcDxM652j7lb5KPXVvqSA0P
swbUcbvwjdT924Y19FviENeEcc3D1/e7ZY21hj/fC9s5doeU22us5SZ+G7QI
v43fAHwLtPD34daS+u6Yco3428MuKX/b8w7oKib2x64pf3+W9djae2GflPHV
s3Z1vUOrixnuNYwvdU228H1Z29yr5dTIPVTLOsBld3GXnLZxvfcIv5nrvbn4
CzE2c43g0VRcDeRSSyzNredyzyjnBlwtxVbHvcoaNbS+4IHT9vJi33BfP+Ae
20lu7C3eo7xD26bc5x8+29na4mnfZo621ratteZ3x5T39J/xu33KtfjF88fZ
Xutzfv9qzl3Mz7P29qdWe1mv3z0nv+k7WsM9/c1crG0r15dne9iHvNTyFjF3
kRcaobNcqFk38axvH+qE39v+zLufc7Wzzr96F3V1rTa1D3jx3e3P+e2d8hnm
u6OX9e5hH8Zx5omdYc07ia2XY1jf5HPG9jYPz+HGO2aq90Mf9zO6o6+/y//P
4HuIe4H3KO/QL8Pf6L4v/17G+38pe0Tuy8MvS/ncfEMt3fcrwz6Vw8iwufbn
jueu/1eR7xXuRu6Wn1jnlM8Gz7g33/FOYgz3Un9/M3ZJ+MWu0xVh063VB2Er
XLMfwq5O+dzQ9037fxI22/pzb3AvcwZvCv+w+T8M/6jr+HT4k91v34dNTPlu
ehuM7oPLw+5N+ZyNCVvo2DfCz3C9Xg1/Vcp78xrxgQ0Mg8X/nnnJeXDKd/c7
3sOsC3v4wJTb/KZ26IaF9iFWzXFVju1nf/qWdVzhvT1QzAc5Xw2fEePu4t7u
b00G+Hydcw4xf5XjuQ8HyYd9/nn4ySnfoS+EPZ/yffBc2LMpn+9DU56D/HPC
jxfDz+biXTnYnKzRx64x67s6bErK5/vJsEkp31eHmLe22GlzJ5dagffsZa4l
6zg6bE3Kd/GqsDtSPn93h91gPceF3ZXyHcDeZ0+znxl3u2OJv2ufl8MWpHxn
TQiblvK787qwtSnf6y+FzUv5nrgn7OaU9/sIcrtn7gz/Vsrn+7WwRSnffQ+F
jbL+L6ZcO+rG+ZuV8hk8P+zBlO++R8JOdE3B+7iY2ePsV/bq2eHvS/md8VjY
WGvOWTkp5fNyafj51pazcrxrd1HKOMBwZNhTKb8/LrCO1HCG3G5z7w0Qz/3h
j075Ljoh5XukkXW61lodm/J9xF10jGvPug9PeZ+xx663LtSEfTfT51+HTU35
vXecbX5f7NrUlNMz8rot5fuIu+iclNeA+nO+P0r5vLyecr2o1f8Ar0SfdQ==

           "]], PolygonBox[CompressedData["
1:eJwt1GmIzWEUx/H/sYREZA9j7pgxg0xGJktCMnVLKVJqEmbIzsienexjy07k
hWlERGSJsUV2MTK2bIMkSV7wRonv6fxefHrmP/c+z/88Z7mp0rKRs+okSZJG
PSy0JJmODsjGAkxFe3TGJHzFcNzj+3NZS9AKmZiN++iHf3w+n3Uy2iEL0/Ad
o/wcPp/C+g0jUMPzDdZXGIS2WIsNaIKuWILtaIl8jMdnpFHO/jLWnyjGX55n
sP7AaPzmeR7rRLRBCsuwE61RgE04hI4oRAWOoCEaYRXW6O88TMAXDMNJzt/i
eUEf5WARZiIDOdjvcWCszlxvkfNs3fG1cu65HoxzmINO6IZtFjnPVA52YTly
dadKfEIRmuGocuS56cJ6FmeUG4/poGLM0Z13WOQopZy8tKhhlmpyQj3gtc9V
bOPQXTHuVY7yVPMDqqHXznvoGq6jJ6o4Y6VFzb3WDXBVNSnQdy7gPFroHVW4
gh5eJ/ZfVk/k6393cBe98SeJ3lqts73HvHdXoL5FD3vtlqKuavgO7zEETVGD
Z4p1IGs1nmIADG/xRu/yPTdVQ69dLzzHC4u9/o7D+IChqtEe/MIYxXQapyx6
1WfQe2kz+lr01CXc0tmN8RAX0Rz9sRWPLGrtOfPe36i7+Az47K3TXp9Bn53F
uktasey2mEWPyXt1n8Wses/6bJVb9JbP2BM8Vi08Jx9RazH7fsfbFjNVqJr4
XR4oVr/TcRyzmB3/DfkP1viHSw==
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ISfnwvv/CYzJpQ72zCXX5Pn/KW9nvQ==
           "]], PolygonBox[CompressedData["
1:eJwtlFmIj1EYhz/nHeSCC6SxG1nHWEuWiGQZ+5jBmLE2ZBAzdhcuXblRsiYS
SfZ9kBAhOykppaSk5I6Q3fPr9108nef8+773nPN+v/Mvqqkvr0tZlo2HAlgZ
WdYLTvJjAyzFu8Ix/CK0wmfBHfwejMFL4Sq+A1rj/eA0fgXa4JVwH38AJeEa
evcULMDbwxH8LPyCtczfMm6GUXif8LOX4S9sYP6BcSv8gZHhvW7RQfDR4bW3
wQ+Yyfw2YzX8hKHMzzPWQiN8E3zCt0MLfDgcx/fDd6hn/oqxCjrhQ+AcfhS+
QRnzm4wToQgfBheSe1aDdw4/qzV74iPgUnKPu+HNw73Vmm3xQXAG3wnL8Fo4
gJ+Apvg0uJ685iK8AB7jT/LedQ/vXT1ch//Oe/kO1oR7oLO/yc/WAfYkn3EK
PhWu4aVQFz6jzvYSVod7ql6+hvXhb6Dev0/eWxO4kbzHyfgkmJBcU2sNDn9r
rVmFzwn3XhkZiM+FR8k9qA5nTNl6CIXhTClLh2E6/jXfq9asYF4e/la3kmtF
+F3V3BjOiLLxMc9SMRxMzpSyMAAOJWeiS7hn6tU+aBfuiXqxG3qHe6Czq8YX
WMX8RfKZ+4fX1Fqq2THcQ/Vur57BPzPuSr5D85nPC9fWnegR/ob6dsrAbPxf
nv270Dd8R3Q3dOcW4mPDtZWJJXhjeIo/y/emjClb2mMzfEa4V7ojyrYypSwp
48qyauhdZXoxPi7cC9VcEc6osvk8OdvLw66M67+iZXiv+s/4D6GEk+4=
           
           "]]}]}, {}, {}, {}, {}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt09lSDgAYBuA/skWWcAHO1DVwD7gBpGSvbJV9C5G02SmSrShLlJSdSEVR
QpIlSZYinTRjPP+Mg2fmPfpm3pn3mxIdP2tZSCAQqGEIwTyZSKYzk1hSSCeP
EqqppYUOuullgEH+MsGxRCqo4wnpPGYPtSRQxns+0EE+HznNbnqJ5zJXyOMn
S0nmKAMcYxcPeUQNwXKXaOMtb3hHO6dI4wdLKOUiR/jOYpLYQR87SeUwPSxk
Na+5x30qecB2vrGIEg7yh0OcpJCtbGMzB+gmjlW08oo7bOI6d9nCVxZwgX30
s58CNvKF+ZxnA7l0EcNKsvlNDuu5yW1uEUsxL2jmOS9p4QTr+Mw8zlFEFp3M
ZQV7+UUma7lBNVVEc5anPKOBJho5zho+MYczpFBPBtcoZzbLuUoUESTbWwwz
mMZUJjGRiOAWGc84xhLOGEYTxihGMoLhDCOUof//4h9Fj3aK
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0lszllEYgOH1fZ+9lH1lm1IiCpWiEBUVRai0kUjaCWVXnHXkxEzTjD/Q
L/DbpOzpMh1cc7/zzDzrnVmzSoYnesYjIYQVNnyskxoNoZiLLLNKeyyEO7Ty
jBjPqaGW43zi98Geruk97eAu9+nkj3mXJvCARLr5az6ueSRxkxcMkM9LLnGZ
AiZYt1OnG9qjvTwkmT42zSe1kBRuMUgcr7hCEUMUM0wqV9my+1lPcIjbvCae
Eeop4Q0nGSWNUuY5RQOHOc0Xtp15TXd0Ss9whDbe8o4PvOc6ZXzkLGOk08iu
/WktJ4MKZtgzb9J9fayZPCKLShY4RzNVfOU82dwgMMsFcqhmjggtROnnKU/I
5RjfOMov//3JD5ZY5DvzB3fJKP20UUsRKSSTRCIJxBNHjCgRAvve5h677LDN
FpuR/2/3H6+sQCU=
         "]]}}}], {}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.889380670755629*^9, 3.889380898198105*^9, 
  3.8893809737987947`*^9, 3.889415880366338*^9, 3.889419234165934*^9, 
  3.8894637858282547`*^9, 3.889466385284363*^9, 3.88946653045398*^9, 
  3.8894984701633797`*^9},
 CellLabel->
  "Out[1157]=",ExpressionUUID->"1e461d18-5893-4d75-98a4-7d5171c16b0e"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["m=52 Regions[error=32]", "Subsection",
 CellChangeTimes->{{3.889463297602539*^9, 3.889463303822102*^9}, {
  3.889464437752005*^9, 
  3.8894644538021717`*^9}},ExpressionUUID->"fa13ef44-6239-4d5f-a712-\
65f88cd56462"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionsM52", "[", 
   RowBox[{"data_", ",", " ", "error_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filteredData", ",", " ", "method", ",", " ", "lStop", ",", " ", "lShip",
       ",", " ", "sigma0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "error"}], 
           " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", " ", "52"}]}], 
          "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
           RowBox[{"lStop", "=", 
            RowBox[{"r", "[", "\"\<p1\>\"", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lShip", "=", 
            RowBox[{"lStop", "+", 
             RowBox[{"r", "[", "\"\<p2\>\"", "]"}]}]}], ";", 
           "\[IndentingNewLine]", " ", 
           RowBox[{"sigma0", "=", 
            RowBox[{
             RowBox[{"PIndex", "[", 
              RowBox[{
               RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", " ", 
               RowBox[{"r", "[", "\"\<sigma\>\"", "]"}], ",", " ", "lStop"}], 
              "]"}], "/", "lStop"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"PIndex", "[", 
              RowBox[{"mean", ",", "sigma", ",", "lStop"}], "]"}], " ", "<=", 
             "  ", 
             RowBox[{"PIndex", "[", 
              RowBox[{
               RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", 
               RowBox[{"r", "[", "\"\<sigma\>\"", "]"}], ",", "lStop"}], 
              "]"}]}], " ", "||", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PIndex", "[", 
              RowBox[{
               RowBox[{"-", "mean"}], ",", "sigma", ",", "lShip"}], "]"}], 
             " ", "<=", " ", 
             RowBox[{"PIndex", "[", 
              RowBox[{"0", ",", "sigma0", ",", "lShip"}], "]"}]}]}]}], 
          "\[IndentingNewLine]", ")"}], "&"}], "/@", "filteredData"}], ")"}], 
      " ", "//", " ", "Normal"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.8894516015997972`*^9, 3.889451707470255*^9}, {
   3.889451745784664*^9, 3.8894518040441427`*^9}, {3.889451835185034*^9, 
   3.8894518413784533`*^9}, {3.889463362082859*^9, 3.889463669379313*^9}, 
   3.889463797710271*^9, {3.8894639262231073`*^9, 3.889463926937849*^9}, {
   3.889464011977312*^9, 3.889464018122746*^9}, {3.889464100573876*^9, 
   3.889464105512054*^9}},
 CellLabel->
  "In[1158]:=",ExpressionUUID->"eb3e0a7f-70f5-4c96-b38f-8dbaff4603fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"regs52", "=", 
  RowBox[{"RegionsM52", "[", 
   RowBox[{"data", ",", " ", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889463810909971*^9, 3.889463849817318*^9}, {
  3.889463942922558*^9, 3.889463944979388*^9}},
 CellLabel->
  "In[1159]:=",ExpressionUUID->"355741b6-61ea-40ec-aba2-5fa6cb034e20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"2.8402616329643946`17.", " ", "sigma"}]}], "\[LessEqual]", 
     "0.8402616329643946`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"2.836007450121349946`16.999283975769", " ", "sigma"}]}], 
     "\[LessEqual]", "0.839003077561914`"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"2.765508322488381`16.", " ", "sigma"}]}], "\[LessEqual]", 
     "0.9655083224883809`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"2.7626286548255679687`15.999547090144137", " ", "sigma"}]}], 
     "\[LessEqual]", "0.9645029582767322`"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"2.4881242225140063`17.", " ", "sigma"}]}], "\[LessEqual]", 
     "0.9881242225140063`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"2.4860770668367455628`16.99963895491868", " ", "sigma"}]}], 
     "\[LessEqual]", "0.9873112228680663`"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"2.0115837756743313`17.", " ", "sigma"}]}], "\[LessEqual]", 
     "1.0115837756743313`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"2.011666485452204`", " ", "sigma"}]}], "\[LessEqual]", 
     "1.011625368706845`"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"1.2998624455213792`17.", " ", "sigma"}]}], "\[LessEqual]", 
     "0.7998624455213792`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"1.29961901721600044314`16.99991857970041", " ", "sigma"}]}], 
     "\[LessEqual]", "0.7997126533950506`"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"mean", "+", 
      RowBox[{"0.7634241519080012`16.", " ", "sigma"}]}], "\[LessEqual]", 
     "0.5634241519080012`"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mean"}], "+", 
      RowBox[{"0.7640612659846346558`16.000361925986542", " ", "sigma"}]}], 
     "\[LessEqual]", "0.5638943563905274`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889463814592448*^9, 3.889463850503688*^9}, {
   3.8894639299949512`*^9, 3.889463945705645*^9}, 3.889464020979311*^9, 
   3.8894641093727493`*^9, 3.889466385322316*^9, 3.889466530505896*^9, 
   3.8894984701978817`*^9},
 CellLabel->
  "Out[1159]=",ExpressionUUID->"1d143508-c2c6-4f70-9db1-e6ce1047906e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs52", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8894639367070627`*^9, 3.889464034722911*^9}},
 CellLabel->
  "In[1160]:=",ExpressionUUID->"1cfaf6c4-f4b4-4626-9252-561875a44a0a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztfXdclNm2JaIiIpgaUVEx04iKCWzzVjGLihgwICaMGDFijpgwI9qKCoqh
DaCIiIIcCSogIKLkVBRFTkURTTD1LNep6a/f/c3MnZn3buD+0791zxfOXuec
vfe31y7svGS9xTJVFRWVXU1UVP7jv6tPXY2tra1ifcqNowp2HKJsR5tBpvYV
HC850fOKg0zGcdox2fcwWynHT5pvCtQNL+D4nla9I27+2Ry7aZw2M/DM4Lhv
syHdrE0TOR7e8oF1vHkUx8aaoXkSE2+OWyowAfdSXM+xgeJ5HF9VvI/j24r5
cOypmC/HKQp7OF6ksJdjiYIPjn/yJcRsUq/H40Ju+HD+gMEfMPgDBn/A4A8Y
/AGDP2DwBwz+gMEfMPgDBn/A4A8Y/AGDP2DwBwz+gMEfMPgTYNYoNfJYq/mv
OX/A4A8Y/AGDP2DwBwz+gMEfMPgDBn/A4A8Y/AGDP2DwBwz+gMEfMPgDBn/A
4A8Y/Akwy+tqKg21ec/5AwZ/wOAPGPwBgz9g8AcM/oDBHzD4AwZ/wOAPGPwB
gz9g8AcM/oDBHzD4AwZ/wOBPgNlyE6ueI5594vwBgz9g8AcM/oDBHzD4AwZ/
wOAPGPwAgx9g8AMMfoDBDzD4AQY/wOAHGPwIMItPcE5r7Z/I+QEGP8DgBxj8
AIMfYPADDH6AYT8w7AeG/cCwHxj2A8N+YNgPDPsFmE3Y9eFs6as0bj8w7AeG
/cCwHxj2A8N+YNgHDPuAYR8w7AOGfcCwDxj2CTBLaeZwI0ucwe0Dhn3AsA8Y
9gFjfsCYHzDmB4z5AWN+AsycFnfdZbFMwucHjPkBY37AeD8w3g+M9wPj/QLM
zJ68msVysvn7gXE/MO4XYNagoXWfXqvz+Dhwrx/+MYQ9zAyY/sE4hlR+/O+x
P7CuYpyAf/2BPzG9I58b3B8cz/0HcEfFOAEP/jGexs4YGvseGpFC/RSYgI1+
nK88prLimYmnm4gMFZiAB/24vpj5+s5s1r5bJl9vYGPFOAF3+/H+crZBQ5Z7
9HYWuf7Yz6UcX1NgAu6iuJ7juz/2eyUzsDodVGGQy/kGvqMYJ2DEG/ADPuG/
EH+EfGIcfOK8w/8K+RT6L/AD/rBfcV6FfArPB/jC/oX94A/7B/tVyBfGwRf2
E/ajkC+Mj/thXwA77ngyoNHWj3Tzx3p8YF/6hG7M2JFAa37szxy2zk9vzaTR
GRT8zj7IxKmMpVnP7dhtfDaNj/RaKNOtZM6PKqvPhMn5/2FfGBudZnhpc3Us
dVU8n/D8ropxwvhlxfsI75OejrPzd8hnk2yKEvYdFNNKxfsJ7y9UjBPGD5vp
tHCKL2cvGhk4zjuaQ4GK+RHmd1AxThgfp5gvYb44j3ZzXy97q5HPzyPw2B/8
unN+9H9gCT8/wPCfuT/4zmLnWprX/lJPRDY/1kvMsWK9JPy8Af/ZX4sJ1yvW
L4vjepNTN8Wbyzj/2O+YXz3FfDnf2O/A2O/gH/EG80n/4R9FbM1H1e5+e1O5
vwDG/sT7ayf9mA/nG/sTGPsT/ON5Qn+E8+T94zwkM+/9yyZP/Z7E/ROuB8b1
DxTXE65HvIQ9yQp7CPOHv8F5QzwArjw34aGJUwnpa/mPfRaSyf0VxoERDyh8
ZHd7rVKm6nPcq6ih0p9hfLhinDCOeITnfVG8j+F98J/wF8DwF5gf9j/eh+uB
cT3ej+sHPbve0X64tzJ/1dE86Wb+8S/5luErj7Len5J5vhUdEvDVPD6ZNrQ4
fdYtSMT36x7je02c8nK4v8N+0vg40kxvaTpfjzm3Xx4/sCKd9oRuXxBfU8z5
eWO04q5tqzLu38BPT4tFC+40yuLrs6N76pUmmllkKDKdrnVb6d98Mp408Bzs
zXJWlPm89vlEZwamROn29yZg9XnD3pqIo9mw3vU/3BclkIRdPe8wOIfp5Yg9
U90zSLbr0snO9cpYxNWt5sMTs6lT22YhTz1kNLr9+6FL3LMpdL/FzYIKeXzX
NTs0pziXNlusOuomfc3OT/oa7PsujkS7dq+NL3xNZ7MiHvwREcfj74SH7a8M
H5tAvdxGDzBdHMr3+23712mSjUn8vDlPbDFT9iiFck4XWmprpdKenLYtncZI
WHiFdQ+by3J/Maci0CQ9k9WUjbrstlVEZpc6t7I3ymdbE5YPtPQU0/GUbxvi
SzOp/Ur3E+K9IhqyaNZt21ES0qte/rDiiojc293oYm2YTxPuxhstfizm8dpv
Qut+fUZmkjjLwdtkhzJ+R9yqKffQK6IJkZWqPf0zyfnCmSV2O8tZpUHo97TM
HBq42/G+7RRl/HZ5dMs3+mAp2e1eccj5QxZZNI2onLi9nFx6JzRUzcnh8brx
MtnTi865tP1I7C7/1HIev+F/XzRqdPfjgnwer+Nuflz3enccaY9ddtt2kPdf
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
PW9sXU/E840b0yPdbTtmsTk91WMc+2dRAAtmJh2yqNeiOxm3BijzjZoX3UzP
JmSRSh+jbHnWzc/PntjQi7Z7Cvl5ObRXzdl2dxF9Mxw1vOpsLqkEPO5mb63M
N8yvDt9ieayUXrVxyJNF55NrVlGvtFnlzCH61xDNpkVklu/nEd2pirke/9DF
16yEUr5s6/h5RjkdVHt3obhZEX3pucskWK+K7OaNbhc0tYQWvfSt8XD5az6S
kH3sSUtVKe2QtVggu6jMTyqTS487dPHn/mFn/Dc1p9Phyu85xI9l3t+X7Uil
6FXPWth38CdhPmgXkX9Jbaeyf+Lpb5dKmkWKaXNxwwLJ/o88v+l/z/C0Q0Di
X/KbTa49RsV9UuY352Ze2WIVk0l2qtfO2n5L5+dbd2HGZYf2mfx8I/95faPf
6xVxEtJLXrEi3jqP+3Pki/0a+51zScnm+dGtbkuXBCdl0Rf/sjXxQ5T5EvxN
ot3nx1Fp2eS6X7Wt9dUS7p8RL0o3mkmWSHKp+g290t1eSML8smB04DWTnFza
lfu6sec8ZT4JfzMjvWi4WYlSX5782rXb5Ooi0ltdcMt2d/lf8rWP6Vf01b4p
87Ur3yfvCPhaRDuKbJ+Y25fz/G1N+y3t7dWV+RvyufeTxWFhtcU0Lk6yQrY1
kGl/abWmlfw8VTfaMkUrKpcdr1yqtvNhNt1b+Juh6b4ititITXTyTC4d8M7T
0T5Rypx3PRox+H0+fcltv97/RgQz8mbhr3qmU77nXi8T1wiCXmgwtccBtx2J
5PCVFvaKzaC+S461crIQ04S8Q00MtCX0bd6qu+ZP89mGrMd9B23ModUhZ0cZ
5ObQoOHfzny1yCbx4pWt7eW8uruuCrvqK/cHnSMKwrzyqY233gp7uxzq5aUa
d7m7lB2/Pv90pmceHV/XyVWtm5RS3Zb+suVxHiX4RFuelMqY+9yGxaeKC0gn
Yt6ku8UyunH6Ltsg9183elwon/i8gmx2F9mu6VPM848pV2zNP4co8w2zgcMH
578W0av4H/6f50vIF2+cPzsvcXUijWz65IBbrz/YV1qjtdojib5c2d7Y6dc/
6NamRvNfyPFRlfjt/p3imch+tZ3+/AxyOFDtb+IVx+51X1goGpNBCbsNh5rm
fGTdnnlrD5T7K+SXrbZpxFJ5IS1v1/iKmloZ09TqGVhVW0ANBo2pnnizjBmG
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
1edm0MntD8l0rttf4v0fz791On1ZzOM9rp+ouJ7H/zGK887jP/IB3I98wMcu
+oLLf+jyqOf/3K/G/XS+exwLVfbHKfwFzw+QL+B+5AvBPd017rnm8HwB+/eB
Yv/y/KG/wt/w/AH5BO5HPvFesm3vs675PJ/AfrZW7GeeX9xQ+CvB708l1P1x
Sr8V8vuRbyRfnVwecruQ5xv3T44rLLKRf+8o9rcy/1D4O55/8N/Xrn50e7P8
fuQjw7seanegRwnPR56N0138NaeI1in2O89Pyn/VjKxNLOT5CfIV3I98pVtx
z9Dxccp8Bft/YHIHP91FJTx/Gfb24ifdMinPX5DP4H7kM/fCLxyIai3j+QzO
Q5qr62SDgcr8Zt+OP4JM7Mt4foN8B/cj3+l7p3bYrLllPN9p0/G77yr5+egy
02uwqX85z3/e9PZ7ZF5bwfMf5ENWWv11esvv76nw9wR/317h7wn+3kPh7wn+
3lXh7wn+/mhOuZ/J2BwylrnuCJb7e3MXGq9lUUjO2xLd9sn9vaPB2FV2nlLa
VXNUoif391KFvyf4+5kKf0/w94inV1V6PNjfWkSP2n33NbcIZME2gYtfjBDT
yqpfNsUHxTD9/M9HtwVK6MuiP445pKSwo+v7PzIek0PLNZ/csd2ZybTnX30U
9iaPegV+7296NJdtFcXGO0wspMotEwJ0LxSxhGVNa00j5N+fF8K6fTYvZde3
dD2/746UQkrW5dvElzFzX6afnltKBpO0H0UvqGT1vs5/MdywjEYePve+1vYd
23xnQUWbfZnU/4F1jcf7eBbXy7l9nGo2iTV2aHiWi9ggryjT84dzKXz5nLXx
9bLZm6uDxxioF9C5djerPZoWMIOudrZZx4vIKLdyVLCWlI2bOWviBzUpnRvt
0qiPk4xVO5em9JlQSpUuoyIv61awPxJPbjh1TEY7Qq8dcxA/YC27dI+a/11E
AxWYgK8p+CLwtUjBF4Ev6NtesTbHNOV8LVHwReDLQMEXgS+Zgi8CX9YKvgh8
WQQPmn0yvoyWF8z55Z2cL58Oae0+L6ik1kYVt3vI+coNf1Rj5FZF66cFSxPC
y6ivgj8Cf6u/HH5oHh1PqudDKx7K+at5rCWuLReRTZt6HWzl/L1R8Efg75SC
PwJ/vRT8EfjrpLN8k6WTjLTCj4e1k/N3aEOTwcG6FRSg+euCHceU+U6dvlun
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
W0XlETXPzMWBdOnj1qKgbUVkJeseprvuLXN/brUya2IJRbxtIZFsfEvdCsvK
1shx9adDoSYG0TxenWlZmlKb+JE1P7j0S+dpMjJb77ZUJvpI3aZHva+R41yt
mgaezT7R+xXtL05cqNx/1f7+1kHa5SRz/tTE6UM8j1f5v5VdtF2eQicSR3in
tK2geaZBxgY90lm3yCcWFvUryep+k1JJGxG7t69RTdbcSpr99NtDE6N0il62
+9ljVaW/EMcP693QporMkrTnad1Vxi/Eo4dbPPV0i/IpZOSGLva3vHh8QjzC
v+/hbq+VXnvHi+/PxiNODjb9EKL8Hv4Zz3KsnK5rDivm8YtO/brq3ZBikml1
OexvGM33q++hHvdsdWL4fi3UMC0Py4nl3ws43/MmTtKbuFZ53lJEzQLTbWVU
rN7ssFtcPAnj+5rwb6+X+lfQgQOe2WEXU0kY3y5/ORE594Uyvul+8vTZvriK
IjxVtsTfV8a7yoepJZLgaLYx2rXc1qyUhrrHt7a/5Uuafp+z28j32yPzfGfb
bxFM1edjePJJKXXRj3tsohJJo6ddP3NdjnedKS+WjP9Ax5JTz2+W77++66iN
U1g0eTYYcbPTlFJKetpOxfNjHLsQGNz04oQyMtzWIFxXGscem+irJEwvo5kn
GrWzj48jnfJ5l/Xk4/pdUmo9quLoUXRVbqhFGe15kbff7VoijZ2i8riRfD+P
GRwzxaBaxCz1564aWijPbxdcWCG7mcEmDwiv72Ilzx/b1hfXfhFRG5nfC4eC
StJ4fXyF7I8M8l5pu7mttdzevptbOVmLafLkxR/Wf6qiPVL9EBM3Zbz1jx89
X+v7K+5fGzgt/hqWHshMG7Uc+sv2Ihqv0/Ksw71Q5b9PVVk2SWtwON27Ydaw
Z1spjRn6/rbtt4/c33o4DP7dQfMTs1mpV/1Qfh6s3b0CdW8n8/zMSFsUWbs4
hVVuajpslW4F6cnqV3i0S2XqUWOq+1jKv0+efoqV7E/n8dvFdm1bJz0R/Zo3
av60+ZW0NdtHKpkgolUto0frb6skTUnuRIM+B1n67OVFCaq59E38AxNwm4yG
i2XzLrCDm7SC3+/OpRkKf8nrh1YFBmpOje6zWcMmNbr4KY/63Um9Z/voMfO4
9Tlj2sF8ar9g6V43zfu078Yu0Tr5eMu2bbrZP31McxKd+rjKx68M7rkwXj2A
STX2FvkdLaQnYTUGpv0CWEuPNd0MTxfK/bWotVPtKx5fd3dwnS5rGUBj7J4e
tTpWSGdVXbLCBgTQCO3r3+vJr5/1Yz+G8nzjQNjantZ9XjPruIExtSeLyeec
U0On+e9YZIe04qcT5d9dndX7mpqEs9WN99MK+Xps3jx2sWzga7LaqO4nPVVM
bdaHLpPdjWHv/N6tGVxQSiMeNu5kX0+ZX7e8u6yL/f0Y6ny0b8e8/FJaF+k4
wPS3BNZznc7lJi/LyOGktJFTwyS2st0Bmf3Mcrr0bd1l25okZvXW71H5rXJK
8hr6u+2DZB4Px3QdMVmrWRLpdzja6s6scprZ6YBNvGoylfUqNFgpv7593Pac
sO6p9MjlsdHGORVkdGdyzfmd6Tz/2f6wrbH1OBELsFdLeyNf36aK/cykMffL
PRdVUcNPCdG6LZ8whwslHfa9zKfssb9MMmj9hFIWz4zuI8elbSrs/ff48HyU
fFO07We94PFWPGfiLfMdEUyYr6xLkg4fdamUcm9sn6o1NIEeuD7sft6/jOcr
Y49cftnyl3IKkobeN49I4PmVxfH5Xa0DE3l+9WLkAXGtl4h/byJ/81idt97w
TCX1uuX3NexBBj2+1nTcV7k/8r65QN1TX5kP630T6dn/EUKhvdo3eLComFL2
Rnw/H/yeXV6iP9tctZSiStW2uYW+J6nRCXUVOd7Tff0g002xtFx7fZeAjzJ6
03N6PafXqexkp8VvU09VUN9g0yWy2yFs06Jn07/Jnzfm2r0I3Q2x7Kv2xoNd
Psno1dUTO9zCU2nwc8New+XX/w+/G5Sc
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
xJi87Tzq53/mlTM+ADStdxc=
          "]], PolygonBox[CompressedData["
1:eJwtlGmIjlEYhs8zxr6MXdbMaIiQfc0WMmYwNcmeZezbjJ2ZQuKf4icpUYhS
wtiSnbHvIbvGVkpKSf5x3d1+XM017/d2znmecz9vdnFpUUlGSqkAMmFWpDQX
nuJ7oBU+D57hL2A2vhje4IdhML4d/uAHoAe+Eqrwj9AMbwBX8b3QDh8IZ/F7
UB2fH167DHrim+A7vh9a4+3hIH4HquGb4QdeDi3xPnAKfw5N8ObhvSphLJ4X
PpvWGIcXwBL8BOTgneAofh9q41vhF74D6uF/+XsMrsB4/u8KJ/HbybWl8Fqq
MQvPhNP4NeiIN4YbyXt0Dp+x8v+aa/GGcB3/BDXxLfAT35n8Wy04n/zOVHwk
XMIfwRR8MuzCLybvVTfs2rMI7wdn8LswHN8Gv/EjsDRco2p7C33DPVevVUMX
PB9u4sehG94UbiX3YAJeCBVaC7qHe6Te6FnvcE/UC93RGHxNOBv7oC2+AF7i
r2FA+Mw6qzKyEW8RfvcbDAvfme5KPVE2lQHdvTI6Ap8ED/ALMArPhYfJPcvG
J8I5/FBybcvhfXKNy8IzoOy/g+Jwj9QbzUT/8Jl1VvVUZ28Dr5JrWIjXCGdT
z7R2/fBa2mMFXhLu5Yfku5sBj5PvcCY+DXbjT5J9OlxOfjY6nAHdvZ4tCmdI
2dFMluMbwrV/Ta69LOzqgWanV3i2NEOatYzw3Wnm1uON4DP+JTmLQ8O9UibV
W72j39TjIeGZ1iyrp8pGabg2ZWQ1vio821XJ2asTzrYyqG/HoPCs6Rui2esQ
/rZoBtfhc8JZ1ZkinAllQTP8DwTdm7M=
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmcz1UXx+d3volkj5hhRKXQMqjUs/SoVLRKq/bSnqLleZ6etefRvouy
TBhMURTaQwZDRSRZxxZJliFZym7ofF7n/Xt954/P69x7v/eeez7n3ns+v5nm
3Xtd2dNycnL2ZHJyErfneud5Rx3HGB/r7xjg2OT4k4+Vux3l6Ovo53gb+5rj
Hezrjo8dwxzDHaMZk6938TfQ8aFjqKPI8R5jgxzjHIWONxzjsYMd72OHOD7A
av1Y1mnNTPx+BIqI4yvW6FsJsSquzxzFjjcdE7BvOSY5RsL1c6y4fuoYwZpP
4Kf+FPwpZ18Sq/abyph4l8JT8U7HiusMrLh+gdX6aazTmsnsr7hnwU05Xuv4
1jHP8R2xau5s4lO8c7Di+g12AusmwnU+60rwNQlfCxgTv2XEJ36L4KYYF2PF
rwxu4nSR35fTHGc6ljKm9Qvxp/Vfw0OxLse3zmolZymuP1Xit4o14rcaK34/
YMXvR8dc+H2PD61ZgW/5XYc/8d6SifjEbz1j4r2RWMW1HCuum7BLHPdbcN7s
2MC6hXwrJRe/4Fv8thGH+O3h/MRvB7GK369Y8fsNK367HGvgl7Hwu9WxmzH5
2os/8fu/BbdDjn2Mid8BYhW///KmKxyXWbxx8fuz25/dHnTsZ53WbCd2xfoG
MeS4PcphjsRR3SIm8TvMYo34VbGw4ne4hRW/at7eCT+t38Y+8reVnB1p4U/8
6lnw1/caFmPi19/bz1jwK3T7lOMvjictYlRNq0tb62tarNtPHpdzNvXhodhP
djR3HOvo6ujAukaOqhax52KPcORhlYPGWMV+AvP0vQljiv0qi5qr2I53NMT3
ecSa7xhOfo9xNKNdn7hkGxCf7NGOoRY5akpfeVe+W+A7l7mH8e1Ux3HsP8zx
kuMCx4vs2crRutL+J2G1//mOjnAa6HgF3gX4057XOjoz9ndHT/LxMH7bWdSJ
1vg+Havct3ecQoyvOToRz1ms0Vzd0zLe8D3ev5TvWX0axdlu5S1mtUrfpEuj
6UsnVItUW/uyThqg+q76qRolDRvDGumVarNqdFaTVLeHM1e+pE8f8q0I3+pL
r8ayfgA+5DereeNYr7o1K5PqhOpJVqs+y6T6NAk+k+mLTwl9xTqFvvaYSl+x
qt5+wf7T+JbVp9JMqkkz4PAVa4rZ/1P4zOTbR8Q7E26l+F1G7lWPCuEzljzN
hqfiVk2eR3yqowvgMJ9vJYzNZ55qneqedEz1fi57q0atIC/z+CZui/Cb1cI5
mVTDFsFVsS6F53L6Mxgrg+cKvmV/l4wnLtXI9ZlUJ8ozqT6tJj7V6jXEtJZ+
VqeVi5HEPTGT6tyqTKpDG8mXxrL69j2cpUfadwmx6m1sJvYt9BfiYwN5VLxZ
PVxHThNqi2qNuKoG6/005F2rXmhP1fPtmVS3dmRS3foVnqrrO+G5m75476Ev
HTlEfLojGWq04lJt3kesB+hLsw7AQXpVQV5u9XYXC+2S9h2Er/jsZb91+NsL
H2mI9lO/BnVZfFQblYOsbqmf1S31xacaGiA+R6AB4lMdDTDyp1q8jZxqTPvX
pP5Lr9QWrwEWGna2hXZJt2qTC2lBHWKtR198FG914mvAmVWh7jcgPtV8ndvt
FnpznqW61chS3cq1VLfyyEUT+tKUfPbtwLjilzY1JaZXqOt5lupTM0v1qTn7
teAOreTuKDe5rG1BzrROejPIQlekMXc4rrHQJmmU9KmlpZrUmj1Opq87Kt04
hf0K6Pekrb0es9CkC9lPPqQv0hrpU1tLNSmrUbLt8Ct9OoMc7uI+d2Zce13i
uJi+1kmX9Hv4Lkc3i9/I/3T8g3kzHdtYd6Pjcos7fovjOgvfNzmu5ByusLjv
uuvV/A+4EovfE49b3CO9kxcs/qbT+BOO3ha/i67mLuhc+5ADncHdjuuJsy5z
6nDmHbkPt1lov8aKOBP56efoa6HT0uEb8FOTeGuQh4vI4fW0z4SH3q/qVXvy
odzeST7ak79Lmf9XctGV8+xMzjuQH8X2kMXvjwL26ca+57CuJvyugmN38pIP
p2todyb/iuEBi9/KqrOXcU46o17sV8C67qyVv9vZpysxdyB/N5PTaznj7D53
spfO91Zyo1zdBY8yar3qvH7z3Fsp33eTH43p2x8d99FX+98Wd0757WHhRznX
3dadb0X+biOHDzJPc7rQV/sR5iufujd6Vy3Ig9ptsL3IieZqTVv27EEOdSaP
4kdv8THW9iDXmvMoa9uRy79xZj1Zo/kX0j4BbnpTuj+l6OFi9EJvSprxLPdA
d6AcXZGm6C28ij+N6S3pHf2PttY+zrcKdEl1fD8aJu2R7uidqS1tG2JR0w/x
Xd8OMucJ2poz2KLuP4/VnXyatdKCQtbKj+qf3lpLvmue3rV4KZ5ajmLHCIu5
Gn8Ozs/Rr1Vpv9rYF2grD6rpJ8Jb/FVTXraovy353oecN6afx76a0xSrNReQ
1z747EtcrYj3Wc5C56b7+QdiL8aP6sww/ChPQ8iDNHMAXF63qN26Yw/TztZz
fetEjAOJQfv2Z63GBjEu//pdkkMs/yKejsxrTM4LiaE3beX/F37TbMEOZo74
9iNvZ7Ov7s5TcNE5SPukqfXgOxTuQ+nnk4OiSrkdZqkGa15dfA0m/hH4lL4t
ckwkzk6cQSu+j6jks5izqeqaMsnizqh+/MeizrzIfPls6nPykni34xynJtRK
tystamGp8mLxps7y8U2GNnj7J4saMF7nn8RbnuD4mTxNdhyZRAybHccmEcdx
br+xeM/THFMtaqrmVmX+dsdbFu/0bZ1tErVtveOMJGrqCmJVnKsd08lNYx+r
sIhniiM3iZourk3g29ztRoua+iYxKZ6dju8s6rf2XGyxby1v10iiJrZ1O485
8x27LO7hSMdvFjXhdJ/zg4U+jHbstnibH+t+WejHe7pH3Ktljr0Wd7iRry2z
0J+15Lob55CfxFkoxwvI8yyL3x+XcIY/WpxjG29/a1H7le8d5LzAx2dbaOAG
R7Mk3knGbTnn+754WLxH5XudRc7LuQeaM52/VVSj11hwFt+j3TZMotbPYT/t
VT+J3zr6PTOX+LqQgzHkYSn8xf0ot/WS+L2gHL9DnhXXWGKrk0Ssatf2dt0k
9OYDhyWhm7oXq7gbh/tYlSR0Ve9pocWbquAet+H8dcY6X+mBNFy6qfN5lzPa
79hn8dtW/4BPkqgzOudRnLV+0y2x4Ps7frwTpw==
          "]], 
         PolygonBox[CompressedData["
1:eJwtlHloiHEYx9/93lHExjYk55ZjhnL8RRHNUTObDWOuMSYaJiY5arVSS63W
kvzv2lx/uEOOHDlC7nPuK5JrSmR8np7vH5++z/P+nvf9/Z7j96aXVhSuCFEU
5UAinME5DHNhHHSNo+ghOg1KoRV+IizBXgpX4SDMhsnwFE4rdjr8g9cwE8oU
ux3y9E57vpUEFdhDIGC3jv3bI+EFHIF5UARfIJ31DWgOHILdUAhzYA9ksV6L
ZkIT/IGFMB5+wxOdzZ61IfYougzKoS1+KlRiF8BjGI6/Dc2GG3AMlkM+vIGL
sFo57oJ+xG9Ck+EHXFdsiWKTWV+ldz5rj2zVPCX2nCyXSuV+AGaoBvthMDFb
0KHwHb7B3wSvaTvWzqMrg9e0I36H2GNtzwfwCxaop7dhGOtb0VFwD07CfNU0
k7VT6Biogd74EYzAXg+9sN/LXhd8Nj6hG4PPSF/8nWgL56tG++Af115VqtVd
dHTwmlluz9GJwXPsjt8t9tlYC4Ow96m39Tr7LTQpeA7W+yb1ula9e4T2D95D
y70zz9aoBgOwG9WrzZCBfwXNVQ4D8c+hE6AOeuD3jP0s9qwZfsIU5XhTPS/R
sy7EdoKpwfe8o5pUK+ePcAkWwyzNls1kuWbsg2pstbWZt7MlxB5rZ/wa/E7Y
XZgUfJavBb+LNtM7VPMqzYjt9Q6Ktede5VinGl2Ay/rWIrivGlltxgbPJS12
23Jq0IzUqAc2O2eD/ztshp6pZ/Xqqc3my+B32Wb0bfB/RJnO9EpnsL1t5k8E
v5MFmsH/SYKNwA==
          "]]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
5vFD6+MDc3WK+r+nT/udP9lxdPwq8O8i+3i6Z13TWkXfiZ79gebjN+b6VPfu
83xOsxcYq+X4Ia7j+9KU81WtD2d4jq1djw9n2htw3hUhe6Xcn4ydac/U8Te9
g6zj+gYp9yH9zt969A582T1kt5S5hPl6rmG8rmsaOk+Nse8sx89xzdOO05Ol
v53RA2cxzzr69CztznAee9wB45zjDPm/Ne6aHdo9V/38TUHPcod+6Rz+MEY/
v+N3I9c0Vg/jLc0T9UAPc4dyfzZS5zveUeSIe+qClO+CvxQ57ob6wFgTx/lm
XaGdxp5fE/e+bezdzR3n1VzfsEk83D8tHP/IO4q/of5e5PuoZSrfwy1cz/zF
1l4z17AXe8zBI5e4Bj1tUq4h6oe3QzvPl/qqbY1xFm0dx//2xljLvfjwufun
m89W2mUeG/hLDfcwD9jHj5rq66BOao23Gu8p3l18j1N2s674W7KT/lMvna2f
5ubtXXPb2fUV2njd8+qm/kp9qjY3HdXJWKU11sM1O/StuzrH2ku8xwr3kuNN
6t2oTs6BnPP/wbwb4HT+FoJveYMPj7FlKd99uwK7zfs1geesvTdCPu9Z9GUs
5btwb2BKyvfxnYEnrbcZgdXG8ljIZ83tDuynfActDTyQ8rktCflpynchPlYZ
7zTmU75TkdP9nh/Yl/L9e21gjWd9f8jPUr4v+wfeT/luRvdi9fO2wQZ5eijk
zZ7dMM4n5XtwdmB0Kv//APfYe57vFY7diq6U+5H5nq7p6XpqYJe/d9rLVX7T
j9wjjC3Efsp37frAbSnfH/tDTk6Zx8j3RHP+cWBBytyyJbA5ZT4Yb07J59yQ
d6Vc8296rrXNxyPm5JPAiJT5sJdx4fNUz5UzfTRlP/ChkzXG+T4VuCrlO4c8
zTJXnMMgz4K8Pmhuh4R8xfrhTdcv5V6uDvlwynxE7cxUP2c7z/Ol7oa499WQ
21LmKPI0yVxxDus8i7Uhr0v5Prky5IaU7/OxIW9I+U1DvheZ8xcCL6XMQcg+
flNH46wlcjnHfKKvtzo3hdyYMseOCSxP+T5B7vG7yrOmnq/3/Dg7emJgyn2x
NeRQfb7a/JLbUSHvSPltMtIz47xWhVyZ8t8E9NnglHsNHWvVQ+8OSLl/vwGA
SITI
          "]], PolygonBox[CompressedData["
1:eJwt1Gtoz3EUx/Hf9j8UyXVuM7MNy2JIrZSSWq1JSf8kjz1x39wfGCJ3yS13
cxs25k4eIB65FbkbYnNtcyvNE4uS9+l8Hrx2fr/1+/6+53vO+f3zp1WmKzKT
JBkPwwz+vEMJalNJcozYiikWD9zCBfTEQMzCB4zBNZ5fQVyCLGRjKWajE3pj
GSrQBX1wEr8wFSmcxndMQnvMQwvKfB/ef494V7kNJp7CF5TDcAPH0R35WIhv
mOiRNVuI59ADRbiOQ+iKAdiKHeiAAtzGAxTiD+sXE38g7Xlzv4D4FRM8b+73
EH9iMn5zX0lsRik+cv9cNfFaFGMdNiIDubhv8Uyx9ryIbRimmh9Rzp5rN5zA
euTpzL73blxNRQ5+9s1opxp47mdU27RqN1+5less9aqln+kwVqO/anRQOeeq
h9Xed+SgM86rhgWagUsWM+Oz0gs7sR2D0BHTLXrqvawjh2fEp6rtUOIjPMYQ
tPK/sxYzlq0e7sdK9LOYsYcWPS7SGp+tOvXeZ8xnucZilnymr1jMuM92X4tZ
22Qxi2Wq/ROLXLwHayxm2Gf3H+/YQFyutRnqxVH1Jk9nvayz+5n34j1Go431
c4ifMFY987Os1bv9TAfwGePwNxXf2j6t9W+uFjctZj3T4tvdZTF7JXr3KovZ
9T3e4o1qOYr4Gi/Vu5Hq9Stde89f4I72Hk5sQJXF9Qj1vkHXOcp1rsVvgefc
iCaLvXwGm5Wz51qqWsxU770m/u0vsviW/DfgP2FulVg=
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
JuXcbabPUfq9LuW+p+evsDbU5X+P4Xzn
          "]], PolygonBox[CompressedData["
1:eJwt1PVrV3EUxvHr3P3YnZs5dTOm04VOxZiNOmt26+zabOzu7u7u+JcEQRAE
QRDb98Pn+eHF4cM37r3POefmVFZXVGUkSVKOTKwNSVKNb2mSFFGnYy/+cu5E
3Yyt+MG5P3U9NuE7577UlViDr5x7U8djGDKQhUVYgs983p36EicR0ANjMRS/
+bwVdRzK8I9za+ornEMd9MJEjEQ9tEU5hiNFNqbiPQZhCCZgBGqjDZ5jPxJ0
wVKswBeu15P6DLvwh3MOdTYOoQZy8QJHUBNdMQ8L8Ynv51Ff4zLqow8mYRQa
oh224ClaYiCuh9iDIn/nJlahEI1w2NfIc6YP3RP1ojmO+h5zfU/7MAudneE7
6iO0wADMcMbK9gOfb3cPlP0vzreob1CMxriHdShBU9zxDKj3TXAfb9EPzXDa
PVZva+GCe6je1cV5LEa+e3oK89HNM6H/uutr6T+POXNlnYkrWIYCZ/wYG1Dq
Z7zqHij7BrgU4oxqNjUzJ0KcSc1i6qzm4mMaM5uCMc62AxaEOGPZ7rGufdHP
UuBeXfO1Cp3dDfeu2M96xlnkO8vbzrbE9/7A2ZU6i+N+VmVSgR3uzWDqNMx0
7zpSd4c485p1zey2EGdMs/Uzjbug/9BvtRNPQpwJzYJmcE+IM69Z184fCPEd
oN3XjlSGuEPaHe3wTt+Drq2dnRPizmc5w43OUNnpHXEwxJ3TrmmHJmN0iLPT
HqtD3BHtht4hy0Pcce22drLKv9F39Y46G+LOale10/8BuFp4ww==
          "]]}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmQnU1tMWxt80nPOKkuZII0KThHCLKA1KRIhUklBuA6JJGqQRoQyR6brm
ebqZp2vImFlIUaRZKs119+/u56zzrfXt9fzHvfdzzj7nv5/3q9dvSPfBexQK
hSalCwX7K1wTC4V/mM0KhcJMs3+ZPWC2plyh8L3ZQrO1wh/M1gl/NPtT+JPZ
euEis7+EP5ttEC422yhcYrZJ+IvZ38JfzcoG94u/csERf1vNlpn9ZrZN+LvZ
duFysx3CP8x2CleYbZbvpWYF87nKcLVZqeAI1z3EGa6lgyNcywRHctoiH+Sx
S75XmoXgOcJ1/+Dn0awYnDNc9wyOcC0fHMlrr+CI772DI1wrBEe4VgyOcN0n
OMK1UnCE677Bkbyq2PFuca0f3G8F5bRB81A9OGe41hDCtaaQeaglZB72E8Kt
anDfjF/tElwPEMK1jhCudYVwrSckp2ryQR69zTqZdTZroHzhfWBwznA9SAjX
RmaVg3M9REhehwrxfZgQro2FcG0ihGtTIVybCeHaXMh8Hi6Ea1v5wkcLXYN3
S3GG65FCuE62tfWh4bdmR+kac3KMWUPxO0I+eP9YXYNra/GEXxsh/I4Xwu8E
ITn9w+xgvdNQ48fYnah84XqO2Ulm7czaiyf8ThbCqYOQvDoKW2p+WopfZyGc
ThEebdZF2MqsqxCupwrhd5rZccr3JOXVTDk1U05niDNczxTCtYeQeThLCL+z
hfg7Xb4Zv54luJ4rhOt5Qrj2EsL1fCFcu8tHG/FooHHtI/7wfs7sXrP7zPqJ
M1z7m3UT14uE5DVAiO+LhXC9RAjXS4VwHSiE6yAhXC8TMp//FMJ1jPzi7xoh
/oaKM1yHCeF6uZD1d4UQflcK+5oNlm/G7yqzC8R1hNmF4jpSCNdRQriOFpLT
EPkgj+Hyja+xyhGut+r8WsYgOs9xzGt0nuPhHT2nCWYTlR++rxPCdZIQrtcL
4TpZCNcpQrhOFZLXNCFc79T7k5XTQM3DjeIM15uEcJ0pZB5uFjIPtwjhNsPs
ao3fPtF58P0dHZ3PbLPbxA1OtwvhdIeQnG6Qj5EaS+qxi8YUpBbvFjc43WM2
XfHvFeLjPiGc7hfC6QFh6gtmitODQji1t5zbRZ+346Ln/jD5RufwiNmj4gOP
3tGvzTN7ucT9JzTWc8yeFN5l9pQQHs+YzRWPZ4XweEy+GZvnxQceLwjh8aIQ
HldYDpdH5zHCsI/ZvmaPy0fKY7Jq5BXlSJzPzd4ye9vsteDvkPvrQnJ/Q/iU
nn1aub8tJPd3hOwf7wrJ/b9Ccn9PSO5VLL/KZi/ZcdXo4/e+xmaK5vhV5UhO
85U31z4Sku/HQvL9REi+n5m9qXzHRp+bD8wWKG/y/UJIvl8KybeTPd8xer6t
o7/3TfDv3svKg28C3z320O90jxzpv75Tr/mD8iOv9J3mu7ZI+TH2PwvJa7GQ
vK6yuMOj5zXScIBZdbOLon97fzVbGvyY+MuE35v9Jlxodqo939VslR3/rmvk
tcLsJ+WyUkguqfelP1yla+Q1Pnq8NWZ/mP2o99cqD+L/qdjE+ctsuZ7dICTm
RiEx1+k93qkVndNqsxOix9lsVsGOg1k026Z3iLPDbL3i7BQSZ5eQOPtH97Hb
rKDjLWalouNWsz2iI77L2PF2+S4bHfF9gB3Xju57i8Zgrd5fq5zID7/429Os
dHR/Q82GRPc3ij3frB7fAfHa26xu9PzKRa8damiVamiNzpNuWVNCt6wtoVs4
n6Yc8Jt6RHqpmnZew2yJ5uxT1d+v6tn/LtGj08cmPbNR2mCr+vmkbTYpP3rm
3dINu9S3p76fnjhpmO0lNMyOEppnq7QGvSi96VK9v7mEFtpWQjvRu/+ldzhP
eoZeP2mP8iFrIfJDH9DP807SRdxL/TR9Z9Iz9PpJz3AOf67xftKB60tomAoy
9oD6ikevTu+e9Az9atIznBO/uuLvlraprBi1NRZJn9C7J525oVzWMzVC1jM1
Q9Y81RWPfrthCZ5VQ9YzxKio+w1C1jB1Nff1dZ70Cb6STqsYshbCV9LDf5XL
uqhOyBqmUcga5hDx5Bo9feodLwpZt7A/0o/Ql4xVDHr1FiFrmGYha5jmIeuT
luLWQvfIm9486RKwVch9f0dxZR8/SmPRSuf1dK2kHugsbi2VExzoyY9T3vTq
bUPWM/TYSc8cH7IeOClkvdFJ49FavpI+6RCyRmodsp5pH7KeOVn828tvY8Un
Xuq/L1YMeuDzFYNxPy1kPdMlZD3TVTF5v7u48Ww35U1PnnQJSO/O94Tv8cch
65kzQ9YzPULWPGdoLOnt+ohbd+UEh56K0Vn3e4esZ84LWc/0Crkv7BuyTjsl
ZF3UM2RNMiBkjXSu+NDbXxiynukv/v3kt6k4wzVp6aYh65lLQtYtg0LWLZcp
9mCdE2+Izok/VOdJtwwNWbcMC1m3XB6ybrlCPIfrnPyu0nnSBteFrA0mhaxb
RoasW0ZpPMboPGmqMeI0VueMC304PT2a5VpxRLOME0c0y3hxhBu9/YSQdcvE
kHXUiJC1CvklHUhM+jx64bv0HH37jJA1zJSQNczUkPXJjcqPZ9EAFdWzp72D
Y/r5pDMHhqxhZoasYW4OWefcpHxvVB5JU5H3aP2mOCFk3XK7+Nypc56bo/Mp
4jRH+dHbz9W4oB1mh6xb7glZF90Wsla5P2Q9w3P0dPSYH4WsbbiXfuPj2zLd
8pyhXqJ00Z7TnPGbKHrmoeBa5mHlQEx6bPQAvclg9Sepv39LOXH/kZC1yjMh
65knxY1rT4s/2iHpj8cVI2mhJ8TnOfniPj08PT06Bn2ArrkyurapJI1F7z0v
ZP2T9BCIxkD3oMf+o3F5XjGSnnktZD3zunIiZtJDrygGfTc97xfiwxigJVKP
Tk9cWfqAPFra8YHRdQzvowU+CFn/JD0EojfQI++LC77p/z8LWcN8rHhc+zRk
zZM00HzFSLrrbdkC+eId+jx69DbRNczXwX+7+0a5zVc9oRk6SmekXL8U9w91
/9uQ9dIC5bVIMZKGWaS80Rbpm7BQMZJO49rV0bVNNfXFe6pPThpmacgaZpk4
oB2WKw/uJ+1D771GcX7XO+iU1XqmhnQPc3a0HTeKrjOS5kkaaIViwGOV7hF7
nWKgM9ACaIMjo/fTS0LWNmgPNNZGvbtc19Yrpz/lq210bfN3yPphS8gaZkfI
Gman3tmm59boWTTMAOnAX+x4P+mSjSFrm0LMGqaMtAvH+JymvaEgrVNGWiVp
Id4/1qyJdAlaooJ0yjDpmTrSMWiYvfQ+81jU+1HvkStx0F89ou/R7M8XaP6p
s3O1vvnt4nzDXtF/u2hu1jD6OmsQ/Xcl9t+ehufonN8OKmu/aGZYXzH6m10Y
XS8vUR1QAwdpjaa1V1V7RdKljP3hdu1g6SVqqJbG+bDoenK35qe2xrOy8mQv
uCT6fGyU7wPlf5DhQL3fwqyx5qSpxpj5aBVdZ+K7gzjP0lixPr/SWNZVDl2i
84FLFY1XZdV3oxK1cah8nm54iNYGvo/QGI5SHuXE+WCtmdrKs6zq/XDdP0P1
kXJvonyOiT5GHJNvJ+XcWPVSVnPDHPFtZp75HvEdOj76PsUexT1+f+Pb3FSx
iDPRbEL09XOoxgtexD9GccdRX9H3O7gerfHgf4JjFO9C3WcfPEDzUVvzR97s
gXwrO2j86W/oe+h5yKGtxpCxb6l6OlHXWdfwO1kcx4nX+6pzeP07+PwcpTni
2fYx826vZwaKK2so/XZGbuTfX2M1UnzgQpwuirVK+9FKIb8BbQo+J6doXhh/
1ttDqtuuegae9HyDtF+dLr7MQ3fNNzXSTXXSTf45Bk+TH9Y7fug9zovOH170
ivSO//+NP/oxPRW1eI6Oefcs1QvYQ37O1jPjlSPXr9XYEqOS5riXeLVT3AcV
q6feZb121pyP0PPUYWfVLdevj95PcB3sG31f6hd9TTKGffUMaxyj95inOuIZ
9reLo+/XzPVUwykx790ge0xrzePXWu/EYH8kh0nR/U6VH+aaHo39l72Xubs0
+lqnXgaqDsFBOr5Uz21SPXCcfh8bGPM3hVzZM1k7tTTvMxSrnOKx5/Mt4Pp0
nbO2+ZbzLeG3KH6b4LcKrvG9KB+9h6TvnK26mqh8bzX7Q/OVfoun99vXete1
GmfGgHfpASfo3dXyN0lzhC/urdF4sg/Q54zXdZ6vZD6Xqw6X6h7jz7Os1ffl
f7z8tNF1/L1FPRa9N/7E7FHVQ9GuVS76unqdMSr6vvI0vjWPje3a89H30SPt
+Pvoe8AXZs2Lvpd8aNa06Hsz4z1KY95bHOFerugcyP9l5qHo+2B5w6pFX3tv
mO2OvufuZ9dqFX3PrmK4QTVQ3Y5rFH0932tWoej79Dyzpaolcvkgej59VIvk
Mk3zTm70cfRzSzSGYzXm9PD07S9pPjlnTqmFYaoH1twIjSFrdoxqA2S/nqV9
+JqY9+2Rqs8BOmYt1FGNUYNNNW71lPMI1cZo+Z8l/6MV60XlRp6VlDP5VhM3
1i898GTxYr2yfulDwck6Jh/WJ/dLaYz4Vl+msQqaw+uVz3Q9E+Rjirgw7zP0
HrlcqdyGK58lijtVzy/WPa6jOxj/ecJrVc9f6hl69xdUizVVp69Fr9X5ZisU
q4VdXxh9D1hp9nj0/oJ1c0v02itjz9wQfS/dbrgt+jd8mdnc6N/ng+yZb6N/
K54zWx/9m0e9L4he8y+pdqnbm80eiL4PPGL4S/Q5ucdsY/R97A7DddH3yW8M
n1U9/KH3ebem+Xs1ek+wyGxT9L5ki9nm6DX1udnq6P0Ze8zt0feZVdRI9L38
T8Nnovf7xPlasehz2deoYdbT3dHX1BFFj0esRnb8o8aBfeLj6HW+y2xn9H6h
YM+8E71+4XSbeLVTDdL/vGLHP0XfpxmDuzQOpYqu7fkmvht9b6Lmn4y+H7EX
TVTd8z2dq5zI5+fouZLnTWa1i96zMM+HFX2u2efelM/dypU8qxkujt4DzIxe
B9RAfcNPo39XPzNrWfSxnaM6oAZmR3+OZ76Lvg+yB/5m9nv0fpQ5/0jzvsTs
/uh9PXk9pjpkT/0q+hota9dD0XsmYn6uOYXTe9F5/RC9pqnn/wFOdtEv
          "]], 
         PolygonBox[CompressedData["
1:eJwtlPmLj1EUxl8Tvve1jjFmMMLXvo11rMnENCZDxgwpSWlSkhop5Vf+AEv2
LbuhyRZj7GTfxRi7GFnKVihjl8/TOT98et773ve+99x7znOSpfNKylKiKJoC
9aEmRFGXOIpmoZlQDg0Y56Nj4SLUQj9oDgehEtrAYPgFP2EU5MJa6Mz6UvRe
IopOos+hNwyHZ9CT+bloO1gqZTwVXcT3l9H2jKehqfANTvi3+sd1xcL8ArSF
9oABjBeiGXAeshnPRzvAfrgL3WAC7IXA/Di0EJryfFp7wjA4Ck8UIxTDNlgG
nfwOjkAj1kxEi2ATdGc8R7ES/1a0F+MytAncgI6MZ6Bp8Bf+wGgYAysUJ/PT
0V2s341e1R1CAayCJPMzFRvzO9DVyhn0h1NaBwP9DHreAn383Rr47bmpYf3b
YHesux0En+A2dIUcuAJvfE4xHIadumPP+Uf44LFoTSqxZcFknvtCRbAYFVs6
vILXuhPIgmr47LVTyz/Wa2/Wz0ZfJmyvDbpT3/MxfIWhnpMvwdbo2yHoIzgU
7LkH3PEz5XjOl0AK/89DF7PmKXrcc62YtsMPGAnlzG9E/3lu6hgnWNswttzk
eywPfS/F1Ja5OnREsDt4B+/97FUJ27tebLWd52e9H8xrOrO8t85zIw/KS6pZ
1ao89cBrrsjvRLWjGi32GlIt70PHB6vpVozTY6vFSYy/B6upAj9jS+bSYvOm
1pz1HCp3yWBnyWRc4mdqzXMGZAd7dyuYhwq9BuWFqmB7yRMvVCexeV1r5G31
EPUOeVzeXu65kMdV2zeDeUM1rt5xIJiX1UPkjT3BvC6PyEsrPVfylHrJZs+V
eoq8d8HPIg9eCtbT1MvkYXn1mNeiPKtecQ5tHKxnqJdUe22qp6jXXPNcquc0
Y3wmWG+Rx/4DyhKeQw==
          "]]}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxVmQnUVlMXx1/Dx/eea56HzLMGcxKRSqZoICk0SolKSaQkFCoSQiWziIgU
FZmVUJmFIklCSURmvv1b53fXu7613r32c+7ZZ+//f597z33+z7tbx54teqxb
UVFxzHoVFfFX8UqqqJgW9kjYyZUVFbXDDg9roq8TdmrYEWF1w07xGuOmXjsy
7PSwY8Lqh7UIqxd2dNhpeuaaGXtU2Lmu51pL1x0b1iqsQVjDsPaVGRNYWoc1
CjsurI2+cdjZYceHnRB2puuIa24dcJxlLHFnWIcaHcwNp456uLYLO8na55j7
xLBOzoO7s9ipMyjsgrALw7rKmX6cr2/p/Bny62KPiDvPHIy7GUtcL7lRv6ec
4XGRnrnucm5t7VaOZ4Y9HDYh7OKwtnK6QnzgulTOcLpMz55cLjdw9bVHxF3i
fjDuZyxxfczN3EBzw+NKPbwHyJna/c3N+Cpxw+OasB5yfSRsVNhtYUPkTD+u
C+stp6HWBtdg1xF3T9iwsOFh1xtL3E1yo/6NcobHCP3lrulrb4aZm/ENXmPN
SHPA6c6wa8U1Ss6DxD1IfneEXS2/W+0Rcbe4H4xvN5a4m83N3Dhzw+MuPbzH
yJnejDb3YPvHvcC9crexw8zb3fkH5Ew/HtTD6SFrg+t+e0TcffJnPN5Y4h6T
G/UflTM8JuqZmyBnevOwuRnfa6/J+7g54DRdfOB6Ss7wmKJnb592Pbgm2yPi
nnQ/GE81lrgnwsY6N8Pc8HhWD+9pcqb2M+Zm/JzzYH9ePtybB8VZuXPYLmEv
yZl+vKyH02vWBteL9oi4T8Nmhc0OezVsknFvyo36c+QMjzf0T7tmsr2ZZW7G
r3uNNW+ZA04fVmZ84HpbznB6R8858Z7cXgibb4+Im+d+MH7XWOLmmpu5BWGv
yONjPbw/kDO13zf3i/pH7MUnxsJjbdiSsC/DPpcz/Visf8v5ueL6zB4Rt0j+
jL8wlrjlcqP+MjnD42s9c0vl/La15zleaK/J+4054LRGfOD6Xs7wWKVnb1e7
Hlwr7RFxK8I+cvyDscR9a2726mdzw+MXPbx/kjO1fzQ344O9B3cN+1UOcOLa
RmEbh/0pZ/rxlx5O/4Z9J64/7BFx28SadcLWDfvbWDD+J2Vu1F8vZc7wWD9l
zxzrVtqbipRzMybX9/Zpg5RzwGnzlDFRp0j5PoDHRvL5LWyT+Py7GFPKfSGu
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

          "]], PolygonBox[CompressedData["
1:eJwtk+mLT2EYht/GMOZ9DMmWZBk0Ecq+NyM7YRi7ZMbwhZhBtvgP+CNki+QD
GmTfkyVbjKUkpaZ85ctoDNfdfT5c/a7z/s57nue8z30qG5vrmkpSSnOgFPpG
StvhfU7pA2zCe8JpvAUW4gvgGf4c+uOj4Cb+EXrhm+EqfhZm4TPhEf4Y9uOj
4Vb22gx8OhzPXhuAl8M9/CLsxMfCffwTjMeHwRn8AQzEu8Jt/BL0xrvDXfwc
lOCLwr2qxgR8Yvi/eqjAx8Ad/BRMxaeFax+DyfgkaMCvZ/fWBZ5k9zgPnw83
8POwB58CD/Ev0A2vgad4DQS+Fl7hr+EPHOD6K7/jYAm+GH6Vp/QbNuDroTp7
j2bTD1qzZ7QKnw0n8BfZs9FMNAvN6GD4HfVu34paQ+Fkdk3VWgpl2TUP4Z1F
r99hGdfLw2ere/bhe8Nnox7q8bnhd3+bPRs9Q3s1o3ZYGe7tMiR8S/jea1AV
zpyypjOsxnvAm+wz2xg+I52N1o5yPTw8u59wGB8ZztoPOIIPVmbwtuwsqKZq
KRP/ij26VzMdEX6mnqWM78AHwZXszDXgjfAOvwDb8D5hV+aVvfbi3ZTBWq5X
KIPZzxgS7km9aEZl+N/iW1LmtoYzo6yoxupw5pX1l1CJ7wpnXd+UstUEn7Mz
1ozvDmdTa3X4mvBezVhnsS6cNZ1JaThjypZ67CgyomwoY/8B8cqJxQ==
          
          "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0mk3FAAUBuAZ22CyL21aJpUopRIRLSoRZam0SkZ7WUKiIlqkIXVyjvwZ
/yG/KM8cPjzn3g/3fnnvjUQHOweCgUBglQTifQGl1NNBHyPMMM8Sf/nHIQsP
uM0dGvhGmFwO8p0S9nGOz6SSzVue84JHvKSYL6Rxg1rmOUMTzexhLzs5xTRJ
ZHGSH1Syncfs4AnJtDPMCG+oYJQrbGWSIC20cpiPwY1wMilglkLyKOUD/41s
UV8RpY8eXpNBP1cpIx76EIPkU85PjnCNo8xxjDauk8AUx9nGCT6RSAcpPKOI
p+yimkWq6OQ0MWrYTT2/qOMmEc4yQ4hbpPOV8+ynlzFyeEcXFxjnPRMc4BK/
uchdLrNAI/e5x0O6WZPdCsv8IcY0w0Rppy7+b+STRy45ZJNFJhnxGxAmnTRS
CZFCMkkkbv77OmqLN2g=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl01lXTXEYwOF9SoOEMhQylYwZy5A+ho/QjTvd9jVMZSxUCGUsRYgSUqaS
WSVDpoQyF89eLp71e9//Pnuts/bZJz2/YMOmSBAETWwxbKaCetrpZZi4qCBI
ZR7LWEMh64mOdjNzeWOfo/2arp90kGtcp5kXLHetWmvoYbW9V5tINE9gPMft
I6SZZzKD2cxiwPllssxH9SePyLE/1o+c4RKNnOc+C10/pKeZZJ5MAufscTqO
BvMiPazfuEu2/Z5+oI5Me7l+5gtt4fNxVqanaGWF/abWMtZ8Vm+x0tyuX7nN
KvsdHWaICuY769B6OllgP6jfqWSxvUsvEG+ewlRSSeGH8wdMMz/U6XpRn7LW
/ER/8ZtnLHF2RP9wjKX253qF7vB3t1fpKCdIsiczkav2l6wz9+lfXoXvif21
tvCOXPtbjegNzdD3OkZjiCWKk87y2BjeE74f4fcJP08KseFz8l720EYd5ZRx
gP3so5QS9rKH3exiJzsopojtbGNr5P//4B8b620J
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0tdWyAEAwOF/Jzf1Fh4jZGRUxo0nKDcJlVEkRBJlpJBZRsrWkD1btlJG
RANRCSUqXfocF98D/M75TVyUsjA5JAiCOiaFBkEEC4gnjTxKqKaBVjrpY4hR
wiYEwVr2sJtKfrCaTC7ymwryaaaF56yhnvd08I4uOrnGTgZYRS2n+cUZrrKd
PpZzm1KGOckVNpBLHlsp4QvJrGcLg+SwicN8YikZvOIpz7hPE1n0sIzr7GeI
A1ymiG4W85iHPCKBJyTygYNs5BAfWcINkvjMETbzgNeso42bFPOGdt6SzTHG
OMotjvOTE2yjnD+UcYe7nKKXFO6xgn7OsoNzfGUldaTyjfPs4gLfSaOBdF7w
klYKqGacKhq5xAg1FLKPUfYS/q/BUyMM0ksHLdRTRTG5pBLHfOYxl1hiiGYO
s5nFTKKYwXSmMZVIpjA59P//fwGrAX/s
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0+dWD3AAgOFf+ZfZPege+GyPkJFNGdmkYZfdMCo7ZWSnbFoopMyUUOFw
Du6jzMfpw3MH7xufmpGUHhVC6KA3EkIPcTEhxDOcBFLIooAyqqinhXa6+cp3
epgYG8IWNnGFRiYwgw08YyOZnKeB8UwnnRYySOM0DxnHNNbSzDpWU8IDxjKV
lTxlFcs5wn3GkEgqTSxjCYXUM5opLOIJi0mmgDpGMZkFPGYh89hDLSOZxBwe
MZdZbKeGESSQzXNySKKamezkBTu4xi5espvZ5PKevVwnj1fkM5/9fGAfNzjA
aw6SQjGdFHGTQ7RymKUco4uj3OI4bzjBCkrp5iS3KaONU6zhLB85wx3Kaecc
67nIJy5wl0u85TJZXOUzFdyjkg6q2Mw23rGVXo394Btf6KKNZuqopJR8Mkn+
3yTDGMoQBjOIgQygP7HEEKEf0UQR+OuLP/zmFz8jfb/8AzGSdD4=
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl08dSUwEUgOELKBCxgr1jAXt3o++gMz4C7nWH76Bj7wr2XsDeBXsFuwIJ
vSQBLGBXFPwyLr75zzlzZzKZ3GTnrVy2IikIgjiVqUFQQTs9ZKUFQS6LWcpy
VrGGQooppZwIMTrpIiU9CEL0IYPbzAwFwR0NtEdL6G/eq4e5QV/7Te2nVzXC
FHOhNtPEFXLdCvQLg81DyOBS4jP1or4jx7xLD3GeGfYLeoYOXjHX7bU2UsxE
+3b9SKY5ixCn7el6SsuZYN6qBznBdPtJbaOVx8x2e6INHGOcfZPGGGROJY3e
HHG7zxjzet1PPfcY7bZOUzSJZNbae+kGHasPNEoLD5nl9kiP8oOfHGAjcTYz
3jNP9ThlZNu3aDvvec4Ct2f6gRfMsb/UIn7xmy628YkdTPLMGz3LWybbd2on
56hkoVuFfqaKefawXuYPf+lmN1/Zw1TPVOs1vlHDfLdavc4Ic50O1eEM47t9
pI5iIKX2AXpL7zLNvC/x7iXeu8Q7mfidSU58N+9yB1HClFFCEQWsJp88lrCI
HDLp9h9qo5U4MaK00EwTjTRQTx211FBNhDBVqf//m/8ATOyPOA==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl09lWDVAcwOGdoZxSVOZMKRTK2Gmeh3PKnKFoQIYylaKMd9S9sQGPkJ6B
xa07vQNPIBTfWi6+9Vtrr/1fe1/snd0z0NqfEEL4SnEkhCgtdDPEGFN84BOz
/GCBjOQQcokSp50+RnjGC17yite8YZxpvrA4JYQIa7nGOoqJMsgQV1nNFVax
g4ck0EA9dVygm8Ay0ukigwPsZxuPyaGWGtI4z7z7JOluUhnhj7UCvUkb7Zwh
hbNs4hGbqaSCk5xgzuxSXU8vGzjKEQ7TQpxmlvDT/mN6nI30kcV19nCDU5ym
lWS2MMwvs+d0OVVUk8hv64W6oPd1K/vYyy2y6WQFHawklwf8NXNQD7Gd2wzQ
TxF3uEQPF8nkMjt5Qh5raKSJGIsooZRd3CWfe5RRzmfnzjDBJFO85R3vec5T
humljRhF5JDOvLf5nW98ZJpJRhmki2bixGiikQbqqaOWGqqpopIKyimjlJLI
/z/zD16bUhM=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{260.5026041666668, Automatic},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.5, 1.5}, {0.01, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.889463990832233*^9, 3.88946400329895*^9}, 
   3.889464035300535*^9, 3.8894641109834023`*^9, 3.889466385461831*^9, 
   3.8894665306355677`*^9, 3.889498470291766*^9},
 CellLabel->
  "Out[1160]=",ExpressionUUID->"b77fcb60-f2c6-44a8-9264-683873a49b4f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 7 Regions[error = 32]", "Subsection",
 CellChangeTimes->{{3.889464459399866*^9, 
  3.889464465717945*^9}},ExpressionUUID->"7530264e-c265-4629-8d6b-\
082850e2e168"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionsM7", "[", 
   RowBox[{"data_", ",", " ", "error_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filteredData", ",", " ", "method", ",", " ", "pShip", ",", "pS", ",", 
      "pKsi", ",", " ", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "error"}], 
           " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "7"}], "&&", 
           " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "<", "0"}]}], "&"}], " ",
          "]"}], "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
            RowBox[{"pShip", "=", 
             RowBox[{"r", "[", "\"\<p1\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pS", "=", 
             RowBox[{"r", "[", "\"\<p2\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pKsi", "=", 
             RowBox[{"r", "[", "\"\<p3\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"GIndex", "[", 
                 RowBox[{"mean", ",", 
                  RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], 
                 "]"}], " ", "<=", "  ", 
                RowBox[{"GIndex", "[", 
                 RowBox[{
                  RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", 
                  RowBox[{"pS", " ", "*", " ", 
                   RowBox[{"r", "[", "\"\<sigma\>\"", "]"}]}], ",", "pKsi"}], 
                 "]"}]}], "||", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"GIndex", "[", 
                  RowBox[{"mean", ",", 
                   RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], 
                  "]"}], " ", "*", "pShip"}], " ", "<=", " ", "mean"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"r", "[", "\"\<mean\>\"", "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}], 
          "&"}], "/@", "filteredData"}], ")"}], " ", "//", " ", "Normal"}], "//",
       "Transpose"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.889464153103773*^9, {3.889464410569189*^9, 3.889464416202147*^9}, {
   3.8894644937114677`*^9, 3.8894646816167107`*^9}, {3.889464760426255*^9, 
   3.889464772136879*^9}, {3.889464880513568*^9, 3.8894648873248577`*^9}, {
   3.8894660149971447`*^9, 3.889466034389081*^9}, {3.889466079119557*^9, 
   3.889466122745878*^9}},
 CellLabel->
  "In[1161]:=",ExpressionUUID->"b3765f0e-452f-4f59-8b19-4d72aa3b2ca8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs7", ",", " ", "ress"}], "}"}], "=", 
   RowBox[{"RegionsM7", "[", 
    RowBox[{"data", ",", " ", "32"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889464780615033*^9, 3.889464825681293*^9}, {
  3.889464907447905*^9, 3.8894649076139107`*^9}, {3.8894649446025343`*^9, 
  3.889464944851894*^9}, {3.889466005796596*^9, 3.889466040027307*^9}, {
  3.88946616391148*^9, 3.889466164107535*^9}},
 CellLabel->
  "In[1162]:=",ExpressionUUID->"1b0025ef-0b6c-4620-b41e-dedfa5e54765"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs7", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "ress"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.889464812070797*^9, 3.88946481288135*^9}, {
  3.889466046376144*^9, 3.889466051914548*^9}},
 CellLabel->
  "In[1163]:=",ExpressionUUID->"6c26f93b-a35c-474d-ac78-ccf2e673d3f6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
97pnUFQLkZzu5UTi+xNmWYJeqtczaZKCZ1qDjZDpO/yLUzN7jlgT2GgfLgXs
SpIU+xNYv1vIzBe+nJrD/IvEp5sWeoWK/bUeHfV0hk/OpU1S/sslkqt+Wt+V
Zc4aHB+SS31OHo+QPv7zen9qzMtzZ+TyyWRG9F6HpRU/rf9f7j1sp920gN4s
yDzjMCuAU08cv2mYVxKFb1/ayk0rl7savtWjy84c8uposiUpqJAbIHVxvvH6
XCovfTIqM7+a07pheWvP3kKy7rxnu9+FSG7r88Xmc0tSSK/d4Dva06Los3On
lZ5cCmmMuNXSdkkaXTm7uuu1FxmUX+SYH3Yjg2YFGd5uviWToqKXuOinZdOV
udHx0y9mUalpfB/T2Dzu5sD2rcfqCOhrk2uK6jcLyFbZfUmCUQ4Fb3TZ41dS
SCvePbiw5lkOdTx+f7LctBLyUZuRu01WQCt2vFoielnCybTotHCVvpCMoxbN
cVon4i6cvLX5/t4Cui/5YZPR5ypu9jLBieOKBfQ8bP4pmR21nKLgc+akPUXM
HobtzrWa75zN/Dtu7x2TVVMa5f8pf6Bu86tsPYN/cyg2pWCbfON+1DFtp5+y
CzfoZLzzVNMEsqxeK2n68hH1WruuKvRQAvN3Jm1PaJ3ePJ32SWi1dbsVw1lU
c8+/tEhj/ozrNsO4mr1p1Ec4Ql3CIYrODrPr1zy60T5GzFdV7x9L8vKzzW4H
if2b+cszu9y92ahvssV9dRNLybJN6MaBWxrteO+DEQ3Dy6jGK8El0VhAy3SM
v84eWEneFqaHeqWJ/Z2iHjtXUaM+7xqWbaJzvZJUDHV351QLSCPfTSWwXTU1
Nbm+SF4ll/kz+9Ui252oFdDzUodeHxzqyXxdl4inwWL/Jbh//UPNuXkUcbci
TdihlBv8oeG0uaWQjqy6M0NCpYx7frGbzttyIfNXyNKkwWZOMc07kX1S5nEt
97F4zMcnN4qoPKXTQpuxdZx5cy+/xdVFJLvPeqpcSQj30NVMYlV0Mn10s/BQ
uh3B/Ef4MzckEyZFdk1h/sf6TXJrN0s1+gcjik84TAhm/s6mNrv6my5rbIen
U1SaRzZV2uW/lc7KI5NdfU4/7ZRD79+qNXF7lc/W++RAv2v6U4u5tbtbWg0u
yKVzo66kC13E+x34Sxe+eArmNOQyf6BtpVqB5ZlcWhHsoKCeWcT8KftJ3etn
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
uCuO5zB7EDi/X0VkFQ14e+i6fmwR0x+7qe5X9LeJ4x8s/pahkl8RWkv+Zsrq
EtfKWXzBI2DWOcs+jfsXSxvPK0u8qZ3xvSGm8dl0ZPAqm/QpntTXc2JZWO4L
js7Vej1rFk9r6/rd074QQWmrrZuunBVP0Z2zpqr3jubcuE/zDjSuc4kXpWMa
bFI5ryVVmT59MsmktipQiRNwijm3JUJW5tDz/srt5U9XctaWsnJnwvIpyqhH
9NX/SvZfC/Jvk1lIa5N9bS0v55Om/aTc5+5VZO3mM0BXtdG/2z74ZNaKWqrb
3v6Yw9ZC0m92qXRrjRupDjDc75BSRjEaq9X35LlQaP9Be3Tsq8iwx9wx/ted
6b7SnPrZCjX0yVTTqX2KE81bfaf/h8k11OrOy3XHYpwoyn2FcuDtOvoQt8NL
ae8D8ji8yFQltY5Muki1vrbyAYWu+rhc4lnj/ih/8sC5z3xpemn8F9e+oVzP
Qy8LdN760XQ953Kh4WvO5GNJc4Wyl7Sn58zEhluXuf0R6k+9I1+TYa9Du/1k
r9L+nq/OzfUPpT1tunkqaUUw/XVyqqoKGx9CNWZNPW1yQil9xiQtuSwHrve9
mTHBPWOYfnSMlTnBScdR+8q6E5axj1n8w/XswLfS84K5NSv7LTnilcj0aywN
H6wankw9/TRu6auFsnhI8dw9qQ1TE7iYr8varHqRRiZf9FTVu8bS5a+fdVrJ
p9HpcRrdbNvG0USHjxkuceJ4iEfupNdPT2eQt04Hd+31iSw+smzg9i8XP2Rx
ruHXNZQmZNOuEs3UhuUJZP5peu8hy8XxEk5lW/S70mzqtjJwi+h9NvNnes4+
5qqtVsDWVy86sFhk3Pi7i6T7P+uTT4W5asctV1ZwlU0Vij8Pz6dtOx+W6TUX
cdYaPfJmJRSQ7rLdw9Qrytj+Wihx3lUpNZOuDMsJT24ljp/IG7YkVbNC0hKt
ymrYL46n6BbeWSMaJI6nfF1j5qTfNpdGqte7tg8so7rkc5PUVYXkL+w3p5tL
BSncjjjgtzuPlj5M0NoUXkkaYat7mBYXkvb8Sz1dj1eTasmkYGmpIjIp2H1S
9UE1PW9y01tpTjHZHSs9aXSthkQqj5raXiijcB3p9kMU6kmzcMWapLIy6ny2
wuTj3nq2fhxSsrvmGySO/90ePOvGh1EvmP63CzTsMP2MO9PvOfdGyB+oeczW
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
5favfHC7R5N39Fn0wd5SIZ52eu4bcj0wkyRXboltiC7ifNZUHPrYT0guFqJh
6g8ySNtKr016lwLStqN0C9UaTjbIvvTWuiIyu25pmHQ3l+q6tv9y9hnjC/2+
X+X3/Sq/+fm/71f5fb/Kv9n9Kv/p/H3+/Sn/aXx+yOP/Kp//fzt//9+Nr4/2
/rvw9f/RfHz83j+Lj/+P5t//vfz6v5c//1f58X+V//4rPvuv+Op8/jn/vho+
n5DPr+bfR4R40J/dP8TnH/L51nx+NezVH+8bEhIf/638asQPgRHf5mPkd/j8
a+gXMOLhiA8jHo58DzDiLcgHIP4LjHwP8gGItwBjfPh8Tj6fjH9fEp8vw+ez
8/nNkD//fBRf3nx7DflB3vzzO3z5ohwY+g95Qv8gP75+8OXHn++QH5/PDP4c
4jd8PjP4b4i/IB4E/jT/vifwM8HHA18MfDvwjfB74HOBfwT+GPh2iO+gPbC3
4FcivgP+LPhD4De//t4fml8nYzJjVC3jC4FfBH4Q+HPAmF+QP+KNsMfAGA/k
N2AfgRnf7NNT+Ttbq9h9JMgH8c9f8Pn3fL43+KzAkCfkC/4t5AX5QZ7gx0F+
aB/4aBhf/v4A7QN/FuON8ef7gxhftI+vH2gf4/Pw2stfX2Ff+HxbYOgL7BPK
Mf58fcB488/fAGM/1vQ7H5Lx+f7qfVb8+5hgj4DBhwW//1f3ofHvP+PfTwf5
A4NPCX3/q/xY2COsHxgvxjf5ob+I5/LP9/DPe4APDn2HfsE/gT6DXwj9gv8A
/QbfFvYO6wnsITD4nODbYv3A+oL5AAz7gPMQ/PNW4MfC/v3q/jT++Rfw3yEv
jD/mC8YL+g35YjzQH/Ap0V7whSFP/nrM52dD/yFf/nqN9Qbyhn3AfOafn8D8
hz1Af/j3r/3qfjXMN8xPYMxP2AfIA+MP/wIY6yP0H/LC+GO9BIZ9gP2HPIfU
V93U3yXmWyJ+dHLnuj6n3KLZ/PDzvhMXnpFAyl22v1TalUj8eIH90rtb+l9L
JWcjxeuWqwTMv4B9VdbatV62TRYtmziqvWlMFtsf+sd5f3blCn/a722d43h4
lk0ejU5tvivJXMznNd4dbeE3qpr5G5h/7bOutSw0KKDgJZ7FYQtKfjrfOy5+
94XRNeXkn8KFNKRU/HRetnBa3xMbNER0NVt1kKmC2B9XHtXOymF3DfOfB+yd
nN3wOYcbtstmhopfDgV47D7ucKOAq/MtNLtQm0vv10ocUmlfzansf2xye0ER
y59vPavVqfemElKR6WvkV1FM2g6TJc83KycNq5GGSYlxZPVg8sY97ZKo2GKC
uV+3eLK8NbdioGYSve9/4oL+PvH9X5Ln73WzjYtl65XccpnIhsh0up0coXtz
ajZNWroxP+x1BnVodvu0UlA2GWy8KWG6M5MbEBCY1vVqNoUeV691rU/nLhyO
WvN+Tjad2WSxMylMyE3w6NzBIVXA/O9x8fUDNW/m0rxNtk+0j+Uxe7pPosrI
b28x1/G1e95aiTzaN1zrfVjjd9O7qu66VJVHZv3m9teVKGX2IPzEY0f9MXl0
XSWzdVuXAloxIvNeybEazs9AiROsKibN9SdJfYfYPw//ahMivaSQjM8N/PBc
poT532NujM8NbN24/slX1obV1LD10qynhKpcfhHV+QQvrE0vZevp9CsLl40P
LqWOYZPVJezLqTDa+OC91lWknNrvnMzFKrp2ZtnHBJtqGhCQlG3hWEVSj3ys
OjhU06H1yzIsblUTWXI9zOJqqc0Qr3SLz9XUtFQx3m1SHd3cEFGo96aGShXv
zLvZs57WtTnc1u2wA7MXk/trzJB7d++n+7K8z5/0/bA0jvnzBeeLhs7aGEvu
adXKciWR7O93duo6UPdAuJjP/GP9LX0y8u7aWcnM/0+8oTvBSl+83q7bu+2S
4bN0erO++RDdmGRmj+D/vza2zAm7nkMDQ3rZ6ttm/rQfcFiZf0nxtoDZuxPG
w8cYS4r3B3tNrQ0/XRbSmZOHblp2Eu8Ppr2X3+ZnUMHWP6y3G57sKY8xz2f2
UG0nd3H25Xy2XxhYYNF89pBi6mijHSF9N4/tF2pa7rRtFVj3k79zxLvHswGF
JbStn9Eevw7i/QPs52R3eb1PcqVkXLXonrZxqfj8mWqku5JdGbP37Hxe2JvF
w7Irye7i9a2ig5XMvlpqG7+I7ijef2C9EFZ0bl3uIl5/Kbqfo13XWrK+0X23
zuuf9ycreqw7cGB/HbVSn9dcvoV4f3KgsssRv/zz9KxodIRkYCxdP5G/SdQq
gEtY/GqY6ZskuuPxyDDpTBxX1r5Tgdn5dLrwbsPaJJ0ybuFK5e2KA/PJqWJ1
E3nXOq5zmvlwyiyh2N76HUz7unGbM55KD5mTQM5lB0KUXkWTZzudjZ5lcSRY
Nvue9v4IroVlSXilQioJFA+vFi1LorsdU9QfuaVSqx6v29luT6aG5WbSS+PT
aH3fkriG2mRu8tNLXroFmdS5d5aK3PlUWreoaMWw3pkUq1wqaDDJJpWz2/ZW
HBSQ7voTW0Wnsklz5u2FBy4I6I38/dkSdcWcqPW9AeOn5FG+eeB1y/YCsus7
UdZofOP6tmThfKd+lZzxq27rVisWUIBuvYe2r5COSHVd23x4AaXaFTjoB+bT
zSu9yiI2FZHl0D1Vs83ruZ5m/jaG20tp1xzj+TYu4v1RB6v36UKTEppnMSFu
eaOe3/ySe8ChdRnFyiQMyxpWScmb7SbIfW38u0NlUjcHV5Ja+OzjKt0q6atF
txj9vCp671a7xSi9krrJew0eGyii58viQp5aV9KWrNNRwm0imhX/YpmNgYik
hr4W5ZvX0OCTt0v1rogoZxcn6eleQ9mSsXpGitXUZNfo7Qmraklrq8Z6o3s1
5BG1rO2YujqacEdYM9u6llIOdgqzrqun69P2Pom2Fd8HAP+xSxuPbmk6hdTT
R1JBXb6Y7b8W39P64OpaTBOi7S0u+pTRQmsNP+nn5Wz/tbS12VD1Do37mw1L
z2bNrKJg1wJZ9bUVtNtp+oOTJlVkdO3uhqRDvmx9x/6sQ5pEcF3cW0q/LvtY
u9VzMpSsvuMwIpqc9msdcjgZTr0DFyXE34mmYqNb2/32R9KB0WYV9xpiKOBI
7ST1luJ4UGn39s+0DWLpVmmPyMNXE6hGmJIf1rhvgn15k6VUFDYsnQq6zOxy
JzaL7f+KS1Sev7iYTcfkfa0s3dO48MLEgTtaZ9OrRWUP9FfkMv+7SbBkVoOj
gAa7rzEzyBKSqtMCb+0EAR15G/9sZ7c8cje8++bpChHXl5Mz0o0rJPu+3dvI
zxdx8RYbzym/LaR9choUeLGK69mvoOPI6YW0X9G5vW1RAfMf1/Z4JAqLyqf1
ktb5CruLKD7cR1HduoDaSfWrnja9mJpcfr3HL6uxXjV75b6+JdQiR2pP0i1x
fGf6u6YVempVdDqueN2wsY3rh+Xclm6CauZv+7V0WmpjX01WM7/aPX9bS28+
WJ+w7BhFUp8lVWbPiKXs2x7t3dSjWbzBcUVpd9tTMT+dF3xyy7PHtvR4aiY/
Ol9IiRzJUwu3lxlksLnus+u1ZLafxv614klx6sLqDLa/Sumy4NTF1HQaKX1g
htyTBLa/XfFd3+nohvepVXrp9NF8s4J6QwqLdxi4LxmtPiLtp/NXci4xi3fo
Z5GBq8Mj/ak5dKitvu/1xnHD/sxMptmpXbG5NPi1Rlu3O+L98s2FptctlX7e
Lw+/WLqkgIooe323TrYf82hsP6mCpafE+2en19b3Z6wpolZHFJu6KYr309g/
LDZPmlH2sYD69HORsA0W309jpHDUVIWr4w6V+pxsVizeT9us1F5iplPK/P9K
jw0vb34QkW11UKZFtIis3tbLZ5bV0NK+IzSd2orjKwNukMyHBeL9Nvzv82r5
7VqE1FLpkeQdOnK1tCEl2erSCfF9CjbnVUgrp55iA9anWmiJ9+fY30yU2ZOc
OaqeOn+9vy7ptgvlRTZV0DONoTaXbl/X93/BzXzaKfLkqUSSC1p4wO95Akn5
vVao+5RMJ+tODzHNjeYcemzrtG99GpmYDpQxXZ/LuWeO71swR0AKChrHLZdl
0TvX8Su2OeRQepf2cyXaFXEjRQVfww4LyUvrRVRDfgn35syedvL2jfrkojFJ
fYuQWqx8IOfbqBdXRSMelIRUc9oS3OutSY3yd417EZ1cyaWWN/R86FdA+T0m
2OtTKZ2xbdfk/Z4K6vOy/16dxnX2pI7w47zFItqWk7vJqI2ITs6vCm3euYYW
T/dfb7S2hkzO6Xd58LCOZl1+VR02Np+zPZY34cKWXNr51rGPadklzvqKVNCX
NvHkk3PGVXtSCMdVrDLX+JxM1mvCXfSvZHOOm7ocvz0ihyrLV2mLwso5a39/
xSuPGvebVpFHHPoWkfe9miE6DSW0LPfsmqR3ZbT6g+OiAHsW7//Nv/nNv/nN
v/nNv/nNv/k349/8ft/or/FzID9gyO/3+0f//3weyA8Y8vlPuc8T8uHHZ/+v
3veJ/gOj//9b7gPl84vQv38XvhHay4/H/0/xkdAeYLTnH8VPwu/9d/lIv+Ib
8flDiPcifot4DTD284ivIB4MjPjKn91XiHgu/74UPp8G8VjMtz/jzyB+xc/H
8fk0iGch/svnFwBD3ojfIp4KjHwW4l/Qb7Qf/ePHo/nzF7+H9mG8wBdB/hL5
Yj5fpNXiMS7bosoY/wP5XuQ/wUdAvAH5Xow38rvA6A/exwKfAhjzA/kExN+A
sb4in4/8OeL7GH9g2CPwWZBvBH8GGPYSfw++Bv9+JMgD44P28/liwGgv+ARo
L/99O2B8j/ex+O+jQT+wngPj/jPEs/h8NWCsv+AfIF/Lvx8S8TiU/9X79aCf
fH3F+gf+C/hFqB/liL+hnM+P4/O3kG/HePH5XHx+zV/lQ+B76Bvy13z+A+wF
1gNg8HWgX3y+HjD0F/wK6BfqZ/G+H/l/lMO+wB5hPQAGPwh8GtgnlANjPQB/
jM8vQDniiSiH/YK9wfoBDL4D9Affwx4hvgj7Af364/2KtQwjngi+GL7HeoP8
P/gO8IehD+B3QF/gH2K+Ir6M+Yz1FvICPwvyhP5BX/n3D2J+Yj7z+SCYH5hP
GC+ML+QHeaP/kNev3k+EPqN9/937x/jvaf7R/xWw/v1V/gfmN/QPGPqG+Q75
YD5Cf4ChH5ifkB/m2x/vo61h8xnzD/LFfML8BcZ8xfxi96f92J96DAltaP8k
je1PbZdzX55MTif/iYae2iZviL8/s57++VLEwGxmz+m5w7atF7Op26n+Ldxs
4om/f9E5pxM5cJWA2d9nNv4terbOpQg/l2kSReL7emfVV4ZKWxcw/wDr29Qh
h0ueHhbvB47bGm053jgPj2i82Zl0R8w/wX1EfL7rIuU6r9zSApIe8HBTUriY
7wp/+JJ6gpty4zyG/TN8VEf39YrJJf2Aq1K+mL8UYHY+pSGglvkj0C8liV0t
n28uZfZr1Pm5JvNzS+nj6u1nHeqr+P4n16JHL982TcT893Gl7dY2M6ggk2m2
B/0Ma37iw18IiuzVpEkVSQ4Lc9XuVcDtS2iT4v0in+LbXxqh7lPK7TphVyQU
FVJ22OS+Hy7Xcu1mbdh8rHEelspGLJGQcqQTCxLVlzWkkm/LMeENe1/RjbF9
jTL3Z5CXoctg03UxzH507pc7yDQuhjq7VnrNmJhDA0qfLBLlpzP/wvgbfySd
vtqMk2nulUvBCxftSlog5KavyjR/YJ9Hg9Ueq6h3yOVWyDd08JbMI/9NimVh
+UVcem7lgrdJBRR1rHs328Z6DG5L9Jo1WrxfWmd33GLppUIyOHFLRe5psdif
NdS5oH+xgmu1IiR4RPtiMi80G6euVkiuBZYD7j8spA5K3iFKNyqZfRud6pQi
XFpG0yJSbC2HlrD7LUqC9+2c61VGkt5fVhtJ1nNrJxaUfVlRQcomZyRtm4n9
XT8phxyLsVWkXZw24O7DMureS5ArtBb7u7pa4zIsvKrpsMMs9fU9G/ctARvc
oxXqKLGfvXuQbhVJV/Yaq972BbPXbkNmd7A9GyKOZ/zwr7zPWpUEfc2gARLz
rRy0vIi/n1g7Jr+3yD2TBgx90OAqlcT8D/hDFWVP62Om5pCodJKDdnAU8fcb
+yt7jXwRmUOu8arGfj4/349dPXxzhomaeP8946ZmioltPjkvV+tvulv4k78+
pDjZsdKugLxvez3T7iD46T7HwDG9pgo9xP78hzvaW53OFlH0/ONh0hMKfuKb
5yY4dokfWkTzdGc8054j3g/Cnzg7fV/LJ/tKSHZrG3v9FaU/8QkXHNUWtb0r
5p84aBREJPWroJ47U4eYelf+xI9uvYvz2ixbTs8N3umJlKqJv39xuZ4nGL+i
kirP2Q7Xda5l/j7s5/aXd59NflBF3q7WW0WW/tzWhRot3eQyaNKSOdcss2O5
XU+iBu6pyyav52fzwx5mcFuGBcjaz82l9W9fnpOZWMXdWXm06NaAEjoTej1D
2Ost937vHMn5Nln0NWDAc6VdYdT2wNXJLeuzyHif3tYk1WTu1c5oOftBAhLI
ZUibViRS6DGNe9kmAnqlQiskzuVwkpK0LchYSK1OZ553uJRNypcH3BhSJaSl
Y4YWCD3yaF7GJYGPfgGVR7bupXu1ght9fseKRIlikm1+TEY3opj0lrt+GFNY
RNqvDpXqPRJxatbhC6aOK6XF/d+4KGVVUM1uR6pptGeZC1d+nG0sokOXPLro
l5bTqod+64yqa+jymnJ7ed9KamMgUgw0qKdFklkmnZuL90sfiq/VyTau+00W
nkq02C/eT/nEL7dt9a6OlDY61EW4V5HyuXRtm+w6tn/Cfsp4e0mfPZ+qmH+X
u1Vm/aeFZWw/Jd3fSKsmNIXOTdzT3ra1E2dVc+nONf9Uklh2co5E3mzu/YFj
UpYBKZT4Nm+rn50bHV+xudMQjzS2vwJ/UTRkmaZcpYDzf3YuQbp1HlV67J8Y
mFbDmRQUPpgWXkZRL5136Qyo4XyOb5OdoF5GWqrX9yaNyea2xPTubpGTS3JH
dB7p64vjVdh/9Rw2TtDvYy7bP6w93+XsWMNcaiVXYOKQmvXT/uzQ0OrRZyeV
02LpXRMDc2rYfs3eRdU9eoZ4v9bzTYSbtqU3N0TnlENtTRpdsbaapD7ViyQD
PqzoPSWdyu9cj5Je+obiEtMSq5432o8rw+fLKUVzmuM/e4t0s+mMRXXDRaso
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
/Avy7kgLRc8zqHRBUcGJ6GeUvnK4QHjcicv06z/85bpAUnKymid39hw38vTQ
sQWL3pCsz8pWbrM9ucPjg5UNUlJo4Jwdhn4L39I1LtRHZ38qPQ/dkyZcEEF9
2pj2vMOlkTbnPUr9+Ftut3bg3HtGWSS7e5++n0cU0bIlXe84ZZKyZK2iun4S
d/NlesXAZQJq0a/uhXZQNncoNfWFSYqQ2pgJ1oga8jgF1Vv5e2YU0BGv4wN0
V5VwEUuM01xuF1F82IAvrkeTaWReX4XgK0UkPLlO9sPWSi6aGx+yqbyE6hbs
8FbalErCfoNV1jiWkMmNpNiG8ynU4uuwA0Wviumz4t6hmdvruY7v1I7MfV1J
wdfVTVVy67jenmF5eVaV1ObL2g7djojjf3pWU1ZKNMlh91lNunpzhcSKHDKe
am+7ZYaIvBOdBpnW5NCTa10vVRSJ6M7MCQf8QvKopG3H6Vc/1dHNtPl39RvX
87u+09fqj64n5ZxwUVjj/iDCinJqG8QY8UP7K2nGSf5PWHxrV8GIWOmFHjQg
YtKyrsnhFFLx7f1iFs9Kf9XM0kHrAX0yGTm3cnoc+fvVTJPr/4Cu3rtQ+/5Q
CA0q7uirLetO07ZIcUGrw0g25cD7sKOe5Gz/yrX5+Xc0Uu2VrKmSO9nYbNG7
+TSGnBSU5svJ76LnB4/rhUgHkZpbuZf2zaPM/0N8cpJirWNZlxB6ENh9lcTx
czRshG3b45MSKLLDyByh1BXm7+H7x8fvtjP3jmP6cPDA0Pe627yY/6s+e/D2
2dM8WHzSyneHlf8jdxaPbLa2unuvVFcWfzw2Zco4+SwXFm8UNmx/c3niI2af
fAzU5V/u82f2TbX6WPzkQ6/J7lZbO8vUICZflZOGa0WuQWTwuX68Yu+3dM5k
kaO+XiPel+FzIiqKXrwadtKhW7D4Pc3qOIMkrWAKTPvq+fBFLJnfWyVhWx1M
uE/HcOH0sepVoSx+6CKRrqD+Moy0lUMUrq9KplmLb0ZK58ez+GHoS4fOtr0S
qN0IU5uuWXk0eFHPZm6eCWRXPe1pxcl8cvrSy09JIYnFD1stdpgvcTGJ9o2e
e3SBbSFlb5aaLzc1W3x/tPW1eXKW2TRpiGua1IYqmqCi08+0Xsjih+0S4xdJ
jM2jc/1y30asqqPUjzs4pbl59GnWnj0GpnUUH6sXpFSWQ65WI5souzwl2Z1P
30k/yyXjju31vzh7kdz4A4rq7gW0STf0tV+qB3099va85dRCet7OSUHjjgdF
3HJZJCoqJcdn9+QCOj8hoy3v4q/GVZLSsnUL+ji6keBYh0yLidUUefx89qCr
j8nEp8eEQMdammbvJDyY94gE9g3SH9Lq6LGG4lD1wY+om9qhVUbF9ZQ78lC4
y0lnZp+xnzmZWblVp0Ls/4WqdHEsOVXLMOw9vm+R8Szi6hZx+fTJya3km1cz
jHggvj+UZi6fmSNi5f4Tb201MqtkGPEVfP85ZcYFmZXi8mVhE15Ll5Qw/xHr
F77vuOzxa+mH4vKO+24lNaTnc7NSNZ+USYnzf+Xqp6L7N/qXGnfXK6tfF5ev
f//YWf9tDnehV8eLUv3E+UGz0UvHj2v0N5u8aR6sdDGHyz80fbR3Y3mq09sg
6cWN+7sThkHXZvjTvHWHnygpRHJGxnfW2uX5i+PtVSsmbJj0kvS+hiqpVzf6
kZ+Gdpea7EteU+PU5RwSqZ3HjkltDX1JLaGrtOm6ENoxNllqRHkw2Uc062y7
O4hc46S9ZzWNppudhTuTztmyeG+HYbbTJRIeczckEyZFdk0hvYFpw3S73ufu
3fjyVmV1MnWO9GpvmxtCl4bFDe/pkEB9jlYJGnZHs/zj9AL/oep5UVTkYaMQ
mdfo9/lN6WU7MZr2NVv9IGV1NjlKPeph2zeG3r2csspwUw55qI8YpxsZTYu3
NFGZ0C6Hdohm7U5yjGX7e5fa9MN+LWLp617p+Wo7BFQY6tfS7W4c6QYpb2w+
VUgGiVfyhBcT6WTQiiAV8wIyuu/fwjYuje33dd2irC27pTXWb/aoz9pSOumx
wdBvWRr1bGNtvPJhKbVxmbxYZJ9OcrfHa4c2LWfzq5P5wHU170tp7C0jn2jz
Ss6aArQsGkpIu/+aF9HSVdxiveO7qi1KKdVg3h3t4eL8pvPueQVhUzLILHVl
3iLPcro5MnWeyDGL9rdJGVVzp5JOP928TOKagMUXdjnrDjLtJ6CQvUHl4d2r
aa1ZZmu3xn6eHtZ17xiDamo3sFupsFBAes8kl+8ur6bgdR6BSrmN6/KB5aum
FlZTQMzbDaLQXBa/i9+R8UB/Qy4t3vdoqMOuGrqwtyytwUBIm+cVak6zqmX+
kUlg6drUmKcU327paYfGdX3WNW0r+Z5eLD42sjo0sC95Unwzlw+u+4pp7J61
p/wTnpD0TFULBxlxvHyf7PVeuhoVNM3qyaNbW9zJb8x5QVhpBcX3VDWsm+JO
qfFmqoEtRbRl1Yv3Fy+40kebVh9nO4roYPijnRclXMkgpjjNYkcN+V9Rlg95
6kJrV589JaNZS1d8lFyU+rs0ykdrg6hzPLc+8fC8iv3+1GH+mfki1Xec2vyB
A8wj/Gns8zk9bBe95tKHaE4of/OaBoaoFodd9OU0Tz3bdW54AO3enStl29+D
xc9DJS4cs3z1js51vbIqrf1rFt8qvVxuLXTnmL8+bEj/OE25RNpnfqve1UGf
xb9eRyk91L/tweLTt7WL7fQ/R9DUjj30O14Un7+mLuOaOIzLpG5TLl/S94tk
8faxk9dri4LF960InboGK50Wx9vZ+wu9g+4slBCQnZzzqqTdFZyMdP7KLqtK
yDZc5nHJZjFfCfH45yH1eme2ljB7Z2bfeWd7QTGpHdW6rT1XHK+/+dxLRe5h
KovXdxizm9T351CSRDfPx5tF1K33pDjpFzksnzpgYNfuti0EPP6LgA4Ha4y7
976adtg2Ha8+LZ/Sw+9Lhh6sZ/Onw5D2D140+kvDU6vctA3F8f8zDtGuSt6Z
JPeyME/W4Bm1kqzPFo5L4ZotzfyUruFPWs0NrSxTfbleq+TKz89Jo4X54ask
+kdz26lny1162WQsLV8WVpTCZeZ49Qv9KKCI2dtU1TsLuJqAT1rzTPLIdorj
UN3FBZxzf6cy+4wCEplaaUg8L+UGbGyxSVGpmPJtQpaLjFOoTTMZb8lbxdRh
pdMsJ2E1p7YoKvMZV05fl+1xi35Wx7XZnPq474FKOtffbZvf4Cxy35lTuVW3
kjTWpc+UWyakviHqyZ331FK3LqdPycyt5cyCsl0k0yuolaeuulxuMNf1kEGf
oO6Z9N7rgod2TTynu2FdxTXPHDJfqioM+5DJ6Q2aW7l6spA03oSN0k2JozbF
b921zIRkXv1ysYSrkOtwZtjDLi6N+5CU2ta2zYq5fY8ktyi2L6J85ehSPXMR
t2rvwarhDmX/cecZfp9X+H1e4fd5hX/deYXf5xN+36f2V84rQB7/qecX0P//
lPMM6D8w+v9/9bwD+v9/5fwD+geM/vy7no9Af/j5YGC0/9/lPAXaD4z2A6O9
/6rzF2gv8uNoD/D/9PkM/D72n/h9Pr/sn3V+A7+PfBF+n89//med78Dv8c9j
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
0MgltLWV58hXcyF7u8V+tmIZYRk66md983oY4+0nGjqjhuhV3rypTNgAKeZr
fZkaPIJf2ciJYTaDaKDMaX/bFmJ9cItiQ3ErSLffV9CY1Qym/HMLxQa3gM7+
Lk/mijYouzlhzYUvLVCio11tv19ANN51n5vp0x9fDdU6YCnZQTzc7Z7l8l4A
erobKrhxGUTuL3f1lt2sAV27OyE6SmzCp2/OYebcOmjWu7TU2LuK0HZzuG8W
zoNdny7PMw6rJVyemP3su6gJ9Aa9O8gubSQUOETu7EctYLZMVnBwFJ+4Nz3+
i4MoH4pOVX/WjBMST05fl3ij3L+/OTnykY5iMHFDdpLz4C9VwBn5GBh9ATDm
olHg2inVsOuv5yFAmFmPWk//knbY5eFM2+4cWHLkhsGndi7cHJqtJ1xXBjpP
hWOKTfrXF5MDisYXaiBlhtBQP7kBTK/vBIZC/7+DhyyY/qkJUgu1Y5R56TB0
RstZCKuBk4FzJLzGsuFXcb2EkUvqgMu7t0ciowpu56yMJ7x54DVtxOBQ7Tqw
W8ox+Mrpj79Wbj9k2T/vytt1Z2+Ibhuohw3UwwbqYQP1sIF62EA9bKD+9Sfq
X//p9S78Hv+p9S/8Hv8p/dfw/f+39mPD9/3f0p8N3+/fpT8bPv+/Sn82ev0Q
n/ef1a+NXr/E5/tn9W/D5/ln9W/7n+7X9j/dn+0f3Y8N83PZGaeS5JY8I+9H
jPk4vB/zd4hxvBFjvhAx5hsRYz4TMeZLEWM+lt4vjt7/DTHmxxDT+8nR+8fR
62f0ev+P6s30ejFep9f76f2T8PkR4/th/hfjBboeHvO56F/p/eAwX4v+id5f
gY4xP4vjgRj9AWJ6fyccT8S4HtP7x2F9ANdDxGg/eB4srk+I0X7wPGjMf9Mx
nh+JmN5vjs4/x/HG50GMz48Y3x8xqQf/DeP3R4zjhRjjXbK/2W/2Q9rrb/sl
uv3RzwOn8+fo9oXX6XwFev8htC/6+eD087/p/Vp/1J8D7QX9Ib3/CNoH+iO0
B3o+H9dnHD9cTxHT++XR++Nh/R35B1hfR/4B1n+Rf4D1aeQfIN8A+QeYr0Y9
9IktO4aPbm7/rt8evZ6OfAN8PuQXIB8A+QNYr0Z+ANbT8ffxeZEfgHwA5Adg
/R/5AFgfwPw79lNCfsK/S78+en9PxPR+dj/qz4X2h+sl2i9i5H+gveD9uH7i
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
uopRz5mPq8jrprULtzGWUDh70JXpxrtLia/REk6P38VDkdmFsbarygg9np/O
wdR40n84sc8S3uXxkPm5YK+QwSa89/401Cw7HsQT7UZ5bS8kmnuqLPi5/faj
tfNr+s4c4uCNdwclu+Ih4S/6pVzC7NVK2Sut8aT/Wmpb1JZ67SWEn7sm5hWU
TugsK22btOYlqNaPyO+rSSNay/JNOZtegr6S83LGrVfEstlzZdhDEkj/2fzc
5O1s50QorOJEK88KJIQHHxkFTu+PR6VTrrJkXoLVXEf9E+LU/tlj6rczcvvi
QWfybA//3myYeDymVkf0FfD/0g+3CPw2pbPXZsSA95yzpxP8CkBVWNFw70Qc
nAxxG++17Q3MyHffWpdUSPZDlJx4UGVxZiHsKp/H0HiWCJHT3AvqzItAV7v9
MNsvjtyvJbStUdLIiYG9U4KDEhVLQGywsw/zeRoQNZZjc9klZD85+6wl48eM
qIZ9piOfMWMpfQrmB+14Gys6IqogMdrhQ9+tBIIllnZoxhEO3H7Hr00fkkgo
qpjaaDpzIOPD8z0Sr7PJet9Wt50F3PSPUNK6tjp6LAcuzHT0ZZ3JBqF/kfmT
jxxwDBb1YenlwJS0L8NWlNbA0aBPhhJzckB91LO7jQ9qQLTuQ0Xf+1wyP7Bh
Rt8zpmIupEyPnrOjjgsd6RpPmfF5IB73KmJ8eh1oxdi2p+8uhMAsqeBVwgYQ
f+n9VGdeKbnfVxiruZqxswRynyTdGhLRCjamd7P7Ckpg+qsjIaDdBg7+nUO9
okrhsb7Vik/z+LDSfPcBdmApXIpgibjM4kN2r/4L5U3lZD4tbdYpXvqNMsg9
v8U5IZQP+gcnmCbsqoDDT81eNcYLIHrwdceE01WQdHVW39mN7SDzYPZaDccq
EBW5Eu60vX89Lhv9U2gNh8wv8HW3pyhf5oCiwdTDcRGd4Cyx4gQ7mANDD+5j
tFV0Qqzpx4NC5RpIc1QYu9K+izwvEfNxiizr8j63Gri3o+LKKl4XxTcM1Hdd
Vh4BQ41bHuhkl8OY2iUXjz2MAjsbGGcLVH4V8y0bjhvKBJtEwwOR7tMJe2qB
NUSpY9W4cAgzjBoUeobKv847kBatvLQR9g8ZWTRcNwxUTq5XZfAaweicwdl8
mTDgHNqf3tfcCvMX5IqMHRkCCk2+nnIMPkz0iRFaHOqPSxd8y/UuFYDCpjfH
r3YEgZS71OrkHCG4ZpX0FK0MAq9raq+jNnTAtld9YgdXB0Lg0NGdmladYPxE
bbbi+Wfw5i/9NNNg1IJEq0873sCjnuBL/mecyHrUUNUxHSGPP4D2DheiLboK
xPoWhio7ZJH1qQdnlk8ytv/43fnLW/MOnzXV4kKIzqgJthOKoUP9bm+USgvE
zrqnxrhRTNantNbo9IRMLiHzvfj9Eu9urh25nA+Rz0KfMfdQ+d8yldOjbX/5
AAq2d2teJBJw1UF8K4MdBn2JgYsP5ZXCVZ2zk7zGZxOGdca9D5m1oPJuYqJM
WDmx70TyG2nPBtBdMDxK51r/epvj/00PmiE2+Nke4QEe0aj9cdq38lZonbTx
hfL2FiK1IyhGKZYPaf7r4rLnCogIf+f3c78KQG++XaiyfgXMLeqbvT5OANk2
JscNItsJD6nIw+dWtUPgFAM71Y1dRLXMrW+BJztgkKp7VV9mNVx4evqFW0EH
5Pe+2Miw4MJyDaM2J0E3RFbk3WdKFhMKZh/OT1XmwTqb10HMhdWEDIxozmvs
j19g8HpGVy2xab5b3H73Fgi/uNEygd1IlA/+VXerFB+2pkutlchuI6ZoT817
aygAo3W5Mz73+1vXzha/ffeE4MVcsyL5awcR+n7tolvF7bC/0Pulss07Ys2X
IOP4bzWwMtFmv9A5n9BTnPXrtLw6yFrnei6BmwcpRzs+1n2pAwODXWKhc8PB
sWf+Y5OipAG9xoBeY0CvMaDXGNBrDOg1BvQZ/40+A7/PgF5jQK8xoNf436fP
+HfXY+D7/LvqM/B9/l30Gvj8/yp6DXy+f5Ze499dn/H/Wo8xoL/42/QXWF/6
e/UYiOn8d3q/px/pM+h6C4xv/qz+gs4vpvOH/6w+g663wHwqnb9I5x/j+P1I
P4Hj/yP9xI/4XJg/RUy3x39V/QTu/36kp8DrPzoPj94fjK6nQHv5kX6Czk+k
6ynwOmI6X5HOT6TrX+j6CDr/Dvl9pnkis1/al5N8WOR//pE+4o/0DZgPxt9H
PirybZFvivxEut4Bfw//PvILkX9L1ysgn3C+L59z2qzrX16v8Lf2J6TzPenn
h+L7IX8D4yPEyOf9fb8/is+J9yPG74H2hP4VMfJ9cfzxflwv8H7EA/qF/1n9
AuoP6Poi8n1/m++I6foG9K/IP0Y9BPKN6f0P6f0U6eej0vnWf6QvpOubEKO9
ov3idcSoj6Dzt9E+ka+N9oH2+o/WP+D3Q3+B3+f3+10O0PcX+Lw4f3D9/lv5
4nQ9Kl0fSNev/BGfnK73Q/vH8aDrQel6P5xPyBf/Iz45XS9K1wfi/MXxp+tH
6fpBXB/QPnD9wngfvzfqaf5In0HX9+L8o/e3/dH53nS9Bl0/i+sN6n/oelly
vfrNP9L1srjeod7s30W/8Uf9del6IbQ/HE+Mf3A8MV6g6zf+3n6udL3f7/M9
HHK9wufB8UBM8ud/ez60xz/Sa+D68PzXoLcto2PI8UaM9oEY7Qkxrr+IMZ5G
jPF079BLSywkY0h7PeXLlPdUjiHtfezJ62oiirFkvMx5JTy3bAilj/hsF2tp
xaH0ET0acR9l38VAxsZSFQY7k1yvPj+x0BPaPf+uH8qF4sC2iXtKyb83zF5z
o8sNDqSJKb/QiS8g7UPnl9afQg/lkvG2zpmAdzIbisj1q/HcEVGvmpLvzpOR
3KlpLF1ZD7OmHX2r3FhNxt+qJ4arawypAnr+bMHnWzMEF1oh5XJ7nowOlX/C
77tM1rVb8hqVnzrr2BIwPp+ary9vpHm75AigcGfDPGM7Si9B5p/78mbfGdEO
soKUHRKrar/TT3hqrTsy/XD/+iSc1Z5+ue678yPmNWwzvxnSCV15je7+06rB
Yb2j/NkjkeBy7l1H+r1aGGW4sVdyfjjsbp23VuN8GExVCkqYs7kCPLVXevgL
s4my1eONO6374zwPQ08Wnw2LsiuHeF+vA+n7g877zygh1Cad9I5f0gCORRVq
GlnVhNqTShn58iZY81f+AtgqKUQP2s0HY8GTF9n99mk9z3efdP/zh/DsnPxP
1YFe/IQLFqad4KxS8i1EhgdTdK9O4S59AZ4OrssZXi0gYbsvy0UiFJaxrSHZ
RgCafdtWPfZ8DglbPJ80yXZAcqS8j7pvIPR6SJoaxHdB6C+zbiZKPIMqozgJ
KaIL9qZozVUd+Qy8DxRsYrxPBhVZ2bsqcklw1Gtcd/q2FNBrjznys2YSxDrO
DWRK58LNTBPVFKsEWL7JVYmxkYDhoYNLaiaXwlVRD5OE1GtgMdx6qdv+Kmgs
P9aTbpIL/Gfv/QXjqqEqWVjaZ5IPVx9Lus2fUAPS9eIO/s/jyfV8U2hHrPKn
NGJE944Y9dG1IH20uJZrXghPVaZN/TqRyh/wjqpl+9bXQjL/0XyNF5lkPiHL
PeAmy6GAqNg0zaSksJ6cj4t3fF65SMiD/Pd6pmyvQjK/EMjKVJdgVxBnzlw4
PMqlETY4M1xYXv371iYFtbhJTeT8Zra/DJDLbALJx6tfymytJPMLt4/fXamh
wiVKviXrPlBoAe+GOTslLLlE8Ke0nWGbW8BR0pHFelQBmVU/7/tpUgv4TbnF
5xpWQfODbqVhE9ug7uDYI+xeHumvfJ54F3HbWkj/ZOxto2h8sgYkrfZ+knER
wrKE08NDHal8hJrWlJUaDlw4JTfqhubldnDefMJWNa2LSDrZuEmp3y+4PHux
U2IWlZ9IPecnTM/vIvMTZcxvaxiqPJhlYXD5J9lu6DXInWAbwIOVq4dUl17q
hgzpQm0JBpWf8CLcdgqLSr/bj+mkVhavfBFF+r9Zb6dW2Q8LI/3dE2fH3Y62
lP5gbXQk74o5pT94Iu5buCj1GbQue7BMw6brO/1B7KmOqUJWOczPq3LwV4on
8wvz53XUpM/8SOIaG1UPlmcAGZ9h/uHx4gWL372pgnVr7mTLLMv77vyGpisP
rXfWcGDsHl8etzzlO/1BrcqtzkpNql+xwUXXXlkrSj/w7tQe4c6DjSBlbn+N
5Ubp3zE/Mfnrq4XW81ugcadrooxZOdDzFfoi16SHpTWDT7PTx77jVL4e48X7
lyYfZeW1ge6MsUeFq6j8OMaHDwJu9V1bLACG6hkrdhelv+2d7qrFyKXy1xj/
7bJvaZtnLoTCtoOROs01pD8l+5nI7nzatZbKh0gWnB/6OqcDxNvz1RmL66l8
1poFOkJuBfhUDGt2OhMFVy0N05TXJBHqJ9jhn/1rIIPZK207vYHIXC4/2uN1
G5gaPZxsPL2VYCx6ssx4tgCujrhzQdVbQLwbLiredlAIbguC7jHji8HP4GPx
pmsx8LV078jQE9kwYoa+x9Ep/evt8JO91w98hOBr7k8TL5RB1rNF15kTQ4nw
s4PWDl7AAemWC/7Mr6mEHrc28corLmTVBo3wsi2ClEWGyaWT6iGDp36XySqB
2DkeT4WT+tdjH2OrhIBiWLf1pPQMdR6Y/Sr2SvlZHSE/9ZtSkE0rOLMbLBLu
NxE5J0SHJl7kw3S2vTX7QDXcrd13/NgVPgQ8e+8rqscnCqcWL3n1VgCJKl9z
ZI5xIF+hUinFRQBpmkfVNMZwQN36LOd4//jofDPXCuAIiZqk6wU/DWmH3mcH
tkt41YH6GfOsJ06d0DvorpKGTz0kGsUZvGZ1QaS+pU3C7np4pzj06+L1XWT8
LHo95uez4v3rtdMTvmZ7N9zPHc6SPULpGQJ6zsCtfQHkeNrbjDyQmU7pFcJj
T0vuy6T0Cuo6T8xbnlN6hSWJ5hnxhym9wqJlfiVCt0CQVa28wRJak/Fe3dRA
VUboUSgM9hrKD6kCUefb+4UnqfN3rNavzpK5mg8lap2E44oaiE9LfKFjWgDN
zoe/rprIBXH56cbC3kIyHxO5e3K6jBUbXLaOmOA1qQ4Wyer468RT5+c8WfzI
xr+iAnoOTzg7bHsLcGYXL2UEV0LZ6yAt1sRWeDDbk9P3rIrMx+g8WftOubIK
el/7j34zkjrvfIPmBJfZj9rBji81NPQ6dX5EmWGEnkQkF9YzxaPGv2yHRTNa
CeX+uHmuzeGaKrEOeCOwesjk1JL5GfFcj/cyo+vAffYEh9FinTBdMWaXhBkH
3BWT1Tc+j4CrqmtFQ3fVgGpoZ3Hu0ggYIWZ1KqGhHnb52ktbr38BMjXRv7Bv
NYNWwMYUiRuhIJN8fKJUMB+2He72yIRgKLvf6i06vh3GeCgFnNCn9A0Yb670
bDIxEHYTuwZZz9vSj4uGRwg1M7pILH1Z+lETq5PENmO3Tf4cQl3H74G/F+0e
nunNpO7XE7Pb6arRQWJPp3LRhYPaSdwxWvqcKoO6jvEWYlxv8PeXXLNdWMEV
ktezRdfGZicISDyK9cjE0pZPYotR5VX2/tR1XO/w90Jc13jKGVP33x4xZhnD
tJXEUsPZt5m1TdT3mbTJiaVMXcf1FX9Pd+LoxvQQ6n63n3y+hBg3kHiE6CFj
IbuOxFl/9Y8kxvUef09r/P1QHX/qftZQhdfK27kkFhnSPtM2o5rEqeMOSnrJ
UNfRv+DvrZGcb82+Tt3fI2IlYetUQWLLezqLNU4XE4H3t976OLZ/vOW4ocoy
1HX0X+1lY227J8VA6/mZE2xHUvc3m2WM9TqeT/hYl5br91/XC5nJTOBkEXYm
aXphS2Ngxh4fSa/PecSmdZukbsvEkP5x5Ojm+hKH/utDe4q4cR+IKY9OK0ap
9P/+xpkrNCTeEkkfGaIRNv32McRLWWNsDLGmKkF3yKhYMBa7GKWjlUxsje80
Tb0aQ/pr8+qXu/Jc4sB3A6+N+yqMmNUifT5rTyysl18fqdN7ndgn8clKSzYO
RlU+m2R7/ykI3bw/KHyMh517flJhbLsP4h4b/I9siCfzc5H11/Kd1iZB1LZf
NCWmvoTUFPbJd2qvICCx2olV8QFUw9ndVlOp+lii7yvjrph4CHurfYptnA09
wRCarJEIuh1KHK59EVgMW3198pxYaJYbIhJKFICbQ7jexBdx4GPDWq3h8Ybc
n5H9ykY+qpZtLoI0Ua2JXslJ8E7nms/SWyWw5M6tzL7JH4AXtv1bulgJHI7Y
BRqX/eGKdk/jE3YlsI7mx+j05JDrbbxp9SxbjRzYqPpm6/PMStC9M2QL41gO
jDFeXXhqbBUsceMZSNTkQpLCY50kt2qw2a3+Xka1EGRaZEpE6rgwfd6klYyZ
ZeT+O4vbJ2l7oBSeL9VI0RI0wJGxM1YxXEthQ+F60cZJjVA0fgIhM70cvOps
6pr8mkCMbXbFfyWXzD+GZ1TtE5rXEtJunFkj81qgpwPSlLdVgfjk7b+YD26D
JW2RB4Xrasj9+9bJ43JkBBwYHp01qma4ENxNVjok9GMrHZ+b5iOEMHFVjaRX
bg08cW/55QxHCI5rTMwMfu3fr089MeLk0v54VpJ3RjWvg3isUyG7vLUdPp3X
6dZc0EEoaFy49pNf//6vh1jPcKmFsqzExTbOHZAiN8GMfaMWMiU9Jydf7wAv
dSMPlgOPrL81F5nGK8/kwfGIsU92iXYDt7hjsYZsA9zmagxJ7+om96Nd307K
Bo+PBN06lTDlxnKQ6fVdWVkYReY31LO8X5oEREOPv8gt1pZaUDLQuxS+OZzc
X0ZvSFLZH/0Cvp45yu7rofQMFjcO7hKu7h8H63OSEWfCQOev/QxAuqfxXfLm
MOBpsl/KdLfCL+xhPsZ7QkAsN2dt8gw+tF/w+TU5PhgsPz20Mqii9O6SsiXJ
UZnC/j3gqJvyV4JAP2L7FbnNHQDCTP7Ti4GQuuLIDlfzThCMJ+pOZj6Dsnvy
wTqisTAyaFjN65gyMn8dIzKDaahXCqZjr3n4v8km8wt2j1VcWUUlZP51lotX
LfcmxY/B/HNs2o3e0UUtoGayf5eEz/f52ejko/IlqzpgzbutvSFF9d+db+Ff
f4t3itsFeryN6X1fsqB7u9ujIVJl0C5R4ujfEUNoL7hy+SaPAyHKegYSy/OI
8MDsc2Jz6qG3r+yMv10ZsaF2s5igogEUkg58CbHvj8dtyzZ9mcQDWSMVLYZI
DWFl6p9ocakZMjdKbpPg1hOjgsZdvDC1DebZ7JyvUdFMbNJlb0nK5wP/L3rw
alAZPj1v4kgBfAr3icvu4hOPFqzecG68EDhayXMrpncRrPvzj8Rd7oALt7U1
A5zaibK7u4pDt7f3r6/K7L6J9dCZ+26K2k9dIKzRXS9h8oEIz9oep5NcC8K9
y7dJfGQTBycOnsq8xIOrt381Ed6tIkoqJkVJKjUBUZ942n/KfcLs4PLiFeb9
cf0e64PCI3lwzm1mbsZ4DsxS6l6hcSOFWHnRYcTp3Vw4vEXfmXWvHHiHNmzb
N6kZjuRlStkaNxIvfvE2ZS7hw6hlzz2ZB9oIradraglrAWSV8d3k1ITEPHvv
WzMjhaBjqRWp86UGUjKiNoQPp+rZ/yr95Af0FAN6igE9xYCeYkBPMaCn+O/6
wQ/oKwb0FQP6ij+vr8Dv8Z+qt8Dv8b9Vf4HvO6DHGNBjDOgx/u/1GPg8/yh9
Bv59Ol/hP1WvQdc7/K36jf9bfQTeT9c//EgP8SP9BNbH6HoJjNfo1+n9K/6s
PgLrB4jp/SiwXoEY/QViun4C198f6Slwfft79RW43iCmn+9O11vgekDn72N9
Ducref7ib/OJrsf4s/oMHA86/4HOZ/yzegn6efp0fQTaD52vQPan+O156PEs
3R4w3kB7+JFeAu0B/R2OP/oPHG96fyX6+OJ1HF86vwAxjieudzh+9PXuR+ch
Iz8b+aLIx0U+KPLHkQ+NfFvkg5L89N/4n8iHRb4n8l2RT4z8eezvQOeP/5Ge
A/mtyIek6zWQ307ncyM/E/msyO9F/ir9PHt8H+Sv0vncyOdEfQDydel6EDp/
na5/Q4z2T9fDIcbrdD0cYrxO18chxut0vRxivE7XzyHG63Q9HWK8TtfXIf69
PuVfXx/zR3qXP9Kv/E/pUf5WfQXaH50fTtf7/Eg/8Wf1DnQ9FJ6v/q/WD+Jv
1UPQ9Q8/0nfi7+F44Hz/W/VWdL0nXc+HehzUQ9D1n3S9H+p76P0H/qxe62/V
Y/2RXoGub8R6Ka7vdH0r6hNQH0jXt6JeCdd/uj6Irt+h63Po+lC6vouuF6Xr
u+j6Ubqei64npeu56PpSup6Lrjel67no+lO6nouuR6XruQb0GP//egycr4jR
vnB+/5Fe4p+t58C/T+83RV//aO9D8PjR77yVo8FaZJGaxuI3BD0+vzXhre5X
2RhyPg9Zukh6lHY8GY/7n1wemrGE0l9ctxrWEbuXul956IEM0Z+rQPppdACT
50l+n09+Jsoac2PIeJwTtzdcR5LSW1QNXqbOuMIGev71qf6I1RdtKL66R+jk
HT2XG2HrLH/ThBFUvG640XKc1/kaMj7njKvZJhxVSdqP/F2+B0uBR8brVgmH
3ylnVJH5nzGxlTeZIi1k/L6B++xiQh+fjM/DZqSs0nBvJ+PxM3PDk5RvUv16
UnvMb7AWU/F54ob7x9gltfR8AqESIrF9on4XPDGqGi3l1El4XXZQ6FHqj1/2
PLU0GNROYp/dZgXetnwSK4UdtUiobSLxvOBPyhpFddT/D2R9Sc+oJjG/b3Be
n20xobqrZf+qZdGwaGp63/WHWYS0dkmxl07//zdk7JEQrwZvlXmfXshEgpr/
jqm2LrWQ6eT3TJvzAip2FiQqP3oMmzJ3mTzbUg0JfznvNorIHtYr1qH5X+/9
Tsb2SyEseaauROjXQcqppoXGjziEm2v3QtXOFshcZSbuZVdPfLo4Js1Vs38d
uX7PRHi2Ctx2n5NtVeDD/vupvPQjzYQL0y/KyVMAksuz1iRH8QnXzdLRRwqF
MHFU+yfNNe2EaeLa7a/Gd8DBCumbonmdxGOPK1++6XTCDNOeROVrtfD1lkt8
7JJO6Og8Z8JeyIPmVZIVuZVhULF38GjbJy3gnC85u/d0CIx4pOYud14Ae4+p
hz+SeA5Jn0zK7OU7wFx5t3KWfCCkiSlsd43ogs6Om1sK/QMgdd83pkFqF4Ta
L/LOvBUATbOL9rLTEmEMY8r15TUvgaXS/EqZkQpdX2y32r5KhLJbj3dL1OfA
lLWXtZ5JJ8Bhl4czbbtzwOfY3LE7F1UDq+XMfdaDF+R60yY9aoXGpBvExuGj
R27M5oDSRKa+xMs82Lprmpf3sBrQ3SGtL9GUB+XHHIaFL6PyH5YfVm1smtkf
Vxe8n2Q8nyAuLhry8dy4WrhQ1himwy0A32H37z1eVQtL7iUND92bQ/rTMsG8
7pCaUpBWkAh9uL4JIvcP/RISVUzmP/Q/8HxZGlVEVlqa51L//v3VDPWHOn7l
YHpFZ+LnwS2QPWbLDWZdORgnTR20ehOVD3m1d1Sx3rEWUDXetYWxmsqPfDrn
s4EhXkv0TTp9Kmd9GzjL1K6RaKqEmU5vy/ZqUfmSg6aMIRMm8OFr2LZ5xjm1
ZP7k/7T33nFRZcvasBEVARFzi4iZQQUTyiBSKAbA1IoiKiIqIoI5IBgQFREw
IaIY0QYEBCQnsWWTBBoVyU2S2JJDB2gEFV7OHWv1d3rOfDP3/u5933PP4c/n
t3bv3qtWqKpVT9WqiX3WFdxST1nL/XKG1SI6Hz63t+FgWa//9iBm7mMrtwZy
npK0zt2GUdtCVSSNzB6vxgeb8tht0t1VMOuwceE3P9H5iU2wr/SVMD7ceCJx
1fF8KzlP8SnaGdDYyaPMn527/sxaAJ5vfPfxP1eDbDRrc8NVAYQXQSS9PwfS
689JZfmLzleMHPsl1LQKQHnVGXP+KtF5S1m/jIQopzbK6fQnWkFEG7Tkpsq6
D/oCh8wfa/u8FJ2/PNi8oOzEzHYoPu86MKSsjZzHBPgW2WhO7qDeyVkLFjW3
g5yfnyX7muh8ZuruAAfGiDoI8Te5nRXYAaO9zao4ZnW/O48ZdfLMy6M3Rf7P
vENuYWWbRPdjKFl15m49ILLPJ1xJu9J+TnQ/hrQ7fZlERxDR9y2Lay+O6wgg
+l2Y5rAmcfNLuH9xw33HCNH9GKgvbl+3crfcVQoZLUdrWG/eEv2E54Vxhh8c
NhmL7O0YB9Vf126pgnVy48t7GDm/y0fZXiEZxL1SDQ/k/CXcqQxiP2N/u+Om
69wp7PV3zhSvUjqXT+xltLdHaWfOyB8iyterCvzkUOhdB/YHB2krsQpB3N4+
7del69CvCbR9IjysXEp/dx60/7BSk3F2C5HvdtdczSHhovPBpk/JoziJovMh
dZfMss8yovsbU2guw4YY88Asy26H9KHK391nq/nphPDjJgGkl7teZG6q/t35
kPWQxphJN0T3lXpm5Vg0lYrO++7299kuQ4nOi944jHnhYywErn9pCP2C6PxI
auTMu1YK5XDfwujudskoaHMcmahmmgLbDg+skNArhbKkH9K2v2bCLvNGg80r
S6F0wIObjl4BIPSKGLNsRCW4m8IthlcONcdlpwvtZh08Wr+llJNbQtXMn2J7
W68R9j6a9MBqQym1yDz/btGhRlinPecso18mZVEfsXqcQTTYTC26wNRPoSyK
X62UvRUN0NRpID0pivIZdk/j7pgYsDbTGGt7uwhST9SZCX+NgX7Dtl1lSmXB
4SFK365vLIO5UnbLlJbEgWnGr8NyLpaD7pxZFxj0D5RxmdUHo1m1sGhp4EyT
SjbsHVCn7w+14DvLaIYJoxCmxt2qjOtXB263pzGsFrCp8LTviteae+fHlHlD
3SuL4PsPlSVVK+pB+9ec9UpfK2B48Ua92b5csLG+7srYWgnJ+5THTxjIA40v
87+xuirhMlfTZ5YfD/RPV65UGloDs8Zu2WMW0A4OjUtWKlnUwOf87P6Lhgkh
5e1turRULQi+vjgiGyiEGzP6S9lu/0T8JfSvupzoAXKe/iDMdl7u39QBagMN
A2K7/WBLzvNhIUdF/r+2lksMfXoO7IiY4LJ3dyXkBH4KsrqfBeO5PlqvrctB
VuKxp2O/bNB6bVp3fI7Ivm292SoMbvMj8wXtQ5xfiHE+Isb5jBjnO2JcH4hx
PSHG9fg5XUdm6jLR+VHHvO4d361F+ThHa/LePrwiyseRmELZWs4Q5eNoDmq9
trw+kJz32POurr0yMQA6WveV9QxJJv6mw8PPirbOyZSbq9tD3psv4HV76nva
BlF+TfHw91bsqgIY4JAk8F1WA3Lnxz93VBLly4TfNhoeYl0BK6NuzIiZwQWF
2FkejuqifJcn0/OUTRy/gH58B32QcjsExE/pVuF3EHvM4vN5kxMZQoJnvq0z
PWElsv84JTqJUTptBHu9CUmO4vAJNi2WnN7J5BGsEGc9s3OXyD6MDfOWtj3U
QvCC4+fkbINF9mJw8PzcHpN6kf14ZFhhz3OR/egbSD1w3MQhWNHK46njXZE9
qbHpMZPmVEZw6KGH002kiyjOzB0Pzy/p/f3p93NMDuZRTnukT17S7J0PFiXR
9GtVkPEwSbtmTQRUHZTzt1pVDf2OD63SrQ2HfrazNkoX1pL7yly5sR5W15og
LGKU/225EHBcmWW97QUXAvTozPyUIPj6MEAzWVoAputoEwZVBxB94Wlq+mLM
iliQy999gq0UQTnNaLfcrxQDi/mnbZmpjtT9kXT5JKlYkPDvaA++EwR7WxuP
abq/BsVuo11s2dtQmMc9csk1luij7/f8K1vfv4WLhstkbMfEg0Z6nQ3t3Ruw
eBqxmW/9EcwW5NtL5FFEH024Mta5RzOu9z1XPR2lsuF+8C716AYmdH+IquSk
FYJWd7rhyAe9/tER+SNst3yIU72qOcDoNTmvMs2QHsDkVMDMSYsNpYtyyfnR
2c4p0XRuDthtcX5HLayCvZ+efg0eGUiZMF88XHyrVw8MH9vCeccg5314/pd1
LnTSRO1qKL4rpPNPxFMrJ0T4fhr4BVo2fD/HNMqHQw+7dG+84oDigU47hm4J
8U99Xa82sfSKwXzBSOVtgfVg7/zqIqOqGCTHKAhWrGwAc45SIq2tBJRtvtdY
GTaCl+q93ewPn8n50uId/keYnFKYrvPdctCaJmj48bKatb4cduSAR8GrFih8
b9PECaki/q3R9rMx9LlV8O1wwciVRTxIvxW4TOd8FeiO6Zf+eBYfzru43mT0
2sGD5egLPEL4UPxIs4EjqCbnU4OcFzxyvFgNLXcmfz+q1Gtv3aWPdI/mwJBZ
AY6bjNuAoz3juVVSreh+VMvTLNryWng7aoJeSLkQTsk8tWTf7G2nD7h4bHYH
WNxZPdOEVgc3FNK8taI7oG7Z1ZCsYNF6JXysn9hMc53caCXReiX8rJ+4QmPU
6W0M0XolfC1cryciQ9TUROuV8LdwvR5dcZo5S7ReCZ8L1+uhLA0dmmi9En7X
T6yey+znPkG0XtF/xvVax23cKj0wj1ow7+zLpGUiPnk8bY1swSYRn3zqKz0J
D2YEdA3RWqKU+Bk0rvZY0K9GQZLsiUbWl+Lf3Vdh9+uj10NXRsNQb2d1HbMv
EL0kbvFOXhhwGAMPs+eLzod9t0A5Z04DLChz8eCph4L8WedHVq0NvfvclIW8
byFwvvsQq6emBWj2gS17S15B9yoVyxOzubA/+vOg+Hmv4Mj6D1rJhTw4rH46
wzQtEFJ1RixLzuudN1Mia5SHB8KAK+wHEivboEr/RmacXABojLSe1GndDryF
7xscDF+CQrRmN2u5KH9DZkgxKFUWgvz6E1u2L68DBap0O9+iiMSfEkZHnWQO
FeV3BC2NjaXbVkLce1v7iJk8uM+d0cJhVpL4Uqrsx0tMadF58/jDlxfruNTA
OIaeSaiyEEzHBfJZmTUknhRa9mUXf7LoPNrUbXAkfWoKJfuSdm7T7WjwvPeg
ifM0HGRKBrzZ4VQBC17vNuEXO4Kx4xCH9bJVvfvk9i3StXngZlDaYfArBzQe
q7sx9mZRl+v67WgproVI4/DtfPsiarFHWd64Jw2wYu+wX3Rml1EpHinSLe2N
0D3YJZLOrqZ0p0zV7XnaAkFjJlgx68ogwfv4kfV6LeBUeM+CHVFHXX4/KWvX
Ey6sMGDes/Jrpi6NKz45gMODQWtrch9t41HFStXLvGYKoCli9PFtHAH1xfwo
67NZG5gqr8+kXeHAi+WF8vN+aYOvR4IndtoIKcVntS5zn7XDnLmqlT0nKkl9
ALel92TcV9RQt0ZmcYqbWoFTej2JNruRYhsteJulzYO9xz8b3xzNpTw0givK
rvLBKfqratkTPqVfZXN9XaoA5J74UlFz26nLdHcFuwHtkNkQLxnyMQECGeFa
RnWfYarE5nRaTRrlMthy6OUTNbCgxi+cXpdHGSWf2/V5mYh/ptq2KLPxrANZ
/4hxvSPG9Y0Y1zNiXL+Icb0ixvWJGNcjYvT/EeN5G2L0txCjf4MY1zNi9AcQ
o/+HGP0/xOj/IUb/DzHak2L4nyY/BuUnHq9AjPJDjPLry6/py6/py6/py6/p
y6/py6/5/8uvQfn15dv8tXwblFdf/s0/zr9BeZF6Sz/l1Zef84/zc1A+ffk6
f1+P8N8lfwf7jxj7/6+a34P9R4z9/VfJ/8H+Isb+Isb+/m/NF8L+Isb+ivPH
/1nzi7A/iLE/iPH7/1nykfD7EeP3I8bvR4zf//8qnwm/HzF+P2L8fsT4vf+3
8qHwe/G8Er8XMX4vYvw+xPh94vlQ/135Vfh9yIfA70OM34cYvwfxf3d+lni+
E6l/JVY//Y/ymdDeQYztGL/BeBS2IxbPd8J4DepL8Xwn5B8gn0EcY/wG472I
cf9CjM9jvAbjxRgvxXgy8g9wPhN+y894MMZvEKM80f8SzydDex7lK54PhPYZ
yg/tFZSXOEZ9jvJDfYf9w/0T5YH7EbaL1xf9o/wc5O9ivAH5vuL5OZh/g3xk
jB8gnxr54xhfxPdhvgzy+0k+zs94BebLYL4L8lMldamN4SEdBKP88fvF+Tkk
P++nPY542m/fR/jw+DzOd3wesXg+Hup7xMjXRfmQers/4/X4PGKcPzj/cD9C
jHxyzF/C53E+4vOI/yw/UTyfCTH2H+WB7YiR/4zjiesZ5wfy/bH/yB/G9Yv9
RXsJMeZPIX8aMeZ74fuwHecHzhdcv7ieUV8ixvwr5CcjxvwBlC/ys5Ffgusb
92PEmJ+F+SaIcT7iekf54XpHjPOfxOt+9gfXq3h+IOarofxxfuJ+ge/D9YXy
RnsQ+fuYf4bzEdvx/8Xvp0D54fxCjPJC+aH80V7AfAOUJ77v7/VlFcnXEc93
xf0fMeZb4H1MuJ/h/o/7O2JyH83P/QP3N1xPuJ8jxv0F1xf2D+cLyhvHA+WN
44HyxP0X5YnzFfv/9/ZXFYjL5+/tnSpyH4d4frJ4Pil+j/h9JuL5w6gv8Ptw
fYrn94rne+L3oDwefTTbyXfxJ/8fFSVf0BOTBuLnQ2tuKK34rPIFXkmsS1G7
kUT024QxFqukd30k83fC8DxecH0m0Xe4384wkY6X2FkL9yutBrkPLCX67Wur
lhNjaAGR9+aoVQ4M3UIQ98fcX8LIgf4if0wyi9coM6TXX+H/4LISa4k+jJxT
ZMP42zmsmL0tNUPj2bULbaB58ZUD81AFGR9FNy1rdgeX6Eua6iZXhrXIfiT+
XsjlzAMDO2BFZ5Sa0rNgkFr8zlTiXiVM333yCHPAR3iywkBLJ74Gop/eoPOD
Myn7BCfOeZN62JyR8zVYUExNLyieEjCwBXQV/eLUBhSCartFXiGdC199Hs4y
2VFLzTznbdyVy4fYGU5BjfFc6kfhEo+L94RQ1eUGOhaVEHbvwlmVV0KQktp5
16ofBXI266v3LakEy2d/09dLqI1XIjw9p1aDpsDN1ZFvRNHapaU2KFfDraas
F1Y3UmDBiE2vdk2ohkLLfcPcF7KgIdbdo3rIFxB6GF9hfIgl9uCjb8NtmQPS
KK3C9LeCT7XEHgxhJz6/v7YezDZJHOC3ZUMLOMyQl2+AgLxr+kr5ObCOFavz
bUAjuPGnrlFKzAOXnvBhGsNF9l/J8OHs50a9OOPrdBN2IbEHg75KMGmlZdSK
TfRq35ut4Hsr+yB/dwXlsMGo8ewMLpwSBLo7Pi+AIxpv2Y/HtsIC9V+bOLlV
ZH8wj/z0gbbzC/UyUegVN5IP4QvZI22Hl0Ly+1MpcV4ie/Fkq5Hvigd8UJo5
2YlBE9mPQafdx9oa11Nm/SIOXL0nAP8C02km8fWUvOVQwbo4Aey4esib7vQZ
ttgpmpRcFsCAGfQa1sfPsOMNf9aQIAFkaX9+Rr9RDsdsinreR7WBiqKDrO37
JrIfRd9/foZxvJWS5fXvtC4Q+VOSE+gLRm0XgtayMQW0iSJ79P6TW9/0UnnU
g+1LHtUadMCAJ+/HjJ7Lpxy69Ge0PhXZow1j5FZFjauEmf/Bv0/8nf3Z9WF1
sbJWLYQ67/1xt+cTsdfXJcpMsg3LJ+dXaJ+OG5Gg5Lmld/z2bvCziswl+wvu
T++3GnTMsG4i+7uv+SHZbsNe/e32uaTnNIecJ6C+Up74q5wZgwffX8gMc99X
ROx7wt80Wrx95g0B3BLsqWMxSkHcnm1Lez/jeacAIoedVtK52EL8T9RPkc3z
n9061E70AUd778VlOr1+7kiL24yuSmLPDzRpsWFExlPnpz6fyteuAaprTD6n
maLOKrysTTetgTbvxRIhJtVUU26QRuqG3u+lZW7mH2imshj3qI9j20H3t3rJ
YP9Zfdy4TxVg/3WIm1UCBTIBnbby2yvB53A3Lzg7mBr5a+mvz8M4INRw3sy/
9RHuHRv6KKenBmzkxi40KcqCsgc5a/y764Aj1+zA1M2CoDnz2m4dq4N4Kqwn
eASbWjAzle5u0wQcBi+IPr2Qovam3HGsaQKfk5m5tP2VFDfs3bRJ17mwTjah
lXW6EDY704dpu3Fh0PLFLoxGDrVs4xWLkbU8mHr5+2hbnWKwlHUfMe0RD0xX
M97RDhXBU37dmX0KPFhZ+KCBZdpIaTTyG64YtkF3azUvuKKF+ryUur+W0Q7H
HliAjn0lHJ+1mjqSIYTIlyEvrXZWwal1+++q53eAxO62eSYyVSDbNunWsDO9
8laMmmprJ7LX3T4GDwlxDif+RueBnRk9uz2hpf3aqvu970F7XpFVEPiJVgWf
T8lH0H1TiP3OzC0+zyxOgWLvaey76tXQtWuxLbMhFc7rPjNaO4IDJ9tkotWe
ZBD7XWVdu5ztwfdQMOe+fMGAGrBU3n2L4ZpD7I1Dp/kqJvNzqSTpM1PHNDXA
6qp9W6Qr84h9n7L2gIfj6Hxw2sSpHr+/196PZnlbheeDhXz0bUfZFvC9Xr5C
aTab2PcrOrjptBts+LL7wmd/GS4U7FvODf5YTux7o8DhPM74Cshkq98JGd8O
AYfa4uhqFbBTstbpg0Y7rOuWq+rhVRD7PtgibIGJXCWU7nlaN2mVECru/k0/
ryD2ff0NBQ5r+DPKeOXZVR311ZCzftMO/kwWpIXa6JkP+ALm3T5RaoUZlO7D
22brPOrA69LaVlZMOrHn0b5v2OyosGpVHTTYGzyjF3+i8iJczIc8rocBb4bm
0VZmU9KRNWN3zWiAwiV7UtTsc4i94T7n0DdWUTYk6N1Wnt+vAR7ZykTRb+RC
rN02w/NJjWCfmdF9d2E5sf83XLieTztYQb1UzD4w9hcuNPQLzqC5FkD45D0H
3Qa1gr73bEWT2yXEPhHukusM/lQMlS1m22c08kD5lztJNKUSmM14WrBDgQ9O
A/Ui1FRKIetKwLPVMXzwdU8/xTxUT/wB3Tm/LlMyaaBUfzmcOlUoALntU73p
4Z+JfXvWwM+A31QKtF32TYazBOT+gp2Bc/071rdBcEOONdu7AuQXJ6m3U+1g
wrBOU0usgLtZ/nPGVbeDr7L+OqUCHvEXpl980aWnz6dk7etPCcI7wFrPOTor
SnS+g/7D5LhHzXdjRP5DzkU/o5WK1bDcNXC87dwHxL6TW77mFHt0ErgWy0ne
nSnyL268HMba0lEFM88o6SsNTxblez6yTKV1+RN/Av29Ac/C906dxQGNYfOu
MFeK/BG0JwO87b2W5NdDuqP+Faaa6Hwb/TM3p2FmE5W5sMLior70uWLiv+xo
uPk1mCY6r0R/a0KRo8H8wW1wMENow5SJoVLnaqno2X6BDfcSHzmqJFPGFxZx
TwytBfVjTAdH309wlk5PcuquBe27q2br1JZSTnP3vcxKbwH5kS9eWu3p9Wes
DT6MaObCA60Jw9x3FYHdBKOjo8byYIH5lTTazjoqTNKtPXeRACR3BNBMXpXB
sYgFLuXz2sA+Z/IaabMm6uiowDpmdBs8uLnc4sQKHrXIXCEorU0Ii9Inr1Nq
qYRhzS33qI0d4L/x2mlmvyKqkeNwcqdWMygWWcq476ihyhzsnTkn+NBltjc9
6m/3u4Rd2TlisRC2fFCu40zOp7IWHqo4H94I2n4xdswPucCujlgVLdEEUldb
R7obc6hoD/XLW0J5hB+//X740Whr0fllH7+vj9/Xx+/r4/f18fv6+H19/L4+
fl8fv++/h9+H8uvj+/3X+H4ovz7+31/j/6H8EKP8+viB/5gfiPJDjPITjw/0
8Ql/wygvxCgvxCivf1f+IcoLMcoLMcrn35WviPJBjPJBjPL5d+E3onwQo3xI
fP6nPBCjPP5V+JEoD8QoD8QoD8QoD8Qoj38VviXKAzHKAzH2938rPxP7ixj7
ixj797+Fz4n9Q4z9Q4z9Q4z9+9/CB8X+Icb+Icb+IMb+/N/mk2I8CeMT4hjj
RRh/xvgaxpcx/ovxY4zPYHxZHGM8DePJiHG9irdjPA1/L44xfoPxZ8Q4f8Tb
sf/4e3F5oL2I/RfHxF77KQ+0B1AeuN/j+3H9Y39wvWC7OMb5hnww5DshfxP5
axjfQX4SxoOQ74X8KuRv4e/F+4/jifoBMfIJkR+Jz2M8EJ9HjM8jHxCfx/mB
zyPGdowXYjvBP+WL8w/tZcQYH0M+I/4/8qVwPPD70F5CjPFT5H/h7xHjfMbv
QX1K+CU/+W7Ib0T5i48Hjh+OJ/LFsF0c43xBjPMD5yfGxxGjP4jxd+QX4nzF
5xHj81hfGZ9HeeP8Rj6juDzRvkM+KfIRUV6Er/WTfyzOz8N27B+24/rA/QL3
A8Q433F+43rG/QDXO2Kc/8hvxv/H9Yr/j+ON7dg/bMf+YTuub2zH8Rfny4vz
v/F5lCfOd3we5x/OZzx/+FayrnT+wFoy/1eePCWxf2oTyF+K11Nak0z2n7xr
j2TcIZX0b+u4hwt0EtNB3F9wuFGiYOHOhQW3j32ileWS/ep92avjTJX3pH+L
xlk7Obp8BHF7cuuuhlDBIIEoHnbNP3u7uQA4WSvGutdXkv3N4nHJRukTov0m
4+GhE8ykDMhsHDPv6KVee/mW8jnGsY8wV4OXrNHMB1212+/U8iupyXNOtE4+
1Q7PUz2D6fNrqei5cg2DqzvgoVPJTnYdBT7TV9hphtbBDIdtjgx5D6rTiFd6
c2MDfD1T0MypT4SyU5ukTfc2AP2XwiaObRJ8329bfaWqAbSO/VLSU5ICz8/O
vaY6oRkWpVwe6H6NSfSZW1kniyZMpWI/+We+N2qFJxNesGgz02Bs1zSpgs2t
4LPEKVVNN5vouzkG4weERORTV2hy86fN5kPL2Rl2jIQSMl8fbNhpyR9ZQV03
tv3U6SXSb4ds3jc67G2HlXNVhofcqiD6zshZ/jKzIhuA1dBqYCGEQw9WUmr7
v1CstG31I0f36qfvEmuVbubAy43dTD/lDjjhfUJfqTIHpliHekQ4i/Sd0HbL
2fzgDsjS/7ibP1yk/7hy6SomerlE362JULvnuNmX6HtDK26wmk88wbi/LNJZ
9EbRvR42XJM+yM9MIPoQRj03lH6aTOY30Zd3hi64fa5JdJ/LQtMhswJE+lHL
jbll3iceSC5ZndFjVUbsc9w/Tkzpd2nA4l5/YPomJi08k9gPGRIzHzj6c4g9
SOyH7xPGe7sIQSKP3cWam0P0Z/I+WCk92BOYRYZDlz2vA69WzdIecIDuvbs2
8JbXg0s/xY1KSxOoM1OuRK4PaoacCekn2cZJ1EKFXAW9RS3gefxVF2tVDrVk
1DH5FkMeGP9HfehcylghZdYNbx6MdQ1dLe1dSr02qu43OVsANr+9D2ZU+3Bf
NdbB0NWj9JXGRVCxktOWmXc3gs9z3SVKbz5S/ux52wdd5oL9nYWujkpFVLyB
3rFz3Xywn3tN3uTZR3B+5/1ZWUIAmi7qtgyXMuqS2ru7zjptoLVl/hlG6Cew
k5zvfHVmG6i4utBMqEw4+CpphKeXALIS9PfwF36hLmhHWFf8EMKRWd5+Vg7J
sPrg9Le3CxrBxu5ZRzDDCnZM8Dnx5Uw9uNGsx7kvTYQaZZmXuen1QBcY7eU/
OkXGV2qa80caP4XYA8ac4x6OMu+g7KbjqSjdZmi5MGiE+8BUCHWUPh+u1gL3
hy7Zxb+cRuwBT0uX4e7f0mDS4wXj5UZzQVdn+HB3nXSwsIyduF6dCyMjE245
drGIPTD+s7U941gGoLztPUxLOLs+EHvAVKjwgu72AVZyU97rWPPB2to2i6Zb
TfZ7De9rNxiPq6lrXebrL6wUwum6otPseQxiL8TpCheYNIZST45OO68f2wiy
LcNbWSX+VFL3MUWZWb1+3qIP5T1Lk8h+PPPtR22lbenEXmg4vXML3/ED1ZYz
7Mta4179IDEohWaYQT34VXbNrnFcSKgtt2W6pIL+2FGXprxuAX7X4tyenSw4
OrzL7mIaF6yHJQTQ97KA0nmRx8/gQorR3U3StgXEnijN77W9mwupt8Mtyo9z
+SD8brlC6TCbutSQdrjZnQ9ajhOOMy+/h9zIiAqHml79M9F1L1v+A+jedVC+
toQPUw+Y59Pssoh9rRnk280anAWZjqmLira1wREtp+EhO7NgR8XI71nRbXDe
gR5kVZYFCle2X563ph2M2ZYLTV5mgcscVakUqXbQTvPIowkqqOiO298DhrcT
/ful3+VFqR96/fH29DHuKlXUr08+v1jytB3CHyxfphNbRaV1TvY3Km0Hunns
fJNn2cRe144c8pq+Lhu2D56f9SixHaRUMlo4u7MhjjqiGsvu9Td9VeabNGeD
5Znu7WrWQjgv+DTa/U0Ose/N768x55vmQPCzj8kDO4VgMjA2ij4nF37s8JCS
KO+AgkXuApZ+DTVZ5ZNEwLkOov+/HTFI05rUAeMljD70wE1iL0b+xmck9o7k
lnefaMHJEHd005bTPxrBrH5poppuCtHXwq0342lHPhL7J9Y5MLdnguh8xZAz
aLl00SdivxVLT9spPUJkvxV2upRwVgWBbj/NM4fSa6FfiU4tS+ctVDmGhso8
rIXhQ0rG2L57TQ2o/lXqSH4TSBloqZh4JFNH3PbVRV5ugQeNhx2YrllUpn/D
No8mLkx3X/qJ9j2XYlXPipNP5IFLkr6m0pdiaua0H2srDwhA8fZAW4Z/Jtzq
H/PLhvsCMNO9YcLeW0bdnHXvnKJGG0z1dtrLv8ihnNxtY/cHCf/H+Sp9/I8+
/kcf/6OP/9HH/+jjf/TxP/r4H338jz7+Rx//o4//0cf/6ON/9PE/+vgf/9P8
D+z/vwsfBPuPGPv/78IXwf7+q/JHsL/kvraf/f1n4ZeI3+eN8VDEGC+ysR+6
rHV3BqkPgO34veL3oePzWP8HMcoXMdYPQIz1BRBj/BgxxpMQYzwKMcavEGN8
C/F/lk+DmPAvxPg1aB+Kt2M8An8vjjGeIs7PIfFfsXaMP4jzd1B/IMb2P+Ln
4H4jXn9NPF8SxxPnP8oP5z9ict/iT4zzHzHOf8T4/4jx+xFj/xGjfMXH77/K
/8F2cYz2kDg/CNsRo3zF+ULi9d6wHhvyM5CfQ+5v/llPCfkXyJdA/gnyIbBe
EN5HjHwQfD/yY5D/gPep4fghJvmzv60v0o4Y2/G+NWxHjO14/xq2I8b2P7s/
HMfvVXX8puxFOQTjefWf8Y2Qf4H18cT5a/g8Ynwe5SvOb8PnEePzyAcS57Ph
84jxeXH+CsbD8HnEy36r50fuR0r87T5yglf/dn85weL3W5N6fj/nA9bXQjzs
t+epBBWrfZc/p5H70BFf/e1+boLxPnTEuD8jxnoKiLEeIWKs94UY65UhxnoF
iJHfhhjjf4hx/iPGeCZiXC+Ikd+FGPlm83JejDWu+kDWI+L/LF8NMdZLw/WL
fCIcf3GMfCnEyDdDjHyyP+NDivMDESO/EPU/zg+8nx0x2gOI8X52xGgfIMb1
SPh6P/cb3F9RHuL1iYi+/TnfEWN/cXz+p/lx2I77C2Lx/QXji8j32nB9Xqh/
YdJf5iMif/Kv8g9xv/ozPi3Od9x/8PtQfmj/4f7a9Nv6Iusf5wO2C39bn6Qd
5wO243zBdpwP2I7zBdvRfsR23J+wHc9jUf44ntkaXM4jQdaf8gvF+bjifE1x
Pq44P1Ocn4vtuH5wPuJ+IM5//c/yB/+MH/hX+bvIX8DnUX74PGJ8Xlyef8Rf
xHac/9gu/nvxesLi9WuwP1rb1Ez4/NTf8QNy+ZT5WT0m8QemLE81jK+NEZ3f
nhy9xMonTXR++xOT89ufmJzf/sTk/PYnJvHmFZcOB71II+vN6/apA8ti0sh6
PbGubuq40elkf5c4rl+s6cgi83NEbLea9LxaUDlToSedH0fsQznP9g1KBlnE
/tvQektdZ8870XnJI8Eo26JiYv/Jq485xI5NJfO18bW6MV8unczP+2WT9JVG
VhP7MP5U51D3oywyP2+rxkWpfcgg/thl2x8ZtH01oE9fcEkKokBxxp6sHmED
GDnc9uvcGQHcsPPDbX1aIWfiDgnnsjDQX/wmqyc5AzRPmm8I80iGYDWV2SYG
L0Bh+jbnwzl1cDLpmAU7PZaS9zZiGMxsgSb+zfEm5Z+oclps5XwGD1Tm5ulL
ry2mpqft7vdsYhvEhvRfq+RaRd0VOtrVO/b64+Mel3GcM6BqgXRtR3IHdD9k
ftebyIOpNatsFeeFQVdtzdyydAG8fXZke5MwBOxNBt6TOCqExVtXMZ0HBpP9
4rkcu5/hkFcgsWxwklpBLmjNTOrY3UJBUtEcBdsR+cA1imtV+x4PeZMngM6r
RPDUtKhNm8QCGcNOLR0qm/K3NSy61JwGFcmZO/kb0ilZPcmoWsN0kJrFC7Qa
nUhF7g9zKctOh1uqm835Oy5Tvka8hR94GWS8lX85fqlMJhOMdQyGh9gmEP3U
0u16hE3fT6l4Ck0/PG+Aebp0UFK1pZQkVrPMUxogagqTzTkcD45J/affk2qA
A6oew23vUVCgb2pUsKQRlN6OWa5zMwEKmlaOvPK6CSydJwZZfe/1m+d7Xdng
LvIPPUNGlgy93Az0LcnTbL+EEX/RPuBYdc/sBOpUpySUqrbC+fVJQ0OaEyHz
S9ui8AOt4Ovc9tJqURKoja1o+tHaCi2lTy8z1FnUuNPqnmG99v7mpg4/qy3J
8PXoFumtw3mwd/frJLVjyVB7v/jYoxkif/KJpUTszqM84Gj3VzTxe0/8y6lH
Jj5wDE6BcqczKdIGfNi7+aATg/sOxo+u+LzSXuRfph7yH+VbJiD18dC+Nh//
3YDPLKWULRj7sgPawGdxjA1zQRrQn+l2nHvVBnUGXjNMzqRDtGt1vUux6Lwr
6EFQeb8ZQrCWXjcs5JnIH12kd++B40EONTh+H91tcwdIeXxpZ3VxqHERVu16
rh2g5L/5BuN1tZg/woFgE1qX4i4R/+n54Iq0My4i+yfyOWfljS2hRL81Kozy
VQkOFtWvNt2epLslCTzluBIh7Tm/O/94pPRRdqxkGmx0lU9Ta3tO/FGru5MM
+BqvyP4pf+NQHesxk2AtR6eTbHsvYi81PK4dHjIjgezXKvyjp9mHEok/uuRW
CrsnLVUUL/hprxqEfmvaM5ULQsNL0fS4JOKvXip/kagmJfJPyXmD7YXT9RU8
CDpTvErpXD45Xyb15kt++aTwig9PvpdwOQsryPkj2jO6rfwL3wa3E3uFZlnU
ZafZAfF+5zR09DmA98eet4s04Qf4wgnTzgmS0XXwdXpWDq29Esy+5X8OjY0h
/Ll41YuTVhXXQSMz4L6V4ltITVONCuh9XsmuPFZt0EtKWJhjOPBAEwAsucpU
CKWGH+IwPjQ1QdXoyKdW01lUieTXSRPTuLBFzSiEnl5AySl3W/XTF8Deo+el
3SsLKM8P9csl6QLQdvK3Zr+poM6aLrPued0OXePnuDKuV1KVtSMSd44RwuX5
Lzbwk3r3HRfNIV/3NoJcTMpptmYiqTdYv+fMVulV7vBtTOqg6Lh6iKxTmGhi
FQ+LXAwzpwxrAFdXwXj3fQnQsaz/ETnzJnjmtSWzZ/IToi/R3vm++tOqtvo6
4n+PDjop39kvkvjbOnrTD+utCCf+tVrvGHXVhhJ/um7D8uUFT0OI/6ysWTho
fNYrYi93rRVEGaq8h10njE+xhyYR+9QpboGR9OskKvPH9QGO5a1AC45JVqvI
Ifao9iqzLNqWXKplmukEd2s+1A48WNITkyLyt38cSFBLSOldL6z1U/bxYYDc
xD38De+Av6h8R0R97zoatXmztHQq8a9dqpMFLNVUUFU/mf7LGwGsFFpskr6T
CsoJa041jG2DG2/WedMffSb27WZX55XSJZ+pr+6bf3g0tsHVe6dXKB1II/63
hfmRq4znaXDvyRXD1aPawXHUlu7g/DS4FVZl3qnTTvIlcL9IjR+0QGcMC94c
SFd4ZiWEjHkQSKexgOd1YfvQ40KYmbO9nDMpg/jfstfSRtvuyQCs50rjhd91
nFsLZ+/Gv1tQFQlavp2ptJd1IJcr25S7LBLGas3/2JPSBJof+5dVvA0Hx/BN
YWprmyFzxy3vJXfDQV7L74pmfx7Efb36MEgzDOTbZTWTzQTgI3g7r2x6KGQ+
kAvL6rVLl+8OOt52PBiKL4H06EEdkLRLYVYg4xUE8Q5N6KQ6IPGc8uzXs18R
+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
1z78vnRkRo9zGWVduM4rNEYI/wfQNRlp
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHmYj1UUx+/VqoQWKUuMorKMfYsiSyNrQ4wxQ2MMxjpEssyUpWQo7ZSk
RAtFu0qqUdEqpUhpI6WSpX19njrf53ze5+eP73Pe9733nnO+5977Pb/nl5Zf
1Hd8uRBCWQzhKLOnG+wx6Nt2wxJDtqEq3zTnDOzRhjOxxxiqYY81nG2oaKhk
OAdb2VDTcLyhvOEs7AmG6qw7zlDbcKKhgqGO4SR81WBc62uxTvPq4vtkQ1Pm
Kc65hlMMpxrOw55mqG+oAtcGWPFriBW/FsRQLvXwLV+N4al8m2AVrxHrVI9m
xBe/5lj5Smdc67MMnQydDS2Jk2ZoDWfVrw1W9WuLFdcLsMqrHVZc22PF9RJq
oVwuMpwP745wbkj8RuTVgfEG5JQO167wlK8ufNN7K/JVrhnEEdfL8aU43eGm
uT2w4tcTK369sOLXGyt+3fCnfbgUK199DRfCqR9W8fqwTvXoT/yLDQOw4noZ
4+351hD+A+EsfnMNVxumGp6FW47hY3LKNQzmWXkNwYrrFVhxLSQ/1WMUVnnl
w1lch2GVex7rVJsRhky4jsTK11DGtb6AdeI0Gt/iehUx5Hts8HMmfu8Z1gW/
y58a7oHLevgUGfbDZ4JhGnko/hh8y9ckclUuk7GKdxD+Ew1TiF9AHYfj60rm
5JGH6q3z9VHw8zrIUEy9xKkEq/gPG5bC6YDhc8O9hs+Iea1hJs+KU2qYbphh
+N7wNb7nkLfqdB1W+c5infjdQN6qwTysfM1mfDLvI9nn+wzLyPcxwwrDQsNu
w3LyeokYNxrK8HUT82aT1+vkdDN5F1KL1Yb74Xg7+Smv9w1vwvVWw/XBz+8i
wy18+9Zwm2Exdi7r1xhW4m+b4R3W6U5Ld6W5ib6fwV5pz3SWkh4grUx0X/Ok
39V5T3Rf+iVtrsu7NFtaKE2UdtfmXbpeg/WKXYdcKuJD70nPqEmOaayXNtcj
hsakRdKrRPelidJ76Zt0MNH9+iGl+w3g1Ih3+ZXeSHdOwUe9kNL9xuTblHfx
T2d9ovvN4NaC92qs07zO1DILHq2Il+h+a3zrXnQNqR7QJqR6QNuQ0v2kD7Rj
rAnrusBZOindTDSxP7l24ptq0YF5SX6dQBZrVKOOzDueWtfArzQqkzFpXb+Q
0u5ucOvOe9IPuodUP+gRUv2gJ7XLgH9zfGTAT5rXJ6R6QN+Q6h+9yLE/edQh
Rivq0od5ugM6+7oT0p9s6jWVsbkhpe/SR+l/Djko17zgWpboe2FI9YAh1Eu6
NZrc5SMXbkNZn+j7CPIdjS9xyGde0ify4VrIGvEoYEzv0qNpzJOmSaOk89L3
8cG1X9qpMyetnkCe+k2nO6A7If0vIlf5nYKvrcH7xxL4SSels8Opl/plFv7H
wG0S85I+MQme01iTybt8qM8OYq/FbwZ8pPcl+HzasCq45kv7pfvXkMfM4Nqo
eLN4l96X4uuH4D1gWUjp/hzy1j5fT36zWZ/o/g3kUcr7ZNZp3jPBdXk5e1ZM
LGlqorXS84WsKQuu/bOIqXHpc9LnislD324hhtaqR6iPqH8sCK73t5OPtH0R
ayJ7KJ37IHhveCC4rt9luBO/i3j+MLjuP2iob4sLo/euTww7g/8+GMsejME+
Qq4/sg86K4/zfSl1X85eKPcV5L/F8BB57CUv1fQ5w/PEKWF/VIcnDWup5T5y
XATvldTuK8OXwfviU8F7cAn+Hsanvj2B30eYV0KOq8lTOT5KnpuD10C56w7o
7ujOriPXsVi9j6MGq6jDGvJWfi8wT3OkFzrfOtvZrNUdfBH/RezpW/CTfZtn
7fnL7PsrPOsMbWB9EfE38Lye7+OZ+xLzdZbKgp+9jYZX+T7O9nxU9LOgGrxG
HTYy/ya+beS5jOcbyXENec4i1kzDpuDnXr9h3uD9ZvZPZ1FnrxTO8+Cr5zuY
u5n6X4efOax7N/j5eZf3uxnfxHzp01Zqvo53PS/hOZu1W/CjPqzeqD6n86Jz
vJRc3icf7Zl6Q/IbdTt+tvMuzdLZ3AY/2Q/JTXsh/dX52cEazde92sn3XcwZ
z/gO8lW/UL/JYK7uZA5zd+FD+raXWkof9gQ/17oT0kad7S+Ca6V08jDPE7Aa
S34/f8mcncTNZf4hxvcQYwH7vJu9vp+1ilVMTjPIS8/zGf8K/x8TI4c93Eat
vmGN5uuufo8/9Sf1JN1F9Z2DfJMmSPsWY/dR/+94XgzHA/CV/ZHnB9jfUuL8
QFx9k27ewdz9zN/Pu+6X7vZa/H/N+vmMHziinqrbROzhI2p+mPHbyFu6PcTu
36DoZ3cfHB6E6yHWXmzjp0bXqkOMyX8N+3Zc9POwlzqK3wj7lh+dT0ezFaPv
1USztaJroX7j6ndfR0Mr+9Yyeo+9IvoazW9sdnD0Myl/BfgcbbZD9L0bZrZ9
9LrVM5sXXVulK2PQlrZmh0bvmeKaC9+zzE6Nfv/OM1scXYeamR0bvQ61zc6I
rnONzE6PrjvNzf4e/I6PjF4j1aep2eHR63BB9NiKe5LZCtF7wgCzl0fXnilm
06Pva7XonMVXMdOIe6b+G4vew6pGz0+5lTM7kDqoAfenDm3M/sPZaG3Pf3L+
/yOeYp1s9rLoWize58O9UnQOyv8XQ9fo90X7XJ29zjabFV3PtA/lyEH7EMjh
QrMx+lkVv4uI+6+hXfS7/IehRXT9+Ytclaf2pCb7cmn0eZpzdnRu4vUb50ln
qZ/ZKtH1XmetLufnGLNNovdg8fgpOJdO9twluh42iP77Q303J/q+ak+1zw3Z
a+X4Kzl0s+fu0fucePwdnEtm9DOkGvY2Wzl6z1Scn4PH6hmdv+Zn2HP56L26
h9le0Xvm/5hcUn0=
            "]], 
           PolygonBox[CompressedData["
1:eJwtktmLz1EYh88rZA2DsS9jDAnlhgvFBWVfx5jB2NfJMqMZkht/AMqNEsIg
+zZjCREhIzJJSklJSsmdNUuW59PnXDyd5/z6fc973vd8ilbWlFa3SClNgJYw
MXBYhF+DPngNvMIPQju8IxzBL8MfmMX+Lutu+AVb2L9j3QUr8CFwFr8KbfD+
cAq/Ad9hMvubrJtgQLiGzj6tO+Hfsl+C0ewHwhn8CgzGt8NH/DC0xv+xXoRG
GBH+TX4BPkM1+5fJPf6AWvZvWHdAv3BN1dIdv8Jm9q/1HYwK11StBuiAtwq7
ZjIeHwf78h3mhGek2dyHbuyHw3m8CZbjy6A+eUbT8KnhWrdgUnhmmtV1WIxX
hmf1LM96KBxNnvlWvBMcw99DEd4ebifPTL0OgkPJPdfhP3Pvb3OvfcNvrZ4/
5UwoC5VQhhfCE/wxtA3fUXfTG87EZ4Tf/g4MwwvgAX4OSsMzUO8PoQLvCc34
U1iALwz7fpiPl4dr7YWu+NzwWceTexkTzoJ62ob3gBP4h+Tsfsl3V4ZVqxec
TK4Z4W/0X71ZSXgmmoXepHv4zrrrI+iMTw/3psxrFiPD2dJM1OtsuJfcs95m
bDj7eiNltRh2Jmf2L8wLn70n+dsu4azojI16a3iR3NNqfFV4Fs9hCb40nIUD
Odu9w66Mr8HXhv+rTPzOGVE2dIcqfF14lsrkBnx9ePaqqexMCWdRGfoPCS2H
0Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxVmgnYz1UWx9//Pb9IpEQpSzJCiVAppXVqTNOUStK+703LlLapibSQiMoW
EUJelaUkIrTYQpFdSmTPWrJvcz7O9/+85nne85y733PuPfd8z/m9/6p3Ptr0
kVRQUFDGCgr8r6BbrqDgWC90d77XO/Y4dXX62Okup/OcPnO6x+lCp2FOdzqd
6/Sp091OFziNdrrX6SKnL5zud7rYaafTDqc3nXY77XLq7DTPaa5TQ6cxTvc5
/dVposvxsdMnTvu9vs+pewoZX86FnBW8fJzTOm/v6fU2Tm2dejm96tTOqYfT
K+rrrbbXnN4Vb+/UR7yD00Zfa4NTRy9vd77NqZNTD6c3vK2/U1+Nfd1pQC7a
33QaKP6W0/vinZ0GiXdx+iAXZ438Hzm9LRmH5kKHd5wGO3XVuCHqp2+Y+tHv
Hy7PpU79dE69pVOvFDKO1Nm9K/2Gax7jRqitr9Zrq/P6TPqh01eSiT0/lz7o
MdapUDKOUVuhqIvkLu538oHLUQMb0Fj0Hu/0ofT+Wmsj1yjtyfl9ozZ0mqCx
nMGX4sh0va97Hfbk5X86vyyFTpOlN3pMEWftOdqPtaeqbbTTdOmATtOkJ/UZ
akP2mZIbWWaJI8sP4pzTbHH2+N5pnOZ8q31Y911s3flypyu93EQ2Pl9yI+8V
3jbJ+VynBWpD3h8lH/IuFkfGn52+055LxJG3hMWa7He1r3lVijP4Rf3osTCF
3MuclqoNnVZo3nydwQzt94SPv5a34eU/nFY6rXJazVpOi5zWStbF6lugvnVO
P0ne9eLIu0Ecua5JcTabnNZoPdbarDNDrs0+ZnEKeX9XG3JcnuLeJ6k+X3tv
1VrI9adkpb5DMiFLsxR77nTa7vSb+kpZ7L3LabfkYM894pzBPqctWnvLQeex
X23sv1dj6f/D91qSYp9Fsg/utV+KfUw+hrfAOyzj9cOcSjoVT7EWe96UYmwJ
p2IpZKLv0BT97H+YxmROpZwO0dibNe8IyGLckU6Hq7+49ss0B/99SQp/d5T6
WK+c5pR2Kqs26uW1HrIfl2IO/QPUfoxTBbWxxiC1VXKqrDJrVMHXa43Skgv9
TlAbaxyvsYy7RWtUZU+Ltf7iVE3rMvZEcdZerv6aTicdNLaWxlV3+tNphdOt
Tiern77Bmlfb6Wjfq47z+k6nai3Gnpainba6aqultvyet2mNetKhjM7r9IPm
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
DfHM/wDLYOGp
            "]], 
           PolygonBox[CompressedData["
1:eJwllnmwj1UYx3+/87w1bdO+TEmopuzElX1kdy2JJJSlS7biYkhE1hIqaqTS
okuMQYlKaBNtCCEppbilRUXSvn++8/3jO/M55z3ve855znO+z1uhqLjz0JTL
5UpQhj6KXO5jNJvO8flcbhu8FS2gvRB1gFejm+D6qA28By2Fq6C34DfRPPgx
NAgegrrBM9H38CHUBH4+eWxX9FryO7Xh1ixkH3yY+U+Hz0TraXdB3/J8P3oW
XoX2wp+gB+E7Gd8a3o2W0C6DNsF90evwfLQGvho1SN7DKvgR1Bu+HzVkrpVh
3oWuh7ujQvgu7Znny2nfC+9EveBT6VMQO6BHaV+nPcDj0Lk8u5J2D3gD6giv
RQ2T17A5vEat7Sl0AP4cNUre4wr4IdQTvg8dhY+gq+AX0UXwQfQcXIS+gr9E
jZP7psLNWMMeuD3qQftG1A6+G/XUWaKO8DR0KWObhGOpHKhNewntGfB2dBLt
irRn5X1mx9EO1AJ+FV0IF2sOeAwqhN9Ac+BlOiP4WjQVHozOYvyA8Nnehp6E
b0f14CnoAcWTMcd0Fuh92udljmV3rZd2lnnugcm5eovmTM7ZKeE9am9D0ORw
DLT3W9Hl8BPhuXRmA+Gz+d5IuKu+EY6hYnePziCc08rlUcoJuAhNh4tRDd4t
CY/dhk6j3TucG8NQW3gDmgsvR+3gjcpB+BnUD26BJsKdtEa4FZqcfIcK+F5L
2pMUi+S5bw6P1RrKwd+F71Zf1AdujiYkn3FT+F3tGX6BMzyF752MFuTd15ln
J2Y+m5boBuWP8iE5Z3bAw3TH4UWoOmMnKObJZzpD50vfUX0LTdLaaB+BW6Gy
cF36zpFXoA/g4WHWne2m3Ebjk+/c4+Ec0NkrBhfzfqPMd/MOrUntsPd8jf6A
/0Hr4Ga6Y3BbxhyEL9Oe4P7hte1FNeEt4btXmnesqofPUjF7Gl6IDvBsePJd
qhaOne5UHbgNffvhfPLZ1QiP1Rnq2dBwrmqMvG1wOLfkcYpt1XBuKsaKzS60
ODlGH8Ij0dvJHls+8560F/UpV+tkzgXlbC14Js9HJN/ZQtr1w15YmuxVNTPn
pjxrMc8Whfeud5bBS1GCRyfnZlXGb03O0cZw2XBt2K37Q3uMcgp+Jzm3K9O3
JTnH12utmZ/JoyvBY+nbDG9CF2T2VHnpxuRcmcjzkrxzRt5RMfNYeYhya3q4
NijHRoVzQrnQB1UR0/de8hp09g/T7pWcA+1pjw6PPZTs5XXp25Hs6fXk15n3
rj55z+zw2cqDzsjsifJC1aS5PGuQ2ZvHomrwON3XvGNWAG8P107FVHe3Vtg7
dIeV65XDXqScl3d/g1Yme7i8/hhanez5I+BymefSnlRLDysfk2vqb4oH6g+v
QX/Dl6AByXfiJ7iCPCP5m6o1X6AVyTXnZ/j38LtN0b/KBeZ7BW6uOxb2GHmL
1ngCzzqFvWIQ+gEuj/olr6k0XKNUmzSHvF05pNyRx+cze7i8W3Po7D4Le6HO
cB3cJewd8hh9+8dw7dMc+mnRGrW2l5NjPz78b6Iz+CvsCfKCtejX8B61t5cU
43BOKBcKkmvbvHDtVo1TLs4P137lpGL7Z/hbirFi+Uv4W4ppJd3V8L+PPPWK
sOfIa+Qh+teQZ8mr9M+hu/NpuDbqDulu7AvXBt0Ree2ccC2V5+pfZlq4luif
Rmf7X3jvOmPVvlnhWqoaeD5zlcl8t1STd4Y9XN4tj9G/hTxC3qB/jGtoH5/5
LFXT/wfXT0nK
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
bULu6t7PasZsR+PcrWSNI5ZdS9YO7B7jHLE91jsGi041Z/t4h9t7jyeV/H1S
jyt3UY89Mae+9POewbtp1ixqW5+qqWnRKvcRm7+V9OFC/SQeY41Fa+Udpsxz
S97Zbtp9sHmziXP1u9rd2Oykv+2M3b7GczflbGw+nqmtcOr+v8zV/q5zz3t4
783uZ8847V3FeO9vzInNAeYndfdA83BK0AMla/oZJXNlKe9sT3Pp5OAnKp97
5u3zNu8pWRdaaMvfSyMPO2gj507yXojfkeYJ8WhvTJBxunLuDZqojmbPz/GN
UMc38G4P9X67q2tPZeylnC76gy/HO15W+V2cn2XswNkT1YePvFviwTu+qiTm
MUfsuYN/1LLnoxekByI3exlrcucC84f3e05p2H52SRyiz6SmUE/Ao3O9f/w4
z1he4p57rT+M2zrX13lqAfWR2tgr8repyticoz708ga7G5+LStZHelZ4b797
O0/NhJA/wj2coZ6CQecHLap/PfWxh9+LmkvEijdLvQO/wW5yAtykVl1XEkeZ
u79kr0aNgl9e8v8tE32rE8z5fsa8n/GfZU3rWLJ2PaxM6iffD5XUR32hD5yt
rkklx3W7qVHYyx2vq/7LPEe9xf55+sGYeF/t9zz3MKYu8+aoFbxpaipYCd7x
RsY77uQaGAqO3FCyTtzg+Lta4t8Ez27p/iWMwSjjwPvhHS4np/6S29OCppbE
yJtK4iW1BewbWfJ37kjHq7nOPn5rzwyaURIjOyt3Wfcxt7qykN3G/cihzpAv
9MDk5Jp+k0fYPlR/mbvNPdPUTS2ltxqt79zhXd7jeGPXQj3j1MX93GnODPb8
d+L1nebPRs5/br0d4/1ONLZLq3+sNhDX243tPs5v7Z2OM25t3TfRfmm8tv3u
+Ddt5pt+5zjtr9/7eOd31Ucw/ZOg9ausm1O9v9b6O9O41/sk7pr4kN/k9kN+
f2GtoobT40/2+8VaYx/9LDXvXu+W9cnuf9A9yIE/6H72TFEOeq/TZmrc0eYF
eEzt29bYIp+6yu9lfhv3t5+c6Dw5Ptj7GqB8bJ+rHdRb3ii/bfhNxm9JvkfK
J3nvI4wVufhL0Bve+yIRy3e868HqA3/Ja3rBVY3pDL9Xdr6NczPNsemOVzFe
E82Z5UL+1+bGsfF9ZJXYjF33l0Yd45s685j3Qf1pHXvnm0uXegYfH/HuW8sZ
/6//j/0fGfPhrjGP/kOrtAG/d6vSd+a+0rbD4/sbdf0UtHqVuX1u8BWqvMPv
iUGV7/Hk4ItXiTsfE5cq31D74AtK9ljfIrvKuz8r+PJV9i7fBa1Y5bvHlte9
izeDVqrErOCLVYn5nwUdWGXd2z74dlW+lROCN1eJkR8EXVFln7IwaECV/csp
wU+tEiNbBF+nSjw9L3j3KjH4HGRU2bttGPzL4EeQ30HzSvZ3rar0Afu3Ct6t
ytqNT1s6zxvlrfIuOsXcbyV71g+D2lXZ/w0M3rLKnmOJ4F2rxMhXyZ0qe4Fa
8PWqzPnnYvxayXr4fNBGVX5vTDyqxLM5QZtWWXuJ6w8lYzsovpeuEvcOY73K
WrVZ8M2r7KuI2dyScSP2P5eMP/qfLWnDHvH9tm/k+CrjSAzf4h1U2VsS799L
xpwcebRknpBHj5XMpTXie3ZJrDytylpGHWsb30+W7JfWiu8nSvZU5FQxr9Bz
jLqWqdI3/OJ/TmA7/Rhv62jf11FVykLOj+YlObk2uVNlP827x7d1jetzxvkZ
84/c2wIZJXFs7/h+r2RvuzPvo2QvxD2vWeVd7xJ8VsnfF6vFd4cq+/suwTtX
+duF97Gr9vBe96nyzXYMfkSVv2meKvkbg98Nv5bMJ+T/pUrd6CWPDjGXPg86
qMoefD/yscpecskqc449OyGjyt6W97Stb+rxkr0gfWCPKt8tb3a+dYGacGaV
eUPOHEA9qLIPPZicrbJnJAdfKJmH/wX8zi3+
            "]], 
           PolygonBox[CompressedData["
1:eJwtlfdL1lEUxr/Je2+DdhRBSGUW2aI0s7Rs0LDhyJYNFTXL1LJtaYVhAyMI
goigkpB+708o24P2oqJJNCmCBg2qz8O5P3w4z3m/695znnve/qU1+Wvioiiq
gBik+ii67aIoHgphJvlsqEQPhfdwH/IgGe7AeZgI2fAcXkISzIPpPFsG69ET
4AJkka8i3uKDi9HxMJe8Bn7BPvIW4gC9F50Jx7i3nHwDejQsQ2+D79BEfoLY
D57CP8iECtjLtZ6Qhm6Gv2HN2eGeu3AJJkEOXIQd3L+f+IxvJqIHeNOT+S0F
nQy90bPgCuwkP0j8xj3r0T28XdMab8Ee8qPOnvkM88lnElPhhupCvpzYDTLQ
n4hroAwWkm/0ttfZ2hP6HjEXNkEReTGsQyc665323Bx6OArdVTVDL4XIW4/m
hZ69CDXICT0b7G1P2stCZ9+6ClPDN9ty/Q1xUfitUL3w1kutIQ79SnsMNV1J
PggWoDfCQPRl+Shm95SSJ0C+M4+cU1/Jm4hnYnZvA/mB8Ew++h16JMxQncjb
Qx16q0B/DV5ocPbtctjgbA190B2gPnhYvW6jNTrreS16E8xBb4cx6M3edBE0
ot8SR8AhmOOtJ+pFFexCXye2g8PyNPkQiHO2Ru3lNXGYsz3N8lYj1aYy7P1x
6KVqkEe+GmrR1bAbfTN45QjUk/8mJshnzs7Oz1C7luC97t68Jg/uR8dUI66f
1HvQa715Q57UWfpGPBWzM1VH/sjZWWzUvsirvXljms6I+qA9ODvTSZoVqhm6
AHqht3ibJapplc6+t2c3h7Pjvc0WnSHVaigsdlYz7V3v1LtUgyfOZopmiXrW
GtbYGNastWgG6OxrTSXkf4jjnXnsAaTzW0no0UP5mDwj1DDNW8/V62LojB4O
S9BZMBad7a3X8oDOahdv13Rm5S15Ul6Uxz5CR29eXQ3OWw9OBg+MQHeCFGff
OBM8LO9q5k1BT4bj6HR+++JsJmgWaKat0OzwNpvkcZ11eUTe0JnXu+VJeVHf
GO9txmi2aOYUoH84e7dmcK5msTev6YxdC56X1+UZ1WqJt1mtmmkWfHD2X6CZ
0I9rfaE1ZjU/7WyGa3ZrD2eDZ+VV3TPOW41UG/XkP/bNvgo=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmXnc11MWxx9b92sJYexFWbNElixpbIWGmUhjpyzDDEO2mTFmZIYZxjZZ
SrYkSkrZKkslRatKotKmIkzKvkZhztt5/149f3y637ude865557P+T01Padr
x0vWrKuruyr+WSvad0td3XOBDoF+DerqugduDwyK/nmBtoFB0e8ZuDvQ3/k7
Ao/a3hl4NtA38HDgscBdgR6BAc7TH+gYsh5XXq/AsECfwEOBJwP3Be4PPBG4
1/5g194TeMr5BwJP2/YODHGePUMDDyr3GefpvxZ4ITAiMNwz0Xta4HnnRmrb
ANf1tz9WPThnlPPY+qLtQPf3c89LDdJ32Dra+UGe84jrXlYetk4NPOf8BG1D
9/HaTP8V1+Knic5j6yRbfDnOefa8qp3cz2Tn6Y9RL+yZrp3Y/VlgfmBB4A1t
Q/cZ2kx/rmeg15vOY+tMW2TPcx473tJOdJ/lPL6c49g4z5ygTUu8J/R6W9vQ
/R19xF0tDkyx/65j7Lkp4nVZtD9qw0T3v6e81wPv286wHaltHziG3Uu1DZuW
B2ZrxzJtoP+5Z6DjR85j08e2+OlDZbDnU/2CrZ84T/9/nsl5XyhvYeCGknqs
CnyrnfjmG31B/6vAIv2xwnls/c4WW792nj0rtZMzv3ee/t9K6voDfixp808N
8q0Ty8TqmiVtQ/c1StpMf92SenDOWiXnsXXtki0x9YuS+5lvUNJ32LpOyXn6
VXx/qU3rlZSHrZvGd13JMzcsaRu6NyxpM/31S67FT2Piu3tJWydEe1vgtMAG
JefZM0OZmwRuLWlro2j3DGwbaBzYzDPRe4/ANs5tHSgl9d2ypA3Y9HKglzpu
4/y67qHFpi1K+oU9TUrqvYHnrWd/c/3EuomBnoEzArt7NrJ3Uj/8umNJH9Hv
oU3NAjs7j7xdbDl/put3COwW2Eq5uzqPTS3UCR2vC3QLbBeYEngy8LvAQe5H
rweU1zIwKdA7cFbgwEBz172lrvsEDnYfft1Pe9B3X9fQ398xdG/tWu7ncOda
BSYHHg50Cfwx0Fnd5ynrl4G+ntkmcKjjnHmYLbKODBygvsTFct90K8/HN22d
x+6B2tAu8LZyjwk86plHB55wDG5t7xrO/JUtdrwaGBA4NzAu8LTnHBc4Qr0W
u//4QNfA+c53913CJVNL8vjvA8+6tlPgnMDZ+m+heRROOEGZ6DItMCpwYWBJ
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlNlLVVEUxncm7kVFSlREo7d5trkeeiwfIo1s7maaaWnavWoODTZRQRAE
EQghRBBBEIEQQQQREf0r2Txpsw2/j7UffqxvHb3nnPXtb51MXb4qVxBCqIRC
+BVD6LAQHlArYBN6C5xE74YJ6EnQhO6CAdhOf5r6pyiEV9SD9FepJfAFWuhv
U9fDdHQdXEHvhX9wnP4JdScsRufgju4Dy9BtcB/dAN+glf4edSO8hUP0vdQM
rER3wkN0I2ww/43+txNeQz3XrlGLYSa6Aa6j98E2dBUMM0sP/QrzmTVrKxSg
B6k5aIdF9CXm99a11ehueIw+AiPQH6lHoQ0+QBPXbmo2GIMulifyHUah50EL
+hysRZ+Ap+hm+CSf6M9Ty2ABuhluoWvhHRymv0EthZdwgP5y9Jk2m5+pzrIb
ZqMboQ+9H75Cnv4utVyeoKvhAroaKtEVeqfomdAsc8x/q5l60KXmz36ezmaW
ube9yfsiyEY/A3n/JmVFZ6B3eZ/Osi9laYZ5VpQpZWcgZU0ZGkn/M53NsTS7
mb+rPKhFTzb37lLK4kJzr5TJrO5t7qVmlNfBPIvyXGf5V7mIfqan6KeaZ+dZ
8nYK7InusbxZZ/4seTQevQvyerfougYuRr92Br3UfNdepF1YY54d7YR2caL5
b7WTO8wzomyc1ZmZe6DZdc+x5hlVNpUpZeNzypoy0k6/3HyX+mGueUaVTWVu
GLroH6WZC9FbzXdBOz7a/B30bGVQu/k9ZUU7Os3cI3kjTzLmmVAWsuneq8x3
U8+Yb74DHWlHlL0l5ruvDJaZeyRv6qN/G4aif0v0jdC3YJz53/RN0O7/Vk6j
fwN+pJn707X/odCS9A==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgf419MXx3/t770fkiJFW0nDliJSiuyRlb333puIqChJZmaUEZKGJC0J
GRlllGxJoayo1P+8vN/f5/d/ns5z7vfec+89594z3vfzq/nJF/Q6v2pFRcWp
1Soq4l9F51xRsWvQqlJFxbupouLMoDOCWkbf5kFPRXuL4K2Cnol2i+DNg0ZG
+++glUHHBTWLvqZBT0R7y+Ctg0ZHe3ise1tQ/6AHgvoF3Rr0cNCAoIFBbUO2
TdDzIf+QZRl70LLMH1PSWoy/aM4a7WNeu6AxMXfr4FsFjY32qBgbGnR30FPm
w4JGBt3lsXEhNyT4E0GPWJfbg5627D1Bz1tvdHk26N6g+4IetewdQc9YlrEX
LIuuzwXd7/lPlrQXe4+17uz5QegwN2g8+njdx4ImeQ76vmKOTS9bX8bGW/bx
oIlJ/RODJlsWu6cFjbYuU2wb+s6wbej7qmUZm25Zxl6zLHZ/7LUYf8m6o+ss
3wc2vWHO+Bzrgr7vmGPTK0n9bwfNtix2z7Qu3PO7ZVnOx3qjy/u2DX1ftyx7
v2dZxj4Kmmpd51qW+Y1i39pBGwTNsx2cwSfem/U+NcemhdYRO74wx45zkvoX
BH1mWeyuF363OsmmRZbFjm+sB3Z8ZV2x43vryrl+aVnGvgv60GNfW5b5K4N+
CFpszjzs+DFovu1YYo4dv1hvdNk4dFubpO8y64595ya1l3rdeV7rV89Drz+t
E/r+Zp2wabnHsWmFOWN/WRYd/wj61vPn+7w567+9H7pzHxVBVZJyEfqtDlpn
PdiH8eXeZ61tY2yN7fk56F9zxlhrhfWtmaQT51c9SSdsejVpnxS8WtDv1rdh
6FA9S8caSbLM3yT6qmSd8flJZ0bOXC9pb/RaP4mje12vy571zFlvw6CqHsMf
19m+bH2wabPYp1aW7g2DiqR9NknSN7tvje2e6v76QZsl6cHaDf5Ptqn3Rq+p
9i/87Df8wjpe4jWaB7Xy3puS/81Zu6XXZayF5dFrc3PGWluWmOuSJdcu6I6g
y6zLVp7Dem2CGgc1CWrvdRm71Lq0ZZ2gnYI6Bu1u3iloW+vHnlcGXeH1Onit
rTwPvnXQjtaFscah2/pBl3uspe3u6N/bBO3qOaw3PWiHoF081sp7d/JvdNnN
suzZ2fLMXy9rX35f5TW6Bh0edGDQQUF7eA57Xu3xvYK6xdxuwXsG7emz4Ay6
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmwSFUcx29I75xTSr0ko0k1Ne1F+75vE2WeLUR2Ce/Zd+9Zs0WEkMhS
I5WMREwp07SQaI+UkCWMrbEkpfp853v/+M75fs+5595zf+f3+55zQauSouJy
WZbNBhVAvZhl/VKWnQhZtrEgy+agz0SvRu8Ed8NfoK8H/HnwEPoRsAneDyxh
bDS6Om1X9Cu0p6M/g28BndGHwPzgvtnwyoyvgm8Hs9BnoD+H/wZOoP8By+DL
wbPwaxn/Bv4t2IHeCWbBO4Av4GvAcK2P9S+HTwIvoceBEuauR0+DHwbt0V+j
p8IPgg3wpaB78DPH4X+BJfCloAjelznH4at4fx30KjAF/TSozlhvdEt4GQjo
AvAJ/FP9E2NbwQz4TPAT/GcwHV4T7IJvA+0UG7AXvi+a65/awR8DcxVbfROe
8f734atZTwn6CFgQHNNujP2Kfhl+BJyGrgTmwQfxfDFjh8GbwTGvy1jr6LHX
FFP4yfSthJ8NOqFPQX8MvwUk+KnJz5YxpwjehmcGF/gb56P7olvpe2Aw/E+w
CL4GXMp4GbotfChoCY/JsSoCVeDd6GsObwG6olegJwT/0xb45uhnJ4Erk/dE
e7FWc+BD6atMWxt9LrwH/Cl4KbgQ3R/dWmsLjv326NhqDy5mfCC6DXxIcOx3
gznBe3A94zeC7xUbMIWxjuBFeB+wJzpHlZuasxo+EzQLzpn34M+AyfCxYDF8
FO+rRtsFfS/8PrARXkNroP8YWAz/MjgXR+odwTmp2h2F7hxcwwPQ4/J3lY/e
m3rJtag9GoS+DD0seA9K0Zck74X++Rr448o3nv0quBaHR3PV5NzoPdVe6h39
ef45dAk8o70aXZt2PPPX0TcQPT73hop5LfSk72hwTZTBm0TnWqIdgX5bNcj8
qvo2en60NxXmXvMubWGw5yh27yhHg2NYip5A2021SPtwck2oFuRZH6nWVSPw
iaCX8iM5l7Sm3vD7o3P7mPwH/RZ6D7pK7g3Dov9NHtEy2aPkTfv1j+hp6F+C
a+Y6dF15DPO/U/2ibwI/wP8AjyZ7qrxUa7oHPlEeEZwDk+EPJHtvL+Vjco4r
tzcHe82MaC7PmQ6vk/xv/cF/imn0t+UZA+AXJee2auDm5JxWLmtND8Kb80yt
4H/oB6+RXCuq6e7oc5JrSTXaE10t2ftUY33Q5yXXvjyxfnSOZHkMa8FrJnup
PL2C/o2x9cGeczu6IboguO8k9Fj0j/AVYDT8VvpGw4vBwjxnquY5OAT+QXSs
KuXe04S+34M9aJP2JtrL5CmK9bLoWlTMu8CPgoXBZ6DWUp75HwavSbXbNPps
UQ0rVvpmpTxm8+Q16L3BNSBvaKZ6CPaIjdFngLxfffIG5ZxyTR6h2vs7+uxR
DV7B2FXJ3tY++GybGu01OuPeyGukMPeEBdE5WyX3hNvgY6JjNQY0iq7JinnN
KLaLoscU48Z5DYW8xvbLy5Nze0TwWamaVa3qzGwQ7Tnl85q9A34X2BB8Z5AX
r4zORXnyq+DyZC/bFbyXHZJrQXuqs6khelvwGdUo+c6gu4L6GiTfGXRX2Bp8
9j1B347gM7B58p1Ad4E9wd75JH27gz20cfIdR3cbzWmavCatRTnSTGdb9FzN
0d2lfvK3dIc5iD4QHQvdQbTXr6P3Be95J3THZO8+FJxLZ2lNwTklL/g3+m4j
T1gHXxt9lo+kr1xyzivXlXO6q7RFHwi+s7TTeZv8rPruTL7j6G6jmHeGFyd/
Wx54Q/KdR3cdnVkt5PXRuaQ1F6K7KocKvMb/AXbedr4=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgm4z1UTx2+06X/OIUuiJKRQItmSIvuSypIlWZKkQiIt3nbt5cpWSQsK
IWSptG9UioQkCiEipVWWSu98mu/vuT3PnWfOmbPNnN+cme85/1uhz7UdBhXK
y8t7tHBenv3lrQl5eRfFvLw/cnl5O6w8wuhOo7NN1sDoXSsfaryw0e1Wrme8
rtGbVq5jvLbR61Y+y3h9o7etfI7xhkbvW7ml8RZGy63c1HgTo6VWbmT8XKMl
Vj7PeGOjD63c2ngroxVWbm68mdEnVm5rvI3RSitvNF0/MVpm1M5k5xutNvkR
xg83usvKC6ztGaNJRoeZ7Enjc43mGT1l9LTRizmXU1+ovpONXhKfYvSa0TSj
6Ubf27yTje42WmT154ymGr2svs8avSoZY17XuOeN3hCfYTRf66Pfm5LNNHrb
aJbRC0aVTOeKRrOtvFi6ovsSceZ4XzbRdq/pNMf4u0Z9osvfM/pAfRdoz17J
ue4fyWZsXS69sfVD9V2o/V2ktqXqi62fqi/2rRDHvs/EsWmV0VuyaaVk1B8w
Pe83esfKl0TX8XOjS63c3eg+a1sj3bHvC3H2YK04e7BOtqHvl5JRXy8Z9m0w
+lh2fyXZUukxU3u90NabZHSH0SlGxxqVMdok+9mbLbIT+76Tvui4VTLsq2W6
FzF6iHmMnxx9D46M3n+70Q6Nw6YfpSt67ZIN2LRT7dj6vThtPxl9LZt+UF/G
/ywZZ+Ib6cv3+UUy7PjdaLPs2C8b0GWPZNhBHEDHvUYjrfyw0bdWPqC+6PWn
OHrlWftu6fWb1maNv2UPOraPHlu+tL4HJcPuQ4KPQ/dCwTn6Fg7OfzU6NDhn
7sOCc+wYZeX84LofFdwedMwF5+hYxMr7ZCtrY9MRxkPw9r+MSgRfmzWPDm4P
em3W/vG9U3B70D0GH0e9mJX/0R4U1zjmOlJrsfbJVi4tfyqpdbBpfXBdSsvP
GFNE/Y5Qvaxk2Hd8cNvQ/TjJqJeTDL1OEEffE42KBtexomxDxwqSUa8kGXsw
WrpUNqpq36podH1/4vsG3/sq0hW9OKOc29U5zwPEe+LYqdIVvapJV+qnSYaO
NaQfupxuVF71+hrDHDXVju5jpFctozNVZl9PtXWLR7ejjs4tOtYVr2pUT5x5
rzW60qi/0VlaB70aSg/0Gqd1zjWqbnOXiq5Lr+hrNzI6z6i21mwsnag3kYz1
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
213PeEq+39WNF0nuCzWMH5X8255q/Mjk/nuG8VxyP6pgvFDy+MS7Dm9M//6W
Z7KQ3I8uke3cXeB9pQ96Xaoy8Yo8zfevZOMKJ4+XnD3OJPiaOxp3Fe4p3H2J
fdyzOOsHdd6J9dyjuFuQt8FYo7RWX+0/8Y84SMzkNxf+94V7R2f5Kd90jnIP
7/TEYDAP83C3YUx2LymssZzRpjqnPWQLcYb1eqhcxWyqmhznDTA+MLmO/ay9
WnKcf7Xxa5Ln+/dlO7HoVfYqOR4dTI5LbvdKkz8XPa4OMtm1yePdUpNNjJ4f
uYOyz8S/Y6395eg5bmP03Em8PVJ6cl7GW59N0e+KI/GR6PdCvl0ffcc++qZ8
O84IeYG3LngvlXtJTi6YarxVcnw5V+PnKL+QM5hjBmclOdbsLTlj8022OjrW
fsL4ruj3yZfw/+Q4vo3x85Pj8unEp+R31rbG70iOLQ+a/OPo9/Ptxr+Lfl89
xtovSH7mrjDZHfqmfU32evR78CFWXh59Lx+w8pU6R/2NPxA9n35u/JfoeXaI
8fzo2PJ64z+rXN7GnpD83L9mslui31VKmaxk8ph0nPGyyfHjCmv/MXoeBNeM
VFxqyfmLnlfXGv89Ou761fhv0e/VD1mfD6Pfv2+0cs3kueB/xmsnj+FXGa+Y
PIdy1m/Qeb/Hxt2cPL8QG25TfLg7+lzMQ5y4XrHiLpMPTZ7LRlh5WPKzAD9d
5QnGZ0Z/P7jf+O3JYz525CW3hTVrad17o+uKnsSS4YonjNsRfSxx6CbFIuLZ
LYpp91n7rcnzHd/tH307ZHUlJ54NUUwrndwP8IHd0X0I/7nCZJujY2384srk
vsF3HqZvzd7foP1vZu3Nk9/Z8IvF8o0SJiue/P5aDDuiY5l9xvdHf3+53fje
6NjyNuOjVcZ3hsh/fmKfo/vzNuMbomNL/Ppv+fYPxp+O/p63xfia6FjvW+Pr
o+PwW5FF3UGwOzr+Yv3btO4fxodHx/l7+O7R8eEi492Tx5Byxo9PntMWRtcJ
fcDj8xVbZkfXAx2KJrcf21sYf1ax60/jT0Z/P2ti8snR35Y4x9P0LeZEv8Nz
p5kX3R5seSr6eMY+bvyD6PmB+8Gy6DGQe8Pc6HeHScbPSx4PiZEH1GeC8bOT
j10X3Wbs/Tr6XrAP+Php8nN+8wDjc/dpbLJGyf9/EB85UX7ypo3rl/y98DLj
vZPnscHR4xoxrYHxs5L/b+Yb0eMOMeea6GeY88t+H6s9J4cTg4g/PZJ/S77j
oOjxmlhNTmB/2VtsfSa6vdj3uPbnHCufm/ytoY/xy5PfJ4lPPRWjuMvWT35v
wqeaJvcrcn7/5Hl/SvRvxve6L/lczHNn9PhCbLnH+N3J3yMrGx8b/e2D2PyT
/PkU4kT095Gbo+chctDJ7Hf0t4aTrDwm+jvLrOgxhXiC/3ZO7sNgOuIoGG8E
3zP5W+n/AckL5Ro=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmw11MYxr8lNeOec0yURtxJdEmSsjPCDEbZZRgaaybSjpAYTXsot+6t
mxatslVaVCpNriYJDSERSmhfLEUKlc8zz/njmfd5zvn+zvd8z3ne9/017tCj
XfeaRVFUgVrgjlQUc2JRjApF8RZ4CL0U/Qp8IlgGH8pYLWJf9N3wZ+Dt4H+C
Aj0ZPQQ+HfwIfxcshs8E38En80wL4mj0JGIN9LTg33yLnoRuTqxEN4OfBVbB
K0uKYjD8AHNL0DWJN6CvB/XRv4Fz4eeBNfAxPN8S3gp8hq5CN4efDT5Bj0K3
gJ8DVqNHoyew5mEwFT0YjICXMr8J3h6sQ49AJ+JI9AbiFHRL4hj0QeImMD54
j22Z64Hez9p70E/CKxirR2yFrgd/M3puPWiD7obewvO70RejLwXb4f1AJ3g/
5oczvxR9izQ4Av8DDGeufvJatcFCdHv0DPhYsAf9q34P38waX8Lf0B2hXwPv
wTvy/NvBdz4bfbv2GLIn0MPAXHg5mAe/M9krVeAueG/G2sL3gRPRC6L5BrAL
vgrM4t0L0NvhO3Tn8HGMPQLfCt5BDwDboj0nr2lsIOuVo+fBaxC/AjPB7+jX
wW3M3wwq4HvBR8yNi37XFPAwfCeYH/xOefcknt8Y7GGt/XS0V/UOnd2g5Hfp
DHvBB0R7RR56DN0/2kvy6BrlCmNNiS+gn4UPgY/VWaOfQw+N/ta18gN6YLQ3
5cGX4A0Y+x5+ArgJfmPyXWrsZPji6FyTJ3trf9Fel8flhb3oRcGe0F2MYqxh
vpP+8HbJZ1PIu9onmI1+Xh6AvwjmBHvkkuQ70V3Ig33Qg9EvlzjH9kXnhHJB
73yQ+fvABPh+8DVzE9HNlDfohsmekBd05pfBrwQ7dbdghc4G3Vg5xDvuhd+T
nHs/g5HyZq4NdbV3dKf8bJ1cmzrKoyWuUT+pFiXvRZ6+P7mGqHb8FZyLc3Mt
Uk6Wo2flvYbslc6qWcGeGcb8Fzoj+DHED8DpjG1B/weugHeJ9pq+SbWiV/Rd
qmYsB2cwthV9ODgXxqOb5JyoJpahNzP3DzgK3hn8DV+mGgifn2tNg3y2a4lN
gs+4W/Ia+u1BUAvdNZlXg6Ph3cG/8OWgC/x9nj8Q/I5Hk/eovR1SDUX3RXeA
NyLWRvdMnlsR7K2N0bkvj/VIPhOdhd6hu/wwunY1zrnxeXTtaZpr/Te5Fqrm
V6EXRdeq0lxbfyC2Ca6xE9CfEqv5fVk+u4+Jg4LPUL1lPbF1cI+po1wE29Ar
g3+7GywMXkN325r5HcF3rFo3IDk3VPOOaM/RvUA96vHsEXlDPWd13lNZ3sP5
8AuSc105ciH8ouRcVw04pG8D/YN7zFXMTY3OPe1JtevW5FquGtYnn0lpPoOV
2fN18hpnwqvgFSX+RvXaJcqh4J77RHTO1M0eORV+WrKX1EOeivZUg3xmpyj3
knuLcmgk442Sc08e6Iq+Gr0L/iq4Bn5scq3TmHpDz+harB5xeXKOK7d1xuqF
x+vOg3tiRbRH5c1f5KfsMXlLOTU636HuTjlTGe1heVc5cpy+DawLXlO1THvU
3lTTVMu6R/c21TT1iuuS/yuoZ0xDX5v8X0U5rd6rHFduqwdr7enRvVjvUG9X
TigX1ONV6x5IriWqeeqlM6J7o3qqcqtJ8rcpx/4HBr1q8Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Y6B+vy1Zw9Tmttbn/wEV2UMA
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdrVkEURa9dEZkjdhFFY++9lwcVfYgKeTAKYom9955EVAQbFqxYYuw9
oiAEBAkIEhBEEEFExP9g767Nvg+LWcN3v3tnZp8znUvWFq2pm2VZIdSHrynL
1kWWPWEcAZ9gNvNbjF1hGD4NruCn4QdsZP6McSr8hi3MXzAWQ8LnwDF8d/J/
h8Cp5HfUxUvhtd4DrfF2sB+/rDXg7eEafgbq4+XwFt8Ko/A2cBU/C+PwMniD
H4ZJ+EQ4iB+CznhHuIkfhfF4EdzAzyV/q0P4WX2zF74BavAyGIhvh1f4HvgJ
m5g/Z5wC32A986eMw6ExXie89oswHR8ZXut1aID/YTwO56ER8wxO4hfgM6xh
/pixAPrhm6EW3wWBt4J9eAX8hW3MXzLOTD77eXA7OYNu+FqoxndqD3iP8Nrf
w1C8BVQmZ6S9f89roSbfW1NllrxH1Ur38LtUM3r3l7xWqvO1d4EdyXvYh48J
Z/dRNYEXhM/qHazCV+qM8YfQF98LH/Dy5OyWwYPkDBfhJXACv5d8Nr/yWqzN
a7N3ODvVqLJeAlXJmS/Gi8O1cj/5tyZhr8qzbRb+tjJeji8N14rWoLNaGP52
ZV77/cPZqAd6hs9YZ1uaZ9M83AvKaEA4w4q8BrTXPuHstOfJ+Gp4hB+BueGa
Ua0o05bhmlGtqAbm67/h2rwDg/BCuJR8Rm3DNalaVI+NDWeiLNQjenYB3E3+
zwR8RTgLrUF3waxwLepOUC92Cq9NPdk1nKmyVOaDwz2tXlZNq3f+Jd8N6iH1
7vDwXaIeHo3PCPfGgeRerhe+G9TTuiv0jH7TnaG1NgzvVWv+D9gvof4=
            "]]}]}, {
        
         EdgeForm[], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHn8l1MWx39kD33vYydZphljzS5GsofsKtsY2xjLGBkGDTPSjJmhhLTY
l5A9KiqhSFHZdxpG9mXsGlukOe/XeT+vxx+f33nuc+9z7vmce+69n+9vraP6
7n/Swm1tbT3iT7uw40pb298CxwWubbW1DQwMCnSI9tqBtQI3RvuiwMWBawLn
O+6GwIX2jQxcEBgcuE4ftK/3HeNG6WNIYHTgssDlgZsDlwSGBqYH7gqMCdzk
WPpuDQwLDA/cHhgRuDRwhxZft9lP3536vkJ/2Cv1i70qcLd84H2PltjHa+E0
QQuPiVp436slN5O08BsXuFq/9/kOHg/I85bAQ3Ig9ilyI/YHtfRNtZ883a+P
+vuh5mKaPOH3sGNpfxF4LfCfwKOBscY1U85wnaWF62NauD6uhesTWrg+qYXr
U1r4Pa0lxledb0bgGd/B+7nAZLm+Zj+xvGgu4PqsYxn3ku/g9Io8qYt/Bx5x
jpftnybPmXLaOep1i8CWgf86B/7myBN+b2jh96YWfm9p4fe2Fn7vaOH0rpZ4
39PC733t84EPtC8EPtQSx+vGSBwfGRc8PtbC9dPAbLnOcN1Ys8/NL/n7zP5X
nYe8UjtfmgvmWT/4rxxYJfCN3OD0lfzh/YNxE+/XvmPc93Kj7zv5w/tbfdCe
5zvGzdcHXBcrWX/EsqCVawDXjvF+8cASgR8dS9/C0f5E3ouU5AbXRUtafLUr
2U8fPvA9t5W+sP8LLFnSwu8eObcPu7TPxL5MSQunZUtaeHDWzZN3q6QlN6Wk
hd9SJX2Tp6rkO3gsX5Jnm/kmVnisGFioJL+VtO1cD/rht5y5qL//yFpYrWQe
4bqqYxeTK2s7R85zXMvfy7OT5zXc4LSG7+H9C+cj3jV9x7ifl+RD389K8i+e
/R1sd/Yd434ZWEF+JzlHl8B68iQHfw+cUDJn6zqWvg3kD6eNSvKkLv4QODGw
emBD++nbWP/Eu4kWfptqiXFz4+7svu8spy218O4aWMfYt9YS1zZaYv+Vln2z
mb7xu63viP3kQF9j396YiOWPxrpdoLvP9O1gP/666WNDeVK71OxOciD2HR1L
+wX3NOfjrtHeSh6cj9wB3Bm7y4HY99AS797Ojb/67OaM28u46fuTsfYMnBo4
xRj39D3j9tEHMR5U8nt8H1Ayph4l73nuSu7OfR3LGdw7sFvJGM/Qb5/AVP0c
GDg9cJqxH6xv5jxEi79fB/YL7B/4jXP3Cvw50M95pgfO1Oe9xnpE4Eif8X2U
Ft+/DRyq78P0jd9jfvJuROCv+jgn0N/+s/X1u5Ka6Wj9oaEG+O4vgbOMt5d5
IhcDzVOtobBohfqu5U5CM400p2gmNAaaA02DLkAfDLUGat2ERR8Msy7oQ2eh
PWrtdqO+hjh2VKvRN+Nbjb6hPdx58FVrplpDYdEYtfa6XR7cUeNajX5CW6DJ
RjvuavvH+j339sOtRktNtJ8771HjQ1dMMt77bcP1AdvwnGybWKfYrrXUFON7
yDZxTLU92vmnymm6MY11/kdajba7V34zja/WSdzjg80duaSOdnFv1Lqq1lmz
/L6+VzhXay3F/uRO47znnIcbGuNpuT1rG27P2Ybb87bh9oJtuL1oG24v2a71
zZvyftk+eKIlZtvPXfm1saIlXjMvr/gNPF63r9ZS3EO1lnpD3nMcV2upt1qN
lnrbvrnyrvXTe61GM33QajTWu61GJ9W6CYt+YF9t7Tn4ou8+bDU67P1Wo9ve
kSda4hO5oS8+l8+Xtuv7da65+cxv4PaVfdTIq61Gh33uuDfNH+NmOAf9tVau
8/GtuYYfemOesf5gm9jn24bPj7bht8A2OUA3LJAPGgPNQaxoDdrEhN6gXesq
2vCk1miTl++MqdZV1GKtq2jDh/ucdq2lam2FRWuhuxgDf7QFdzR3dq23+Ob6
wD9KahY4oDsq40YnoC3gybtirGiGWlth0RLvmrPvWo3GWtFcoHHwW+u5DvJc
VV/w4Q5Ge5zg85LyQW90ch+u5jec312ts1ovLmuOOjpuGbnyff17kjPjkpL3
H3ff8MB9Je8m/KIFak2EXV9fG9kHB/QLOmZSybvtCHOEhlnH3NHf2dzgAx2D
dkFHbFYazYQm4Z7nvkUnjAqcV1LHre1Yxp1oDB3lg57pUhodRrvWHLub93WN
aSXnX7c0mmzz0mivrsa4rT7wh9boXhpNtrX56Oa4je3frjRabRvjRZ/sYJtY
6vNgN9et1oJbmC/m30pwTu9ifDvpi3E72749cGFJrbSp82yvjx5+39c4N7QP
bYPWQS+gBdAGaJzexodfdA365s7AkJL1ge+9/Z6YuEv2kwff9jK+fRzH3Ac4
Dk3Vx3l5h+44zHFonlq7YdFI/UqjTXiHxjnC+dA/h+r3MNu1JjtY3r2cB91F
TR5eGo2Fr8sD55bcW2NLail0E/uLfd9ev8eYn6PN1bElzw++Yz+e5Rji+Kff
sjevDAwsjRbva/6pE7Q4tXpF4F+l+V2B7Si3es6RJX970D8lMLmkhju/5J7A
zxo+d5LrJPneEhjkfN3NfU/tGT7fVlLj7uEa9jN3N5fU3NQNtXGx/fih1qjz
qwKDS+7Xqx1zmjk+2zzfVVJrspbXBIY6x7TAwyU1cTd9sI9Gl9TNvf3mLHN7
bWDYT/Ld3xxdZDw95cD81PClxoAGnlDy9169bueaT767UC43uH6dXOcBrvWY
ktr6GNeWe6G9+T7P8XcYR095DDYW+KPPqdubXLMurscgn68LXCYfamSg+aAu
bixZOyfa5vnWwAXGTP/Jvu9nbskZ5/mdrvGprtMpjr3SeU53zcjXA4H7S/N7
Yrgxn+27I837MPNAPV5hXHAaZT7I3/Xm6QJ5buf6X6uP88x1J9f5GmM/x1z0
d31GukZwGGJu+5ur41zPy13PQea3i+t5q/MOcW34lnoYKyfW5zbXiJql5nrL
b4wcWU/OVmoE/YBuQDNwFrHHOKOohYkl64F1u9m1g/st8qd/vGOw95RGh9Be
ynW7y7WD3zg50j/BMWgE7kvuQP5nzO8Tfh98AI8q1/mxwI5Vcno8sFOVvg8M
277KPL0R2K3KNZwZ2L7K2GcFdqgyN1uF7VhlHWwQ9smS5wm6YJK18VRg1ypz
NiPQvcoafZTcV7mG3cKuHXgonlcK27vK2uQuYO9zHyxVZXzEtmjYPlXWCDyW
k8taYbcNPBjPzwR6VJmn3cO+XbKuD4jnpavM/Rpht6lyzd9xHGM6hD2oyhp5
pOTdcLi8l5U7sXLODtAy5/FyWmBt7iUHztHJjjve+mIvjZDfVOtkgOOOtY+9
xj7bNHx+7fO+8bxQlTXVpUoOl8p1TfmybnNKrh3+p5lD1nBJ15F1WMS1WL/K
vF9iLaxsPZDjxczzqmG/KHkOTzcvZ1rj042fdV7NtV4+7MFV7q0zjYMx6ODO
1ij9KzimZ9iPSp43+8Tz/JJ7l/XpJEfqYkXjZH1artF+YReu8lyhHg+xJp8I
rFcl92cDG1V5zs8OdK0yv3BapcoY9wr7ZclzCB+r62fvsN+UPHu+D8wr+T+S
TeL9D2HvLrm33i+5v/aM509LnltPuzcO97vOVX7brsq4iXmLKscx5jO/59tv
nZt526pce9b9Y/NFrn40X+Rq87BbVrn35soHLlXYXlWeVfuHXbzK83iZKvcD
e2GJKvt4z9ji+P8DCKHfoA==
            "]], 
           PolygonBox[CompressedData["
1:eJwt1EdoFmEQxvE1xl7ijgULijF2sXfUm148evAq5CB4sIAgKAr23guWNHuJ
xmgkigUVgr0g9hJ772IXsfwfZg4/3nnZb3dnZ+b9snPHjxiXkSTJcGTiU5ok
XzAVpWhrSZKDGcQz0YZ4EI4Tn0Qz4qGoIJ6CqziN2ViPX/gd95bhJs5jOQpw
HWexEHl4jleYiB3oyLOzsJR4N27hAlahEJcwjOunWEfhMZ5hArbiNi5jNYrQ
nt9Ww3zibehE3AgriPeiHXGCOcSbcQPnsAT5uIYzmIcNeI13mIRidODe2lhE
vBPv8RGTUYI/USPVZhbu4grWYSMeoCr3z2Xdgs/xDUXRkwZce8G6K/Wa1DfP
oThyTM1rplotw4eoWWHk8DZ6UBA5/4gc9O7peBjfqG8bi6fRo7yoaQ+e3RMH
iMegG3F3rCUejd7E91gPohxNzGus2q5EU/MZK40etmD/lXVf9Kihec1KYkY6
s+9ifu9INCZ+w7on9Z5VYV/Jeij1nrU2n7myqGkr9l2xP/UcX0ZP82PGNNtD
zGdZM/4P97Ep9Rmua95T9XJx6rN+MXKpiNlrbj77msEBxL0wjfho6rmaeS+U
8xPUZL+AdXvqvaxn/mz1VLX7G7OhGn5DH64fZj0SuT2K3ijH7+jP9TWpv7My
elAeNRlIfCdyOYbB5j1U706ghvmZ0FlQTnXMc1RumuFa5mdSZ1FnNNP8jOls
6Qz0Y9/X/OwpxwzzM6SzoxnWf0W2+bv0n9HS/Jv0Lcq5uvnMa9Z1JtUr5axc
1TPNxs+YTc3If4qlusg=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgfYl9Mbx1+bqPid8zRUQiEjpdJQ+duy987eKoWQSLYUJW+SXajIaiHJ
jkL2JmRnJJRUov/34/4+1+u63vu6zz73fc49vuf5vZuc1Pvgs1etqqoavFpV
lf6qjk5VVVvkqqqjxN8VXSM6RvS5aIjoRNH7omtF3UWfiK4THS/6SDRIdJxo
rmiw6ATRPNH1opNEjbV2I9F0lRuI1xc9rvK3otNFp4mOZM9KVVVv0UbqbyKa
obYNxRuKpqm8sXhT0TMqbyM+UmMniNqq3Ea0nugi1U8RnSq6VHSm6CxRf7ed
JrpEdLroDNHFbqM+0GN7iLbXWu1EdURXWa4+on6ik73Hluo7W/wK0dYqbyV6
TrJdWYl25lzteeeIrjE/VzTA+yPftW47T3SdqK/ofNEQ0QWiC0XDrAPy3miO
HkMroTN913ssMt5gTt9wj2XPm0WXiS4XVfuM0PsW64HsN3ksfSM9lr4RHsv8
UR7L2dxqjq63maPrHdZtkOh2t1G/023oOtp6IvvdosGuj3Ebetxjjq73mnMe
Y30W6Hef26iPcxt6/JNC7vtF491W7f3P81lzZif5Xn8XfSn6SvSg9edsHrGe
6DfVsiL7o25Dv0nWGf0muo36FNFdnvOY56HfdOuAvNOsG3o87n70fsKcvqc8
Fj2e9Fjmv5DCD54WPWR5uZ9nKtGOHs+LHrYesywTerzgNvSYabnR40W3UZ/t
scj+ijkyvm450OM5780er1ludHrVY6nPcRtzzpLMZ6bQqWcK2d8QvWk9kP0t
82dFb5uzzzvm6PSh6CXRy6KPzNHvfeuATu96LLp+7H506pVizy9En1nuOdZh
lO/7U+uMHp94HvW5bmPO+vL7VXKcx3veh71/E82rhD3N+49+X1k3dPrG+iDj
126j/q3bWG++6APr+p3b0O8Ht6H3j+bo95M58i6wDsj7s9uoJ8lbyaF3qxzy
/So6O8V5LLTcb1rWRZYbGYlV+DH+vI/G7ybaXbTEciPjH9aN+lLR99ZjueVG
3mVuo75aij0Wi/5yP3r8bbnR4xyN6SP6ReUV7qevKoXsnPcqKTh+vGoKzrqX
qjxA1FK0eop9kHEtlf+0jOukkAkZ107RRr1WijbkOk/lc1PItW6KNmSZpfJK
8dridVxGrropOHJtkEImdF3fbdQrbkOuQrRmCrmS29YQzbSOrFvP/chY3xzZ
G5gj70bej7UvSCFXQ/JpqpGxkTkyNjZHribmzG/qNZClfY75m4k2tazIsoko
u97Mbch1ofdsLrpI1M8ybm45Glk37gHb2cJtyNImRb0FuZ7c7322sm5NfZeb
WJbzRX1T3Mkloosty5bWhzmF5F9D1J9zzaFHK9F2lon92npP5rUXbe3927mN
/Vv7DDb32Mbeg9gzuRKxdbF9BR/YwXPYp4t1Y5/ObqPe1W3sM0fUUbST6DLR
QMuyl2gX0a6inT2mk+s7eL3dzLt4bCf3XeH19hDt6TJrdDMvx7ayrHt7Xda7
0vP2Fe3v+czrlKO8n+gAtyEjPjoyhY8c6DbWO8icmFFPc2uBrVReJ8cah4gO
8x6sd6jXpn6421jv2BT4lJx9hNtYe3frzVmCYcGq5HRwK/gUzAZWBbeCBYel
wJ69KoFbwbngQDAvuBV8BoY9OQVOu4E1UmDEoayRAiuCYcGvYL6mxqHgivrG
reA/8C54EIzb0FgYLNjEeBYs0siYl/iKbuAS8N8rvpeO1qef+9gPDAY2Q24w
Xoln4WBCdBjgPjA72Jx+9LnUfad6LFgR3Qa6D+xLGR3BtuBdsCB6XOW9S1xb
4tyr3dfOWBiseIrXRm5yOHgErIDOg5xLvkpxvpx1GdeII8gNlruxUoNrS5wL
H+K1h7qvxMfDrNtNns8ZgYvAc8gEDh5hPas9bqDbqq3bKM+53PNurtTgXfoe
knw3pcAvJfa91TqBAe+o1GBWMBzYFgx4l2UH45X4d7T7kPs+z0GPsa7z3nnA
MlzrtW+33ODBEvOO8xxw73jrMtJnPsH6POQ6OjzsOnI/4jp6POo6e0x0HRnB
flMt++Ou3+22KZZrkueU+JVxL6bAqTMsI7gP3LiW75ncgZ5gwxILT/P8sR5L
3xkp5o73ObLn5ErNO2GM9QQ3lngYrPis9QGblVj4efeh24vuYy3i+EvWYab7
2GeW+9B1tuslJp5tWcGDJeZ91X3oMcd9YN7X/6PP6+570DIid0/bFWd1je+A
O+lv+xhaqcHBb1tWcCAYEcwG5vnN+oAVS/z7ruegz/vuK3Hzh5YPPDjXcoMT
P7GeH3vcbLdRX8X4cY51nes5G+TAxD1SYF6wJZhyTd8zWIH9wH3zKzWY9Ufr
Q978yvKCH0uM/I37SrzLfLDrQq//ZqUGa7/lNb60vD97D+Rb4HrOgYN7p8DC
C6zDPJ8feAtcBv4BC7HeIp8vcix2Hbn+cB2ZwIrLLONfrs9321LrtMRzkGmF
x5WYFVzI3uDGlZWa9w869XFeLXX42/NfSoER/6nU4GDmf+89wbhP+4zesNzo
xn7IAQ4DazKW+FviYjj3huzrODYjKzirxMVw+sDFtCPP7BSYeD3rAM6sbd3A
liUuhtexHBu4r3z7ISsyJd/BYteR+yfRzSnuvsS+5IyHU2B0zmWi+K0p8C9r
gwGbWA7wZ8NUg31LLNzIfSUObuy9m3o+GLi55xK3wJib2qbBohvbxjd1nbXA
ieDFfh5f3/ts4T7yI/iEPMx+LdzHWmDPrT0OrNja67Z0H3gWLLttCszb0nsz
v43nsF5b119NgSc6WB/w7JbeA4y5vevtPGeA29kLDAJG7Gg5dnCdPTq7zh5d
XGd+V9fBsDt6fcaBLXdJNZh1V69FG3j09RQ4+H+ev7vHgTnBoXt4DngSfAlO
Io+SY0tcW+LcPT1+F4/t5rX28fyO3nMn31Nr68o8sOd+ngfOBIOCW8GsB6ca
XHugx4FZD/E4MGuJZw9zH+OOcN8E0dWpBjvCwVZ8i+Wb7Iku1/a3WTAhuBcM
+IH4OymwMPXutqNu3ps98Q/e8/hIE98rtoCdgYHBgeBDsC54ECx8umWhDhYD
D7bQ/nVz4F3qYGAwYZcccxi/MkVuHu84Qw4jfz2Y4lsPORsi/5H77hEfnqJe
nWI8cYk28gZ58Qf39bKsYFdw7gi3EfN/cUxc4JjEG5B4dG+KNwh994luSTXv
djgxaqz4KM95JMUbkjXuSPF2xc9XdX4gz92WIpbg+7VdJr4tSNHHHOIQfo6P
jxPd7vqjKd7A9BMD8FX8dLzoTtcnpXi70o/P4TP4ywOiu12fnOJbRksT/olv
TknxVmxve8KueGv8Kj46xRuOs+ONw52vLb3WyvEunCq6PIV/MpY2/GWM5+Fv
94vu8n59rQfnjD1eYxskhg2yfXFXg70ntnad75D9h1gG7OsG2xQ2eL3tEPsa
ahtbnuKdxhsN+7rRtvRXCvxdbRsabpvp5TZsiTcY35jB4/jBCNsMvsKbEH/5
wLmZPAke+s75+RidzWs54s9mhfw8xzdkfo94Um3HVuLtwzuO91oLjdlS9L3q
e2nM8cbrb4q/ZX9uXsRarHOQ+MGiZbbLW2x7nMGXKc6G30GeFj9e489T+V77
IG28E49jfc7D8vA7y1Nu31hrNy3iN5a3PIf2PTVmoyLO9Hx+ZynCh9GBNXmT
NVZbX/V9k+K3FeLPicYY5N2F9tP5KXz1d85b1L0Sd/5ZinveLEeu6eg7/yLF
PW+eI753cJlxxPq1zInDi1Pohl7Nc+StbX2HP6a4Z2zn6xT2Qiz9zXYP9vg5
BRbi3fFdirsgFnE/xCPucJHXx99/SeG/nN8fPiv2XOh9F1kmxtO/xGOW+Hwp
c17Pi3qq3FFn2KmIddcXr1vEb2LkjR38vQPeyeW11b9OEWdXX7xBEbpVxFMR
NlGI5yLeyquJry76VOU1xdco4ve3JVrvjxy/15G/WB9frq3+OkXcwf7cZxHx
EX2nW69Dsa8i4tG64rWK+A3wQLWfVISNdi9CN/Qagi5FfE/jrc+bH93r+Lcz
3tkd1N++iBg5X23vip7grsR/zfF747bqb1lEvCendM3h70eqrVUR970HvyEW
ERdoa+32gd6PvTr5bIlXj4i3LSIH9ld5uyJiwCKVF4vew+b5nlmET53mvdl3
K8vA94491H97DrtaJr5c9GGKvi7+/Y89O3vfWi5zz6toblURv5f+o/pK0ccq
rxD/K8dvp0tFb9vHiZ30l/GSuyWOkhu4E+I93zCxV3LTAVr7QNGfKXIRWJd8
RIwmVre3rZNriZF8cyOmIye5hJxCzCfGE/exk79Fj7m+IgWGJreRw8hl5CZy
JvmsgdsmuZ09p3jfCz2voflEywg2Jx8T88iH47w23/bJ2eTrTXP4MP6L3pOt
O/JOtczYEN/UyHGc37M+w5dTxCnmbpLjTcT7Y7sc7cQuYhzf3MgPfLPiGx2x
nDWe8TrEB9qJacS2J10e7fO5wmfNGwcswPqtvR+/BRMHsKVtVW6Z49sH2A6Z
2RMdkY/52C7+w3cmfuNGjhMqsQbtPb0OsYw4Bq5iPXAWPgl2IXfgz7x/wDjk
QPIjuGpdf2sFr0LYJhi1s/2Fesccb4nmPhe+YfIbdG1/z0QeMGhtl1mPda/y
OrVs/2t6HWImnHp/nxfxndgOXsD/yMPgV3AsOIKcjG+BI8p8QP4ld/3pe+Fs
lvl8aFvqdsau7fGc23KffzO/j/79firewfVfbevcJ7gPLAiuAecST3o47zRz
DnstRT4gZ4FByCXgEDAX+Ax/AjuTh8Bf4DiwHb4LXgM/4ZdgFL6bzDFmrsqB
a8CZtH9eiW939IGliZsr7EMj3FdtbAwGqvZY2sEVrLfS5dVyrPu596QMjoXT
B649RPyUIvyYu23r+z5YdHIRvn6fyscZM7QRfzBHHu5bRJwlxrL++t6L/52o
61zwi/jCHHd8lMZPzRGnWtlf8Meear88R2wAT7AO5/Sl+DzHAuTmGw3fZ8Bl
R/mu+X7DdxzeAbPFD8rhl+jQ1La6wHMZ09tzPrMN17PdYquF7Z+xyeOJtYVt
GLk2sI69JPNVOWyHmFrPvjBW/BnfKbkVTDbdNgyem+EYg2z42SfkBPs2Oeqi
HHnqMHBiju+A/C7AOmCMi8Wf893x2wFrHm/sRr2MbU3cTrzhdwhiTm+teX0O
22T/jX0+5PDB1vFsla/NEZuJsfy/Dms8QPy07rPEL80Rs3to/ACXe4u/kSNO
TPO+xMx3xN/O4Tf4L/si40PiL/ucuc+zfKdzuP8ccZYYSawknuOHYEV8kHs+
xXeN3fJOBqOSt8nL5GfyOLG4l+c2cxxY3X5NjMK2WH+W197c689xHezKeT/s
Mz9WfPci8s5u4jNy3D94lrnMm2W5VxpDNs81+zf3vtg+PsB3vi20Tr8cuZpc
QawnzvMdkjG8Wb4R/zpHHCK+oRe5oav17OUcQrn8vYLfDPi94Cf6c+DUH/HL
HNgaH21hP/1BvEeOXLeV5Nm6CHw/V20TcvjlF9x/jhzL2i0t5wuWe4LxNvLT
1llrPJ7Dh+jfxmMOVfuFOWIoNrWf7Qq5uTd+q3lBfJ8cuW6mzxMb+DSHTMgz
w76BX/TRmjfmiLW3iu9ahD9yzuRm4gw47ukcWI47/D7HPe6pcrci3g8XYANF
vBmm5IhZxKtmRbzfiKu3YKdF4CZi5OQccRKMPClHTgbn7lWED/G/aW1tn+Nz
+DZ+/arKRxeBjcDjE3Pk8J1V3qmIHHWZ2toV8Z75VuUdi7C1ruJH2FaJ34/l
iOHE11dyyHx1jjhFjDpS5TOKwFCHq3x6EXiN75N80wSnYcu7FGHP2AZxnFxI
ziR3NndcRR+wQTuPwX7W8JjVTczhW9qjOfLEzd6ng9chfhA7iBtX5MgBxP9B
OWIQ8eeGHDGLeDVC5XOKyLfDc9w3d03O5uzBoqzd3vvOFD+8CAxEDOMeiEXE
1BdznD94ENvAvp7NEaeIUbflsCHsBxs8wXY4kvvK8a2Ed9ITOfApbwje57wj
Ztrm8GtyJu/tYY6FyNHdeJPfgMGc3+W4V+60YRHvHN440z2Gdxl8Q5ex61GW
bbrt/1zjVcb8i2U1pjrHWdXjjHO8kbn/6TlsgHg8zvrurfY7crzjx+SI48Rw
Ynkfl7GXJ3PYzM/cUQ7cPUy8SxHv5H3E9y3irXyqbQgctZ/a9i/i3Twtx7uR
XPN/13X+sQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmUl1Mcxl9NCFmae6/lWOMcsnUc63EsQ5JKm4miqWaMoqaUIilZ0qYs
JanQot1UlJKEOMkayZJSNC2ifVqVVj7PeeaPz3mf73t/v/vee7/brV7cOb9T
pSzLJkBluCplWc+YZZ1Clr0GU9FdeVeNZwfs89HVYVgu43CY90dhr2SsEM5G
nwd/oR+Efxk/BL+hW8M76EcZjzw7Yz+mMViAXg+VGDsG/kAXQS30CMb7oMdB
J/Ry+Az9E1Rl/BRYgy6GhxlbBvPRP8I29E74BV0Au9B74Vd0S+iAXgrz0D/A
scx1ApSh74dq6ATr0A9AR/0XPkYvgV7oGdFntQVqo3P5/Vr0i7AC+3H4G70Q
rmHsOtiG7g79GXseeqBnwMvoV+Bp9CxoiC7i9zk8yzjvgTxfgl6MvQfPoJ/T
mepsoQ+6H3RDvwtl6FXwJforaMVc32PPQR+GxdqL5gh+95H2Au+jx8Lc6DVp
LaNhHnoozEaPgXOZry72Q8E+Pwe7W7TvB0NT7InR+gCcid0Vu632CvXRhbzL
eL7N/hby/Bw+QQ9lvBljU6L1dPkE3UBnhB4PGeO3Yg8MjsHx6LOSY6kjc8yJ
PjOd1ZtwNGO1sAcFx9jJyT6TrxRDE3R2vKtRscbL0DVhk2IL/uT9OliE/i74
LIbBs8FnEvnt7fJRcMwcj30b9gvBMTUr2ufy9Uj5BP01dEGXs94Cfr8Ieyb2
IcWQzhamBPu8PfreaN+UQlt0fvRckxSj6CYwAj0RGqNXR/v+CPMPkG9gcnDM
FaMbwXDtHYag28kXwTH4avQ39S3t8YloH+jsS+BT5SIMQbeDp6Ln1FzaU+/o
NWktitG+0WvWWhWjip0FMDU4hg6ib1FOBNeMb9HfQFX068FrbxrtS+2hRLkF
i9F5sAG9EeYq39nvI+gl0AL7PuVMdI4oN3RGM6NzSLmjM7iZ879JORo8Zwv0
7Ohvyydt0Gu1puA1FaFXRue2YlZn1yw6N3SGzdHro2NFc96j81eN41kz2Ld3
R+eWfNycsS+iY/0g1MNujd0y13v6B50HA4JrmHK3Pb+pUpHDyt3h0Ds4h09n
7FRoo9iFkFzTVMtUoyon11zV2t/h+uQapdpUrvNgrt2wFN0/OJZPZHx1cEzv
ia6pqqX6zUnJNVm1WL9RrlXBXhWcc9cmx7hiWzVQte3J6F6QU3E2H/LsGXxG
+6AcfsZeFpzrOclrVc4fl1yzVav1DdWSSdGxqJpyILoHqfcsD46tI7AiOMYu
1VzRvW0jdEfX4N0G9DS4GH1RcqzrXWF0D1TvK811L7wguXapJ65RLYCtwTEi
X+2P/rZ8plqsnqFeoZrcA32l+mlwz/0vuqeql2qNqiWnJftONaUL9hnJtVM+
vSK5Rqk2bQ6ujZck70U18urkGqDc15ouxK4XvXb1pA/ku2RfjwqOpYLoXFJM
NcEeqzPE3hfcWxsna/XYRugxvNur2AzujQ2TtXpkA/Ro3u1B74bt0T1ZvVg+
zWf8Lewi1rM/+Lebo3ur/qO5t0T3cn0jT/UedgTfCVoyVqKerTqIvSM6ZhWr
6vla+9bou4L2oG+Ni64F+uYo9Kbo3r9L8ZHcI9Ub9Q3dNe5KXpvuHJcn56hy
Uz1hmupx8tnLh1rLG7zrG7wm9RL1JPUi9RTdpUqje7nuVLoLTY+u/boT1cWu
A/34/87gu5F6qHqn7kiqlXckj6lmqhcNhu3BPWmy6kly7Kom625zZ/LZ644z
CPuGZF8rx1Rb6ifvXTXmxuQapdqkOUeiayffvbSn+ditomur1vg/5oyb3A==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgm4jtUWx49SaSLD2fs1JPNRhszHnCkpQ1duGnVTShqobl1KkmiSSMo8
U6FIUogMmacMIUoqREoq81Tu+ln/7/k8z1nPet+99l57rb3XXuu/3+8Uv6/L
LZ3Py8jIeOz8jAz7y1gZMjJqxYyMZzMzMn6x59FG3YyOGU0y2mftPxgfbvRf
o5+MRhg9ZbTbaKTR/4yqmY6qRovseY/RKKOuRo8jNx19jfbb81ijZ41+NRpj
9IzRn0bjjZ4zOmg0waiH0SGjF4x6Gh0wGmfU3aiGzVPdaLE9DzW9vY36GNW1
tjrRfaod3a/l9tzKeEujMkaDrN/zRj2N3jLqofeaJss2Wmr935b8BaPBRr2M
XjQaIs5870iObJjmf8louPjLRiPEXzEaKf6q0Sjx14xGi7M+Y41eN+pnNNFo
gNGbRu8ZDZS9E4z6SzZOfd8wGi+O7H31xdcP5AO2T85037B9aqavHbZPUl9k
H6ovsinqy/gxshH7pmkcvk6Xn/j3mWzClo/Vhq8zxPH1E3H0zRTH70/FGT9L
OvD1I83DHJ8bvav1mC056zRXbfj9hfzB13lq432+2vDpAmLL+GGjBWpjnRbJ
f9bmS3F8XSZ/8GO5OH7kid6+1Gix+mLv4eDrssRohfri6xr5hu2r5DNrtk6+
4cdK9UX2ldEcyVarL+N/NFor+XqNw9eN8h9fvxbHv97BbfzGaJPaFhptkc/4
ulltvG+QPnRtlX+swfeyG1u+k2/Yu01y1uZbcWQ71Be/t6sv43fKZ2y/MPg+
HDHapTbm3y2OT2VtnfNFt7dPcD/IS3vlD7b/rL74vUccWZPoPvxqdEB2Y8t+
2Y29f8o37P1NPiP7Q32R/a6+jD9o9IP24ZD4T5nux0/y76j82S3fdur9mNqw
t5zZdk10P46rDdtXB7f3lNFp2Y5df4tj+xnZhE//qI33HMHtxqecwW3FxvPt
+S/Zzj4T78T6u9beK3j8XhTcVmx/Wvme/PiK8ZeNTthz7uB2MOdlIW1jDL6X
6PhK7ZcaT9SWy+ji4P7ja57gOvAjvz2fF9zGy4PrY47M4D5wXoM4cxRQX2RX
BNeRYfw1o1c1T4ngeulbOLit6C4U3C7ei6gNn5obNTBqaHSl2rCxpHRgS1+N
LWh0lebOa1RKcmwsqnHI3jDqpzUobpRPNpVW36jx2M6+vS7dZYxuiG5rllEl
+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
4nvPvt8bvZZQRzhbjTTv9Oi5FR//D8CKE78=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmUl1MYx39t0mKJ5r2XxGSECKMsx1bhWOJYGm3SZlqkSIumNNOUkiRJ
qbRok8lWlrK1U3McwgmHnLK0UE37otLO53u+7x/fc7/Pfe77vvd97vN8n1sn
/6m8nuUzmUwJqAgeCJlMuZjJbEgymSlgB/Z28CP8J3A1vmvAP/DBYA2+peAV
+DLQFd8vwbw64w/gE/Ai9lJQHn8GPJ34G+Px3Y59DH4cnMA+BvrC/wS34RuL
PQo+D0yEfx7MT4JK+I8Hr90EqmGfAbbA+4Mz4TVBGXxA4m9XBBsT72EPz96L
XZ5xPHYz+Cz4a/BJoB72FWA/fJCewdcRvAP/GDTFNwV7LPyDxHv/D6xP/A+n
4K8K/oYXgNfxfRm8thzjR+B7sAj7SFYm0wG+VXPYR7Gbwavz/GY9C7Lg54Dt
8GfAufDzwU74QHAR/FKwF14ELoDngN3wQtAJvjr4LKoxDgQHwFrsjvonnSVY
An8XlOnswGH4avAkfD/4Fd4GjIP3B5/CR2tP8B76L/hniX2dwdzEa1rBL2MP
++BvgJbYdbH3wGeBy6NjrlhrzWPR79S7TmN8GRQop7BHgm/1bjAMvlB7Vu6A
BfASfTM4x5Rb2sODvO9xcDpz87GvhV8PDsJXEu8uzO8MzvWGYFTwmeusR4CL
o2Os2GrP2kt+cKy0p0fg1+E/AC/lfZuxR4B/sb8DN+Abjj0UPgcchB8CK/Qu
1t+P/77o2OpMBuDbDX6GNwbr4CvBRPgX+h94Zdb/BZ+qGEXXgHJfObMC/zSw
PPGZLICPBosT53A/+Lbgs60KTo3OWeWq3jkUXy72m/BicBX82WA+WzkA/0Y1
CR8C8vGvCj6LqowtQDZzu7Bngm7wtcF71xkMAb+DPti9QQv8fZRTWY5JUXSN
qDbqM96Jfbc0JK25xvBbwZHEGtET3in4XxLGXtiTlDfYUd/R+QfHsnaqbdIU
aYk07mH8JdgVQQUwR9/WHlXLjC3xtwLrEu9xPXOto9eW6h/gk+Fj4LWC33UY
/Jb4nSeDNVbaKo3QWRbwTN30TLvAO4MG8BOgOXw2vsmJY7xL2iSNSZwTpfDe
wbmjNW/Bj4I/dJaMb0urgmNbyJoK0TmjXJEG9sWeij0Ons24AbRhrhLjV8rn
6Bjo3zVXjL2QsRG+K3V+2MsY87AbMM4MrjHVljT0puicUC4cwm4SrUHSHp3Z
YPhieFN4rvQIex5jGXutx9gPe3qwNuekseoVrFWK2d5gTZWWrmHujugaVu0q
Rpvg7ZmrwrgKuwf8BfhweE3GjaAtc5UZv2buifSbOek/tYuOqWKpNXdF9zj1
NuVgh+gYK7b6RnfsdsG1X4PxnmgNk3apx1SJ1nRpuXrC2dgPYU9P3KPUCycE
n716YsPoGlNtqefeiH1zdCyfU8zhw4J7sWp0broHfVuauCVYg6Q96il1onuC
eoFqUlolDZT2SbOkDWOCtVUa8Si+94K1VBqp3vBqsNarR6i3q+ZUa+rxS4LP
NDetga5pDar2lNPL05xpkOZccfAZ6WyUs83htfDvgM8A3YNzNDvNkfOie556
ndYsTWtataw7SLfgGqyV5qi090PVQWINfj/NMeWWNPgW+PPBsdSas6LvDLor
bJVmRO9Je1HPrY/dOlj7dCfIg9eIXjtNmhY9J647SO1oDZT2qUerN7UN1n71
qBDd09XLt4FLonukeqN6+IXRPVK9UT1cWj4DTEis6YXBGiTtkSYVpTWs2pXm
DEpzXLktDZsfrKn10xoYyfhScG/THWRRWuOqbWlm++CaqZnWpHI1id6rcnZf
WoOqPd0JGkXfYXR30Z3hf47Zlhk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgn418MTx79SjtyE7+4mFUW6dOpSSZKi+6b7kiJX6O+KlA5ElNw3OUKl
CIWiU7mjKOVKUqQSHfznZd6f59vz/OaZ3dnP7s7Mzs6+d7+/Mn2GtrusSC6X
m7t/Lmd/ufNjLneB0R35XO5M4w2Mvg+53ItGi42uMmpksoZGP1r5bONNjDZa
+SzjjY02WPkc402NNln5XOPNjDZb+TzjzY1+s/LnRrOMxhu1NFkLo61WPsj4
bOMTjO6g3XR5zOhgk0+0+j3BdUTXbVaeaW2P6pvWJmtltMPk7Y23M/rbyh2N
dzDabeUX7LtJRpONepusl1E1o6lWv9foPqPnjCaq/pLR/UZTjL4yWmD0vtE0
yR4weln8QaNXxB8yelX8YaPp4o8YzRBH77Y2dxujnabb85of/V6TTY8bLc67
ncjeMHrK6Gmj142eVH2OZM8YvS0bsOkto2dVnysZ88wTxx/viL9oNF+2YdN7
sn+a7H5Z9n0g26bLF6+ovlAy7Jsl3Z8wmi2OrktkB+3L1IYdSyWj/qFk2PqR
0ZuyY7lk2PqxZNj6iTj2fSqOfZ/LtneNPpOM+heSYd+Xshn7VkpGfZHsmCm/
TFYc1LK1Kmd0hK3XKtmPP9ZonbDvG/WnvlYy7Fsnm7HvW8mor5cM+743WiG7
fxDH1p9kJ/b9KBn1DZJh30bZjH0/S0b9F8mwb4/a+HaTZPjgDbPnXtl0n/HV
xjcb/SEb0PcSs/tr41uMfped2P1b3uXUt8tObFot3xAXfxp9J/t2imPfX+LY
9Lc4tu4Sx77d4uhdw3Q4Mfpe3Cs7sO8fcWx6wPSfElzWPbq+OasXC27PNqP9
gsvRff/g9mw1KhJcRv2A4N9i00FW3iE7Dg2u6y7ZvVDrXTy4bdh0cPBvqR8S
XEafw4L3w6aiwedEp8ODy1ifnqZzD6NJweNsj2wtG92Oo4yODl7GjmPE0b2E
ODYdK848x4njgxOD68Gcx0uGrScE1xX76tpcJxndb+UU3B7si8F9Qb2kZPQp
pX6MG4wO1Hd7pW/Z4Puffc0ev83qNxndbFReeqNvOdlD/RTJ0L26xjjJ6FTJ
0P1k+YI+pxnlNX9FcfStLBvQt6rsRN+HNWY1ozPM1lOj+6aS+tGnhuZknioa
g/41JUPfftH1a8w40hsda8s26nWNKkjH+tKPeepJRr2BZOjbUPOh78VG3Y16
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
y2rpw+87Pxgfmff7GvdZ7nw/BS8j57ce6rfl3Qer5Afid4ViZZzN82V0n+Iz
fIg/SkXPTawre4s9M0VrvEzr/nPwuzPjc/fk7o0uB1jfPVaekPffbijfnfe9
VUtv7/ga7MS+ZK+CRcAhFfSOd7qVi0fPHZPkm3Xyz2LFKPGJD5iX+z56rVdc
slbfaL1YkzVaK9ZhrdaCPfqR1oQ5KwgPsS8/1poTgysVm8WsfRfrA5YOfn/n
tzbu5NzNn1I+3K31b6/v8QM+2K0yeZY7P3ff7cHLrPWvwe/yo/N+7+Ytgrs7
hJy7+5bgbxG35/13ul9VZp6/pRu/Sf2lclGV78z7WcDvduMVK6wd87C3yAvk
BOKAfMr+Yh9wHrCn+X2Q9R7FfSS4bpT5LW+7/IA9+IT7/f7RfYS8tcrogC47
VeY7yviPXEVem6oYOE359zStC/FAbj9F+R0sdLjwGDj8UN1BOKOP1J4il56g
fIodR0fPTeSrUspZFxrvpnOdPQy+6ip5EY3TNfp8zEUe5NsbJO8iTNY5uh7o
wJnHnZP7Zmn93vGrZKV1FyUeYvR9wdrlo8cGdwbuAODuzrY3OyW34y7j66Lv
4+OMHx99ff9SnXIJ48dG9y3naUmdqejWKfp+Yz8l5VbmDJqX9SmhvsdEXz/W
jpx9YPRcTlwcEj0f0O8A9e0ibAwO7aT7IHfBAdFxM/kWDFFd9vYWrgCH8E1/
9Wd9uY+VDp4jKHMvO0VtpSUrrzvbydHvn/i8r8rkczht/PaBz2vI//ze/Yv2
F7KakrNXeU97RutVRviDMfvInjJaO77Hx0XlK9ahmPxfWfYSJ4Oi53fO7tNV
vlo+qCY/IKONt1n60f8x9b04+tnQTRwMCZ5Cb+LrbeMdk5855AVyAu95vwd/
txyT93teHe0dzr16Gv+/O4TWi710hvyJ3+rKh5yNdeVD9KwvW8i3nD3kXM4Z
3lI5a8Aq9WXL95Jn5xJvrOQbZGfq+w2Sc3bAG6nMeUWZfrxtsmajlf94h71f
eZG3WvLPz8pNGyQ7S3J8wFvtA/INfcmTvOvyPw1j8oU+5EDaz9E35FTKm5Rr
6TNFYzZTX/Iw42xWLkRX8jTrWE8xTz5uEwvnBXmQ/Mga8b8UjMdbMm/HYGo4
/0sxTniphcqcD7wXk1//CP4N/XZIzj7l3bi1YvIf7fm9+oa2J3TWkK+3KQe3
0vc7pSd5mFjvpD3FnuyieCbPcK5k37aVXdjIOzXnHpwzb4LOwHYqk9+Q8y1y
3q+zPddBe4F8CFbI2jtKvlc55SitJ34bm3dZZ+m5VW1jFSdNFDPsdeJno+K9
q2xhbw1SPFfRXrtUcT4oFmQDJedtk7c27iI5jcMeGqjvGAe/kSt4Z+COxd2J
nIesr/YUex85ea+7vs/kvZUX+mnc/35vip4fG2lvMk7ZfWKR2MYfxNNYxcZW
lWmjTFwRL7QRS+RPMBi5FIzPHQDsiay25LzD8FZVTTpQbixZf+lTUeXGyl3o
iYwzk7OTM7KbyuS9rE4eG2J8cHQf8FY5ROXKls+OSb7/ynHuJc83FYwflXyv
n2L8yOR5oqrxEsn3YjXjxyb3RS3jxyeP90027nvR81KWT9Fnp/EPo2OiGvbt
ccl9dIXx5dFxQkUrH508jtjrW5RXB0tn7iaNrP3J6HeaXlpH1pfzlTsM2JV1
pY3zpY9sJU5o66EYGCJfMCa8p8rMRezxjgVGJVeTz783Pj16Pl9lfGr0XN1d
vt2imB2scQ4yPR9XTNKvXfK+N6Jv8nsG76zgDt4a8cFv8gN+HSLf4ter5ds7
2B/J4411uERrMZ55k3xl/HSV+ba6vh9mfEV0rLHW6Obkd7DdVr4q+jm7n8lu
io7LvjJ+SPJz6TDjhybHMt+a/J/ofXMmG5H8DkMcXaxYutPahyaPf9b5Mq31
Y9H9gk9usfJ9ye8Wb1r5geT3gJFWnpz8/jHPyg8mx6rcMXi3AQ8WNdlt0csL
jD+UHFPPZE2S37deZ98mv3PcbOWJye8ou6x8YPI7xpXGr0qOU9H3z+g6cxes
qfvgepO1TX6ev2jlC5Jj3/2Nj0x+z3nJ6tuin+3oOze6zl3pp72AjvOj6znL
eIfkeHoCfo1+1yQufogeG/jml+j+wR+/Rt1XrXx9ciz5Afs9Of7Gvh+j23gv
ezf63euz6H7H56z5t1q7l41vj475TzR5qeTn2BfRY4J4OBgdk+fXG4zfmBxD
nwsOUvyXtPIJye+ai0z2cPI8d53x4cmx8jXGr02Od/caXRv9Psr6zI6+Rrda
eUP0u30ZK5dOnvuJiznRY2Oa8VbJ3xv2WPk65c+TTFY2eS5k/WdEjwF0WRhd
H/bfq9q/5xFT0XH1GOJTeWmJ8VHR31zOMvkV0d9NLjV+cvI77yj2XPRY/Nf4
cOWHEdH9js9/im4Ptpxh/OHo+JUYWaM4IUcSH8TG71ZeGR1v1jbZQ9HvA22s
3Dr53aK38fLJsdxTVm+S/O1kh5X/F/2e0jz5vmXPNrNy8eR3euw4O7kt5xhv
mvz/Q5caXZT8jaGH8e7J72pjjPonx3WfW3lr9HcizoE+OgtuN1nf5BgSfqrK
30T3Cz4hLr6OHhtjjQ9MjhNWR18/1o5zpl/ys4a4mKjY4BwYoLMAXU6TPoxR
SeO0T74/2ZsNrXxm8v+H5Rzrlfws48xhjVnfYVY+P/kb1h9Wvjv6G+dGcl5y
TL05+hqzvgcwT/I3DmKziNZ0tNaDtbhee5j9+0L0/YC9xEgxjXO5lRsnf5tj
rbhbsl5XR38P4g2AvDtJuXeq9hj7q77xBsnvhHWI/ej3n7pWfjT6nZBc+KDy
4RPRz0jOxxbGWya/Qy4z6pn8t5dBxqskx97dktuP7eOityH/P5UY1tA=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlXds11UUxb+WKtO9fu89V7WuuqpirTM448C9iDvEGGNMqyzBggJiC5RC
EVEBURGRiIjKlqEICEIUkSlTRCQEqyJBRKPEz8n5/nHyzrnf+e6799ySjtV3
VhVlWTYEFIPOMcsGpCwrYW0qZNkT8IHwOnhTyLJx8N3ga/iroI7rB4Ef4ScQ
bwU/GGxFt0LfCr9dMfhoYm+wBvQ+eDG8OxiEPp31JGIHwotBDXwpGEW8gN4L
bwYfAV4ES9ArwevwPuAr+ApQy72/Rj+rf/oDvgsMg88E13K9E/pleEvWvmA4
sXLWLsQatYJZwXvcD/8PlMDngj7cm4Hv4ccRfxu0RA9GN4CO8Dpi/cjXdvRj
6P7ol9A70I+ia7UH9Db0u/Drk3M1XDllfQEsgC8Hr8B7gfnwb8EweA34Ar4M
9IQ38vw5rO3RTcoF2BKco35cawY2wY8n3hu+OXov2sNO+ELwQ3AO58JfA9/B
3wefRv+T/mUcmB+dc+V6ItgB/xxshi8CP8Nng43Be1iUn5nOahLYA/9Tz8Df
BJOj96S9jNE34UPBN/ARYHp0DrT3sWAbfCbYEJyTLfCPwLrgd26FTwXrg3Ok
d3UFc4Lfqb31jv5X7bGIfBwAOsAXgm5cq0eXsh6Gfh7+D3wNPOnc0Nuj71VO
VUt/g9XBNbUX/heYAh/IGa+FvwfWBtdUFXwfWBV8z2h41DdU+3nuPovOvXJ4
KdeuBC2IDUFXs16Gbs46DX158j26pthT8EHqYb69i9g78KuIzVBtg7bwi8Ae
eD33XAC/EOwOfmY899+Anq1cBediXTQvzXt1Iuuo4J5tQE+KPssy1rfQG1nL
0ZWKo9fnvV0hD0Cvzr2lbV67P+m54Bq+N7lmVauHqifUe+q56DOSN8mD5D3y
qIeSPUjec7j6GpyI3h/cs12UG/13wXuuQjdEn432rLO5iVjr/IzawyfARwbX
zC3JNaFaaMN6d3LPqdcO0b7Q06K5/vFk9Je6HxSBeeB+You5f4I8Ev5B9Lv0
j/KeX6KvyYMeSPYkeZHeUYY+C+wM9pCRxE5Jfrc8shR+arKX9OX6afLSZO+R
x5wLPw/8Fuzh5fDzk2ujP/pm+I3JvaYcnAE/M9mr5GFny1uSvb+24FrvhD4i
r/nO8GfA1OCYct0VfWSec/XmlOjeVo/Km5aoZ4M9ahm8Itnb9czvYHB0beqd
D3Lt4eSz/QTdI6+5srzGlrNWJvfOsfIJcHHybDlaPgYu0YxiDapHkND/Bsc2
5TVbmdf01fDrkmfDUPQ18LE5Vw89gl6a/8tk0AE9Bz0++IzbocdE99p0cAf6
w+jZNw9syHuiIq+x1skzQN6vnluT94h6QzOrOXxV9OySB62Ar4yeNY0Fz9Lu
4Jjomfpscg6096OiZ2e3ZK4ZWpOcE+WikOeiJ4jROemRnFPlUu+8LXnmadZp
hrdJ9kR5oWb8FfCno/faIvey55LfLU97El4fXWuqQXlfde5d8kB5+azo2SJP
l3fPiPZ6efg9PH9fshcox5pVi6NniWZWr+ScKBfaw+PoAdG1qp7RbFoQPas0
oz6G35V8FvKc/wGN82g5
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQnYl1Maxr8Wy1iGMZbyP+dTZBnZQtZBhBDZpRljiZiRyTIGNbbBzCAz
xr7M2En2rKUoS5aSrRQipUhZUiEUmuc35/de73dd33Pd/3Pe857nuc95znK/
X8e+Jx80oHVTU1P3Nk1N8dfUOzc1/TJsn9TU9HijqenWsNvCnhBvDxsu3hE2
Qrwz7EnxrrBj4v3Twk4NGxXlIWF3hz0lDg17WrwnbLR4b9gY8b6wZ8T7w54V
Hwh7Tnww7I1G8UHfY8MeChsW9mLYw2GPhD1vW569ZN2jYePCHmsUruNFuE6Q
J/xeDxupj1etg+srtqXda9bR7gX94/tN44LrR/ZFvJPkDNe3RLhOFuE6RYTr
2yI83hHh+q6Iz6kivN8T4Tot7GW5fiDCdboIjxkivD8U4TrR2Il1ljzh8LE8
4DfTtjybbR3vfSLCdY4I10/lCb8v5AOPz6yD61zb0u5z62jXOfJpzbC1wub5
HrwXhL0v14UiXH/UN/19ZR28F8mT2L+RP+VvrYPr984ZXBeL8Fsiwu8HER/f
+R7vfK0f+p0fsf4nbGjYT8bCGLRKhRtjsNQ6xqB1KnXwWzYVbnBaLhWEx/Kp
IH5+lgrCoymVPuh35VRigscKqTyH90qp8OTZiqnUUf7SsSR3fp7Ke/BeN5W+
qPtFKpwZ19VSQTj9Um7wWD0VJJY1UsFWzhvY2vkD24S1D2sbtkzY2iK8GyK8
kwjvLMK7WYTfOiKcVk1lnoi1Yyqc4bCePFYJ62BbnnWyjvfWF+G6gQjXjVLh
ubptF5sLv7IOrhvalnYbW7emnOabp5vG73byPjfsj2EDwraQM1y7iHDdUoTr
ViJctxbh0VWE6+Kwj1OZt9ly3ibsqFx4bhu2nZzhur0I1x1EeOwowvvXIlx7
tuhjZ3myLndNhdtmYTvZlme7Wbd5WHcRrruLcN1TnvDj/KF/zqAe1sF1D9vS
br1os24uvLuFbaLvfY0LTkeH7RfWS9tBTvuLcDpAJN4DRTgdHLaLfR8iwu9Q
EU6HiXDqLcLpcJF4+4jw+40IpzU9Y48I+51cexrv9sZ6lHyoO0YOxH6kbXnW
1zp4HCvCo1/YQfI4QQ7EfqKxEuPvrYPH8bal3R+s6+28kadrO28gOfqZsZ+U
Sv5WPAaIxHiyCI9TRObkVLG6Ixwjjz+J8Phz2HHyOEMkxjNFOJ0lwmOgSOyD
RLj2inHeL6x//L7Ed2jbN5e4zwk7z7iJ93M5nR12vnXE/leR2C8Qif1vYacb
78XGh4+/W0fsF9oWfv+wjnb9nQdy5FLjIvabw/4VdnlYu1xivCzsn8Z7rs/P
NfbLReL9t0i8V4jEe6VILFeHXWTs14jEe61IjNeJcLpeZPw2iXg65xJvI5e4
ONvmhX0R9pewm4yVGG8xPuL6bwset1pHjLeJxHhH2FXGeJfxEdfcsDmprKEh
1hHjnbal3YERzwG5xMu5Ms8z7R5jxD/3M+6nQzzvF3luPmCsxDUs7HZjeVjE
zyMicT0qEstXYQvD7g5bkMo5/1hYv1x8Px72RCq/7w0bLt4XNkK8P+xJkVhG
ig+GjQt7KuxpbZhxbRn9d8klFp4/5LPDoq5H2Nfxe89c/D8b9lyLWMYaB/5f
DhtlHy9YRyzP25Z2L1pHXKP1z3gcEv0fnEvdd2FTwqaHvdrC52si/b0u4v8N
EZ9viviZFPaScb0lMgbfhi0KGx/WIXxO0N/bqfzG5zsiPt8V8TlVxOd7Ij5z
LnHy/rbxe5tcfM5o0fe0sInG9aF1+Jkp4meWiB80EzoCXVFpJDRCpaN49pFt
iaXSVE94X/zGe12lqUaYr+gP8rfSANyJ0THc8bnrV5oKvVFpp0pLgdzhKx3F
swftC12BLhprGe3yguWH7Ztypbt4v9JsT8sTTYHGqDTeKONGF0yQx2uWeY5G
qHQb+Hqj1kKT7Hei7UZbN9ExQqeMb9S6aEqj1m/jGrV2qrTUZPtlLbG+b3Od
sc+y5umD+/JnjVo7TZUPOuL9Rq2dpjVq7fRBo9ZO0xu1dpohz5mW4T3LMjw/
sgzvjy3Dc7blSjvNbtTa6RM5zLVc6b135Ursn5oXX8hnsnVzbTfPZ7z3pWW4
cSedLx80xcJGrS3pj/1ypHNY6asFcv7ad6qznzMVnugJ9lbuaNx3uL9VemmJ
nNEX3zVqffW9saIjfmzUWmuxsbKnV9oIREtU2oM7N2OA1lgqf55TZgyW2u8c
+/5BztzL0R7wQWtQrvTVcqnWM/iotBbP4IduQD/AAW1BGQ7oC8rEjU6gXOm3
ZVOti+gXfmgN2lWaqtJYIM8YR/ygbSo90MX3uWNvlGq9tHaq9dWacuP+1i7V
2imlWmu1N1a0QqWTQLQE59JNrpNKXzXLuYPlSoPlVOu0hpzXs1+4dbJcaar1
U60J13D+NvQZ5Y3lxvPOluHAHX8T497McqXZOjlPG9lXdWfdLNWaqtJYW/iM
vXYFecwyH5nbSmsx1mipro4LGmobueAPrbFtqnXUdqnWUdunWkftkGodtaPc
drIMH/TFLvLZ1TJx72a50k67pVo7dZfTHpYrrXKwsbPu0Bur+01vb/ns6TvE
jY7Yx7j3tUzc+1mu9FIv46Pvg1KtnfaXWy/fqXTUAanWS8RU6dWtrOOufkKq
tdNhqdZOvVOtnQ5PtXaivFYu2um3+kQ7HC0H9iB0SKWH/7/n+G4PuR1pu/18
r9JYR/ms0ienyK2vPuCMBjku1dqv4gaP4637g9wOtq6ffE70GXz6W57j7z6p
1ksDUq3l+qZaO50sN/ZX9An3R+6zrE/Wxs6OfaWj0BuTY5ymhH2ayt2sZy53
mkovnWW/6IXzUq2vzki15jk/1Rrsz6nWVwONBQ2CJkFjDZLXAPs7N9U67cxU
ayf6bZ+Lthns+2iCy/SD7qj0E4g+qe7f3DtPt+6iVGuey+V8oT7wd7F9VXoJ
H+i+sx1D9Mql8iHGS3xnoPWUq7s+vvfPRU9+mmp99e9Ua6drUq2XrvMZ941b
Uq21rk615rlVDtSheTqrXS4x3pud35SL1rpRnrf4rNJp1/o+OuV2n6Md7tfH
g5bRRkNavDNEfpXOGWaMdznelW68whjvtO1BuWitL/XHew+lWotWseOfMwTt
hfYZKh/q7nU+KJPHCx1nYuJ+zT17hu+hQR5PtV6q9NPwFs/QF9zjl4+4WuUy
t+ivx/RbaSo0DNoIXfSMsaOpKv0Ejkq1Hhuhj+f1QRmdMjbVeuY130GnoFvQ
Q+Na9DvOZ8NbvEffL9rXobnoqG/id3MumuSVVGskfHRRYz2Sar30hpzROxNS
rbUoT3H8pju3o42n0lSTUq2R3km1LpqqoU9mpVpTMSec5ZyFHfX3tn7QRmik
91Oti5g/tNQ0fVUaaWaq9Rh1y0abJfa7a/zulsu3paWpIOt051z2cfbwHfiG
6TuL5ML4/pDKt07O5o656MPJqZzTs42dc4A9l/22KZdvPWc7Z5Pk8VMq65t9
eblcyryzYi7fIOiDfYqcJa/53kGuDbKOvCRn+RZATpPPbXP5LkAuLpYzfFvn
8r8B8vP7VPZo5mvfXPZqyuvkkhPkw97mCHO5ci7fHfDzs/jdJhd/W+TS7wJ5
L5b7Av0NNa42fjf4deBKuYz3HPnD/Qj9skYY+x/l/ouoWzWXeOHAPHDWfu6c
MV98f2jr2lslF92OZt8pfv/c+DbOZQ7Odvxa+U2JnEGHfxC/VwhcJpd5xpZR
m/OtaXnX+Le24/lxgcd6rnzluMD1mFzuQNsY40rmGBxWdZxpc7T3JOZnNXOs
tTHPdwzIA8bhN7nsy4P93cc9eneR3Dg8l/sK96655hNjvEEu+Uo8fYyXnOrm
3YZzfg1j3tt+elfPuPu4R4x3XMj/31nHulw7l/N1sGPS3nHu6bqY4trqpi9w
V+9U6DW+re/lulvX30fm4oP3u9qO+xVzxrnFmdXeecVXJ/uhLTw2cPypW98+
l9iuq/13NM/pj++MN5inW5mrfO/aOmxMKmO/uRxpu5ntd8vlXLrenNrUvKK+
s202tX/q6Ze9lX2VfO9qzrMOfpXLXoD/LY2BNdjFGLpYP8a82CiXeWbON3Tu
3jKn2V92yWVM9zKe7sZa5c2Nrt+dXCOM2Y7mCmtie9fFuvbTw7GiL/iSo7ub
e+RKN+eUtvhmHXe3/Q3mA3sN++Q+uXAbI0fK7DXkGmcl58x2ucQBp2nyIp69
cjlTGbcTAo/3HdbrdrYnrj3kuId8iZd86mkMXYxhtP3QJ3sIiA++Z470Gwrf
VIb7zYVvMBPj+Zu5rJtsrpJL/YyHfvb0N/cFsJ+/O9h+gnyPkAttTvDde+yL
/ZO7D3cg9l5i5bx/2nXIb9YlecNdsb/I3ZGzgvPgAN/tYf/Exf25l214fqBt
rrfMne1LfV+vn0P09bfAmbmsqyvCvnA9sB5Z/+2MAx/czwf5+y+uTfY+9j3u
89yP2cO/CzzTMfwPueD4Tw/8Ppe1ujTsp1zO5CVhP5qj5M0hziP7MX2eY9+U
2R/Q0ey37AntrD/H9sfZ5mhjo00n31nPve5IY+vo7w5y4J1tffcofxPLoY4V
Y36Yc8oewt7N+lujOerM2SvD5uWyv6wS9fflspesHL/vyuUc+G/gt7nsFwOY
/1zW2mrR5qFc9q3hjLvtT4KTbUYHjsnlHLrdsWPc/hT2fC5rZG7g4FzO1bcC
J+Wyr3wUdmku+8w/Amflstc8G3Z5LmfjVYEjcsmXtSKef1l/ceATuewD7wVO
zWUM7gwblcs+c3fgM+bGqYHnGQ++OYfYV9o6hl+7Z7JesuPPObW3c8rZxv7c
x3Ee7F5H+TLXI+uNtZb9zT7TiJjvyeV+0Fu/9HkDPnM5A24Ke9JcGxl4Ry53
nabmwucH90De59sA+XujMbePNrfkcndoF7+vzeW+8HAuuU6bGbnkOvnVKtq0
bi578QthL+ZyJyCWFZtLPPfmEjcxfxA2LZe7G98L0LFo1o+jPDuXc4J5PtWx
vS6XOIjh1lziI7b+5hz581z8Pi2Xffss85VcHRt2dS73QXLwJHPs5cCbc7l/
PRV2Yi7nzsnmNPl8ei75Sq6uEPhSLvs/+8fyzWUPGRa20DlnvB91zJdrLjER
D3lHnpFjyxJXc7lXtmkuvvHLfH7mnA4MuyCXPZ/vE0Nz2S/HB76Sy51sUNg4
2ywInJ/L2fgquZnLHe2TsDm5nNOLjLWt7w303d8Hvp7Lfe7dsHdyuR+xX7Zt
Lnsma+WBXNbLNWAu92XG4wzH5LJc1iTr8X9aAiGN
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGdIl1EUh19XziybKO/5R5QtWljRRiICiyAQ+tSHoE8VNKisyPYuM9ql
tKOMJm0oSIOKyPagHUllw1CbNsx6Dud8ePjd+9773nvOueectuOm5E6ODoJg
LMTCYgmCV9AWHoZB8AJ9DhFoA/NhCkRBAvyCn1Ae2j8foVEkCAah//g2FX0C
GVDAvAFdCu1hAGyDr5AFveAqHINa9qaiFbAMMqEdTIB70BKGs+e92qn3Mu6M
JnN3EpQy7828Bj5DT1W+laNn1GbGTdG7cAda+Jk34LrYWhqsg0/QFbrBPrip
PsJvzshHx0Mz//YYHkG6+3wAUrFnCFrF/lsaF/f9D/O56ANoDWOY3xbbo2t6
5kRI4f9sNIdvsYxjIjbO9FhWeGw0pgvgGYRQzJ556CRoYByP3ocV0NHvVN+X
QwePgcY+jfOH+RvM1O/MR4jFdBO6Vd+McWN0msaK9aFoEd8K0UMQQBc4BcL6
aPQ765XoG/jAuBP62t9U31JtWgVvxdaS/a1a8f9If7Mt6EJIdBv26DtAX+gH
p8W+6TgOjnuOaW7FeK4VieVGlvsexfkDPQZH4LKYbyWh3T1HrBZGui8nNUdC
8ymDeQmaz3yUx2qH+6oxq4M8KGPeR98lYnfo2blu+17o7z5Ui9WM1koP9LDn
oOZelOfieujuOam5VuixTvfYzHBfNUbF8ANi4VtotbxdzBat6WjsCaA+tBg8
hQ1id2sOJbAWH7G31Tv/Qj28DM3m5qyd8LNz0IMeE42F1mQVukbtDi0nFsFs
f5skWCvWU7SXVLOnDL3kY42pxvoaNPGY5/mdOR7TWWqLWG/SHnQWPad2Mn4H
q8VqIN5z7gu6WawXaEziOOsimiLWs0rFalZrVb8lsn5FrBcNhl3ug9pex55a
36Nr2mMuwBKoDC2mWkvTxWpRa0prZSNaE1rN7ITdfpb6eNRzJNf3aO+YLNYb
tIfsF6uRZPdRa/udWO/TGi8Q68HaezXm2jtWisUi2207L9a71Mb/B4bkqQ==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
coGurPT0uY5BXs63DdyXOAax0WvoN35P6mAO4MB3Nk0O3IMuMwfUVZp7qrEq
bXy53NCGVzn2dY4BlumWJzvm1eaFvlcWtTaeXtTa+Pqi1sYz5Ip2m2k+brIM
n5stX+Lc3CzGWZbBfqtl+N1mGW63W4bDHZbBhB68s6g18F3meqaYKj18d1Fr
4HuKWvfeV9S6d05Ra925Ra2T7y1qPXx/UWvgB4paY8+WG3oQfTjKuZkkz3m2
3Wg773Pmr+l3eLznB2ckugK9hQ7kzrY05bsXnNGLj8oZTbegqPUw2oxz/xbP
fvCi9Z4pav38mByoe7qodfuT8n/acqWlK239uGPca98nilonP2tc9B06Dm2E
BvlnUetkNGSljV8qai1daevnjVVp5oVFrZNfFvsbjgGOxZYXOCYastLYi4pa
k79Y1Jp5cVHrZLQhWnipuUALvyWXSgO/Yz7oU+npJb7/nO1vF7Xu/UDcaMf3
i1obLxfHe0Wtp991jErDvykH9OBHxkVnfSVutORn9vvCMjjQi1+aC9ornY3/
xNhf+s5r1n0s9q8dY5lzRfmClHVnxfnvjsFa5Z7a0vX5jXMMP3Tkd8ZFM/7g
OD9aBhc67ie50f59UetYtN+ntv8oJurQjehgNCIY0MHoz0ap1tWVzv7ZMeBK
f9oqbcwYtK3jecfcfFv8vzZGM4IJvYhurPRzpafxxKp0Mv0qbbymONCI6zg2
GpEynNb2G690Ne9fZB+w3pWyZl5fzujHDcSNZtzIsTexDJZNLYNxM8vw2Nwy
HNB8hVhLy4zd2DJYtrAMvi0tg3cry6s4/oZya2LbPSlr4Kap1r3NUq17t021
1m0un2buY5Ue3i7VGph+84y/rrjRbmjLl/yeWHdw2Nk2eO7g+5U2pq36jWM1
ubW07QXzTs7npLy37i4udGUb46IH0WUXp6xNm6RaQ+4rf+pbpVo/7yEOdGH7
VGvpPeVAvL3lzzit5UzfduLr4BjUof/QgdzJufOjZ+amrJM7p6yb9xdDpWN7
p1oPd0u19u6Qai19gDi44/dMtZautHVX+7W2L/q20u0dnbd26f/1NuO9kbJO
vsQ69NwQx4AD+hAN3c84nE/DLVea+RDHQ1P2Ny4xKt2MH5RqvT0g1Vq9rznu
nWoNxlk61BjozKONi8YcYQy05MhU6/9K94JtmGPy3mjbhhkXvEf5/mHOzxjx
jbatl+MfLtaRjk1fNOokY6E7Of+vTVlnnik+tOFY30MzjrcfehUt+JewN8Mu
T1mznmGsxfphqdbMJ4mPMU9NtX6m7TjjnSa+8Y4Nb3TtBHGcJbbrU/49spF9
0cmTjYXurTTuObYNFTfjTE/5d1vOtXG+d5ZjoKXRyi+l/O3x3T0f9pzvPJ3y
+cTZVOnqc833BPksSnkNsl5fDXsl5d+l+B2ENcda4X50o+UbzR/zfVPKv7OQ
+8fCZlq+NeV7FTFuT/k3ghO1q8z1rLBrLN+c8u8g5Oxx415h2zXO03JzQR6u
sM8Ied+Q8v4yTQz99VN9Zg+bkfL58ZDzwVw8EXabfStu8GIfZ5/gO17uWc25
d6VYx5rX61I+758M/ycxXS03sLPWFhuTujvks28Z30lYp3j+Oawo8xx0CP95
ynvsPvG8X5l/8+tM3zLnmDH/4Lhdou6AMo893RyxzlpGXccy73/V3424J7Ie
nhE79zbuc9zldi3zO3Ntp99b9n/K55/Cb1bmfD9lH9YV8/Wk3Bn7fXO7cvQ9
sMzrYM/w7cr8e/CPYe3j+ZHwO4ffu8xnC2cNd5eV5fegHHtGe48yj9M2/KCw
reO5IXzXMq811vDLKedw96hrU+b3l4nnK+9Cy33m/vBeyneIvaLvJymfy3vE
83fyaB3PA8qMBxxg407FGvlzyt/AgpTnZzfX4AKfif2u8Xm+y5z81TrOdjQK
9wHOt3tTvh+A4e2Uz1nOk7dSzk1Tn5fadrcxuf+84zucc+wD3AnID+v94ZTX
/BLHnm3dfOt5d67r7RVjdDHGfOMsEdv6+kd8hidnaivHXZjy2vjlb2SumUed
G/aWX3SP6451zLc303XD+p1mPPLZyflc5PNCx9ja2MThvr/Idzq5fl5M+Vt/
wPJK9n9ePBda5t1GMbfdy7yXzDN+E2PwLvO+S5nX6BxjPmj9EVG3VplzPNvc
Mqfdou6gMq+PO60nV9tHXYsyz9vvw29T5j3o3ymvuSn2XWL/7aKuWZm/ddb0
6+awX9T9psx7DHXcIdhjX7PMc+9oX6XMexVzyp7e2ffpx12in8/0bxV9dyvz
et4p/I5lXo9Nw/+qzPv3XNcK66OMug/NA+uRddnUPCz1uXH0+dT52jKevxDD
FvH8pfO1VZm/Yb7fqWJl7RVRt6774T3mhNi/6K6Uv1++LZ65+78ttt3FR5lv
5z6fqWcf5uzn/PkmbPUyr4U54qfveq4D7tLsWyu5d21c5vlgLhiX77mR8/uu
GJirNexDzg42b78u83wwF78N37fMd5ZVyzyXzOPvwqcy798bhu9V5jNmtfAb
lXmv/iFskzKv7Y9cfzPk+4q5/SxseJn3IfzaPlf/V4AzgO/tNvM9uMzzwVyw
z5Xudeyvjd1jty0zPrBdbh45y5jPrx2XMmccd6e/Od/UH1Lmtc46b0K8Mo+9
eZmxgm3TMvOZYYw3naPvwwaW+axes8yxiNM//Lcpnw/LzD9zwfrdwDXcp8x5
JIfV3Y6YnKv/cD2wdz7ku/8DvNH04w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk+trzmEYx2+PY6McdmgY96W2WRom0YgZG7bJxkRbKTbJ4QVv/BXOckiO
LaeJJgkhx6nVkqSUF15O5oXjzPn0+XbdLz5dn2vP79nvfq7re09q3d64LRNC
qIRB8CuGMM9CuEW9DRHvp+6CEzCVvhQu4ZdhON4K3emZr1BOf516A17DBvon
1AyU4dOhA78CJfh36m44CWvpR5r7TcjGt8ALfB+swYfAEfwYvIWN9E+pxZCH
b4WX+CFYgTfCI/wwNOHD4CjeDrn4ZHPfAT3QQt9FfTUxhKV4LdynPwDvYBP9
M2oN9MEHaIOzkMNnm+E5vh+W4xk4iJ+HfHwsHMd3whi80PyzJvgGU8xnrZl8
hln016i1UIBPgNP4XhiKf6Gei/6bis3PoHdfgAHmZ9TZdIZx9OPhFL4H1uFF
5s92whJ8MZRHf+cnmEl/Nfrf9K6PcDG9cyGfVWqG0Z95A9PMs5ELvTDDfNd6
Zi4+xzwLykgFPt98d8qcsvUj7V4ZG2WeSWVRZ66mrzKf/V0Yjf+l3os+kwb6
2ea7fxg9C9qxdqtMLDPfqXb5ANbjdeb+GBaY/wad/U70rP5O3pF2XW/+v9tS
9v6kXSiDNeYz1SyVmcH4ajgTPbMj8Gbzu6EMKCvv026VmVX0A82zqu8o+8qI
sqE7sNL8zDqrMq279TPtUndMd7EnZbc7ZTnLPGtdKbv/ot8lZVizW2Q+S83w
PyvlovA=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgm4VtMXxm9FUqb8iRDf3qcRpYnQKEqz5kFlqBSp2yBJkRIajE0aJVRK
A5rQoDLTYEhCiVQqUxSlUP/1a73n+TzPXc/ae51z9l7vHtZe7/5u6NSreW7e
nJyc9flycuwvp0rMybnS5O9MTk4j0w1Nfgk5Oa+Y3Gm2fiZNzNbYZJ/Zzjf9
pekVJk2tfIPJ71Y+xfRi04tMmlu5mckBK7c03cLkTyufYXqj6aUmZ1t5k+k3
TIpaebPp5SbnWPkL08tMTrPyZ6aXmFxh5ctNFlr5f6Y/N/26SWUr9zUfHzEZ
Y3K/yWCTkfL9bpMRJnepPkq2/iaPmdxjMsDkUdmoPy7bvSZPmQwyuc9kucks
kxdNxqqfB0zGSQ8xGS891ORp6QdNRqsN/BuecZ/xaYKeDzNpbVhamRxi7E13
N6luMlXfgGOKsFJ/RjawPits4JgmG/XpsoH1OWnwvWDyhMmTJjOFEx9nyPaU
sI7WuM4W5nHCP0b1ObKB+47ovk02eUk2xmCecE40WWAySe+8LA2mV6TBerfh
f8TkYZO5aoPv56uNSfJxoOZmocYC3Is1FuB+zeR5YV0iG2PwumxgXSb8YH1D
NuqL1B5tnWB+7DP9m8kK4Wc83hR+sK7OuK9gXSUb9TWy4fvbwg/ut2Sj/o5s
jMG70q+avCcNvg/kE/jel436h7KBb50wg2+tyVLV18sGvu/0jHc3yMYYfJLx
9Q2+T6VXmnwhDPj7mWzg/lw4wb1RNupfCieYtqsf+v9KNvB9LQ2+LdJg2ioN
1m+kwfetyUfy+2P5i6/fq21wnBh8fn7PeEzbY/ofk13CBqad+p76D7KBaY8w
gGm3bNT3yrbJ5EdpxuMn6c0mvwgz+H6WjfqvsoH1N+EE3z7ZtsjXrcJ6wGSb
sP4hzVz9Kc1YHpQG9yHpHSZ/SYPvsDS4j0iD9W/p3ZpD1i9r9+roOP81OSrM
YD0mDdac4Bp8eYJrcOcNrsGaL7jeJ182aKxPMvt+4fvYyhtMRpjUsX6vM2lj
5ULBsYGpYHDM1E8JbgNfkeD90c+pwW1gPTn4ePHNacFt4D49uAZ37+jYCnN2
BMcGprOD46Hds4LbqK8OPh5ncB6pT2LAmcHb4ftzZWPddY7ednGTC0wKBPfr
/OD4qReTDXwXCTP4LpSNekY28GWszYui42hkcpXJ1SYlgveFLyWlwVRKGhyl
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnnQ11MUxr8tKi20aFX53XveildFb2ReYkzIPmgsM4wt+5IiW5ixRcqM
nWnsa5axlYpKpSTDWFpU2lBkKWNCjCXL55nn/vHMec653/u72znP+aWRo0dc
1rSqqgmgOTgmquqnXFUfpqoK7LUgEdsF+xmxRbJgE3w+eBC+GfwO3xH7GNgC
/sDvpd8BY5h/CPY9YofBX4Ivhn8lwJ8DC+Ffgvvh34Nf4C01B1zCnKHYd4jd
hb0JfAH/FjwA/wFsg7fC3g1uBhvwvwNPwg9kfk3nAB+ANeBHxoZrTfgzYAF8
PTiCb1/Bfx++EXwKv4LY8HIn7XUXYCf8Gfid4d1Be/yZ+G3gO4O2+G/g94Hv
Abriz8avwetAZ/xZ+LvCdwOd8N/CHwZ/odyVzvg6/OPsvdRhl4KxfHOk4sQe
xz4BpsHH19gXY1fhT0/eQyP+I9h5+KvBcfjTy9yvwY3wi4k1YrczfxP2G7A2
+Y03ws9nvAG7Dv8WvQ34G34R6MTY1fjLku+kG/412OXJdzILjNAdYOvBUfDX
9A7Jb7BdvwWageagdzjnlGu6k8Afh12RfGcD8K/HrsLvjp2reeFc6Q9Ohc/B
LmF8M1gOn6gcqjk2D75DOFcGKqfAaPyDsZfzzc/YreCv5DPWMzYwvNYc/D+V
26ACTcDujF2HXZn8xm+Ce5WTyp3kt1iRvRe9yTT4Pcpx+EfJ/Nbst1BsPPw3
8C98HFhVakC5vwW8WnJcua07nJJdE6qFRaCB/dyA/7lySxaszh7LYAL8n3LX
k5P3ervePHnPt+ns5WwT8bdhf9Wc5D0thF/IGkNKzm3Anos/qOTMXvDB4bXf
xp+MbY2/FD4VtAvXiGqjDWPP6uzZtScNWK/azr67O8DT2Tmo3FONXglvG56r
35T2tMRvna1BreAPwcfUHHsU7E9sTXINNIU3A1vhl/JNBW8izUvOkfv4/j/Q
AjxP7CTGTgzflWKnwSdlz9Wcd7M1T1qnNU5n/E74qJrXUO72Jdal5LBqpYs0
otRMD3gH0A6/A+ga1hRpib5RLfXE71hqqldYM6QVivULa4y0RWsMge8D5uL3
zM6FfcNcOaFc3RO/W8nZ/uEcV24rNij8hnq7Htm1tneYq+Yexu4X1hKt0TGs
idJCnSGHNU7app4xNKxR0qbe2dp+JrEB2Rq/rGhEfclBacVs7TFbM04I56Ry
sV+2lj+ldbI1XVp/dLhXSfNPgZ8MpiT/hrRlZvZcaczx4RpTbfXFnoe/Mru2
Gkptz8geU40fG9Y8aV2fUgtTs7lqQlohja4rmnFOuOeo16gmzgprjrRGZ1Zv
PCB8F+qRL2IPDfc+9cSD4IuJDS5nvCBcw6pdxZRbZ4S1Tjmm3ne23iy7B46E
z9ebZcekbQuya08ap16sHqjep56s3vaJajq5x61VrWVrk2LqDer56vWNpfbH
ZmulNEC9WT1EvUM9Wr1pSXbtqke9DA4P93r1VO2tRfi/gvb4P+IxWGw=
            "]]}]}, {
        
         EdgeForm[], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQnYV9MWxj/TNWSeQpH890GmKBkyD3GN1zxlSKauayZC5lkoKppFRYWQ
kjJlSqI+pchUkcpc5gxx1+/Zv/Ocnudbzzr77L3Xet+199n/856vafsLj7pg
2bq6up2Wq6uLv7rrU11d97D7wmbX6up+Dvsp7I6wy8I6ht2pvzysi/6KsLvD
OoVdGXZf2DVh14Z1C7s6rHPYvXr67nHsVWF3GYP5L4YNDRsW1t0Y14X1DLs+
7Iaw+/U3hj2gvymsl/7msN76W8K6mgccfcNuDbstrH/Y7fIboIffg3r4DdSD
sYdYwPGQ9+D9sB5Og/TkfETO1ONRPZxGiK9P2BBrxLgnvdfXGnQ353D5w/sx
Pbwf18P7CX1va9fDOX2sAZyfDusn73HmBuMoOcN1tB5+Y+QGp2esEeNGGoP2
s45l3GB5w+d5Y8P7BT2cxjqO3M8Zm/bisLlhX4T9rp8XNl7OcH1FD9dX9dTy
NT31eyPsKbm+KVawvyMfck6SJ9jf1tM30bHUY4IxmP+yawCOycaAR711hOu7
erhO1bOXp+lfCntPT7y3zAOOGfKE3/t6+H2gh9+HYa/L7yM9GKeIBRwfew/e
n+jh9KmenHPkTD0+08Ppq7DpYpltjRj3tffA9bljp7g+9fKep4f3AjnD9Uv9
dNd2inOowTBr+o2x4fqL+MC1UJ5wWqSH04/ymRX2vXVh3HdhM23/4Nhy3Fvy
+dXY8PhND66f5Uzun5wzW9wvuzZ/yHN+2MFxPrYK2ynsLznDdYmeWv6tp37/
6OG6bMpYwb5iynzIuULKPMH+r5Q9fculPJZ6LBPX38q1RVxvHLZJ2Eopx4DH
KinXEa4NUvZwXTVlz3O2Wsqe52z1lD38lk85DzjWjOs/a5nfWvKE39ope/it
k7KH33pxXZcyxpVTxgKO9b0H74Z6OG2gJ2ejlDlTj8Z6ONVSxrdG2EYp14hx
yXtrWoOVzNkkZf7w3lQP76Z6eG+mX93arewc4lEDOBfGhndzc4OxWdi6KXPd
Sg+/beQGpy1SrhG12dwYtLd2LOM2lDd8tjc2vHfQw2k7x5F7W2PTXr0I/GEn
uj7z3X+t5NzUfdlUrjvrqeUueuq3qx6uu4kV7PvIh5x7yRPse+vp2yNsS+vR
2hjM39E1AMe+xoDH/tYRrm30cD1Az14+UN8y7N964u1pHnAcIjc4HaqH02F6
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
f3TuU+IdYR98RtqH8b6AZkS7j5Qz+wttO9o54HvJfM9Zb/KPtU1uNOs4+Yxx
/gDzPymHcc4ZZOxR4hpvDsa9Yvtxc74ovxfM0d9xI1Kl/5nzs1xGigndOtGc
aNtJ5kPzvi4+9gvaFW09zVijvfeG+d5xPpimuk5gQgtPTpX2npoqbf+W2Osd
Ryy0A1qCc5Zn7FzxoVtnOg+9iXYtv+kMFiP9HxgLHT5LjB8YF3yfOJ+ccxw3
2bGfypn801Ol7T8UN5r8MzE/7pozjm+Fc1Olf+aZc4HtUnt/aex5zin1+YJU
aXLGrRJ1/iPlb4Zg/ca+v7zHGcV5y3f88+O6WZHPPs699Ys8jm942xZ5vVnr
DeJ6Scrfxv7Rs79WiPt/p3zGL3EeZyf5+Q7L2b11kfs5U5aP6z9TzvevuF7G
HMsV+fsR9Vi2yN+AqGVdkb9nsae2jOstihz395S/r1G35nHvN/cHcYnP2VrE
/Q2LjPdHcYO5pfUB20/mIP5m4Veyb6H1olYp7jVciv8SOcIJ7px9tehf2dqt
YW35zYbbMuqFE637CdZnJbmsVeQ1Y21WDL84ZT6/WhdqwjvAqsb8xRpRnwPs
a+M6ruaaMraBv+vEWuz+A9/K5uI3ayd/txi/hvE5o7b1nGLsWo6npvw2XOua
cn2v99bxmtqv63fgbf1W+Yy1Zy0WWS/ucwYybz3nrmsc5rLOvJe0dWwj41Dv
xn7/5N7G3qe+nC+vuh+4fs97Tbxm3VjHha7Jpq4L/U0dwzps5h7gWai5puz/
5B5oLB4w8E61uf9f2dz9Wdb8c/cka9LM95utvD7fum3tby3ztnTut7bbuqZb
+XzCpbln6Hau0TPWeTufI+Jt4/O2jfGpLftxTfNubxz48n7VqsjPQrkn2PPs
ixbe/8Nnpjw72C83OKaV+4exLR1P7O19JndwDO9BrdxvF3i9o/dPFgd8+S3g
d47fov3j3mXivpB5PiefqbnRmntEe3CR1/PssNby3Y31KfJ+uTN8f9f4eOpd
5POjX/gO1mHX8AOLvH/bh9+3yM/iqWF3F/k5pP9Exxwc/kb33ylhtxf5mewT
do7r0iX8UUV+XsFykngODH+5+753WK8in1Vtw24p8nlE7L7GZ+z9jr837CzX
kdrcZ33uCTumyGdGT2tBHRi7i+OPdRxjwLi7OG8Kf0iRz8idw1/iPjwj/JlF
PqcOD7u1yOfloUWew/gji1xfanubHOoce5jj77JG1OfoIteFmpwWfq8i/yZ0
tdbU+fSwfYr8+3Bt2DVFfv6uCru6yM/wlWGdivyMXhp2UZHPsOvCri/yWdMu
bO8i/0axR052n7C257q+rP+e7oHzqFORz7z/A6bBcXM=
            "]], 
           PolygonBox[CompressedData["
1:eJwt0+lLVFEYx/Gr2SaSSWXGGJN5Dwwi4rvS1IyadNTcUjERKu1NaVqKuJQt
UFSQlHuWKRLzF/in9G9ELqkpQfp9OL8XH54z99x7PM9iXld/c19qEASlSMNb
FwR12Az5QbyOpziBTLRjCTH84p0J4m1ssz5EfI96/OF3KnEa3TiGi/iMVuyw
v4dK1lfwn/Vh4hsswGGfZ9eI5UjBEbShC0fxl/2rxBL8Y51GnEEvjiMfj/AQ
u6H/5oFysLvbnSqQRDF+8uwW8Z3zuVsOT1QDyz0Dl7GMAjxm/xXxOdZZnyMO
YFDvdvCsg5hArnKcI85ikvUZOwM9yNKdp2xPZ58k3sFNnFaOQ8Qq5789hQ9o
Qh6iaMZH52tvPalVTa2W1tNvrL9ilfV54ncsKnc74zVqnN+L4AteOp+b9aQT
jbigniTVE+uF1XAeYziLEM8wjLXQP2vBJ+dnxWbAchtSLpZjNe45Pwsbof92
FNk6I6E7RlTTRtUgqjs14L5mZYv348S7zs/G79D36gVy1LNS4goK1ROb9RvO
195m3mb9knoZU+/jOqtA31brrnbGD93B/nYRsc/5/wGb/XT1ul9r6/m4ahbq
TiPOz3C+ci7TmUXq2QGesn35
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmge4n1O2h4/oEr0MURPOtz8JQog26UQPEt1EEJ0hwWhRJ5GJPjoz415X
GUIYvQcjTYneBtGDJLqQ6Nz1Wu/3nHmes5797b5+a6+99/rt/+k0bPjgo9q1
tLRcP39LS/y1LFNaWtYJeaFqaRkV6Z9DNgnZOqQl5Nco/z7khtaWlttCdomy
ziELhwwK6RSyUMhuIWuGLBLyl5AxIb8PuTTkkpCTQu6N/reE3BpyZuRHh2wW
skPI6iHzh+wUskbIgiHbhawW0i7k4pDx0e/ukCdN7wl5ypSxJ4X8Sz3nK/k9
MWSyZbeHfBkyPeTNkC9C3jD/RMhdjrtX9G0NWSxkiv3uCHkm5P6QB0L2iLq1
QhYNeTry91k31bZ3hjxuepc6jhf/s47xYMhzpg+F/Ed9wfFiyMMhj4S8ZPpo
yMum/w65IOY+P6QX6xf5CfY5r+Q4r4a8rb2w0+vaAkyvOc9k8U9V3zdNscdb
pvR/N2Raa2J9X1uA4xPnQfcPxPN8yCz1Rt+PWlO/F617SF0/NE/dDMej/0zb
0n+2Y7wS8rEp833qnOD4XGys5WeWkX9PfdH1K7G9ZbspYp5jGXZaLfx80ZDF
QuaKmTG+Fxv6fit+9J2vSj2Yc55tqWtXZRl6fRPyjmP94BjY42dtBL7vHI85
fhUndm2pMmWOX2xL3Y+OgZ3mr3IefHnxKsdC34WqxAy+Bav0e/KLxPfX6rVs
leMyJ7gpA/cSVY6BvgtUOTb921eJExssWWU9ujT2om7p+P5JfB2qbItOS1XZ
9idlpviXqbIteixXpS7g/l2VdgTfKiELV6n7SlXqBKa1qtSDsVe0LXWtlqHL
ClWuE2Ot6hhgXaNKPOjY0fGwWecq7YgN1jRljk62pa5ybHTfQP0Ye/2Qlc13
CVne+deuEhv5rpaBb2PH7Wxdi7rWVa4NfYrzkF/HfmDt7pz47EYhq4tpQ8vI
r6e9wLeu/VaybjHx97AfemyiLuB+LOS2kNtDNtem4O4tHvD1VD/03VqdmP/3
tqVuG8vQcTPXjLH6OAb26K9+6NvL8ZhjgDbFxluZMseWId2s6+sY2GZb5wHT
YMdC3x3EtmnI9tqd/EDL0OukkANDDgrZ0TJw7+IY6LudY9N/Z3Fig12tR5ed
7Efd7iH9xDfItui0m237KeuIf8+QLcS3lyk22F8M6DtEW2PXfUzBPdQUHfc1
BesftB199rOMsQ4VG7ofIGZ0H+Y8O2qLndX9YFPseogp/Q9zDDD9MWQPcQwp
qfdxIUeJZ++QY9QbfUeo3xDrBqjrcPPUHel49D/atvQ/1jHA+idT8P21JIbj
Q04UG+t6gtjIH66+rM9IcYLvZFPwnWKKnW4OuTzkipDR4kHHU63HBqeZMvYZ
IUdojz+bguNc9UCvUZYx1jnqS90Y7QLWM52H/FhtB+4SGBcvibtPyb5nh5zn
2Pjy+abgu9KxGPtCsaH7X8VM/iLLwPG/6oS+l4ScLqYLHI8+l1oGvstMR/2X
jZjvb875l5B+JXW8ivni++SSmC6332jbHS3OiVWePXeE/I/40In9yvnEOXKj
+qHLNWJGx2tNwXedKbivN73Isa9y7BtCLnasLUqWc/bdJDZ0HOc85MeLE7ve
YgrWfaPv0JC//5fe2PJO06tDHnZcfOoe9Ubfu0P+z/y9ll1n2Xliu88ycNzl
eNQ/EPJPcTxoim0mqDfzPeKc6L5USXz/DnnUMnA8ZL9xjn2uc08SDzgmmzI/
dx1nMGfxNPVg/inWg2mqKVgfNwXfE6ZgeqnK+4Y1fyrkfsd6UR2pe0b9wPS0
85B/TpuCbxhnTklMS5fsC6951n60e9l5wHR6tDmt5Bj/UW/0fVWc5F+zDN2n
hzypjq9bBo5XHI8+b1qPPd5WV3R/xxRd3rKeumXkXu+FvK++4J5him0+MEX3
j5wPHVeXJ8ElPndc5pwlHnSfbYq+n4S8IY5PTdF3nuPODPnMMsaaG/KhdSvE
PMuHvBvfXzgPmOaoN/p+bYq+35jS/1vHRq/vTNELPgQvgnOtEmP/XCU/Wjm+
f7IeDgr/hMvNFDfY4KhwOnhpx/j+Mcpubk3+CqeEs42Wg8LHLpFDwsWY417n
Xk3eCXdbQK4JlxsjZ4W/fajtsTtnNPuCs2gNuS/8rbPcF16zprwQLobe8Cz4
GPpONt+hJEd9rDV5JFwTjgfvbF+S490uT5nc2sZ74WMNt4S/3CfHgZvdYdmU
1jZuTJ+77EcfcD5jH/zmWfMNFyUPBjhZw9Wetw48L1rXcNGGm75kHVyUcvgp
3BQu+or44Wuvigd+1nDQ16xD7zesa7how02nW9fwUuqWK7lvvqwSPxzrHbG9
Zx5s75tHb3jTh+o60/zzln0g/hn2ec6yGeKbZR90hZPBzRpeOlu94WKfaZvZ
9nnNsk/F/4l9wPOFfcD3pXmwfWUePPCyr8U9xzqwzbUOXeFZDQedZx16f2cd
OL43D9YfzIMHPtZwyh+tQ++frUNXeFnDQX+xrpPvQPgIMRbxI/Fiw11/FTfc
C14DHngWHA394CBwMbDBy+B4jAvfgV+BE05GH+aEA1GHjRgDvgdWeAxjgQe+
BkfDLozNuGCCD8LjwMPY5MFJGX2wEfyuvXrDvZZVP/gUXAsc8K+GU5Iurx4r
Wsd9SBy7pThXsg79VnesFvstJ2b44srOvYbtwNzR/uCBl3USz6r26WAZfVjX
xS1ruGtnMa9lHv3gGl21I/ysEmdtHp3WNo+OXcwvbdtWcXe1Dl3hXBuqKxyu
4ZrrOh+6bqBt0L27+dXs110MPRwLveFnGzsPXKmPOOBlm6ofXKqnesG3Nndd
W6s2nrm5fda03ybi7GkfsPV2rC7O01u9+zl3N9dzCzH1t66TOvao2jjqAPFs
bR5825hvuMqx6gTHGijmbW3HWNuZZ+ztzaP3DuaZG+6ym5gGWtfXsl3Fxl5s
+OhOzgdOuNsgce5ivo/9dhEnnGuPqo2L7ml/+NMw8cDFGn5JunfVxkuHOBb8
6JCqjaPuo432dtyGrw4V237mBzrP/up+oHM3XLThpgdZt4Nt93NtB1nPmcte
banauCv9OXPZt+3UFd4xQszwtSPEfKR5dD3KPLoPN8/c8KwTtcEI6w6w7ASx
seYN9z3G+YbI4RreepwYhtnvePGNdI6Go460P3wJftXwz4aPkp4iBjga/A2/
ONy2DS89o2rjuieLbZR1YBttfoTznKnuY527b0n+eVaVfHSsOIfblv67Oid6
EYu87T0GNmKos7UTPIO4qolNm1iV9OMq4y/iMGJK4rCPzBOrfmYf4lDi0a+q
jAtIiQ2IZT+3HTEs8SuxK7HkTMcippxlvombya8d7Q+QU6xWx3kXsnPkV4l0
5Tp/r1gp0o4hO5a2udGF+JPfOca1tsXExMib+dsH8drW0W/bOrkLMfUX6trE
/Q0PmFG18YP3nePA6NO1JNfBFnOdo4nF54htnnXEb4saZxLjLWKMShy4oHEs
spB3OrKwMe007Yi9e0fZH4xdn7KMdYNLYVc4ziTXiXWbon0bXvWqdfCn17X3
RNuCe6pl9Gm4E7Y5oyRnW7YkD5uujzxtPfqBbTHj5xXCrsvX+fsSMfaextkf
hDwesmHI5iFHuka8S5wqf/8o0pdClgi5J2RmyA9RfkSkfwy5MdrfF+lsucem
Jesofwgfk8/MifTrkB7yTGyEfeZG+nFJ7nKauOBWvIucog7v2J7y9oGjQ8g2
rBlxV52/zS0U6d2R3ypkXshnJfnTglF+V6QDxHCK+xPOuKO8Ee6zvfzngZBP
5V2LRd9F6/wNcM1I1woZHN+rlpyfedeNsvVCdo/8v6p8N+FNYYkoWxKfxi8j
XarO3/HOCdky5B9V2m+Atlo26perUw/anF1yrCpk75I8onvUb1jn+nWKdI06
f3usIm2t236T3FUOBi9jj+LHddSvXWcd8epgY1Y4GrqzH7pGfZc6f8M8Slvi
D/BBcMAJ14/6bnX+7odvtVc39kEH98JxkS5Z8i2FNwz2Bn76oD7KHprg/mje
M56x7gHr6bOk5w3jYFPeP3jL4K2HtxTeVnhb4k2Gd6zu0b5LyXed5m3l8art
/YX9t6V2Za2GqiNvVpzvvG/xrnWV4zFn89YzyfmmmL/dvYpOzZvOVHWZZN01
1jH/1fZnPN6ueO9Bx+ZdjH5/Vyf0wYZ832rZvn5zL3JfcldiG955ePM5oeT3
8/G9YqSHleSF64YcUvJ9hfphttnPMZmzebvkXQ+/440SGzTvhrzBjXc+5vqn
63S/dfeKk/e1h13bm21LfpxlrHNX14d1vNGy5q3uQcfld3jOcs547s4rXJsx
rlXzjnuldexD3kd4Y7is5HsCPJt3E/Yx7xwbuG/nM6UP7anjfOK3eHTijnnB
dX3JPPW/2Obc6DvSM3B/zzJwcl/yvsMd07zvkCeuISYgHqg9g8bqW0vph+uV
rKPdQPcae443it/OpNbUlfcf3k7Wj7KVSuZ592hn2ytKnsHg/ja+vyz5nsQa
oCf77Xz9kj1EvHNh1fb+Tcp78amek+g60jL6ET/xNswbMec8/yfB+9PJ+iyx
0Bn6Ee2Ivy5yjv761T+qtrdp9CDuYQ9fZb9x+sU57g3qiIeuNn+eul9dtb1l
X6dON+iblzjGDfrNzfpm807dvFuPt+4y68fpewfpf9yvp7vGB5esYx9dWfId
jXc23tVGe04eG+fiyyVjpf2JZeq8U4kT+B8F3oQuL/kexDl5vuV8837CGxHv
Ir1sQ1m3SH9XMl7Dl1nPW/TDjuqwvG2ImWaVvFOp+7ykH6zinuuivx3u+cA5
wd3PmyZ3K77DnTleX8PHeFfcNHBcW/IuIiYnRuccurDk9/GWkSd2xz744sWe
tWd7nnD2nmMZvjC25PqfbTm+0c/2fFN/Vsm4GntfKt6TtD/vef1tQ7+eJf/n
hjX5pGQcAB5iG+LPzazjTZO3wz7qjP7E8BeVLGNcdOet8ULLwcXacb6wTpwB
56rPGOe9Sd3G+N3RNpwVfcQLlo3Dno+WvDvxM85Ezh72E/uKeODDkrEXe7CF
GKckVtaqm/4wNeRN/ZTzj3OhOSPYl7ybMnZ31/+rkO9KnmXPlYzn0I3f0TiD
OH/2irmecJ4/lbw7uEMmh7xR8k5m/o30OfptXPL8Ojz6vqqftYvv+epcc+p6
iAV8m+hXzf1EDE/swBnN+XxA9DswZLh27ak9F6kz5uPs/iXSn0uu260hQ+oc
cyvbsx9vxAb6ErZg/eEaA/QJ7Hym37THlq9pzzvc2/hJT/2GNuOoK7mPboj0
Ntd0Or5Qcu+/7B5m/26u3zHX0aHjdSWxjojv50vuqbH6HXuBWI/zgpjq2JJn
EefOBZZzVuwbfferM86+SB/uY30v++Kf7Bf8kX2OreGAxOMTSt5pr7hmrNf7
IUfU6Sus4XuuI3HFidrksKh/p2QccmR8zygZS9yp37NvDtVvWNfjS8YxtB+p
Lqwj/cbb90Tn4Lt/jDmpZGzSM74nRrpPyXuWNpzDfeq0OzY/zjnwSfZH3zr3
yB7EyHWecb0ivb7k/sVfetfpM6wV5/Xa+stwdRuqztwT17pOv61Rlfccd9wP
4qE95/tR+gZ+ze8u+NojJfc5e7xHpBvV+f901I/SHzYzzzf3DLyOcxg+e0zJ
vXtNyCZ1/h7CHXSs/vBWyNA69/wLId+U3MfY7NA67fZYSZ/D3w6J9OCQo0vu
lfndL09h4zrP+idL7n/2/rSQ10uWwxH3rvOuYI+OKBlDce72dy3+pn2IJ8/S
pzmTucc4NzkzL/MbH+asqbVrUzfRc5e7gztoPstpzxqzVsSg1HPHcPb+aJ5v
sK2nHTiTejjHPpYRizXx32+/o0V6b8n1hL/eX3I8+N+DJe/bE/R9fI+14dyF
j7Lv+upX2GMbx8XviRE40w41z94jRoNnEqexL0eqM/6Bf7FnLxEXNhjE+0qd
aw5Pg9dN8E0C/vaQ7xbwN94uBsP/6jyvOXe38uzFj7rrS/0oqzPu36LO/cze
hAPDFXnzWCDKvi95Tu8AH63THwfUeZ5ylr5b8hzkDOQ8uKnkOPjRNH2G9wV8
Fo64O5yyTntsU+fZwX4ntoWHP+B7DG8TvFs0/7dBrDeQ96Q6z0Hen4bpA/8P
TYEu9g==
            "]], 
           PolygonBox[CompressedData["
1:eJwtldePUEUUxm+WIgJSFaTqArtzUECq0l3pvffOLk1BlrIQXkh49F8QUCEK
CUEBhViAoEY0YgQBNSgEAkQSAoEI+ILU35dvHn4558ydO3fmzDnfLa2snrK6
pCiK9VAbWkdRvAh1UlFMgJfw20Fd/EnwMv4H2FKYDGXEH2I7wFR4hrg+jMR/
Ul4Ur+B/hN8RpsNzxE1hDH4J9MbfqXVgNrQh3q7vwER4gXib9gHj4BT8Bv+z
9p6yomjC863E7ZPXfI14B7YTzIT/YDlja7EJmuG3CK9VC7rgdw/PfRa+g4cw
GObAQX0L+sNwOAQPYCCMgAG82x9q2M+85Ny1De9dOfwdNhBvxjZSnvDLI+cK
euD3CZ+9vvaI/2o4V/WSc18azrXu4C/YSLwF2xzOwhDiRdit7OE89gJ0hsbw
M3yhvEALnYm5J7LfC/ZCDWObsKd5fwX+mZyr+TCNeAaswH8ebsBXygFzW+uO
tDdYptzCjzCSuBJbBQvwf8G2gu6wB9YxthH7GWv8gH2LeGHyGcbobmAJflO4
Bd/oTpjbBvsvHIFHxG2x/Zj7PbYhzIVlxPuw3ZLv/H24mL9dwMdwSXnP75yD
f3IuLrPmFVnYp9rFrmS9P5P9nnBS9xC++9WqmfA3tLZqfhXx1Tx3HbxBfAzb
ILnGf1VdhGtpFfytPMDuMufoj5zDqnyHo5k7Knw3yumEcI6Um6XwJVxPvgv1
xD3stVxrfeAo3IHH5c6ZauFT6J1r4jDcTs6lcrwLeze/+zp8DiV8b1jOiXK7
Kz9Tjg/o7Dwfgt3G8xE6W9jXO7Xwa0PffMavsTeT71I11JBn9cJaMUpnwm8Q
9tck93Zz4rHJPd44rCHSjtGqyXBPq5c1pyV+o/Cz8cla0j6ydmnP4Z5Xr89I
1qauYV8aJW3rSDwlWeMG4w+CDeyvIlnrgnhasuZ1DveselVjncI9rt7WGtKu
VpG1FPbrLpLXeo81e4U1QL0/Cz5J1hRpib45DH9ouFfUI7PCPalefDtZewaG
e1UaNFdaFn72DnwLfaU5uQZPJ2uctE1jU8M9rN5dDtU6e9ivUY3jjw/X2vpk
bVTPqdekkWPDNa9aV89K66RJ0iJp3qTwGnpXGrEo3AOq/ZXJ2rqYsXeTNVba
3TOcC2l4Zbjn1GuaI+2tYqw6WYOXhP8J+hdo7FKuIdWOenx6+Ew6izSsAv/N
cO5Vs9K+n5K1VBp4HxaG96aalVYdT9ZSaZa0V5ohrZAGPwXGuf1V
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt0lk3VlEcwOH3NWQeXlMUoRAqlaJMGRpIIQpRKNGEpELUZV1zYy2fwBfo
k5EGMvScVRfP+p2z1//sddY5u3h8tu9NOBQKfSOK4DqbCproZZJFvrLKGuts
EO2BPHIZZIiHRNHMa6Z4xQzTVHOURcI0cY0qFji07xE9yzLnyOEBA/SH/71o
I8+YYJznTHKRNOb5Y/SqnmKJEi4QSzIpJFLIHD/Mx2gBHzlBPLdIoJ2fZi7p
Ix4zzCgjnOcYwUfdMndD27jOpvub+l1n9Thx5POWbeuX9Zfe1k46SKKYTxRR
Qy0necdv81d0R99rKam0MMYTynhKHfWc5gO7nmnQPb2rXdwhnW72rd/TCD1k
UMFnyuklk1Ze8JJKzpBFH9nc58BeK3xhgYlgbxopJ4tMMoiQThqppJBMEokk
EE9ccFaIDf5bcB7/n+O/Qeo3tw==
          "]]}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0ktLlFEAx+Ez46Xca7lSJ9OFhJFly6HMzE3qqGFZQg0VGmnfoLwwoEKQ
u2CEFgUh7qpVMH4CBT+AYHlJs7S7qZX1vLR4+J3/mfPuJpG+1z4QCyFkScZD
yBiPmSbHHAtssB099Kab03khHMoP4TDzzqU6oM1ar1M84pI9oZM0cZd++ngY
3fm9Ts9zKvqWYnrtWUqc7+gFPanPGaPDHtcst6Pv7RP6lGeM0ujueFRu0mbf
0jQZztm1UblOq31DexjhrH1MG7hKi31NuxnmjF0TlctctK9oF08YJOVuSF/x
kk5eM0OOB9R606H3STpXa5G26wFN6UGt0kJt0zwtIJ+jdkzj7DsH/auV/OYP
u/xijyP8ZIfvbPODBF/5xie+8JkKNtlig498oJw11lnhHauUscQyi7zlDe95
Ef//P/sHWLhOKw==
          "]], 
         LineBox[CompressedData["
1:eJwl09tPz2EcwPGnuDCHFG6EFCLFiuiXDppuHNPW6JJNFy5sklM53TUuGJtT
2DJszDoQm2jahBDCkGPq3h/gWq9nXbz2/jzP8913v9/v+/1l7aqv2ZsUQuin
xdBMaXIIvRNC6KGax2zlCU/ppopHbOEEx1k+MYRlvDRvZpRj5NnL5YV5EyMc
Zam9HJ6bN/KHIyyxt5g+8zC/ybau0EX6TH/xk4XWa3Ue5eYmvU5rvA8V9rbr
Va6Rw2R7tdrPK17Hz8IU+1N5Yx5gXfzs3IjfjUpnzXqLm+RbF5DCDutpulOn
60mt0VNax1ve8Z4CbnOHM6xw3WldqXe1UNOYQSq77c3Us7pNz+kePvCRT6yi
jXbOU+S6YhJ0WK/RdOYwm3p7c/WC1upF3cdnvvCVRPxdnTXoEN9YTzGd8Z7x
uTm/pPe5R4n1ZZ2v+zVDD2hLfPbmEs3Ug/qdH2yglC7K4rvj/Io+5EE8sy5j
AYess/SwNsb3z1wev793djVFJCgkn1yyySSdWaQwif/e9X/8ZZhBemlLGv8v
jAH5a1i4
          "]]}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVbFVEYgNFRAQsbu7u7u7uTElQERFCxW7BbL/Q/6F/QO7u7sQu7W7DW
PF6s8357z1yceWafUz8le8K8IkEQRPmIiwiCWLLIZS/7OcgZ8njGRwpZHhkE
RYnnLS2jgqAF2ZRkHqWoyQ3XX/Ga5xS3t56z5utkmEcxmm6M4YX9DXpOm2oE
O4mkBvn21+ppbaxPwu+juZwyX+MRW60f68PI8EGDYA3HzVf5ww7rv3qfoeYH
OkxPaH2dShKJTCOZ6txxfbUe0zr6U7drgVbT27pSj2gt/arb9JtW1S+6Qg9r
P+1DXw5Z99cB/DDH6neN09rEk8AgbtkfqHlayCrzUa2r9fhtnq6/dIY2IIWZ
DOGu/cF6T4toDifNDbURxUglnTSaMIsRjGQ4T90fpes4Y26mz3SOlmA2WWTS
nLmMYzxjeeneCVqaXUTzxl537cFN83lamS/oRi1DG1pTlt2U453rPbUXvblo
3VYv6SYtT3vaMZ8KTOK96xP1g1bUzVw2d9COxLCASiykE4tYzBQ+uneyftLK
uoUr5s76WZdrFZawjKV0oWt4psJnDd9ZeI7Cs0KN8IwQQ3miw99M+I4o8Nv7
QD63OM0B9rGHHDKZTQazSCeNVGaSwgymM41kkphKIgnER/z/T/gHES1/CA==

          "]]}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dbzWEAx/E745wQMlMySlHZq8gImZVRSRmRskJll/kWZJOsvAfeQ70H
ntlEkT0+5/Lgc32v63ff58n5//9ptU1ljXEhhC5aIyFc5jFP6eI5vUSjISST
TR6rKKaMen4zLj6EMczjJN9t/XU3e6hkNFuoYiyn+OHeWp3FJWazlJEco8/5
ak1kOg302vrpMM4xnASyOEy38zidykWmMZgKhrCNj+6s1B3sZDvV7GIJ8Rzk
nXsFOpkLpJFPhH28dr5MUznPBBYznr28iP1PWk4pA9jKS3utTmQgk6jjlX25
vtH9mk6UKRzgrX2FvtdDmsEgMqnnQ+z56Cc9otkMJYej9NgL9bM26gxGMJMm
vtjX6Fc9rnMYxVxO8M2+Tn/qaZ1PEgs4wy/7ev2jzbqQZHJp4a99gwbOkkcK
NSxiI5vYTBElFNPsd1W0UEkFpRTFniO5ZMXeQyL0eG+f0ckTOnjEQx5wn3u0
c5c27nCbW9zkBte5xlWuRP5/J/8A3clZIw==
          "]]}, {
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0slL1HEcx+FvncwuXSpzKytLPan/QYbZAh60iDKjFAqsRrAs96aoSU2i
KCj16AKJGbRQ4iHIFrAgGiUoj7abGnioo8/g4eH1ef8GfoeZyaqqLYusCCGM
cGxVCLGkELoZ5gVxZlhkpc/XkEEOBfTSkxzCNJ/5whiXVodQqae4yxX7nt5h
lKhdoTU847r9XG+zw72TIo7YnxLvcZ+mhghneOv5Ldrch3SKJ3TaT/UNN2m1
D+okj+iwH+trbtBiH9A4I1yzH+orumi29+tHhonZD3Q88S6a7HL9wH2u2kP6
knYa7TJ9T7W7gELyiXl2XKuYdy/wl5N85xu/+UUpJ/jKDD/5wRx/mGWQd0xw
1DsHtDLxPfLffZk8d79W6GH+JX4v+miw92muRnW7XtQc3avbtE23aqtm6x7d
oi2apc26WXfrJm3STG3UjVqiGdqgaXpB03WXpmq9pug53aDFul7P6lqt03V6
Pnn5P7sEoDhg4w==
          "]], 
         LineBox[CompressedData["
1:eJwl091PzXEcwPHvoTg9kKfLbroy87iR8pgLeQo5hU5lVMrDRglxZTZpjDWb
jTHk4YatG266aITNRV1kXBgXHtJ/UB42kry+c/Ha+/P57pyzs+/vnIKGlorm
RAjhFfOyQ+hIhtCqc3JCmM1P8zFmmR9otab5YW5hpvm+VuluvpubmWG+p7t0
J9/MR8kz39VKbdQKHdXpOo0U++07dERzNYdyGuzrOW3u0gH62cYCZwuZT7u9
Th/pPn2oTWxlkf28/uI3Y5Sz2HmH/mGcv/E7sNT5BZ0gmA9pikFe002j8wM0
8cZ+UAtZzjKKKYrv5TArueR1K/SyrtLHelGfaCcJ8yQmx3u1r9YrmqGZ8XPM
ad5Rw1lnPfqB9/HZ2NdSwhquOlunvVqq1+Jd6nV9yjnzXt2gN3WKTuVIvEM+
8om++Htw/kxb9bMe101sZiNlbOEEz+Pz0Vvx/vW2vqDdXKfb9Y4mNYts6u1f
GOIlJ52doo2v9mG6skI4Q5pqaqhlD1WkKKOUEopZwlzyySPBqN/7MG/po5sb
yf//hX9uomD+
          "]]}, {
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0k9Mz3Ecx/GPG6pfjt1aV0qJ2FrUiEO5cOTWQVsspj/oj5qSf2FYRois
0fJns1mZa4ekNs2fFctsxSYls5VDa+PxmcNjz+/rvbV9f/uWUXZ4b+WKEEIf
B1JCuJYUQg8DvGaSef6SmhxCOlnks4s9dNLgb18ywBc6EiGc0Mu0ej7NPvrt
NN3PC8/XtU7/MEm3/Vm/8Ty+j31MF/nIPfuTfuUZV+1aXWCcu/aETvOUK3aN
/uY9XfYHneJJfD+7Sn/R7LmU3ZTw2O0dlzwf0Xb6uGk/0l7ectGu1As84Ib9
UOf5yRvuuI3pGk1lJ8Uccjsffzfb7fu6Q7t0jhFu26O6zBK3GI51f6WzdDIU
38HtoBZqEQVsYysV7j8o55w9qDN8p8k+qyc1wRY208gZ9wZNIY9N1NPmXqfJ
bCQ3fvP4rd2PaxIbyInfkFb3Wl1NNuvjt6HFvVpXkUVm/Caccj+qK1nH2sT/
/9F/Q0JmIA==
          "]], 
         LineBox[CompressedData["
1:eJwl0t1PzXEcwPFvnroobZ4XicjT5g8Qm82FpwtUiDahkA7qpNkqqZSNMlmS
onloiwtXNZbNomS0aWNz002b5YYrW8sF1qTXmYvX3p/P55ydnZ3zSyuIZpfE
hRD62To3hJaEENp0Q1II64nnjn2dvtXzWsocWu1rdVCjWsJsbtvX6Bst1nPM
osWergN6Vs8wk9WsIkKd14p0Bmms5DSX3U/RYO7X73wjQobbZjbRbn9Ph/md
NsY+j+v2Ib3LFvM9/cswU9xnkgf84yNx3vdIt2mnBv2kO7VLd+hj/cwNc7Hu
0ic6T+ezgKh9tz7VhbqIpthvyR7zXhazhJtuZYxzgWa3Ef3JBHX2TLLYx36y
qecKB+n2vgPaozk6qof1mR7S5/qFVnOF5mqvJutSllFlP6IvNUWX02yuJs98
lFRWcMuthl/U0u42pn/4zVX7cfI5xgkKuMbX2P+qfXpSX2mhvtaHib4flVyk
iktUU0M5pUTIJ5dMtpPBRlJJYspz/YNRPvCCroT/z/w0WvNk6Q==
          "]]}, {
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09laTlEcwOEVSshXIpRQGaMyD5lKkaEokbkkUqYKSajMceYeyJgh4zXg
HrgHU2Z5v8fB+/ye/V/7YO299s6sa65sigkhvOF2JIRbvOYdH/hEXGIIaeRR
SAU1NNJCG32cZVtSCFs5yjGOUMBx1jKZLoawheVcYwXFrGEC6aSxhPPEEM94
LpLKWOZzjsBQxnCBFJKYwxn+2Fus1rCPvSRSRTWjaOev+zbqbK6QQxEjaeWn
9fU6g8vMZDUjOME36yU6hUtMpZAsmvhifbfuZBefXe/Rr9qs0xjOdFroN1+n
3/WkZpPALE7xw3yD/tLTmkuEPNr4bV6qA9Hz0bkks51a4thPGfOo4yAHGM1C
rrOATSziKosZRz43WMpmyllGB4OoYDCdrGQiO6hnGIeoZBUNHKaRSWTSTQY3
7b89+ozR90QD1ZRTQC6p0TPmo2/2PW95xUte8Jxn9PGUJzzmEb085AH3ucdd
7tAT+f9v/AN00lrV
          "]]}, {
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09lXzHEcx+HvWLJnSvYsibJE1pJ9KbJXlshdzuG4yd8h+y7L/1DHtTuS
LJGkyL5TEpKsPR0Xz3m9P/Obc+ZiZpKK9xWUREIIVZRGQ9jPRSq4SiMtROJC
GEoqmeSQz052sYfL7OUSv5kVH8JMFpHEQiawmGQm8tP7ftHJePdq7tgP6WCj
+4d+Y7S9itt2A1/Y4P6qnxlhr+SG/YBPrHe3agtD7BVU2/V8ZJ27Wd8Tay/n
un2ft6x1v9PX9LOXUWXX8ZI17lf6nF72Uq7Z93hKrvuZPuYfS9yVWssfNrn/
6iPm2E0a0TwCk+hBPj154nmMbqM3KfShgL688HyAFtKfVAaymUG88Tyq2xnM
ZOLYQjwfur9n3UECUxjGVoYzjanc9L5sHUmbPUpzuGWnaY3O0wzm0u4eo0Uk
ksl3r83W+TTaWTqdsSxgHOnM4K7nuymmiLzuzyeDFBIINPutNnCFci5wnnOU
cZYznOYUJznBcY5xlCMc5hAHORD9/9/oAsCCbIw=
          "]]}, {
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hecz3UcwPEvRYqEO5Eyk8zIJs484aybcjp0GQ07J5U9MooiDUKDMoqy
CWU2ZCZXKZooq1KR7fl5+ON5r8/78/08fve9x+/7vdKZ/ZL65oiiqIcfGTFR
lFkoigYziTksYxvZHOUsuZ2LpRSVqEUco0iPjaJXeJmPeKRwFD2gj/ISA8zT
dRpr6WVOC+d4kf7mqTqF1fQwp4RzPE8/82SdyEq6m5O1J+Ppa56gz7KMh81J
4XMYSx/zOB3DUjLNHcI5RtHbPFpH8CEPmduFcwzjcfNw/YxPeZ8n7C3WjTxD
N3Nb3cZCBpoX6Q98TyVzRdqEz2cId5srUJ4nzSn6ru7lKz7hY96hq2ut9S4t
y52Upgxd7beinPVg/Y4D4Z5IYDNbWECqM/M1TbdqR63CPVSmGlXD98d7rlfX
p/RefVpr6BIdpB/oUA5yiB9pT03XRupP/By+LxL5nC9YQSdnlmu6btfOWps6
1KIedXmQVa7fp5O0vj6na8L3b52qDfQF/YVf+S38XTS0H8dh6yM8Fn4vX4bf
F55P19bpTnaQYW5MExrxqr2mul6b62vaTGfozPB54f40yTuQTAqppNGRRBKI
pyE1qUhJYsjFGe/WEfazlaXMZiJZVA/Pi6Y7u8d6d3hf2BXeC97izXAP7iWR
b8L7wAneoIO99mSH94DjzKFdeF7ZH55/jjGbNvYS+Do89/zBLFrb6xKeM92n
v3OUeHOGbuB1Wphbcj+bzC0paV2K4mSZS4Tr2kXnabJ+G54p7rB+W7N0bnjP
KGY9UG/XFnqbDtBbtShFiDfHamEKEkMhmtu/RQuQj/zcTDP7N2lebuBG8tDU
fi7NTU6u57rwTNiPNAeXrK9wmcZc4CL/c55zNOI/znCaf/mHOP7ib07yJ6c4
S3bMtf/HVwHd38S6
          "]]}, {
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl8z3UcwPHvHDlKMYzOIaIyCSk6VM5k7UDMucYc22xZqVQqnY5iU8h9
031SppwdjpA7KvfZiRCV0vPz8Mdzr+/7/d3jt+33/fxWPSMvNTcmiqJ0XwbF
RdGQylFUyByKWMdujlPM/ViqkUBTWpFMGmPJrRJF05jCCh6uGkXZOpi+rtty
L0fN7XSqDtIc/Y4lPGNeqquYxEPmLN3CZzxt/lxXMoGB5n66iSKeMi/Sr3md
B819dCO9XWfSgrHm5vqafkKe6976KGPC72x+VQuYzwBzhj7CKB4zj9ZX+Jgc
c3r4mxkZXsf8sg5nHR/ypN1H+hXDyDb30LW8y+Pm9/QA+3mBJnbdwvvAW6Sb
39YH9Hm9WW+iMV3Nt2h3zdJ39BvWkGG+ldtoyot2t+v7+oR+oC9xkEMcpid3
uDdCj/BTeF7hZ7OeXuS6v0A38G3Yme/kLppRaHe3fqpDdKGO42d+4Vcyaene
eP2N38P7G84Mm+lPvvuLdRtb6WNuTRtaMdHuHl2mQ3W5TuYYx/kjPEMS3buP
E65Phvc8PHu2h7MSnq97X+j37KCfuT/JTDcn6QxN0ZnhjDn32eQwIHwGyCOL
THrSmSRa0oS6xFOBGI75fO1iLQuZTQGJ4cxovu/Z6frH8Pngh/A54E3eCM8p
nCP2hfPP38yjezg77A3vPX8xl652XdgTXp8zzCHNrjO7w5ngNJ3M95PvuqPu
0j85Rap5oH7JbNqbZ2kHXa1daOi6ETfynLmBpml9fVbr6VC9IfxsrasJXMv1
XEcn+9pah5pcQ63we9nX0KuJpzrV6Gh/pV7FZVzB5XSwr6qXUpkqxNHevqJW
ojyxVCDV/mK9hAspx0Wk2JfRslxAaUqFM2JfXEsQUYwYkuz/4xz/8C9nKRme
Wdz5/73/A/EBylM=
          "]]}, {
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1HmYzVUcwOEfhaxpYxgUpQgVyVakQklSYw0x9qUYM6HGOrYxMxgaS7Km
orIvka2iUtmXioqyFtkrUtbe8/jjnc/5nt/z3HNn7rlTsn1CXM9sURTF+9Gj
aBQNjYmiLOawmm0c4jy5ikRRDGWpRj0a05ZuJNGPRYzwWhv5lpNMio2iYfo2
XzPN/I1+xXEmmIfoZL5gqvlL/ZxjjDen6Ft8yhTzZ7qG38gyDw7nsCqcY16t
KznCm+aB4RxWhHPMn+jHHGKsuX84h6XhHPMyXcQBMs399DznWMgYe8l6jX3M
NP+ifzOf0eY39DI/M8O8V4trMeZaP6d9wvvjI+qbG/Asc8x7yLDureP4i9mk
23tNL/ED08279Sx/8j257F3UQZqP/OShHu/bz6s/6jP6gT6tH+pPjLLuqw11
npbQO8myfp0rXGU/g+3/qikahc+RRrzA8yzw7EU9qI11scbpEj0cfi/rAdpE
l+tdWpKJ4b2TzTo7R8P91N91mN7AcJrRnKas9ayF/qEtdZ2+pOv1BBOth2or
3aCl9G6mWA/nRuscnLYeoac0VXMykpdpQ2s2edZWN4c7486nMpI00skI3wNS
SCaRrrQhjrpUpQyFyck537ODbGUVs4kP90MzPS/gvNy8Y+8mnanfsYuB4e9I
LDPM1XWn9g93l6JMN1fTHZoc7idFmGauqtvD5xs+e2KYaq6i27SPjtXeWphH
qEwvMu2fYSuJ4W6SxH/mJOpY1+VJ3jM/pYn6hL6rj+ssrR1eT2tqLWrwGI+S
YP9fepJm3qIX+IcE85jwTAvxMJXowWj7r+odVOQhXmGU/e56Ow/yAN3IsN9V
b6MC5elCuv3OeivluJ9OpNnvqLdQljJ0CPfFfnstyH3cSztS7cfrzZTmntjr
/3v/B2yE1hI=
          "]]}, {
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09VSVQEUBuCNYneiAs54rc+gzyCPoF6YoILdgt1gJyndWGAHYAu2gISd
YCvmx3jxzb/+dc7acy7OHjUhJio6JAiCdlLCgyCZMqqpp43QiCAYxhjGEcUk
4kggiVQKqaCKWupp4DG/IoPgNz9JpZ0UyhgyMgjmyxUcYrieLA9STQmRdqXy
BAcYrM+VVfQ09+KzeQ+f2E0hA+3j5HJ2MkzfJbdzkTwi7PLlcZLor8+W5+lm
7s478zbespVc+tnHyKVsJkzfIs9xlkxG2GXJe9zlJS+YwRLW85TnPGMdGfRx
N00e4yhr6W03VZ6kszmUFvMqmkngD3+5wU0ms4jrpFFOPBWkE3hGJ0JYrd+i
hlqm8IQ13OYOi5nOKaLp6+6wPMNpuuhdeW3ewCs28oZswn2WIzdxnwc8ZCbv
SeQRdSxjFheIZYDbAlnJJXrobfIDrezgI0V8ZS9f2Ecxg3x/jvzGfupp4DHz
+M4PGmliJQu4zEKGuj8ir3KFax2/qePG/7uRJppp4QlPqaOGSsopIIVE4oll
IuMZy2jC6Eyrd6+OKkopoZgiCikgnzxyySGbLDI5TAbppJEa/v8d/wcZibVP

          "]]}, {
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dOFHEYwOEBFUWavSBuoXcWVBQLCArYlbUg2AC7icsFsADWA2iiN8A7
6BmQMwgqKNgF+7Pxw5Pf+38zs8lkZ6J9/fFEShAEo4RDQRCijja6STDEY57x
gjEmmCMz7B5iNBOnl35ucJNb3GaQJ4zwgS8sjARBJ4s4yXxKWMk1VrGZeg5z
iBn3fSbFfIBUDhJQyDKuspwQf117Wd9rvp5lF7tp4Y/9Ur3EpHm95vHbfFHf
alTPsINGtvPTfoleYMK8TnP5YT6v4xrRbhrYyha+2XdpJmVUsJY1LKaXV67p
0wy+msOaRTnfnbfprJZqNqfI4TRz9pVaRTWvnZv0l9ZojFreOO/UZurYwEe7
KVrNbWxkE5/s3lFgntYruoJiijjHHvbSzn720UMHcY4wj6Os5jgLOEYaJ0jn
qd8fYpg73OUe93nAQwZI0ENH8jmSz5b878hg1rs5zkueM8IjBrlOF63UEqOG
aqqopIJyyiilhGKKKKSAfKJEQv+/nX+Is2jT
          "]]}, {
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl8zgUcwPGf2EhEUm1RtimVKRUtZCOi3Gvr0CVnrnIMiRSbKNXmVqTY
jN1bKcoRUpSFdDiKUXJ1iLk6KL2flz/e+3y/398fz/N6Pb/XonsPTRpSIQiC
OH+SY4JgWFQQzNEq9YOgMr+aZxNuXqu9tRe/mGcRZl6jPfVJjphnUsn8sfbQ
1/QJPawV9SIe51X7Y3pIK2hAd6bYv2U1j9hX6aO6XUdxqbkGl1Cdaox0r6pv
6sX6hn7CUPM6fZ0RDLCv17ks4B1aut3Fb+a3+ZSB9he1hc7XZvqWNtcX9E6d
p001jjsYZ79dm9CY27iV591v1ltoSCNiGet+o97E9dxAA8a419friCKGaJ5z
v1brUYdrqMto9wiN5Aqu4kqedb9ca1OTWlzG1aF69mG07+D3ziCL5ZSylxOE
ex5JIxJIpBcppDGDTLJYRDaLWcJDPuNhklnps5J0hX7DM+bJOj30HRhi/0j3
Usa20G/l9rX+yRk+oJvbRJ3GUrra39c97GYrKW5f6TH+oLO9E6nmqRTTwV6i
HbVAf2BT6N23l+pRfieXNm4TNIMl3G3P0e/ZRX/7Rk3QTI3XhdpHn6YvP9kP
cJB0vuMzBnk2XgfrBt3JDvrZn2K/OYtW5kW6j8/5mWxauy/WH/mCe+x52lbz
tZ1+qfdqobbXIr1PN+tw3aLvcpxyTpBGF8/e05Oc4jQvkei+TP/ib/5hEve7
L9eznONfXuYB9wf5z3yeGbxCjncklzzyKaCQIoopYSHTSWU4PelGPLFEEEa5
d7WMTSwjk3TGRF34n/Y/kZvG9w==
          "]]}, {
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0tkyFXAAwOF/z5AXaGR4g7K0aA9FWqhEIZGihXPs+3K0KNodWsQVM7pt
Jle5rGtdtFGp8AC6yjfj4nuC329LaW1+zaYQwlvqE0OoI8Yob5jjE6uErSEk
kEIGeZQTZYA408zykS985RvfWWCRNaqSQrjMHko5xSQ7qWSUMW5xjAHyKGKC
HWRygVxek8ElRojTRRadHOYM46Szm/Mc4hVpVPCIx0Q4SD0HOM1LUtlFCft5
wXYuMsQwdezjOnu5xk1usI3nFFJOGQ+ooZZqrnKFhzTQSJRmmnhCK2200EE7
T3lGD9l0k0MvZ+nnCH0cJcY57pDPbY5zl2LucYJBTnKfAv7p94Of/GKJ3/zh
L8us8JkPvGOKEWJEKCOXdJLZzH+PrTDPe2aI008fvfTQTReddNBOG6200EwT
jTQQJZK48fc6aoZ59g==
          "]]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVzE2EUgOHF3aU4FGiLF3dtcdfi7sX1En4D3OHu7sUdKrh7cffi/mS4
ePKe72QmmcluNnzYpO4T0wVBEOZld0QQbOJPZBB8iwqCDxzgHft5z1feso/X
7OUNX3hFAi/Yw0s+85zdPGMX5znHiApBMJyf5p1kNp/VYTqUH+YdZDKf0SE6
mO/mjJqBAWxyvkkKA52TdZDe1XlkM2cnCweds2pOcjCSe3YrmGI+qg30lx7h
ApOdl2t9Pax19ZDW02VaW+tQg1rUZKl9tFanCtWoyhL7SlqZKCpSgcX2ERpJ
WcpTjkX2ZTSckpSmFAvti2sJilCMoiywL6SFyU9BCjDfPq/mIxd5yE0YnUK/
Z+iaufYppJJGFvdBcaKJpTfjmM1cVpFAErd4ySte84a3vCMs9Buxke0k0tf3
Jmk/Pa2Puc5M5xt6h1NMd96gj5hgbks72nDS7grTzOv1Nrc4wVS7dZrKWHMs
LWnBcbsYvaQz9LI+5QlpfGQVmxnl/dF8Ml9kjPmYNtaGNGKlcxNtym/zH7aw
mmZ2zflrDnSrrqGVuTXpSM82u7Xc5wHXiLe/quP0oY7XDnSkPZ1D146JdKUb
XehBdybRizh60ofe9Cfe5xUJ/addnw98JI1PfOYLX0PPAV5wk0T2sJI5zCKe
OGKoRjEyhz7P/XOP5Ij/z5V/9oW99Q==
          "]]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {{-1.5, 1.5}, {0.01, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"-", "2.`"}], 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "1.8`"}], 
       RowBox[{"-", "1.5`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.2`"}], 
       RowBox[{"-", "1.2`"}], 
       RowBox[{"-", "1.`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.8`"}], 
       RowBox[{"-", "0.7`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.2`"}], 
       RowBox[{"-", "0.15`"}], 
       RowBox[{"-", "0.1`"}], 
       RowBox[{"-", "0.06`"}]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1]]], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1]]], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1]]], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.40082222609352647`", ",", 
                    "0.5220066643438841`", ",", "0.85`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9728288904374106`", ",", "0.621644452187053`", 
                    ",", "0.07336199581899142`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8894648141099863`*^9, 3.8894648280264807`*^9}, {
   3.889464895308795*^9, 3.889464910762259*^9}, 3.889464947681251*^9, 
   3.88946601004284*^9, 3.889466054698942*^9, {3.889466107607491*^9, 
   3.889466126821537*^9}, 3.889466166589872*^9, 3.889466386196322*^9, 
   3.889466531400468*^9, 3.889498471036612*^9},
 CellLabel->
  "Out[1163]=",ExpressionUUID->"da7cb8ee-8fef-4354-b023-57b7ab32a1e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["m = 71 Regions[error = 32]", "Subsection",
 CellChangeTimes->{{3.889464459399866*^9, 3.889464465717945*^9}, {
  3.8894650795230017`*^9, 
  3.889465080897689*^9}},ExpressionUUID->"4dd19af3-465a-410d-9ea2-\
61faad231029"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegionsM71", "[", 
   RowBox[{"data_", ",", " ", "error_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filteredData", ",", " ", "method", ",", " ", "pShip", ",", "pS", ",", 
      "pKsi", ",", "meanB", ",", " ", "sigmaB", ",", " ", "r"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "error"}], 
           " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "71"}], "&&", 
           " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "<", "0"}]}], "&"}], " ",
          "]"}], "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
            RowBox[{"pShip", "=", 
             RowBox[{"r", "[", "\"\<p1\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pS", "=", 
             RowBox[{"r", "[", "\"\<p2\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"meanB", "=", 
             RowBox[{"r", "[", "\"\<mean\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"sigmaB", "=", 
             RowBox[{"r", "[", "\"\<sigma\>\"", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pKsi", "=", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"sigmaB", "*", "pS"}], ")"}], "2"]}], "*", 
              RowBox[{"GIndex", "[", 
               RowBox[{"meanB", ",", 
                RowBox[{"pS", " ", "*", " ", "sigmaB"}], ",", "0"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"GIndex", "[", 
                 RowBox[{"mean", ",", 
                  RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], 
                 "]"}], " ", "<=", "  ", 
                RowBox[{"GIndex", "[", 
                 RowBox[{"meanB", ",", 
                  RowBox[{"pS", " ", "*", "sigmaB"}], ",", "pKsi"}], "]"}]}], 
               "||", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"GIndex", "[", 
                  RowBox[{"mean", ",", 
                   RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], 
                  "]"}], " ", "*", "pShip"}], " ", "<=", " ", "mean"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"r", "[", "\"\<mean\>\"", "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}], 
          "&"}], "/@", "filteredData"}], ")"}], " ", "//", " ", "Normal"}], "//",
       "Transpose"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.889464153103773*^9, {3.889464410569189*^9, 3.889464416202147*^9}, {
   3.8894644937114677`*^9, 3.8894646816167107`*^9}, {3.889464760426255*^9, 
   3.889464772136879*^9}, {3.889464880513568*^9, 3.8894648873248577`*^9}, {
   3.889465084486096*^9, 3.889465086368153*^9}, {3.8894651168723507`*^9, 
   3.889465218012381*^9}, {3.889465390068365*^9, 3.889465390570945*^9}, 
   3.8894654447478313`*^9, {3.889465742427355*^9, 3.889465772294619*^9}, {
   3.889467086121805*^9, 3.889467108197364*^9}},
 CellLabel->
  "In[1164]:=",ExpressionUUID->"38395422-b3ea-4c19-b377-bc9972c313f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"Select", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "35"}], " ", "&&",
       " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "71"}], "&&", " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "<", "0"}]}], "&"}], " ", 
    "]"}], "]"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.889465662690414*^9, 3.889465672607194*^9}},
 CellLabel->
  "In[1165]:=",ExpressionUUID->"31499883-a181-4119-b487-65659385c1eb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "result" -> 0.013556898, "result_sigma" -> 0.00013865903, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -2., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.9974747300148009`16., "p2" -> 
        1.0344824612140655`17., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.020921295, "result_sigma" -> 0.00017867213, "m" -> 71, 
        "seed" -> 1, "weeks" -> 10000000, "trials" -> 25, "mean" -> -1.8, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1., "p2" -> 1., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"], "p5" -> 
        Missing["NoInput"]], 
       Association[
       "result" -> 0.039538667, "result_sigma" -> 0.00036760343, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1.5, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.0082626476883885`17., "p2" -> 
        0.997799850255251, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.11290486, "result_sigma" -> 0.00056634384, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.9807262863019222`16., "p2" -> 
        0.8241151447318499`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.21959651, "result_sigma" -> 0.0010968497, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -0.7, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.044079235302567`16., "p2" -> 
        0.9311133494593364`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 0.37326644, "result_sigma" -> 0.0012000809, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -0.5, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.004491651058198`16., "p2" -> 
        0.563061755895615, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]], 
       Association[
       "result" -> 1.0897594, "result_sigma" -> 0.0031501934, "m" -> 71, 
        "seed" -> 1, "weeks" -> 30000000, "trials" -> 25, "mean" -> -0.2, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.992273217908361, "p2" -> 
        0.29522073545205896`17., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"], "p5" -> Missing["NoInput"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 7], "Meta" -> 
     Association["ID" -> 184941583744631], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "result"} -> 1, {All, "result_sigma"} -> 
        1, {All, "m"} -> 1, {All, "seed"} -> 1, {All, "weeks"} -> 
        1, {All, "trials"} -> 1, {All, "mean"} -> 1, {All, "sigma"} -> 
        1, {All, "error"} -> 1, {All, "p1"} -> 1, {All, "p2"} -> 
        1, {All, "p3"} -> 1, {All, "p4"} -> 1, {All, "p5"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p5" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 10, {All}]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4", "p5"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType, TypeSystem`UnknownType}], 7], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 7, "DataColumnCount" -> 14, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "result_sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "m"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "seed"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "weeks"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "trials"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "mean"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "sigma"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "error"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "p1"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0135569"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000138659"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.997474730014801"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0209213"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000178672"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0395387"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000367603"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0082626476883886"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112905"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000566344"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9807262863019222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.219597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00109685"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.044079235302567"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.373266"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00120008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.004491651058198"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08976"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00315019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992273"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 14, 1], {1, 14 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    14, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 14, 1], {1, 14 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "4ab58cc5-e34b-4c22-93d7-d6f639c1d416"][{6, 
      Key["weeks"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{959., {201.2010498046875, 209.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{959., {201.2010498046875, 209.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8894656734750137`*^9, 3.8894663863938828`*^9, 3.8894665316031017`*^9, {
   3.8894670921419067`*^9, 3.88946711135411*^9}, 3.889498471240964*^9},
 CellLabel->
  "Out[1165]=",ExpressionUUID->"8032051d-338c-4005-bdcf-99fae544e986"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs71", ",", " ", "ress"}], "}"}], "=", 
   RowBox[{"RegionsM71", "[", 
    RowBox[{"data", ",", " ", "35"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889464780615033*^9, 3.889464825681293*^9}, {
   3.889464907447905*^9, 3.8894649076139107`*^9}, {3.8894649446025343`*^9, 
   3.889464944851894*^9}, {3.889465238710845*^9, 3.889465269104631*^9}, 
   3.889465366698434*^9, 3.889465453288748*^9, {3.889465543266838*^9, 
   3.8894655434449577`*^9}, 3.889465634547612*^9, 3.889465679970582*^9, {
   3.8894657835225983`*^9, 3.889465788099812*^9}},
 CellLabel->
  "In[1166]:=",ExpressionUUID->"d6972569-e99b-49f8-a0d3-b064e4bb7e98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs71", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "ress"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.889464812070797*^9, 3.88946481288135*^9}, 
   3.889465242475933*^9, {3.889465704709655*^9, 3.889465717023387*^9}, {
   3.889465797009753*^9, 3.8894658006874247`*^9}},
 CellLabel->
  "In[1167]:=",ExpressionUUID->"b1785ff8-2350-4f11-ac19-0dbd655c8b32"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJztfXlcTm27dqaQMiRTxgg3kjGPIc6ITFFmQqY8KPOQCgnpMQuZMjwSSagQ
QrqoRIZK8zze1V3d1T1V5r6227Hu/S77+d7vt7/92/t999vzz/M7rHWvdZ3n
dV7ndazzONdKb/mGmSvrq6mpvdNSU/u3/9seu5RYU1PNBiiGRpc6uVLhEZvh
po6VHF5+uN8FN5mMw1kHZd+i7CQcvt9yywvdN6Uc9tOq94dXSCGHvTSOmwsC
cjk8sMVIfWvTVA6P1r5tnWwZzeGhmq+LhUZBHNZWYgI2UJ7PYYHyehy+pLwf
h32U4+FwgHK8HM5Q2sPhpUp7OSxU+oPDP/3Fx2yKwV2ziKsPOf8Bw3/A8B8w
/AcM/wHDf8DwHzD8Bwz/AcN/wPAfMPwHDP8Bw3/A8B8w/AcM/wHDf8DwHw+z
xpnvD7ZZ+JLzHzD8Bwz/AcN/wPAfMPwHDP8Bw3/A8B8w/AcM/wHDf8DwHzD8
Bwz/AcN/wPAfMPwHDP/xMCvuYSp5bRPD+Q8Y/gOG/4DhP2D4Dxj+A4b/gOE/
YPgPGP4Dhv+A4T9g+A8Y/gOG/4DhP2D4Dxj+A4b/eJj9brSo35hHCZz/gOE/
YPgPGP4Dhv+A4T9g+A8Y/gOG/4DhP2D4Dxj+A4b/gOE/YPgPGP4Dhv+A4T9g
+I+HWXLKmax2Iamc/4DhP2D4Dxj+A4b/gOE/YPgPGPYDw35g2A8M+4FhPzDs
B4b9wLCfh9mknR9OSJ9ncfYDw35g2A8M+4FhPzDsB4Z9wLAPGPYBwz5g2AcM
+4BhHw+zjBZuVwvycjn7gGEfMOwDhn3AsA8Y4wfG+IExfmCMHxjjB8b4eZh5
LOuxc+ZKITd+YIwfGOMHxv2BcX9g3B8Y9+dhZn7/+RxWVMjdHxj3B8b1gXF9
YFyfh1nDRtYDDGyLufOBcT5w7x/5JIF1+eNTw1sjkqmrEhPwiB/5JYu59x0a
7Domg1tvwIOUxwm414/fC5naqkdGAV451F2JCXj4j/PLWXDw7Bad9POp74/r
FRPwUOVxDl/5Ed9StlFDJjrgU8DNB/Bl5XEC9v0RP1VMsOh4WKVARPo/7q/g
sHI8CgKGv3LuGFxcfquEbih/T8DwFzDyM/wD/2H9Ix/z/Ynj8CfWE/IV35/8
fAB/wH+IJ6wPvv/48cr3Fz/+4A/4D/Hh/eP8D+zzgNebcp1SKOjH/dLZ2vj6
PZ/uziT7Ey1aOmqVsV5aIRMeReTTxPf3lsh0q9iZwKqP7lEiuv3jekksaM/K
qdO/pZGn8nqE611THiccv628PuH6n09OumPkUcHqPzx0r6xRAW1W3o9wvyrl
ccLx0W9MejpqSSnLekFX/YmFVDMlc0uypYyeNBYcsTpQRE2nW/hbWlezzQte
rnylUUIGP+Yngt3JD53xYWgch7n998f8RLFxWX3Pbf2YSGo//rsbgvN1lecT
H+P3PZS/J/zeUBnv3PoARn6SHE/aHOJWwqbYlKW47MujtT/ir4jDTZTjp+n1
PeK+TS3l8ieuJ/oxnwVs/dMua6eMy+XWI7BYeX3Of4gfYMQP/In4wHzievz1
jni1+ZGv8thJbcua1vVU6x/nA//t/pNHOB/5APZgPwBW5rMCgj04H/5brfQX
wV9Y/4h/YMR/+FvHMCMPOUN8ID/gfGCc/0J5PhdPyBdYP8i3wPvM27bySFYQ
/Ifzsb7MlOuFEI/I/7h/vak/4pchnmE//IXrYzzwB/wNDH/DP/g9xoP7AcNe
jI+7/ufYAdb373Hx3b1PTblw7Acu/4GvZtjqNJmRruKrrhv0W27NSqCNpi+s
k8dn/cJnTKsG37s0J4fjM+v++HTacXMOmSRPPOi1uYCbXzXnp8MFxWIu/yH+
zz68U50yMI+Ll1lfL20sXJJHvo83K6LeVXL5DP6Vfv5i9GR3Ebe/xhvKhyzV
qM1XZoENAt4p+PslC395+kSzrBJufvWq9jeyLCmm6MvXXhu1jWX1Fic+/TYh
lbq0uxhktD6d3QoMNllyJ5P86vtftxwrZvFNK0079xXS690NdBxjS2qf10z9
5hbnU32/tXdjPSvZlfj7n5InFZPLg5EOxo7VFFq11+/p76VkvSlwZ4gsghml
J917qZFM9zzHnHELSWTxyU+H79mZTuPyVszWyo2g/f6zpH1aJJNn7107Qq4k
UuvHq49PP5TO7deLbrY16JuaQS6VT+5Y3kvm1q/x09wPujvzuPzxOtt9d8iM
fJI0/xys1jqX3O6WH3ezKGb92q4Zod0ln7Q/FMTXfBQxgweDFhvU1K7b7S77
3X6rYEmnxg2oGlJAT7x1BptqFtNOHae9TpRP5UvPRtVEl5O1U/uFOav+3f4d
Oy9jV0QBDS171CzARLWfK66caaMzVUYX7R10dI4VUdW7/LPq0Qr2JHHJ+9bP
RfS5306j8C7VrP6jxqtFk0vIt9XcGN0yObd/5Z1asGneMzkZ32A7H1wRkcHG
9tKoe6r9/XLc1BlHvaqol3Gx56RI1f4epm+xOac2D2J/V/9z8ZiFohS6meIz
Uyvz5S/7vYG7y3w3YRq3309y0TgtqEoh5xbD3unee8nt/2pLj62Wtf3A7f/g
A8GBEvcdn9M4PjBuX3Fnn5cqPpCW/HDngY8ZFN1ppL+lbTK3nn3S1p62S8jk
1jP4wvyIqGPu0iwuH/v1XCLOGZ9LB76XZtf0ySM+H3tQVaI92VbFx7+e3Web
UpNPl7c/fKm7tPgXvtG0WHPI+HwhOVdHRepGiDi+oZZyx8C0o5jjG5ofDP3s
Wqv4K/jbft2o9kbehRwfGaLW91VMn0Jy6/uumeP2Ci7/qKeHx+vaqfgJ+Irr
2WPf2ukWcfxk8rOKJ1pNS2jSaMnukI5y4vO7HSdDOs3/LCKJb0aA5S4Vn3N1
uhlm5JjPhNLTkStrcuj70q4m4e2lLKVIPKlsVCFtrPJYeDRawq6unhbs3aSQ
Pi/ebSFoFEuVMUNKt01PJY1DWSe8TuewQ0Vv48+mZNPgL6WWMocsVu997IeM
hCwKGe41SjAhnfKju1WGvcikrU7R7T0ccuiRw8lHWyqzqbxXw3Gm6jmUGzbs
wPRL2dQw039t8rJCdm/m2mHfWuSRSU9Xp5D+haThKBmeVTtvOkH+0TXiUmq/
wybk2ywhuY4PfRh7VsY01vayTRtbRPpzVp3QS5XQbO0z1t13FJJLTJrYxkFG
Yc3nuV4LKCKT+zOXbR5QSYGbEprtvl/M7QeThwjPjpudz+2HjzZJhmhZqfan
LUdLRp1LU/Gj8sQ7mb7CJFoRnKHjOOcJc6jQMMtzTCT1WIHM/3Eo6/d9T4ON
pYlk7TOgccCHexx/Al+Kjkpe2i42jmavft3N8fR91tVtoV2ftwkk0O7wwNLt
PnUO+W7c7H0Cx5+GtdnEYsVJ9MBi2WStzk9JLbdiuN/JREqM9rKUXQ2lXjFV
z8aVq/jUxZvdjEo65FNDx94WWilFrL1of6P5Z/PIedoNkU2qgu2d+GRk+CsR
+dnRis3tFUxUNq/xMDMRhR5zXrzZqpqGjhp7MNGilFwzXUVCsZAp5nR6V+9A
LgXLz8zUKizg+Bn4Vd/Ep4umPs0l2d7caN0BKn41N+WsjuPOEgrSSRocG6Xi
VzWeT3t/MhOSbNiCpcmLy8hnYs+uDbKEHN+K9bR66je8gLZmT63n8brsF/5l
u9t3y8nBxXSlf8pO4wwFx8fGqPX4oCuKY6ze7jY5y9Ko7adMLcepWWzDfYee
F8OzSD2o05co9Tzm3Cu1Zx/7HFo/OK5JgDCXVmqece3wRw7ZpNtft2NCSsgM
+/Ps5VzaGDZipuxpGfMwipVPCBCS9bPg7/4Xi+hczl7XhKDa/fXOyxlHF1Wx
lgbadhejismtoZHep3lyFht5ZMnAiCK6OvDUUb2GckpKr5/h0E5E7j3mFtvY
K8hec8p43b7FJBlnkbpbVEklSdbx+cYl9HtIl1e6Hins1C1JsvvpDHoidvvk
f/QNu1Ac2i9NkEKrp4Vn1XyIo4baj+6mrU2jjXrCACPdLJq2KexN64ws+j17
4zzZqxL23D7/46xr+TSw5tpxvRQpizSdp6bJCml8K89L6ieltLxVuXlAwyLS
baszWrDlDZ3o5XRw44AUejMyIaFmUwo5nbgzbI9PBjU5P3S/cTcJjW89ZuNp
aQHV6SF1ekidHlKnh9TpIXV6yD+jHgL/8euT/6p6CfzDr7/W6Sn/M3oKxs+v
Z/9P6S0YHzDu/1+lx+D+/6/6DH4fMvdLk/O1z4E4DoznM9Qb8PzEr1egfoD6
w1/pNahHAKO+8Fd6Dp6/UA9A/P2VvoN6Ap738fzDr8/ieR71A2DUA/5Kz0F9
AM/78Pdf6TvID7AH/kB8Ix/w7cdx2I94w3rj289fD3x9CvON+OLbx48XjB/1
djx/Qi9APR/1bTwvQp+BfoDnWdTLUY/H9VBvxnHoE3g+RT0Z94O+gOP7lfVp
Tm9B/RzjQf0ax1FvxvgQ/31vLaehR8Vc/PMx/MHXR4CxXvj6DTD26wk//H2N
03vqKTGn3yBe4B/EBzDiA/7CfMNezC8w5hf28/VI6FWwBxj2IN5xHPEN/Pf0
LbMf6y+Us/fv6lnK8zl/8PVivv4J/Qt6H19v5uun0BuhB/L1U+iHOM7Xn/l6
KvRF6Il8PZuvx0LfhD7C12OhT+I4X8/m67PQR7Ee+Po2X6+Fvonz+fo2X8+F
/gl9iK+XA2M/IqU+yuldfD0Y+imO8/Vu6KGYT34/APRe+Juv10PPxXj5+ihf
D+bru4gHxCcw4hPxgeth/jB+YMQT5hP3gz8wP8CYH/iHm8+fzyOx7W9lzhma
zD2PAMdN/zZDa3Qk8fl4pGvQ1oar0rn1AmzuUmqhtSaZi7edEa/2hLTM4/Yj
+Dvna6zHgt3ZXLwDb5xqVxF1XfQLv3q8zyL5qXsBx6+A63cyHSrYVMHNv1Xg
XU+33+TcfoT5W5l2+FvEmiIu/oAN1IatkqXmMvce99tff59L7WfuvmJ3vIjZ
RmpaeH3NJ8/MI5vntZCzc2lv9x+ZVkyxyfVa6DSqYrohMbEPl5XS3LaLRpve
vMoqjcbZ6LRKIm0lJuDfJh0dKpjI6Hp9g/ypi1LI03fUZbdhH7h4Wz9o+Afd
jDjq0Mfr7riSDDLWePPEcloO8xxz+W3vIbnUbePoiYJ7QnY93NzWpjCPLho2
D9V9mKnSy1ftu2qpmUVxHdJv3L+XQ52U5xPOB5/ZbGm/vMmdfBrcr/iu5ewC
br3fCzQRR20sYdafFo5KaFlA/kpMwMN6Th8paCTm4r/5kDb1PeaWkW/Y2iaJ
3QspJ9Q0znO8jJ28HDxizTMRdbGQbph3UMHWnw92cZ5fQs3Z8EijbSr+I8gw
ofAzUjK7f63/oLEi6qQ8n3A++M6ol34XjdVKqXnTbhuSaxSM18/CulfZ6EUx
MVlO3FIsXBnErW+hMl5Vz4s/94vIP6/l77ZMJUPl+cTnmzg+Wxm/XD5Fftf/
tM7qqn0mnVTOH/H5KI6Df+3JP7LmzcM88lDOF8e/HJTr4Rf+ZSsuubLliop/
Yb4MlfPFree1yvXBrWfwM/xeXbkeuHyJfP54V9qVPc6FNFg5n8TnrzgOPmfQ
Qh7yonMJaSrnj+Nz85Xri+Nzuie2W29+X/XLfj5cu1docU4px/cwn5rK+SQ+
n8X5Vsr1wrBe7JXrg2F9aCvjjyH+PvspBFmnq1iWZWxcu8ja59pDiz75X3/D
7q9MHjfjehoNV2ICjq33W3vHDSks/e4jswF9s+m1EhOwQJkPCPng4qaZNsmd
S1lSaNKIz5YFpKPMD4T8cE55nHDc6aVtB51uElY1J62BYnAROSgxAZ9T5hNC
PhFcU+Tb7K1mWzOyLi5eI0Z+IeSXj0r7CPb1Up5POH/ugTm28x7+yi+xPn4e
5/jmNZd3ybvDq6jh/WabIgtKMX8cvwTfFJd8unnaUszxizkesyLGP1fxCWDs
z2HnV5Ttn6l6vgEGPx0cPt6rpG0i6TT/Zmjd7z5zDNnX9FT7ZJJp/cAEHHtY
547dhhxmNTPvzk6TXJIo8xtDfjvUdfij2Jky5n9H3PrCKxH1VeYThnwCfito
tsSw/7Nc8gjovT15Sw7Hd4cr8yshv75T3o9wP/Bh/N5d+XuOH+et0fa1m5BP
E3p3bDHHKo/jy2fa9pr7sHa97318rptjYP4v/HlpyIoPghHFdLtm9VTfOSo+
naXMn4T8eUBpH8E+8G383k/5e45/vxu3rdGAd3JKiW/h1z++mOPj48YduXmn
dv36Xcvo+klXxc9/zj/D/IOPY75fbFTrbz01iFVbzNyk9lsy/anEBLz69sKd
Id1f0u09to0n7knl+kee+m8+bfs6nSKVmIA7fVt9xu1aIkUnLD+bqpFFhUr/
MfjPROp0w9I4nSkcL6lP0a/lo0pMwA/d6u/zqhEx78jVNVVuQhq8/f19o/xS
FhbRPqOlZwEZKjEBmwvbJQvflFNz+bzn3W4VUrTSPwz+cWh9Q2NAuoQtLpXH
TX9SRPZKTMAZ2o/GC7oVsqCPE/vGb8onJ6W9DPbqK+1hsOeecnyE8Vkq789w
/xTl9QjX87/pcVBvYiX5V/cNMcwsqdPn6vS5On2uTp+r0+fq9Ln/Ffoc/AcM
/9Xpd/+xfgf/AXP9mP8i+h78w68PAcN+vp7xz6oPwn5g2M/XX/5R9UTYA4zx
/XfpjRgfv74HjPvz9aj/rF6J+wPj/sC43l/pm7jeVt9zeY02lHP1KNSPUH8C
Rr0J9SLUl/j6JupBeB4HxvMoMOpLqPegXgSM+hDqO5hfYNSH+Hom6jd43gRG
/edcTdS2mP5lXD0JGPUeYPiLh5nljFUWxoEV3H4C/8B/yE/YX/j+5OdLvn/4
6xH+gL8Qj1iPfP/x62v8eOPrt7AP/kE8QL+C3gD9E/oC9Be+/qk+e9Bt2+gy
Ts+AngN9C9eDHgp9E3oo6v/QQ6GXQA/F/aF38vW7vK817b1aVHD1He59gZ8Y
+yv0SOgT0COBUS/F/ABjfqDvYrzQi/n6El9fx3zg/TnUP5Bvcb/sH/kih9Ob
05WY8xfiBxjxw+9vxnzw+xWAEY/QBzFf/H4GYJwPPYiv5yEfYH8Ehv6EehW/
HwIY+xv0QtSrcH0ch76E4/x+B2CsB+h/iCfkY8wP9DDEM78/AhjzB70P88fv
f+D3E0CPR7wi/+A4MPIz+gtQH8X1cRx6Po6Dn8Cf0Avhb+wPuB/ef8N4MD/8
+fyr92f5ei2/X4TfX8HvR+C/3/f33t/TSFyyOVkQ/gs/NffbNFPtUA7HT3WO
NL18cVut/V02yKOWJBGfv10/tCl92aU8Lj7zA181ar85j4K7OWt6bCri8ivW
4wp5/f6C67X52KhIzaOeKp+CXyz00DQZU1RE0eY9LQTDVfs79v/rNfUiS51K
uHibs/rSce9DxVT+ItbA+ncFN58lJr8tlcVUcvkX8zX5Y+9lngvEXDw1Xefd
NXG/WMVH2nV42kRNQgE7F20IcQ5h548vbn3hcSY5BAimCebnUsjsnMedRgrp
9bPjllqaRWy9dsSwac8LKWlXzDVLJmZdSkJ2LpeISP/QpQm+lypZax9HWdaU
cmp37PUA0wWebLRC3br7unS6U6+VOOqwJ5VIv6e626VTecalvV7Do1gv/x6T
19TPIbPHJpqORjFc/HW7NGlPyPw4ss13ety/fS59Lys8Z5eRzuW3zdMz+5je
z6TSng9zRk/NJ/tJhV0cfYRkMMMr+/L6AnJ403iF7Dch++PqY/G+6wWkaaYW
ZNlTyIy/v5KbX67Nr24NFsjyi9ki834BQ1OLVHqswcSl+qdEVFJimSW8X8Kt
X4dn62fKLpXRaLMDV2L21PKHwZ80Am5LuPVgdiSmyYBCKY0PnxT1eGsJ3Xt/
spXOCQVL2n/u+/IDZaRT4an7SaeaNb+otWfH/Apaenu9toeOij8smj5wWHhw
FTkP325wY5CKP2xbuU7DMK2M5l/xsdBy/5U/zM9+/K1Zegatyr9a6f/i9i98
wvzi3MR2n1R8Qtt21pT6HzJo+8LGwwUWd7j1OfLH+z/h3PoE34iYYPrWJDeL
zF807+x4N5HLr8j/emusp8k8cintYen25IaxxOd33onHC1ztc+mMxYpK/4IM
jq+4t7AyF7zP/YWvDGr/wsPbq5BeH5iYUTNC+At/6SqVDLx+oYjjL/suNRg6
06CQbErCh5uaFnD5e8qmI1/9k0Vc/ga/KSveqfDULFLxm7fh3fUO1OaLtuUt
HY+Lic8P+65pF1X6VERpB3NGm1qr+DHyudebelNc7Uo5fvRqymSxSZtSamhw
s42HiYovIZ+t+Bw/NClWpSfevPZt3uAOFRS4tPFVu7sq/hg5oF5OTec4lvCy
X1x4r1wqb3t5afKwTCZyKwvpYZtPSVffWh01kTKXzhFRJh1K6fnutn6WYVHs
SZX6qOSWORS0WzpLFhZC1zvV5He/m0luO/e81HWOosfjKgpOyLNJfckzXcd6
r2iLZfi065uzKe39iv1ePsnMeqx1oM3kPFI/nzddqyaZ4ruVb98wJI98btu5
e63KZVe+NvuQckBIw77YrpI9zaVFhy/O/2gtpEWuHccJPIso6ebCeo8da5+/
/DU+1JwpIavTb5+ZuRSRoG+/z/4DS2j562ljLi0uIvcpfzRzvFzBhDNuOfg3
KqEu3h01HadUsBMHR9cTFBaTYPejJ7HzJBR3oGphA+di2tpS/GnyfRm76nL1
2Zp+YhLd2GiY5SQnW4VTr74rSymi34PqyQo5WfWZ1Hz9rVIa7GjYYEDbSjon
kvZsaCHm9p+++4vOV61WvV/n1cNM0cVMxd9XjtrT6tKQMo7vaT8tPLQkRMXn
Jq7vNCbmWgHlmCx6aBmTx2YPa3fetp2KrxlZNzBrM6uEPhYUJ3hGSCjij26b
V4YVU+C0R18nd5HSlDTjsa0/F5O+8bLZR/MUzK/l0h6u4WU0/nTwyPDeCnZ+
4i311FFlJDIxVBsQVUVmE7z3ThxZRmuT3PfrHa2me74tnxb/WUblQVGvjerl
MM+Fb9b5fMqngadetvNornreBv9rHD3a10JfyPGjtVvTt4ZdzSfnuWOEUZ+y
OH6YlL5pe/LkHNLvpX3iVKKKH9q4ur4ztRLS1tvrjE0H5lPY0z9aji8Sqr4f
4H/5Us2EAlL/sra1h2v+L/xx+L0jO/YPLKfLoWazj0oVHJ/svinZOeRJOLt0
c123P7KzKGRPPVOtx9EsYda2oFCPHFrefW1v0zYxpGmf4D31YA7NDPwzraZP
Il226Kw10SeXGn6bII5al8bypqRtVEvLo89NSgxNk9MoS/KkWwzLo729155w
2y5i+m0N+n8zLyKdZ2fVPAzLWdKjPV4DdxSTf4f19406iKnbnKVvbtUT0XhP
TX+jnhV0b7WpyT21YnpYeG667x8StrnL2vT7x0vI5u6AjN0TFWSbtL57p/RS
Spr5m5Pxgir2eV3faS8+lJPOmnU2m9fJWZO7R7c9uC+my64tlm4urKStH9de
t3ohps9DwmJqLEuZaPrx/I4rRaRreeOS26G7rHTsvWDrUxnU4kamn13gXZKN
9DTwO5ZBhgVdR5mWhVODs/3VvsRl0fqD1f2scxPYfFvHHZbBubRx8vozbl4F
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
dU1LSfwqoyN6E2M9beQ0zsL5dvsVcvIZY1Zss1tBfRZ2WJzeTkHrLzU6qHeu
kj5Fi5t6v1dQd99O5lonotjWc/PkrZ7m02Xtd25eaUksbtYQcSAV0vfPJ9bI
9uWw1cPdlp54JqKtignvdG8WsECHovSRQ0tp6w0rY0FGCZs/SXbrm3cZrR/W
RWrTXMIudnvyxUVdQm1nRw/ICpKx6QUfDBS/SUltcM4Z9WWVrGHqVm+P32U0
vecSfWvDYrLsUq96i2M5973pjctzW7l7SigphUU+EEips/H8WQ+/Ssm+lUXH
T/5V9DrzxJ8LXSsp1LP7ldLwavL4o0mXRsZVFGjS5ojbrlLyP9in1YSkChp+
57ckz8YSyhj63q/tVNXzaF2/R12/R12/R12/R12/R12/R12/R12/R12/x3+u
34P7+1o8PamuH+Q/7geB/4DhP2D4r65/RInhP+57oHh/7SeG/4DhP379+F+l
HwX+A4b/gOE/fr38f0s/C/wBDH/w6/3/LP0vsA8Y9v2j9MdgvMAY739X/wzG
A4zx/L/2z+B6wLger3+GQY/B+cCoL6Pei/owMOrJqO+iHgyM+jHquYhXYNSD
/6ofBfVk1G8RH3/Vj4J6MuqzmC++fgmMeiow6smoN6IejHot/IX6LPIv3z/8
/AR/wF9YP9z3hHn+4utxfP/gOPzzV/0liD/Yh34P6Nfo90A/B/o90A+Bfg/0
O0C/hZ4OfRn6Kfo1oH9Dv+V//x79GNBfcX9+vwb6O9CPAf2V13/B2Yf+CxwH
xvpAfRh6B/QRPsZ+hnos9GTo68DQWzD/wJh/9LPAP9AHMD/AmD/0b8Be6AeI
P2CsT3zfAvo/+m2AsR9y77/+7L/B/EH/h/8Rb8CIN8wH+gPgX8QXMNYTMPIJ
xo9+GvQzIL/A/9z7zfh7uD/7l/j9Hlgv2O+A0d+AeMP5f7u/5XH9GcjfmA/0
/yD+kS9wHBjzhf4HzBfyBz+fIP7QL4V+CeQXfr5BfkY/FfQS5H9cH/1O8Df3
/daf10O/E/qL+P2EwIhX+A/xyu+v+Xv9M0ntqZfjrkDi89dmB7dIsgcXcfw1
s79lVkG7IvqamnvBziCNy4eIV12XlNt6DsXk+UP/z+Lmb+3VUl+7N3lcfsT8
P+0pe2X1TEw+pvmDTc+KuHy4dG5+L8duqv0Z8619d9xJt0Oq/fpy+8TMnW1U
+6vPso0DzwxX9ZfOGDkqQp6i8q/+oQtTnkyQc/HtlDNNNM6C609kLt9nD5w/
p5Jizy5eIAtMZe88vEOWfyil+i3O/i4bksdEjrk9tfuX01zTzm91ZxTS3iN6
ZpdH1PKjonf5wnNFrOHtfXvUx0ko7Nr2WbLGZSzim/G+ena1+WvRwOcPshVU
MlTY9vY6Ke21TXhk+fkFfZbpG3zLLSKX0skNA7ZF0OV9ah019ESkG/E2tcYr
kRxe9BtZbVlC1hono3UX1ean+NMbC7xKqMlkY38jjWwWoaf9KbJGzO3PX+fO
/FYpK6PfO1/9dio9m9uvlx7ukF4jFLLhl1qZjl9QQbYD2n2MCsmn+bKoM5Vr
ymi6/fjfkxuU0Ab3ArG3pWq/HlOTeemQtoREJx+m1twp4PbvMUkHP9RML2EN
KvwXZCVJyCauW2frSWWkprHvytsOKr5lNWSQuVtvKZXUP78i2U21nz+f8qWN
jraMXBLXdRgiktDqdpHaOvly0hF4zbYfJ6XLu1Z8iwqRcOtBMvpKjG64nMtH
v1/L9ip9VcVOtwzesKg2r/kfOyGfbF7FhkQ+Ku93XUG9ti50DEms4vb7UEet
7JobYVw+xf4/Y16X6a7tikmyoP1EwasIbr2kRA/5FpUcy60X8IOKRR9u6WmV
cPwg3ft535rgUjrndMbA+o+EX/iCyT1f79bJYo4vlM1dtK3oc+0+OTL+u//R
ZOLzr2kTmF9iTinHJ1Z+kseZaVWQRs9nxqYN8jk+4b+mvoebWtEvfOKq2piW
Ny/9Oz7R7v24QdEV9G6EIFO48Nf+VcOm7Xa8GSUhWZcaXetd5Vy+Ax8rsekW
6RkopZCUR8am6vJf+Ffg6jvGve9LqZfnnwOtx6j4KfLn8vDyu1eYjJw0TnyM
2h7OpFPXn3Q3EVHLz9snaM0uY3vyKrv22SEls5h6FTYmUtZp975+x07IyGDM
3v5Z9RSs+wrJ7+ceyCntms0z3bbRbKT9w1HbNxVTtFR9u9frGEpnG9rtG1VM
nb60vGHpkE4XZ53eMm1pKUkcpM0dAzLp0PTX090iSmm+q017j6AcivI1tdBa
I6bfw/YKrJMKqdMA/QOjl5fT+g/nrltOE1OQs+6UVdLa/cRw/aKjsyT0JH2M
WrirhHo12vBEN7yCddj8Rf/cdymZh/c6o/6mkqb+1qBx/AkpeZj5Ohr7VZHR
Sq+qd7X+Cmq++7Xnu2oyHNzV3j5eShpHhFN8r8hY1rz1+2J6yCnuyPr182wq
WavGxgHPzRT0sM9e682vqmjAh6Lz7kFSCpy6REtHVsXxH/AhZ/GENd8jpVw+
z+rnrvvKvYzb3xQbG21vO0NKPVzezJB9vsPtx+BP8240H7GqZSH9dnjmJbcn
d1nf2c+2DmpRRCff+zcOOHiPirTy1OfUL+L41Ko7jtUBuiIaf2PyTNm9ZzS2
rVUjwUkVf+p5Krb/gvMlpLNq1S275R/Y+6SBX4Kri8nsj+Zkev8DOyg9sias
qYo/ORd3fK4fL6G1e+6e0AuQUNqy7MB+nhI69F1B4QOl9Mfz5k1dHknI3XXo
w9gCGYXl+js1bK3ql261cVbZ3TgFaU5Y3OlTmyr2LCXnavfjCvJL/mwli3zN
dJZpFzVIFdG9H3//+z3H58Cf1OytDusViTi+MtsurcmzOSKae25IYs2o1xy/
sj/lyIwmFpCD9q57ZkUqfrWzx1f5Sqtymr8iUsPDVkTr/aWSu2mq/pYx12uC
z3SooEi7720du6n4l+/jHbOPxiuo/cotXa7aqfjXYFm/hWy/lB7uaH1O/b6C
Hb0Q5THsu5wG73a5VjpF9TwH/nXEeWfzQVoKjm9YderbsOyNnI6MOzTR103F
z06LD1y3nBvCujcYIHl3o4gMrl6fLVuUwbps8633bLWYlhvUmyFbm0UDO4yZ
crmglFr6jJ8sOJLPVvacuHBWeDl9nzi0h+OwPLKp77PXs0RM5Y/a7fOSi9gG
XbU9bkckFLnGp7epopwkz9/21Les3Z+X+R7V+yijb4XP8w+3ldKixJlPYt0l
zG2Cz6jek2rn8Yarp/oMOctyn6wdt1ZO2l13LdTKyGFnhvpH+Z4pI0lom06O
YwrZ8lyTTGF5BVmH2j+0fB5HJQrbZGlkMX3sYxNipJ7MElwa9A0eUUoJd5YE
GK0sZ6kN9xXl1K6XLNPmqzZLavnaDIPc4DQZCaec3hKi+4Z6hTTWi/cX0fyU
mwk1B1Mo6LCwvV1qCflKHr3Q9S6lK43PNr4QXlGnv9fp73X6e53+Xqe/1+nv
dfp7nf5ep7/X6e91+vs/sf5ep6//3/V1+OdfVW+Hf/h63v9WPR728+vvfL3y
n0W/h33AsA8Y9vD11X8U/R/2AMMeYIwfGOPnf1/gv+p7HX+v3wDjB8b4gTE+
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
t83Ob1UUeeFKrjA+hdSPHxrmPLmMzuybNEkrpJbnjHN+P+ZPOTXfdXP7vL61
eapN7njHbwpaPWFBxANXGQ267fYteLaqflbXD1bXD1bXD1bXD1bXD1bXD1bX
D1bXD1bXD1bXD1bXD/bP1w9W9z2W/79+MfgPGP6r6yf7j/vJ4D9g+Odftd8M
/gGGf4DhH35/w79Kvxr8Awz/AMM/wPAPMPzzv6X/Df4Bhn+AYT8w7P9n7Z+D
/cCwHxj2A8N+YNjP1zv/UfvzYD8w7AeG/cCwFxj2AsNefv/SP0o/IOwFhr3A
sBcY9gHDPmDYBwz7/rv6D2EfMOwDhn3AsA8Y9gHDPmDYBwz7gGHff1U/JOwD
hn3AsA8Y9gHDHmDYAwx7gGEPMOwBhj1/r18Tei8w9FvoxzgOjOPQj6EHAUOP
hX6M48A4Dj0Z+ivyEzCOQz+CfszH0EehH0NvQbwA4zjffvAZ8FG+vXy9HPkb
9gBjvFjvwFgfGC//77Ohfwj9XugXQv8i+gHRn8XvT8Tv0e+D36M/Cf2F6O9B
/xqux+//g14GvgCM8WN+kE//9u9ZCDm9C/HM72/D9cBPuO+J/NT/0K+Hfj9g
9EfBHvgH/XmYX8QD5h8Y/YDoBwNG/xX0QfR/wb+Yf/gX8w1/8v+eJNc/+RPj
eQLzze/nw3qCv4FhP/pJ4T/wJ8QL+q9wPRzHeHEc84f1h/kDhn/534tCPMNe
+BvzDf9ivoHhT/gX44d9mH9gzD/sxfrB+JAfgBHfGC/8xe/PRb8ZxoP5h7/A
1+EvxBvsB1+B/X/799GEvP0kj4sffn87MD+eMF7cD/kSmB9vsAf3Rz4E/tv9
O4+zN7Fgf5bwtB/xn8d7ffw+fvW5EgpdeeGwW9hTLh++FE4qFu6K4PyjyB03
V7b5LfGfLwInDdOaFC2hvQMDF2jlfuDyI+K5fW9JSdDX2uePDvL3ug8TOH+6
a0w013JM5fJl5EG/b/5GKVy8FUaanLFblMnlT8SrddmNts0vKcjhdP9xWoOy
Of9HBh4QC31U+SzyS/9pgjmq/XR3QdURr0XeFJW6bmtcmIi0TBzial49ZjOv
XHJo4VFK5l22TNWSRlHa8suGQ4dISNLc72tUzw+sfpujtwKdap8HFvYLNrJN
ZZbPZn85+JuCtDsdHmp6I5nib9UbNKipgkI6lnR3XJrH3u76uKg6vpqc8ras
lvXMJUGvj1/FmdUUnNmgl2kuYxfX+E9o6SMmYZNIf6OQUNJ84BqYdUpM681H
rZIlvaC2xnenGDiWUWHnFxZae16xXg8tux+eWEHqS57pOtZ7RaNWrd+0fF4F
2cwamaSrHsvtv/MTf/N02xnP7JtVhrmZysiz0/6B1tPi6Hb80OV5nWUUGHFl
d8ikeLI74mn/bbuMjLP0rtpdTWIag9p+DJouJxfvaYqo3ERynu3e5srvqv14
/vbPz7L7KujNKeptfTSZ258nnV2xOFkjm3Ub8bmyTeMqStnf5U/Lj9ls0s2d
7cNnVpFbnnyH1/cMsrAccm+AopL8pQbelrczycsxpdHFwVUUOvXyHTu9HFqy
bY3smJ5qvw7SzDDusrKaDlVcNhf4qPbvrX8OPOd2NYjjK9iv3zidCrCvxSc2
OB72GqravwfGFF2za/lSVR/4mY+X2QXcHt+jnNvfI3SzxrvOLqdmu5rbhZRH
c+svwmTqO12fRO55ieuX85xsPXSPit/EakTnTniv4jNJE3e/KnlbSQly69+T
Fam/8JXnDfUWVqyronbd6xtYpwexooOvDvo+KKGZjz/k1eyPZT7WZn+EjK99
ni24nSNc/JgmZc5Puu5ZSlcyBTu9ct6xfjNvbjt9XEL6E/sVRw14x/09mZwC
uUZAQCzNi7iWbHVQSt+fv35dYxpD+ass+q0TSKkk/0JHx31JTPeATrXVeDlZ
7v28OtkphU52cgsaN0dBXZbdyBS2Tidv4Y5ZBaaVdHvr5yzhrDTafDfoWPR3
BV3Z9+CymzSHna58pZZbVkWCAzfNBVdymfm5j7q3FlaT+oFnwZb2L1T5fIdd
nK5hGPN5aZa4YH0ZpZttHyuofsXxibazFHu8zkVR46nm17v1kNCV3Uvnar2I
5/L77A1eK2Q58eyid/zgditl9KRrlYebfRLHN5o8+c3NyzCZWsfNW1iUKacn
AT5BRqvTOb44+/yZKv/fMtj8NlUWfl1r84dxiy7WLzJYg3kpep+mVtK4Fd23
J9vncPzk6rKUCmFkDj1YsHKz9vlqCqvZMk+r5ylmV6pBwowianvjoa+d6CSt
ccvonZhZRK2cCjNqsr3ZBkeLlYWRIlrltM3QtMMtbr93GPTOUnbInwnM5mje
Di4mmU1kQVRHf3JwVlveNaSYi9eqnJcHpv/b+0/LNWpOtWAs9h17v2iPmO4+
fTRN0PgFxwfCu5s6ermGkmdqaY9vB8Vk/aI4Uvfea44/DR80apbWwZfMwcX4
dPfz5aQ/pSimZtRbVqSb0PT5xNr8HPD+odHAN6zN6E5HH3WQUKdDPtftrkXQ
m5CsnmxnOYVF2d602xvHAo5P0awvkdJlbYl6QGWcii/4PywTfvlASc3jBz5U
k9HQbYq0mk8JZJ5axHa3llNc5cnEmkYp7Frm6n19wuXc/qx2bWvv/vPkFHEm
6ZGRZyrzaTymZc+JChpze4SvZWwao2GaI/xvKahtO4ehglnZHF+TGczNrxmZ
w55M2XHuvFMViV+9+k2wJZPjFzZ9bJ/rLs0g/QF+t02eVpJ1O8tFyT7Z5Pa0
7QGT4io6IjBuGuCbyy6oTxyntqya8zfyhc85jd7Wtx5x/Pnxiwthut2fcvsz
+F/coHKhnYuYpre8uCHE6h3Hv+5ZxGxLHqbig9jPZ5s77utYICWTWdFzZEEq
foj9O9JhxQHz/ZUk23Q2r8Ynh3ueBR99nzV1md35Kso/3q2r4/7a/dkkJ3GT
Twk5NU5s5WEXQScv229auLqcTHI3LEr2iGF71Orr/9ZISoNHLbeURUZTiqO9
c00rKX08smK5zCOBSpJex8yvkJGk+zhvyyuZ7JKVtonzqUpKOif87P8qlXp6
Tvt88J2CHtq9ThJWZ1GzE+s2N/OrIvPv5ctkSREs9tDg4+oLy8m3Zlo/67GJ
LMpS0FWSKqP/AzfaJQE=
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
B+WpN7ma7dwzRZ3X91S/FHd8eoo1NP9Xq4iK8Q==
            "]], 
           PolygonBox[CompressedData["
1:eJwlk+erz3EYhp+HU/bK3jNZyRayx7HHseogOUZZx95CMl/4A3jhjUiUvWXv
HSIjs5SSUkryynV3v7jq6vf7fr+f53nu59O8ZElRaZmIKIQCqJMRleAyfhsa
4fPhFf4apuOFcBV/Ai3xRfAGfwcN8C5wGn8B1fEZ8BTfB+PwlfARPwi18AI4
g9+EyXgvuIA/gB54EdzDz0FXvCHcDb9Tim+Ar/h1qIdXhRv4HeiNN4b74W+2
xUfCtXBNk/CJ+gZ+HmrgO+APvj98djc4G66hCV4bbuEHYH36TJ2lGvRfufS3
9EzndI/qTTMZkJ6xZnsJ+uLL4EN4JoPxrfATPxyuvWe6d/UwIp2BZq8eRuHt
4Vm459n4HHiOF8MKfDnsCp+xE6+Z7u0vDMJbwcNw5up9DBwPz2B7OkNl9xuG
463hcXgHhuDF8Ai/AiXpHVD2qqF7eoe0O5rhQnwBTAvvVEV8C/zAd8MefCjs
xf+Fd6sFvA3vWLt05sr6GHTC68N7/BSUxefBy/AZS/FZcDL8zDa8Q/rdX+Ha
V8PncA+r8Jnp2X+CsemZaVb6xgR8PBzBj4Zn1ybtmqFqHZjOVjWPTs9Qs9NM
lVVHOBHOrFq6JtWinsvjm+BbeCf74ZvhO34o3NvcdLbqsTK+OH33lHGf9B3S
3bkYzmotfAlntg5fk85Kv6n3uuleNYNh6Qw0e/WobPqnz1ZGqq1Z+u6qRtVW
ATaGa5yCT02frd+0y1XS2WqndXebpu+O7vB/8eaU0A==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
jIn1gfo8Rt70oXdK9iJ0BX1BS/8HGMot5g==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGVrkGEUhl+fxwJjw/hiIDNnO9vNqbMDRGf3nHMWdqITBEEQQRBBEAQZ
Iv4Bu2YHomKiomLXZrcO9bo958PFOed93jr3ibT8hbkLQpIkuVARsmOSHOVC
KmyFFzCIa7uxveAz9CHejh0MbfHbwDD8CXAcehNvw6bDJxhCvEfvgXKoSTwH
uxaeQlfi9dhs+AmdiFdji+AWfICxMBMOQHfON2L/VEiSU9h+xDuxGdAF/xG2
J6yDpsRNoC9+LtyFhzAcCuGI7uV8CzYFXkIP4k3KA94E00Ra6B1X4AYMgDy4
CPU4X4RdAt+gP3FxME3OwUkYD1PhEGRyvtk1bojfGJbij4C9noP+vZT8quC/
xR8DBXAWjsFomAJn4DCMhMlQAlWjadUS9kGDaP9Wxvv2Y7sRb8D+JT6BzSHe
ge0INfB/YScFq1Ed4towH1+N8gDOwzTXsBFnrWEF/jhoFS1n5aprSbSaFvkz
adH+Wf+qnK97TlNc0ycwkHt2eQ317XLvlfmu3SuvjTR8B9cg3zV67TXKc03K
4CbMcM3eB9O0wHvqN9yH2Z7zV++RQq9Zde5Nhbn6NnyHasSzsBOhcrSeT/dv
1CJOgSz8eXDZa6za5kD9aDVWbRcHu7duNG2zvJcuBDtTT1UibgbL8KdD82g9
rV7WtTteA2k/VDXHbwGj8Je7NunR/Hyv9Zdgs/u/5sQdouWyyrXIiOZLk/bR
ZlyzvTLYbP7Argk2o5rFS8F2w0bvrWfBZlk91jmahpn+jLRrF+1d0lCzdtB7
UTOnXfEx2CxrZ2jXlHgva+dot9wOtku0YzT79zx37QDN3mnv5WLvpcfBdoV6
SrtGM6FZ0M7RbnsebPa147QLrnqttBNKvQbSXpr+A1gamgY=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFmHl4ltURxWPeCVZRlNpa0S5KiwsurbRWtGix2oWKLGGHKIiyJiSQgLIJ
AoLYKmFRREQQEAVBRHZjEESDIEFAZCnBskUpViy2AlZBnPPM732+P4b53rvM
PWfuvXNuuKxrUW5hdlZWVj3/J3FfaFlZLdze94973Zq63eV2n1szt+Zu3d1a
uuW63U9bC7duePUddjvhdtytKzE0/xG3Ire+bj2I0cot362tWzu3Pm7t3Tow
rpNbnltPxrYmRkf6etHWxq2QeerrTZvi9iPG3W4Ps16B2wC3LnB9AC+8D+LF
eyBeXAfhxXUwXvkYghenoXjhfQgvjMPwwjUcLxzF4LrHbQS4lIOReHEahRfv
EsZ2Zmw78vWq21S3Z91Gkzvx/hs8xe9xuIlTKRyE/QnaxG8cXn2PufVn/t+J
ofljiC3s44kh3k/CTTmeDB/xeIa9F64JjFVupsBNfRNpU56eZt4oOI1mzWfx
j7q97PYU68yApzA+jxfXF+ApjDNpE9fZ8CwlVjF5nUW/+haCW+vPIYawvwTW
SW5z8eI9Dy9MLzJW4+aDUZwW4MX7FbzWeM5tLPl+zW0abafdvnQ75vYvt51u
u9yWuE2H91K8eC+Hp3i8Dn9hX0GbeC9j7EziveNW4dbQAneZWzk8xW8VXvze
xCv3K4mnNdbAU/zewovfWrxy+QZ5Udy3aXuVtRfBex1+sdtPHU9NCx7r4Syu
51jE2uS2gTZx2gh/cW1iga/S7T361bca7MLa1IKnat12sArXB4wTpy3wF+8C
i9+b3bbSpnHvglf4PoS/Ym0jhr51RnSuhzP2OfZvN/PFrwovTnvwwp5PTa7l
th9MWr+5BZa9bj38d65FDv5BHhX3AGPFqRpMwvgxXrwPue3gLOyDn9ZQDd9F
vE/xwvtvvPAeJLbi3u7rN7LAXtf9+RbYalvEPZLEOdZ6Osv/SYKPMB6nTWse
pU2x/wtu4dU9+IT5X9BfDcYKOJ8ghvB+6/Y/5n3Neop9geP53P1Xbr/w39+3
4NTOYsz/k+jfB76TrCcs3xBD37rnqnOqcXkWHLIs9lX3WPWoyGJO4r7YIpa5
7+fWxe0itxpup8Dby393tbj3jS1wZ1vUEt0d3eVUY1RzO1vEO8tCY6VZ0jBp
snRKupXLHOlTfR9XhzVb0iYN+7F/X0KcVMs1X7oqzZKGSUt7853qorRA+iMd
kpZJh/rwLb2VRkiHpMmF9HWiTVo2Hk6qIR1p07im8JA2SxuLiaVvaVH/JKPZ
A5KMZutb2ljCnFSzByYZzR6UZDRb323BLm6qhboHug/N4KnYrchBmvsJYBde
adcoOI3mW1jH8D2EsaVJRtdHgO9RxuVzloaTuxF8D2beODhImx5nDenGFPjr
rD2WZN4KI8mR2sYmGV3XfGnsRDiUknvV8VQ7Z7C2zveTxJJmTQaf2iYlGT1O
9XkqmNL3zTCwTGF++h4aCr/JrCF8qofT4DYTHOmbKX0TTAK3OE1nzjiwzyIH
M+h7gjbFUl3R3TzGfOmP7lIuteo9cEgX5iUZnZ4PJ2nUwiSj2QvguZDvVPvn
wmk+sa73+Jda6JW4SdcWwU16tBSM0itpU0O0bg7cFjNH+6P2lXBbQt9s2lbA
R5pYBr9yvpfBb0OS0e9V4FvNt3hI99aCfQ19qX5Lvzo6tgstamOq8WuSzPtj
CdxUh98Bn/RnHX3r+V4KlvVJRu8r4L8RrE3QMfGS/lfCM32LiJv0UPr3T/Z4
OVyl6ZvgLg7Spq3gld5tY01p2S74baevgrad5EXztsBzG7EK+NuoHD67idXT
QoPPRZOlHXuZI506kGQ0fjex1bY/yeh9FevtZ77WrGZ+qtnVmLToC7DqfB8C
+2G+77DQ4/Mso9/qa4TWVZFLrbc5yei6xqXvWp2jBhZaXpu3h/Txc7Af5fsg
WI6CW/3Semm1tFca/EOf/wMLfRbWY/Tt4FtjVb91/1WHbvSxP3E7G63sa6Gh
Wk+aqHMoXS1CI6XdX7G2sJykPw8t1Xp3++8f8S0sWWi2YmQTR5osTf0eOiyd
lC4Xs/438FHbKUxjcizuiDT7DLfful2Fvve20HWt/Xu3W9w+g/9pYul+1+TN
+nPyfYR81uYddRm1ROf7r5w13ZNm0n7eh9pDvWe0j9e6r8f7poNbe+7wbyz2
Q3txjfuf8c4+QV6UkzrkPoe30gXguc79leyl7pjwqOZcYTFGe9AX3srpL92u
5s1Rj7W1zs0W73vxvs/9xeS6u1s33iI1wVZJDuqShxrEE7ZfW+TrCLzrEb8O
654NlqvAI4yXM/4c6nMZvK/kTNxq8S5ULoWrPtj+Ah99/8ntj2ASj2vAq3nX
knOtfyMYlJ8bWF+1WrVedV78fgVH8WjA3l8OtyPs+/XsfSuLO616cZNFnDLq
h+52FXftOvZIY24mzzp3jTh7DelTu3LwO+LUh2Md2m6iva37NhZvesW4hfwc
5Z7p7tQlJxqj2nMHa+nc6X7qzt5mcUey2ZM/8LsBOa0L7z+zr6qzTTlrOvN3
Wpx7xWvPeZNeqG8jObiddVfSJx25kzGVxNN9Se9RE9rPY65yqX6NU60XxtvA
qfzr3fBREv9X1sdChxoz5gzypDad1ZYWWiWdktd3LbAqjvSuOXFUh1uzxkdg
aAbOfDALz/mssZf6q1zojmpea86H+tuybi4x97BWG9p1T1X7EnLZgXxKx3qC
4UL6tHeqb50s2uQ7wrcxvzXmODU3rbf3WNQ93WnVVf19obqqO18Dr+8zOVO3
cq5Uh++1uLuKoVhZtKlP9Vm1U3NVP/u7L2GN/oxJmJfH3Dy+Ne9+1j6T/ckn
t6rTvWm/i/ZacOjFXOWzB/k5l9/aT3Hsbhnt6EUc7W0h8S8hF2exvnBcDO5u
zNVdakw+C5ivufIFnJMWxNR+rmJcOTVQ9U/1/wG0VO/iNd7+sgXew24LLe7X
PredFriOuH1mUeeyc/zda1HPEv+91KKGHXCrtrjbA3TuLGrYMLdKzs9B9xss
7uCn2k+L+zzCbQtnZhFrKP7rblvJ1WK3nJyof2+5fWxxnruwr8rTaLcPydUy
8AnbELcvLTTgIbdjFjVdfjm/NzHnCsa+xvgS4qd/p5fwuzO/jTzNIFcljDOw
9WN8X35fBI8lFlxO8oZQrXzDfY2cqH873KZxBkot9kl7dNrtRYva/LXbmxZ6
stLtGYs7qNy/QP4/YW+0L9vdJlrUiXFub1tozARyqnyuc5troS3yWTnx+wbw
Sqdmu31roW9acwXrag+Hs4972Ff9nuf2rsW9eN/9wxb3bqrbWos7pP5BjDnl
/mkLvZoD50vJ8WryXKWxFrVVZ+QRi3Oi/R/JGZjpNsbivTjW7ZCFDonTS3Dc
5vaBxbtMuXmF/IjfLDjuZT+0F7vdnrJ4r413m29RB8SjDC4640Mtzvl05mvu
g24VFnX7eff7Lf5/ZbDbeovaW8RZyeYslFuchykWeVFORrH3VzNvIHMXgEl4
dK43W5zt7wBaAH2a
            "]], 
           PolygonBox[CompressedData["
1:eJwt00lIllEUxvG3vhO1adhY0SzNljZZklGRNAhCYEgQglCEhItaVTZHA82F
NNIETUbzCI3WomFRWWAEDSpFk5VRGZRRi/6H8yx+3pfP99773nOemz5r3rS5
LZMkyYfhLn+OoReG4QkeW/xzAJbiJcajMZUk9YxfkY8MrMFfzEZr1OAGBmIU
NmKZ1srCKvzBTLTBJqzGIAzBG7xGV3RDOX6gEPXs/5DxIvphJHZhD9KQjQM4
hO7IwUo0o0Rnuo1/KNUeK/AbxWiBK/iFGeiIDViCvsjESX+vVZLMYWyLw1iH
weiBHTiPPhiHKjxVLTrjOoz5ZYydtNYJxrpUrHkK3zEV7XAWDzAcvXEJ2zFC
NbhsUROvRX88QrWem1nzgmqUrTO8w1v1ciLjbvUoSzX0Xh5EF/XUa7VWvSpV
76p0Fu/hUWzFUPTEHSzw70jFby9UE6/FWFRiC8ZYZO6WepajDDQqE54Fz9h+
i8xl6JvqUKteTcBN7EOeReaOW2Tas5yOe7iv5+pU7P0co/UNno296kWJenPN
IstlWvuV9srT3M3I1RrnlJFM9dx7t1B7eQ93qgZ+dr9DZ/AT09FBax2xyE6u
avcNBarhIsYmFFlkxLN61SKbxXp3m0UWC5SNz5hikZGPeKa9JllkqQGTLTLl
WV9ukRXPvN+10xbZK9S76zXX53zBJ4ss+h7v8cEiS+31rRV6LtJZF1vcXT+z
35X5FlnxO/MfBmGQdQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmXnc11MWxx/0u49Sk7KUNtqULQktJCkh0apFadUupV2LNSEh+9hFhBiS
LYkQJSJbyC6GjBnJ2Mcy5z33/Xv95o/z3O3cc8/n3HPv/Xx/T/1hE3qO376s
rOzh+LNDlEensrJjQ3YL2bNQVlYpZKeQOiHlITuG1LWsGNIopGrIziH17GNO
w5C/OLaXNiqH1LesEtLAEr1nQzaEvBqyd0i1kOohzUL2CKkV0jRkl5BdQ/ax
3C1kX8vdQ5o4D7397KsRckBITW3tbx/t5iG1xXeQJfi6hLQMaRXSwj7wHVLI
cQFTG/E3Vre+mFpZEoND1WWstX3MaScGfD9MG+BuKwawHmGJ3sGuz9pHOg98
xzmGX8eIAX87iJn4HR1yoFiPEj9jnexjTnvtMXasNrDbWdvgON4SrJ+EvBWy
MeQEMYOvq3EBU08xgLWbfYeHdLcE68n6hy897GNOv5COjvXSBrh76ys4+liC
9STHGeuvPeIxLORE/TpFbMRsoCX4BlmCb4Dz0BtsH7kwVJzYGmIf7VO1Db7h
luAbYQmmkZbEY5QlmMaF9BXr6ZbEY4x4wDrWEqzjHQffRPGAY5IlOCY4Do4z
LNEb7ZrYnawu+KaKB3wzxIDv0+wjftMtwXqmJXoz1QXfFO1ha5Z9YJ1tyfpn
WY5x/8n3JsaU3CFvznYc3OcZI2JzoZjBOsdYgPUCS7DeYHuucoZz5osHHBdp
gxh0SBn/vJBLjAV6FzsOpkudB+5rQ87Vr6vEg78LjAW4r7AE9+XGlLEr7WPO
Zdpj7JqQc7R7nbbPD/mrJVgnhp+3RvlgyPX2gbNL9N8S5QPEI2WctLm7fxFH
56h3CqkRcpNxJAa/ivnmkDvEgO+3Gi9wL9RXcNxuid6Nxhdbi5wHvvvdA8aX
iAF/7xYn8bvHEqyLQ6527F77mHOn9ojxfdrA7u8hvxUyjpGB54SQ/0R9qX7f
FvKQJb6/FvJcyOqQZfaB42FLcK/UV9b5M+QPcTwqNnx5POQu/X3EeYytEA++
P2mJrSfEzNio8LFHSFnImmg/pr0pKfu9KuQZMTzknpPv5Pfzrocv3VPe/6fF
tEwczzqP9lptLxfzw85fru/49KJtfFxnCY5X9QN7o2OtPiE7hPRO2cf1IdtH
fbuUYzY9Zf1XCvkdWOP6G7SBj6/rBzjeDHlBvY3q4ksh7FQIeSnqH7hnzBsT
fQNCUkj/lNd5t5D1Vhjv9/SbNTfpC+337cPWRyFvuP7Hlvj7tusTA87eaYV8
15A75D55v2OsW56y7mbXZ53PXZt1/m6J7585zhj3LPcY992XIR/qyz+0he7X
ltjbKdaplPK7Wjllna8KmXPBSeAo/1SXNf8SOlVCtkS9WpQ7h3wT9aopr7EV
TCmv8W0hj32hL0em3Pd9yC5R/ynKn0NmRn1blD+EjI36sJDqIUNT7kNvm37j
S5EL4h9cCk4BfyhyOzgP3K6hbTggXAgOU+SCtOGIjdSDu/Em8DbA4Zrahl82
Vq+a47Thm/X0o5K2acP74DPwJDhfM/0jjnAe+FAN/UWvyCmbFkpcsLn24D9w
oSLX3Mf1WqhXz/EW4jnUOeBraXuL+/+xfsOF2ojjcNuN7GttGy7RVfxt1WN9
eE47/W5vu8gX2+pfO9tttHGiWI9yDvjhVh0LJW7XWTzwn05igiPBhYo8ZoTY
OjvWWtsnGN8OrtHKviKP7uIa+AJ/GFYoccFujsEfBhVK3K632DhLvfS7t22w
9dQv/IXn9BcTHKmfGPrbbqivrcTMeF/j1EtbbbXXXcynaBffh+gfmIbaLnLH
gcZgmGNFfsn84vdAy0KJ/40slPjiqYUSXxyuL6PVI0/Ie/KdO5v7aq1+c1ed
Jj74z/hCifNNKJQ45Tjxj7eNTxPVAw8cZ7J4ptoucsqJ4ptsm/m8T+dpb47t
Ii+cLjb4z8xCif/NEtsM9YjRNNcr8sLZ+ortcwsl3oke9+jZ6p3m+DnGbKZ2
i1xwjmNwiqv1HR4E54HvXSxGsMFf5ortItv4BC+ap6+8A5e6xuW28Wm+etMd
n+98uMmNxneuPoENPnOFvl+rf2C9zjbYrlIPTAtcr8gFr9Metm8olLjmAjFf
r94FjtP+RX/AdpAcEN4HV7xZ/4vcbqEY4FG3iOk220Xedrf4Fzp2jX2L9eMO
bYEB3rTIPWD8Lv1dpB547tVukbct1W+42BJx3G/7N+s3inOJ8+GA8OC/6Ss2
4Elw5gfEgr/LXKPI/5bpxyO28etR2/gKj3qsUOJ2K1xzpW1ww52Wi2GF7T/U
uU9f4EirXPtZ2/BB+NxThcwDn9bnxdp7XP+ecw4+waFWuw4caJ3+wadecM5a
20Vux32xndzqSXGu1m4fud3Lhczl1utnxZR5zqeF0vfnGP2GW8GxNoXOXuXx
vqVsC561wfXhdvArcmyCeYZ/8C54WBvmpsxx1qj7prbhTZv0+21tDZD/vVNc
u5D9qyAvW+fa7zsfgSN9pt5msRT530eu+YntN+yDn5XLvzaK6QPtbtLe5kKJ
833uHPjUF+45sSbOleRl2O8W9a7y/7YhDVPmaMyHQ33tfPjZvwolXgiHqyKn
Yw24GXwN3gav26oOvO8757ZPmdv9W18Zh0MOk8P9WMhniBwlP5tG3x4pny3u
Au4G7r2a3hPsXZOo755Kdwm6nEHuUfq4W5qn/G3G+D5Rr5XyGi1S/qZizX2j
Xtvvh4NT/pYgZnzH1TRPToqyl98dL7nH7G+9lPPyU/eN+BLbQ1L+fkD35Cj7
+b2wX0gdvysOTZnHkyuDohyorf1D6srvD+C3Tvl3I/dnqzGs7Lr1zVni+bux
+80YV7W/Zco8Hh+bRdng/zg65ZfuM3vGfrVOmcdvMd/xhdw7MMrGcvrDU+b3
37g/3OHs0d4pc3d4O7/Z7ubbNiLK4Y6xP+zdTeZmbWN1fMrvQU0xkAPFvKjl
vlQwhvjVKuU9IA7HGKOt7sOe+l/Zc43OkCgHp/ztUMU44P9hKcfxK2PW0PrO
4iWP26WM7WfjUdd4cia2mf/c99wtxd86moj1T/MPHDu6x9jgvu3pGSQGhxiH
OuYHGHcyDyq5J830vWA+VTBeB3k2apnHK41xc+OMvy31+fQox6V8JolTa2NF
DNqYT+i0N567powf7MSylfFsYB4QQ2J2mHEbrG3uBfakrbnL28I54n0hdw40
l9jnFu51x5TzhpyBF3W03sn6PHU6WD/DmHcxlj20Tz52UofYHJdyH5iOEddR
trmXTkz5zea9nqwd3mn6GOP3nF5i4F2cqn9T9AE97oqu+sJcfmPpar2L9aL9
Sdqir5v9vCn8vrDetU4SCzqjzJNpIVNTfiP7WaLP/cF7xNtySsq2eJvQ76PP
lH1Tvsf62s87i52Trc+I8kxtjXGN9fYPsD47ylkp393oDXStitbxYbR7/bT5
MMQ4YwP/kjky2H7mDdLOcG3zXT9WHXKpiBk/T035/fhRf4apw1kY6X5x1wzX
DuUI9Yfa/6P7O9K96yfm5P6Pcu+I02ix9LK+g2uOdV3uAd4/7l34KjyDt4tz
Rn/xfRxn7jEXDNXtO93+I22j395++niXeKu4L8l37N9ibMdqB77AOeY+/z3a
f6Sc92A8w7x8Ex9TvjerBVfamPIdUDXqr6d8T1SP+nspn+9dov5xyvdgxai/
nPJdhf+z3adZ1r8vlNr8LkOOTzaGU8zb/52dlNvwuqWOwTN7qM+5qBxrvZry
XZii/mLKd9vakNvc31eiXOJeXOgc9M8OqVCe75WzGC/Pd+H2UW5Xnt8ZbPyk
nTliAxf8fJI+n+varMtvKHx7803/UrQXp3weX0PXnPkUTO4F669J2QfWfyFl
H+pH/cOU78XurgV2vhEmuqeT9IP+WqF/X8r3fcOor075Pt6zPO8l+3hJyFcp
nx3477sp3+V7RP1uc+eikC0pn52a0b8o5XepXtRXpnwfE49bjUmd6H8k5fen
UdTfSfnubxz1D1K+7+tGfXnK71LtqD+Y8vv2KzZS/n/tLyHPp/wenhfyRcp3
HTky0zzh/aT+rWeNO6u3+TLNnCm2V6k7y3y7IMovU74nuVu4p/or3GNw8xrh
28KU+RFnh7PAeZ+uDnca5XT1n3Fslf0z1CkLO3+m/L8LfoPjdxx+17ky2ttS
vk/uMe7E/M6UY02cb0/ZD3z4Ad9Tfn++BV/IESGXpnz2GrhXc92v+SmfVc7p
ZSmfycaueYXrPhPl5pTvvM9CvkuZr2wNuTzlO5Y4nW+sODfrUz47DcrzHPTn
pXwXcA8scD5zyfd1Kec8e3iO+0i+f2LOLzUPyIEnzA9y4/6U85gc5i75JmX/
H005z8ixZSFvpPyGvGV+1zOvLza3n0v5DJD/T6Wcu+Tt2+Yo+flRymeM88U3
Jb/Z8830uTjB+L55TA5zdjekfH7/C0da5Qw=
            "]], 
           PolygonBox[CompressedData["
1:eJwt1PdvzVEYx/Gv8j3XCDGK2oqq2qtGjZDaiTS5ISKRRjR+5S+w996ziBkE
sbcmxFY7qB2EX6xIjaCK9yfP88Mrzx3fc+85zzjpEyYnJ6VEUTQalVASougo
eqI51mAWGqEtZqJyIoqSxKI4ij4QH/mzvfEUZ9AHLbAKU9EAbTAH1Vg/hljM
+ofEE+iFZriPmnyfT6yC1ZiOhsjyZ0+jhq/5iRSeH0FMw+Nge9Je0jENMd+P
JB7g/1YSp6AeMrEei/y/O2At5qIx2mkNDunMyMZhHNcZ0APPcRI5aInbvibb
f2MX9miP6IbrSLCfPGKEO6jO+7HEgJuoyvtRxIqeyyLU8pzuxX6dCd0xX7ng
+XHEEs53z/eovTXBOizw1+3xAh/RF63wRrlg/URiHWzAYq9dR3zDVwzAQLxC
Ks+PJ9bGduzEP/67q+/lrp9Fe/qEL+iHUp7ZSFyCDHTCZ39G32V4bmZ4rfK8
dleJZbHVsBTnfa+t8R5HvFeaYhN+IBeDfa/LdIbY9lyX96997wV+9hVaE1sO
1Ns3vDZJr828YL2qGr1DOYahC/7iD+r7Z4X4jaEY5LWcHWxWVFP19kKvVb7n
9iyGeI7L8Ev79N/QrNzyXtDMbAnW82meE6196bXUb1zAW89Nf9XFc6JcDMfu
YDOtWVZPLvecFHgOlhK/e62Vs2LvOfWa7oAdwWYyy2t+KdhMZfqetwabec16
eWy5iRL238rRRd+j9paKfcFmTrOmnj4WbCY1i5qxa8FmSLOjO0B30wOvte4o
zd6TYLOe47Uv9NyrB84F6zn1mmboVLAeV2/rDqmQsJqqlrpDDgabGc2KZv5K
sB5Xb+sOu4zN6BzsDtHrbX5WfabZehbsLtCM/Qd2H6Hv
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
E34kFvKAd60zD3w/Ma9PHZPT5/qtcB8KzrvGPQAnPPCLSsllGfeQu31YKbns
ejF9pR94vnbMfqzWf5W+2IbIW5eL71tj9UuZ1zbh+xtyQMrcdqWY1pofXAU+
V0deA//BDmf82Vw3SCXPrZILkl8t+WJTOc431uJX55NfbTki+W4kVzwn5W/t
/iHH2pt7yCuTfKzgr/BAYm0mXyTfajlZwZVrmdPm8sha8s069vswe75K/rh5
Kvku47Vi/cl4dZ3fSY7YzDzq/Y6fbiXnbG7dtkglr61nHtvKQUfITXdwvfqp
5LPb6Qcv/bNx68k94ZY7yUd2DZkoT21p3IbaC47bUL5Z1zqP8f121ot84bFd
U+avreRoNc69NGXe1jrlWmwiVjjRbuYw1J6i54aHviBlDk3fNbUHDrTXOGMd
U+bB7P1h1rTg1M3c68nuP/5HpPy336b6NzPn0SGjUubcY81xZ7E2t/7Hpfzb
gHcdQtpp28i61HavWroHXVLm9NtbmxauNT7l3qwRB2eHs19jLajDkSGHGHdH
a9nA9doZs3/IWSn3EPjairFnyr/fqNmexqnruyPE3ln8W1qDQ63VwJAB7h/x
jjEmNeso1lbaG1j7I80T3wP17xu6jftKDY6yLtiPFvc+1rG5OR5nntSpvbmt
8dxwLttZ0+L30QD3q1vKv6l2CRmUcv+R4wnadtHezffFXcw93N5asBZ39Ukp
39en+My+oE/2/WrvVu5JztxpKZ87zlUv9/nUlH3+q++p7sVJrkFM3vX0Pft/
iu9PMw5ntbfxeT7d3mgsvoHW4BW/MWA6Q7/G+g72mXu6n/k0cQyObtarlftP
L3HW9ndujbU5O5Vnq7++2M8xPt+q3c1/WujLUr4TX/L7wbeDc80z3z9y7Gtv
9DFnns9N2e8j/Rk3cd5Qc77A2BVrfKa4WJe7mO/x8tAfhPxFX+ZwP78YMtf+
GmaeP/gdv8y5xJj2O/s039O73I311RONz1m+2Jpxr460F/Z23YrvRrmPF6Z8
X+/gPo+wZ0Zoa6EvcxoYY7j5rwm5z9jkNtX8+XvLZPNcUCn/3lYruNmG1Xn/
KqE/cb8W0C8pn51JzuXM/hr6R3tlsjZicmdzdzdK+ZvOunAUfFibu4f7Ej/u
zHE+N3JPpqSSJ02yX74LPT/lHt9PzA2sL9+V/3+/IudnU74bNovnp1O+h3aI
52Upn9168fxAynfJNvH8ZMr3XJ14fiHlO2PreH485btnfchXKZ8/cjvf/G8P
+TLlc35lyNf21aLQr6fch1tFnLtTvvPqx/NjKZ/dTeJ54+p8HsAx2r2eF/JQ
yvffzJB33ceiRg3FOsFeuth+aqSd5xr1ON9flPL3Cf8NYs3nUz6bY7W1NuZY
17ki5IuU766FoVfq82jIjSnf0Q+HvJFyD6+1P4rv4BjX+iHkkZTvmFUhS61/
8f+L/B3ithjXrs738j3Wi1o96D6xR0tS/s3Q1hjsJXHou59T7r1bQn5L+T7i
t9Qye5ocq6tznjPsCfrhanuFPnnT/WPvbg29IuVvDzW43Dp8G/ralM/gNfZK
O2vzmvV5J+TtlPkj+3aVe7cu5POU76jF9gE9sDrkw5TvZmK/b3zO63Mpn9mP
Q653HzmLN6R8HucQL+Xv1E9iIH/67peUe4/+SvbYUyn3+kHmMt18vmFeyt8M
1p9lDp+FfJry9/BV8yAH7sjZ7u8TKZ8Tzsj/AH0j/N0=
            "]], 
           PolygonBox[CompressedData["
1:eJwt1GmIzWEUx/HHGO4ZkixvKEpRGiXKlp2GjN0QEzKZkG2GUpqUUpq8s2Rr
RPZddjH2fcsuLxBlyV5jHWT9/jrnxadz//fe597zf57f+bconlVQmpVSykc2
rltKBzAS/bAEdXNSmkN9kUnpDrUh1/OpXbABK9AX+ajCVozDWDzEKfTAYKxB
I9YvoLbERyzFy4yvOY1tGB9r1mMZemMAjuMHJmGKesIbjEEr3EdTfn8RtSv2
YD86YDh24Dx6oQg7sRvtMBRXUZ/1ZdT20UtV3It62o6z6IkhOIKvmIhiPMJF
9MEwHMRT9EdHfMYXTEB1xvf6MDrHnn+KHoviO8tRj37mUmtjMT6gMPZsLbUx
ny+ktkYlTqA7JuMQNmNQ/MddPMcolKIWa7dQZ6IENbmugTxez8BqNOB6HrUZ
NmFVZGNg7PW9+G/t+V5k5fjagsjOSWob8ww14fpWnH159H6M2s38HrK5fmee
LfX0KnpWr6Pj7Cvj3pSBP/iLqfEfOayvg9nxm4nXG6nTMB3/8DbOVu8Zn2eQ
a77mWexJSezRk/gNrR2Bdfhpnr3cOJvL1LbmZ6RsHzXPnjJege+RjebYF3uo
vVMmX8c96t6U4XPmmVfWldFd5jOm2VJGH+A2OsWZXose1VtefKY9Lo/vqLfH
5llUj1fMZ0KzoJm9YD4Dyr5mTNl6bz7ryphmYaV59soiCzfNs6xM6FlQEfem
Z0I1vkVWNBM3IhPKgmbgjPkzQc8CzdAl85nSLGlmfuOX+WzoTP8DQ0qXBA==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
qqlD7q+aOuSBqqlDZmr3Q7bBMct2qUNmVU0dMrtq+P38quH3z4kNvj2namoP
2qX2mCu2J2yD7Unb7AH8/ZGqqUk4h9QaT4sRbHD1Z8Q2z3apPeZVTV3EXOX7
wtFiW6CthZe/K7YX7QPbn2xjB5z8Jed62XapQ14W2yu2wfaqbbC9Zhtsr9sG
60Lb1B8LxVi+fYzR7y9oK3jg6m9WTe3xVtXUHm9XTe3xTtXUHrRPiPn/kHJ9
U2qP98QDV/971dQetC+NcZekzCtLHcJv1Lxv6GfuBPLFsVVTh1BjlO9x3A+F
6xSu0kXe00EuBDc6M+QoOU4bOdd6cqLucogFcrdWcsCOznG73G7dRfhTd3/f
zDXgdzPkeKeHHClH6yS3Kjxuy0U41BauX3hb4XFby+sG+S73L99Vue+5/1pr
e0fXhYNunHIdQG3w3ypzbTg3NcL1IbumXO+MsB8efmvIXinzYeoK6gu4/eUp
j4PfrllHbg0ZLbfaUNuPDTkk5XcOTXndpeVenRy3d8pcFQ68ls+F/27kuCn6
E7+cmHKdgy13+t4q+gP+Bi+dGnJjyjXRAyH3h/Q07i5I+ZyODXtbh4yK9vGh
1wo5Op7vDrnHfVwj+rqG9HNv77afvb5D7HeFTA9ZJ2V7pmtTz3ivR8h58fxi
yAvuQWf3DGwbxu8fiWndeF6hzr5eJ3RV5/143vXYi2Oj73chI42j+9zTjZ17
E9e/U3s2i7Fv+ft0bcXfT4ecm/L52TTGvC6uTeJ5oe9y5jh7vwsZFnJRynnh
29Ar1TmGtwj9jr6lFqcm/yjGrBr9Xeoc30/ot/b+frFj8OtfU/bt+yHbRvv4
lOtZ9o56vHP0vaYNxOcNKfsE2ydr/63aypg+Mf6D0BNTzhf0U29+HJLqHA8H
p5x7eJd4gfdTj/zseSA+B/g+cU4tu1Rq6mM0dezJIcNTjulSn1P/Uh9Te1KL
lnqbeUu9TbvUz4yjfqW+bOO8nDPieb57vozvcZ7JN6Xe5v3lfa+1a6/ib6zN
GWubmnp4Tf2xqlhKbc/6izvXcvr4evdoks/khHNCX5dyjUa+4UxyHi8zTvAR
OeHalPPCRe43MTPBPf24yt8VVnC9Q3yfd48IudK5iVXilHNUvq3gy3uMJWKP
mvSqlGPvStu8e2rI1Sl/W7hfO3uqr/CZPEqd19vxjB2Ymu8F7fRjyUljQw7X
Jr618A2I/DnLGCn3TYmXR1P+jsBZfjjlb0nE7Yf+Thzx3QhMP+vbUvsek/J5
4x5+LOX6eUjKNTR1bLmHeKZ+PjvlvDvUNnX1DilzE+bgHt/fft7hviT+yYHE
IjHFXVa+kfG9qXyfIka4j/ke9U3VfI/73Dv766r5/o0u3+e+dFz5lvdZ1XzP
In6ZizPAWSnfy9hjvgd+Iq+YZNy9XjXfzsq3tCWM2fIt7/uq+d73bdV8R2MN
ci95kvxD3phgHL6lXewDsTnV/g0iT/zZZ/b6lpTzBmPm+jzHvenn3tDu4R7N
sf9mx4NnirHYw5ggNjiH5HW+E3HOR/jMnfLbOudZ4vy/IR3qvM7R7jP5amT0
fZfy956T4nn1OnOXB1Peb/aaO7md9zL3I7wGzkCePcBxo+zvpY1DtHOeHOv/
38VTzuPtjePZ7s0sn38y9mf5/FTK777p2X/K5/LOv5yTveHe+k3Y+KXY73at
fZz7YeecKba++o8zVu7cR3x+0rXI7Q85vp965iLPD4kdvA8sgpkx3bWJ+xpe
d2Kd7zPust76H1+Nir5f1plTcG7HuC/Dom+pOuc2+sbZf0D0LVHns80co53n
k5BO0X9S6H+EbFdnjsJenuF+Dba9lX0jfYYHwbG4r/6dMm9gf/g7AnmE83+W
e8xaJ8Tvy9T53uIehIuTC46Mvk+db5xxhs3EI3FJfMLfuPO47+Cs+ANeQe7k
W+7SjiWfkkvHxJzL1vk9cudpKXMfbDlTTH9J+bxx1uBE3AHk8KOib7E64xge
esU6zwHu010fDPiMPIy9Z+vXETF25TrP9VXKvIozd1DKeZa9+iFk1zrfH6P1
Ef4ZHX2/qrNvnjaWiN8FxkN79QJjg+cX7V+7zjwSW5as81zMs3Sd/Y695e8i
xH+rOp9b9rVNnfkovoEvkqfwySp1jj98/Ys6xxzxtlyd/YtvV6szL8Q3/UIP
qDPHYl8ZS54fL3Z8MNH44H541XglVicbE294bxCn3N1vpswR1zXOGMt9Tf7i
7ME53nCf2KN5Ic+m5o5Ec8eRw9qax8ipN/t7++j7W8p37Dz7yZnrR//LKfOQ
jnXmiOQtam1qb+pu+Myt2vKZcby7fbelvO/w5+dSw9+nuV9vGyvEyeJ1jjn8
Aq8nL4P3+5Tz7L7Ox7zwzN3qbB+2kbd2rHPu6s/6dR7D/cJ9Rt4713gilp7R
P2B8Vsw8T9POVv7OOO6m+favpm/m6Vv65jv+Jt9h/HNiZjz/lwd8g8T0vPj/
aawQJ5xL8HE26zpzZe64p7SZeFjdmGctagzOH2d/WW2Aoy5f5/qBPHyjWMFF
LiBHkB/wTWf9A08kV5Azdo6+nerMH7cPvUOdOeX+oYfW+e8D8HTOLnmJHDTc
+Hkp5dxKvJKHDnWtgxzP3xE46/t63gcTg3XmsiPFQi6F504y3uB5h+uTQXWu
c+CNe5NL6vz3q4HseZ25JncJ9ykca6HcBd7yP5qx05A=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGdsjmEUhl9bn2Pv2LVDgjRBxN57FVVqFNUaUbvU3iOUKFGxRSQikYhE
JBIRv/hr7y1mzajYXHfO++PKuU+/r9/znPOc+yROmZOcXTyKovFQEpIsikbD
wRBFq6Ee+jdxHcyD8eTpcBS9CCJ0S1iKTodv8APSYA1U57OZcAY9Fn7CMPJ9
xP3wGGaTnyP2hCeQTX6e2B/uwXTy08RmkIjOhUvoidAb3QsuJ0RRHnkVdA5c
RI+BzugJcAS9Gaag3xGHwzFIIR8Fs4LX/Axu60xYrDPMa1at+o3ncF93hiUw
hM/GwmH0XkhAL4QL8Rl3IYv8FLE5ZKANRqBPQFt0eZiBXgnd0F1hcvCefoYB
5HuIBcHvmgqHgt95MHqo+dkp8BKKk2cQt0MhfIKRsBxeQz8+30nMhxtxT9SL
QnrYA90dtpJvgzuQSX6SWBveQhnyLOJu+AKV9MbEVdAKXRIy0cvgKVyDaZAD
1/XO5r/9nvNuxT1RL/6Sl0W3Nr/rnwSfvTrkc+MZLIIW5r1PhX/QVD0nbtL/
QAPy+cQNujO6A6wN/hvlzHtaEL9xTfOZ1CxmQ0XzN9FbqKY25nfU3VYQO5E3
ggXojVDMvEbVpp53JK9r7pX1mkHzHqk3erOHejf+dpaYFPxutWBO8Dt2MZ9Z
zeoWmGReo2qT55qY30Fnq+b65mfqLNWsWZSH5V3NZDVzT66JZ/YFPIprzYXG
5j1Tr1RTX/KrxCvUu4NYivxVcK031WfyXF78HXmvj/msyYOD0APNZ0Uz2x7d
zrxW1VgB/SF4L2fEs/U1uFc1Y/KOZkBvLw/Jy5XNvS9Py/sNzXeDdsBU9M14
lo7Hva1hvmvU4zT0OPPdciD47vkVa+0g7ZaieJa0Y+TVquZekme1ux4E9652
WGnzGddsywPf456ql9p5H4PvEO0Oea6EuefyYw/Ie2+Iu4J7UF6Tp+QleS5Z
u8Hci/qOduPf4LtOO1K7UTtXu1Y7Mpj3QLVrp/wHzUDDWg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
1w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFlLlmEQht/MNnoHyYosE4wIIQRB6CxPOjMpKzLas7KCFqXIFss2IaUF
CtpNsGixKNKgaKGyndTD/AOdFWXRQli2XDczBxf3PPN+zzZzP9+kVTXzqjOS
JJkBmbDbkqQHpkFfmiQX0Ur4QNwPO4i7oThyW9H9MAjeM76Oro25A3CeuBmm
E5fAS+I18Il4CroaLsMoyIZjUAWjYSTUwSsogM/MuYVuhK/Ew9C98AYK4Xvq
ax+AjNhjE3obxkEOzDI/g/Zu5PsSdLb5WTXnPtTCL8ZD0EvwEHLhN7nt6JU4
ay3jMvQFTIZtjG+gj2Ei/GH8CD0IQyPXGHfSXZSbA69hKlwjtwFdCoPjjnfQ
TsiDJL7Nhb+p/2YXNJnXoo3cFnQ5ZMJPxkfQoxG/hcNRM9VqOHoBWrVm6nd+
QNxgfvfcWGsBjIg1n8Ah87k602I4Hr1qYv4idKa5V+SJUngO+borudPoGfhH
/C11b7TEN3lkZdRctf4IK4jPQRa8Y7zQ3FPyks7cRnw1eikPnYD1MAZMNTXv
kXojT3XAKfO9x6LL4GT89h65m9ET9UJrrDPvqXr5BSqIu6AIelPvRbv5WuqJ
vLDT/OzyxDN4al778eHFavNYnrxrvqbWmoDWmPdcvf5B7iy62fybarDH3NM5
UUN5f36cXW9Ab6U8elEQtdcb1dtUD/R25WF5tzjusi/2Kgov1pvfVZ7sCY/J
W/pP+A+doI/f
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt0llTDgAYhuGP9n1fSCjaLJFEWlHJlvYoezsh7dGqkELlpE40/oJx2K/r
+mYcXDPvyTvPyZ3TO9r27lAgENjnMME7jSKqaWWAKVbZYpc9/pLsoZiz3GOV
eDL5yBzBgTO8YJRzfCaBxzTwk1u00EoBhZzmJp+IIZ3r/OAGubzhFG+J5RHj
TDBGNZM0c5JFImmng3IWiCCN43zjBFmUMk8oqZSwziWO0ks/fYQxxACDhDBM
OK8Z4RXHKGOLy7RxhQ2ukk0F21yjk0q+U8VDuohiiRpyqGWZaLqJY4U68njO
FBlM00M9M3xglnxu84tGnnCHTe5SxFMS+cJ9ztPEV5J4RgprPOACL3nPES7y
Tz9/+M0Om6wwST8tVFFIKinB3kgikQTiiSOWGKKJIpIIwgkjlJD/jR8A92s2
4g==
          "]]}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl01lXTmEYgOH9lQiRKZmVMqYMCZkyj2d+gkMsjv0NQ4rMwy/IUCRFQiqz
zAoZQ0kh0/UuB9e6n+fbB3vt99s7fdP2jdtiURTVssuwk5OU00ALXSTGRdEI
MslhLjtYwGaeMyg+ipKYw3d7rv7QSGv1Kc94yDeW+71KrzDNnMV4msK9NI1H
5hVarX21Xddph/7lPgX2C9pb7+pHlpgrtIbbrLLf0QbesdBerpdJN09gLPX2
4TqORvMiPafx+lrXaKv+oY759jMa02ZdrS36mxfk2Ut1tF7VUXpNx+ipcI76
Uq/zinn20xqnZzVf3+gN3obztpdpLz2vi/W93iTVnEEmk5hIAh9cm6xTmcIt
+yfWm9u0j37WtfpF75FortSl+lUf0Mky+0Xtp5d0pXbpY0aap5PNDHLoT7dr
M3U2s3hi72GD+acO0IH8Mg/VYaSQzBAGsyX8Z2wNZxLOlWwywnOHZwjvlPe0
mXrKOMFxjnGUIxzmEAc5QAn72UcxReylkD3sjv3/Lv4BSDBnuQ==
          "]]}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0mlTzWEcx+G7zjlmeA088H4iZS1b4wXwAKHsomyhrJXKmr1EloRSspPl
ZA2h7EtF1nA1PbjmM/+Ze77/J7/h02akTk8IIdQzIhJCEhnMIo8SqmiilU56
6CMWDWEIw1jBDrZzjl8sYzUf+MhTSmjlGaX8JofbnCYaC6FWL1DEDxZzk1uc
4BsLWMUW+tjKZo7ylWxWUkmizSrdyEM28Yj5XOElr3hBJx00sIFu5nGJ/STY
OqD1rOMzmTSSz24+MZtcdvKXXazhAWvZyz/20EQFwfY+beYic/jCQdZziC7m
cpksejhMAXFek8cbrnKEt7znHYUcI+Zf1XqN40R81+gNrrOQXk6yjVN8ZxEt
LOEJbTymmDoG2Tmjd7jLWX6ylHss5w/nKeM+z2mnnKEM7r+D/ndurJsO4jRS
STG5zGQqU5jMJCaSThoTGM84xjKG0aSSwiiSGRkZuP3/rIR/fQ==
          "]]}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl00VTVlEAx+GD+vLS3RhgbPUTuNFv4EL3LnVGP4FgK4oFdgfYrWA32AW2
gmKABSoogu3juHjmd/9nztzVvcXjJ4+ZFBNCaCEuEkKUQkYwmnFMpJRKqqml
nkaaaaODLkbGhnCaT3TwgWdkRkNYoKs5yUD7lB7nMRl2ua7iKAPsY1rLPdLt
+bqSw/S3a/QADaTaZbqCfRTa+3UPN0myZ+tydlFg79YdXCPenqHL2Ea+vV2r
uUysPVWXsoU8u0o3c5F+dolWspFce5Ouo56+9hStoI5v/OA7a/jKWv4Q3P2p
v/lFKzHO+tDreT09bOASEeel2sY0ovYV3cpV4uzp+pqZJNjXdSc3SLRn6Rvm
kGzf0r3cJsWeq2+ZR5rdqAd5xx0GOburh3jAUPu+vuchRfYjPUITw+wn2k4z
xfZTPcFnvtDNQj6yiCx3WvQMz8m2F2snS8ixX+hZunjJYGev9BwXGGKf//cu
en2vPXTTSTutNNFAHTVUUUEJExjLKIZTQD555JJDNllkkkE6aaSSQjJJJJJA
fOT/v/cXIp+CBg==
          "]]}, {
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09lWjWEAx+E3ZBciQwitpQORObOWW8hBa7mAugCOuAcODJmHMidlKkPJ
TDtzRaYyjxElQ6ZKnr0cPOv3/d+9v4NvD+n5y3KXxoUQokyMhJBBNovJZwWr
KKKCWpppp5ekhBBGk04GmSyiiDOc5hfV/KaQt0QSQ0igPwNI5KHzKka43qFv
uMsYu1EfUMlwe5u+oI5Uu17vs5fjnKCcGyR7fZPu4Sgj7WN6iKsMtjfoLkpJ
scv0IFcYZK/TnVyKPa99WUv4wje+UsAjuujmD3/p4R5nGejeNdrGRz6xmnbW
0sF+PlPMeca655w2cYFR9kU9QJRxdo0285hakpyt1ydsZIh9TQ/zgV52E5w/
1evEue5LH47Yt0hzfVOfUcFthjrbrM/ZQic/+M5JfrKVYd7XoKdopZ+9T+P1
pb7iDu9o4T2v2c4EljA+9ryx7yD2Wfq9tdFElHIKWcly8shhIQuYzzzmMofZ
zCKLmcxgOtOYyhQmk8mkyP//wz/+Z3Vi
          "]]}, {
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09VWVFEcwOGDgQJ2J8zQXSrYWKASBiaYYAeD3bqW3vkA+g76DvoOYHeA
LTbY8Z3lxbd+/733XMzsMyfa3FofiwuCoIuUhCBIppQqGolxjotc5irtdNJD
fGIQjCBKAeVUUEUNtTQxO8k+z8y5GhDjsfV0jXCcKDn8sd+ij3SqNrKOZfy0
t1R/6Gjdy0NzJ9/YZ/1de8LvZt7FPXMH2eZu3al3dZIO5QjDyOKL/e16W0t0
BdXUsJiP9gfoNm6Zn/KeVusP+pZCc38OkUAmb+w363XN1+XUs4hX9hbqS+2t
TbSbnxBn3k8vnltX6nwW0Bbetb7QvnqAPuQRz0H68dr5HJ3LPK6Fz0tv6BZN
pMucpFu5aS7SdzpITzKQYgZzmCF8cr5G17KS1ayilAbqWEItn312uO7gjnmy
3tfdOpKv5lG6hwfmKVrGWE4xhnLGcZTx/PK5iXqaCUwjmWOk8Nt5mp4hlRmk
c4IM/jrfpJtZz0Y2MJNZnA/vhzqqw7sP/8uUhc+QSPibwrun2/vQQRtXuMQF
ztJCA5WUUEwRhRSQTx655JBNFplkkE4aqUSJJPx/X/8Bqelqng==
          "]]}, {
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0+daDXAAwOF/H3W4BR63wD0goyizZCS7YSfUae9xTlmZpWUrK4rKXpUL
sEu4Anz0Po8P7x38fnOz8lPzEkII45REQojSSi9DvGeKP0RmhjCH+Swkg1yi
xOmgn1Em+MgnPvOFr3zjLzNmhbCaDexjgP000sATnnKHPG6TSzGvSeM0pzhJ
P32sYD27uUkOt9hJDUcZ4xittLCNqySTQRlbecEyKnhEL5fpZgs9FPCOwzTT
xCYusZh1lHKAZyRxkQuc5yznWMsi2ungEA84yEPKGWSILjbTSRaFPGcJV8gm
Rpx0llJJCi85QjVVPGaY62znGjso4hXLucEujnOCTFKpZSVviFJPHSOMco98
7rKHEt6yivvspY0zbGQNk9qY4jvT/OAnv/jAOCP00U6MYnJIZwHzmE0iv3U7
yQSD9NBCnBjNNNFIA/XUUUsN1VRRSQXllFEa+f/LPx3VgAU=
          "]]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {{-1.5, 1.5}, {0.01, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"-", "2.`"}], 
       RowBox[{"-", "1.8`"}], 
       RowBox[{"-", "1.5`"}], 
       RowBox[{"-", "1.`"}], 
       RowBox[{"-", "0.7`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.2`"}]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8894648141099863`*^9, 3.8894648280264807`*^9}, {
   3.889464895308795*^9, 3.889464910762259*^9}, 3.889464947681251*^9, {
   3.8894652443848343`*^9, 3.8894652752590017`*^9}, 3.889465363467873*^9, 
   3.889465455720846*^9, 3.8894655463195963`*^9, 3.889465717891829*^9, 
   3.889465802149416*^9, 3.889466386955743*^9, 3.8894665321831083`*^9, 
   3.889467117153487*^9, 3.889498471717238*^9},
 CellLabel->
  "Out[1167]=",ExpressionUUID->"e6d79722-24a5-4a10-a87e-ddce53f23b00"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1352, 673},
WindowMargins->{{Automatic, 15}, {-44, Automatic}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"880e7b91-0ace-4762-9e8e-77b72db7dafc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 153, 3, 51, "Subsection",ExpressionUUID->"4f4cf1d8-f2d1-49b2-b312-b41c649c86d0"],
Cell[736, 27, 433, 10, 63, "Input",ExpressionUUID->"1d132e17-1033-4b33-98bf-7e1016d58862"],
Cell[1172, 39, 364, 9, 63, "Input",ExpressionUUID->"720a1e1f-02e0-4bab-8467-9b41316284d1"],
Cell[1539, 50, 1944, 54, 223, "Input",ExpressionUUID->"7bfe74ec-87bd-462d-a1f5-1f06cf9bf641"],
Cell[3486, 106, 587, 13, 63, "Input",ExpressionUUID->"47669576-38a6-48d9-bd34-043292119571"],
Cell[CellGroupData[{
Cell[4098, 123, 3379, 86, 618, "Input",ExpressionUUID->"5df03ea6-3bcf-4d5d-9c6a-4b7cc388400f"],
Cell[7480, 211, 3848, 71, 70, "Output",ExpressionUUID->"79e7c4be-1907-4b5c-9e51-e8a2d43e9f5e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11377, 288, 179, 3, 49, "Subsection",ExpressionUUID->"bd8d119b-d1e7-44a4-a52e-87cfc5a6832b"],
Cell[11559, 293, 279, 7, 63, "Input",ExpressionUUID->"60cee4bc-e606-4eb5-8a39-dba4a2812d39"],
Cell[CellGroupData[{
Cell[11863, 304, 1239, 34, 250, "Input",ExpressionUUID->"3c244c23-0c4d-4a38-85ea-633840ecce39"],
Cell[13105, 340, 1696, 29, 70, "Output",ExpressionUUID->"d43cdfe4-965c-4332-a211-a42567324d91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14838, 374, 551, 10, 63, "Input",ExpressionUUID->"4e325b7e-ef20-4324-92e3-924a577ad2ef"],
Cell[15392, 386, 182162, 3502, 70, "Output",ExpressionUUID->"c2195926-12b3-490e-be23-bf9b58de1a81"]
}, Open  ]],
Cell[197569, 3891, 2572, 67, 467, "Input",ExpressionUUID->"cf960611-826b-45e3-bc8e-8532f989fa4a"],
Cell[CellGroupData[{
Cell[200166, 3962, 400, 9, 63, "Input",ExpressionUUID->"332717e4-74bd-4692-ae49-6a666b76c651"],
Cell[200569, 3973, 905, 15, 70, "Output",ExpressionUUID->"66bfca7c-7a48-492f-b5b5-bbffa494f4e6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[201523, 3994, 242, 4, 49, "Subsection",ExpressionUUID->"eac29dc3-ffb9-4189-ae37-62b0961b373e"],
Cell[201768, 4000, 750, 19, 80, "Input",ExpressionUUID->"2f39dd8a-877f-4fd8-b498-99dcd78d6037"],
Cell[CellGroupData[{
Cell[202543, 4023, 601, 16, 80, "Input",ExpressionUUID->"30deb7bb-5bbf-430c-bd28-bb891ff26509"],
Cell[203147, 4041, 103549, 2047, 541, "Output",ExpressionUUID->"711a8840-5f15-4edc-ab8b-5931fbffae40"]
}, Open  ]],
Cell[306711, 6091, 3714, 103, 236, "Input",ExpressionUUID->"7d565826-7f76-41ed-9285-6e8766d7c391"],
Cell[CellGroupData[{
Cell[310450, 6198, 180, 3, 80, "Input",ExpressionUUID->"00815652-bf83-4001-8aa9-9b621f9df248"],
Cell[310633, 6203, 142113, 2860, 801, "Output",ExpressionUUID->"b55998e7-2a2d-4aee-bcd5-08b0faecf125"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452783, 9068, 353, 6, 80, "Input",ExpressionUUID->"5d3a39eb-b708-4c34-8109-8424b045371e"],
Cell[453139, 9076, 98448, 1932, 505, "Output",ExpressionUUID->"bdf8f2ae-5828-4c1c-98eb-45ef4a37a0ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551624, 11013, 1628, 35, 298, "Input",ExpressionUUID->"001ea2e4-62e4-4aaa-a1d4-e3ae4b2d1829"],
Cell[553255, 11050, 4329, 91, 590, "Output",ExpressionUUID->"dc12906a-7cce-40d3-8e31-2bb11dc0520b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557621, 11146, 1736, 41, 298, "Input",ExpressionUUID->"6b6352dd-6c70-409c-a7ed-a70f45f3cac9"],
Cell[559360, 11189, 3128, 67, 571, "Output",ExpressionUUID->"f5ecec8f-d9e5-4b3c-a940-0f29cb43efb4"]
}, Open  ]],
Cell[562503, 11259, 1810, 47, 298, "Input",ExpressionUUID->"9d5db487-4793-418a-8efe-0141e9d26873"],
Cell[CellGroupData[{
Cell[564338, 11310, 435, 10, 80, "Input",ExpressionUUID->"1d72ea0a-69ea-4791-b7da-8dd5468a20f4"],
Cell[564776, 11322, 126448, 2370, 851, "Output",ExpressionUUID->"f37413a8-864f-47f0-a8a1-2cfe1dd01d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[691261, 13697, 560, 14, 174, "Input",ExpressionUUID->"99731d28-9a44-468b-b117-9080e5dcafe9"],
Cell[691824, 13713, 2569, 59, 367, "Output",ExpressionUUID->"e40601a6-d3cd-4fab-8db2-3062a053899e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694442, 13778, 289, 4, 51, "Subsection",ExpressionUUID->"64966230-c00f-4c00-9795-bad0c7ee1069"],
Cell[694734, 13784, 475, 12, 80, "Input",ExpressionUUID->"3122e93f-25ab-4f21-9466-64b09e6a48d7"],
Cell[CellGroupData[{
Cell[695234, 13800, 811, 14, 80, "Input",ExpressionUUID->"63f23d75-17c3-47ed-b54c-8ecb3f7bb301"],
Cell[696048, 13816, 3943, 84, 380, "Output",ExpressionUUID->"76b8ffd9-7d57-4adf-a8f1-efde5a2a6759"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700028, 13905, 1048, 21, 174, "Input",ExpressionUUID->"9bb06c9a-b635-41de-88cc-73292431abac"],
Cell[701079, 13928, 3279, 74, 696, "Output",ExpressionUUID->"69682e3c-82ab-4b83-b961-20ccbb64686e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[704407, 14008, 339, 5, 51, "Subsection",ExpressionUUID->"461467d7-8212-49d3-916c-b6def20576c3"],
Cell[704749, 14015, 477, 12, 80, "Input",ExpressionUUID->"2fdc68bc-65d0-4d05-8ff6-4b471c186d72"],
Cell[CellGroupData[{
Cell[705251, 14031, 811, 14, 80, "Input",ExpressionUUID->"3e382268-e028-4f51-9054-3ad0d574cabf"],
Cell[706065, 14047, 3966, 81, 359, "Output",ExpressionUUID->"6aa5b6fb-88cc-4cec-bc96-455defcc4160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710068, 14133, 1101, 22, 174, "Input",ExpressionUUID->"23923018-d684-41d1-96fe-395a82c55278"],
Cell[711172, 14157, 3220, 71, 367, "Output",ExpressionUUID->"1cc5484a-b88a-4cdc-8ec5-9fec209b89b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[714441, 14234, 161, 3, 51, "Subsection",ExpressionUUID->"3fbacd10-c07b-41af-b25c-d9cba457eef9"],
Cell[CellGroupData[{
Cell[714627, 14241, 156, 3, 49, "Subsubsection",ExpressionUUID->"8adf1496-2492-4465-89e2-41ea67ee9cec"],
Cell[714786, 14246, 240, 5, 63, "Input",ExpressionUUID->"e18a4dbb-dc6f-4359-9593-5949a867db27"],
Cell[CellGroupData[{
Cell[715051, 14255, 554, 15, 63, "Input",ExpressionUUID->"9c64219a-d132-435c-9f99-c78840f78893"],
Cell[715608, 14272, 65100, 1227, 70, "Output",ExpressionUUID->"d9b1b0c0-5a55-4545-be55-5299ecec5ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780745, 15504, 2050, 47, 343, "Input",ExpressionUUID->"9d163b7f-4f28-4bd5-8413-3ddaa13eabdc"],
Cell[782798, 15553, 20228, 353, 70, "Output",ExpressionUUID->"5ddfeccf-6898-46a3-9804-4bc86d4f3bca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[803063, 15911, 2146, 49, 343, "Input",ExpressionUUID->"a2e28d99-75ee-4711-ba28-022aaadb6330"],
Cell[805212, 15962, 20061, 351, 70, "Output",ExpressionUUID->"e5f28d57-824c-439f-aa2b-b35083849842"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[825322, 16319, 156, 3, 47, "Subsubsection",ExpressionUUID->"1b28e14a-0ab9-443a-b381-2c7da4e680d8"],
Cell[CellGroupData[{
Cell[825503, 16326, 503, 14, 63, "Input",ExpressionUUID->"565733fc-b3a9-41ff-aaa1-97daad2d241a"],
Cell[826009, 16342, 59595, 1109, 70, "Output",ExpressionUUID->"c563c8f0-efba-4e86-9f44-e1b7fe5e8db6"]
}, Open  ]],
Cell[885619, 17454, 655, 15, 89, "Text",ExpressionUUID->"90abd3a3-2556-49ca-9f28-e159214f4f47"],
Cell[CellGroupData[{
Cell[886299, 17473, 1820, 44, 343, "Input",ExpressionUUID->"ed6f1265-02a3-4031-8256-9b6380b6220a"],
Cell[888122, 17519, 17352, 307, 70, "Output",ExpressionUUID->"3bdacf2e-61f3-471f-9f45-82cd0f80ed01"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[905523, 17832, 157, 3, 47, "Subsubsection",ExpressionUUID->"507022c4-24c1-4844-83a5-dcbf3a7836d1"],
Cell[CellGroupData[{
Cell[905705, 17839, 552, 15, 63, "Input",ExpressionUUID->"84ce365c-f28b-4758-aa56-27df99d4d922"],
Cell[906260, 17856, 59622, 1110, 70, "Output",ExpressionUUID->"93ef4edd-e5af-4c1b-a347-c4da3904246d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965919, 18971, 2114, 53, 374, "Input",ExpressionUUID->"42a5c055-f0c9-4623-89c4-7cfa56a30532"],
Cell[968036, 19026, 19919, 349, 70, "Output",ExpressionUUID->"5e66c298-148f-45e1-9b38-7e49408857b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987992, 19380, 314, 7, 63, "Input",ExpressionUUID->"949685b9-8161-4e1a-84b9-1f19282cc285"],
Cell[988309, 19389, 38513, 662, 70, "Output",ExpressionUUID->"1e461d18-5893-4d75-98a4-7d5171c16b0e"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1026883, 20058, 221, 4, 49, "Subsection",ExpressionUUID->"fa13ef44-6239-4d5f-a712-65f88cd56462"],
Cell[1027107, 20064, 3015, 72, 422, "Input",ExpressionUUID->"eb3e0a7f-70f5-4c96-b38f-8dbaff4603fb"],
Cell[CellGroupData[{
Cell[1030147, 20140, 323, 7, 80, "Input",ExpressionUUID->"355741b6-61ea-40ec-aba2-5fa6cb034e20"],
Cell[1030473, 20149, 2489, 68, 70, "Output",ExpressionUUID->"1d143508-c2c6-4f70-9db1-e6ce1047906e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032999, 20222, 594, 14, 205, "Input",ExpressionUUID->"1cfaf6c4-f4b4-4626-9252-561875a44a0a"],
Cell[1033596, 20238, 55933, 955, 70, "Output",ExpressionUUID->"b77fcb60-f2c6-44a8-9264-683873a49b4f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1089578, 21199, 173, 3, 49, "Subsection",ExpressionUUID->"7530264e-c265-4629-8d6b-082850e2e168"],
Cell[1089754, 21204, 3190, 75, 515, "Input",ExpressionUUID->"b3765f0e-452f-4f59-8b19-4d72aa3b2ca8"],
Cell[1092947, 21281, 545, 12, 80, "Input",ExpressionUUID->"1b0025ef-0b6c-4620-b41e-dedfa5e54765"],
Cell[CellGroupData[{
Cell[1093517, 21297, 697, 16, 205, "Input",ExpressionUUID->"6c26f93b-a35c-474d-ac78-ccf2e673d3f6"],
Cell[1094217, 21315, 302275, 5357, 592, "Output",ExpressionUUID->"da7cb8ee-8fef-4354-b023-57b7ab32a1e0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396541, 26678, 225, 4, 51, "Subsection",ExpressionUUID->"4dd19af3-465a-410d-9ea2-61faad231029"],
Cell[1396769, 26684, 3844, 89, 589, "Input",ExpressionUUID->"38395422-b3ea-4c19-b377-bc9972c313f5"],
Cell[CellGroupData[{
Cell[1400638, 26777, 590, 16, 80, "Input",ExpressionUUID->"31499883-a181-4119-b487-65659385c1eb"],
Cell[1401231, 26795, 92402, 1807, 467, "Output",ExpressionUUID->"8032051d-338c-4005-bdcf-99fae544e986"]
}, Open  ]],
Cell[1493648, 28605, 697, 14, 80, "Input",ExpressionUUID->"d6972569-e99b-49f8-a0d3-b064e4bb7e98"],
Cell[CellGroupData[{
Cell[1494370, 28623, 773, 17, 205, "Input",ExpressionUUID->"b1785ff8-2350-4f11-ac19-0dbd655c8b32"],
Cell[1495146, 28642, 112580, 2024, 592, "Output",ExpressionUUID->"e6d79722-24a5-4a10-a87e-ddce53f23b00"]
}, Open  ]]
}, Open  ]]
}
]
*)

