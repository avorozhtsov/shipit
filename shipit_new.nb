(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3218038,      62571]
NotebookOptionsPosition[   3190276,      62112]
NotebookOutlinePosition[   3190818,      62131]
CellTagsIndexPosition[   3190775,      62128]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["lib", "Subsection",
 CellChangeTimes->{{3.889030437783991*^9, 
  3.8890304409716578`*^9}},ExpressionUUID->"4f4cf1d8-f2d1-49b2-b312-\
b41c649c86d0"],

Cell["Specify path to project:", "Text",
 CellChangeTimes->{{3.892448976775639*^9, 
  3.8924489882671957`*^9}},ExpressionUUID->"c8efe1c7-01bc-49b3-b76c-\
cb7a0773460c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "ProjectPath", " ", "=", " ", "\"\</Users/sunfun/projects/shipit\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shipitCmd", " ", "=", " ", 
   RowBox[{"ProjectPath", " ", "<>", " ", "\"\</shipit\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.892275024036236*^9, 3.892275052415243*^9}, {
  3.892276435503221*^9, 3.892276441394689*^9}, {3.892276735883313*^9, 
  3.8922767573340387`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d8bf14b2-dc0a-40e1-a30b-8b7bcbcd44bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Plot", ",", " ", "ListPlot", ",", "RegionPlot"}], "}"}], ",", 
    RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.889030463701173*^9, 3.889030483982093*^9}, {
  3.889377944443901*^9, 3.8893779452403383`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1d132e17-1033-4b33-98bf-7e1016d58862"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ToV", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "//", "Normal"}], "//", "Values"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8894168845378304`*^9, 3.889416905516755*^9}, {
  3.889423432401697*^9, 3.8894234326684713`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"720a1e1f-02e0-4bab-8467-9b41316284d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GIndex", "[", 
    RowBox[{"mean_", ",", "\[Sigma]_", ",", "ksi_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["ksi", 
     SuperscriptBox["\[Sigma]", "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["mean", "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "\[Sigma]"}], 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "mean", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox["mean", 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MossIndex", "[", 
     RowBox[{
     "mean_", ",", "\[Sigma]_", ",", " ", "s_", ",", "l_", ",", "psi_"}], 
     "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"mean", "+", 
      RowBox[{"s", "*", "\[Sigma]", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Max", "[", 
         RowBox[{"psi", ",", 
          RowBox[{"l", "+", 
           RowBox[{"Log", "[", "\[Sigma]", "]"}]}]}], "]"}], "]"}]}]}], 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PIndex", "[", 
    RowBox[{"mean_", ",", "\[Sigma]_", ",", " ", "s_"}], "]"}], ":=", 
   RowBox[{"mean", " ", "+", " ", 
    RowBox[{"s", " ", "*", "\[Sigma]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889375290070734*^9, 3.889375632215225*^9}, {
  3.889375671393537*^9, 3.889375824951871*^9}, {3.889376331418127*^9, 
  3.889376334323812*^9}, {3.889378400001135*^9, 3.889378444469137*^9}, {
  3.889378851657432*^9, 3.889378854634918*^9}, {3.8893789332200327`*^9, 
  3.88937895825655*^9}, {3.889379189773321*^9, 3.889379199259532*^9}, {
  3.8924490729274187`*^9, 3.892449083480072*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7bfe74ec-87bd-462d-a1f5-1f06cf9bf641"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResultVsError", "[", 
   RowBox[{
   "data_", ",", " ", "mean_", ",", " ", "sigma_", ",", " ", "methods_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prefilteredData", ",", " ", "method"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prefilteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "sigma"}], 
           " ", "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", "mean"}]}], 
          "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"method", " ", "=", " ", "#"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prefilteredData", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "method"}], 
               ")"}], "&"}], " ", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
           "]"}], "//", "Sort"}]}], "\[IndentingNewLine]", ")"}], "&"}], "/@",
       "methods"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"e55862e9-f56c-4767-80fb-8021be861057"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AvgMeasurements", "[", "measurements_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "e", ",", " ", "sumvw", ",", " ", "sumw"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sumvw", ",", " ", "sumw"}], "}"}], "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"v", ",", "e"}], "}"}], " ", "=", " ", "#"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"v", "/", 
                SuperscriptBox["e", "2"]}], ",", " ", 
               RowBox[{"1", "/", 
                SuperscriptBox["e", "2"]}]}], "}"}]}], "\[IndentingNewLine]", 
            ")"}], "&"}], "/@", "measurements"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sumvw", "/", "sumw"}], ",", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", "sumw"}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"53cf14ed-f079-45a3-8773-42ec02455173"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NormalA", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"x", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a_", "\[PlusMinus]", "b_"}], ":>", " ", "a"}], "}"}]}], 
      "]"}], " ", "/;", 
     RowBox[{"!", " ", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{"a_", "\[PlusMinus]", "b_"}]}], "]"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"NormalA", ",", " ", 
    RowBox[{"{", "Listable", "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.892284606371303*^9, 3.892284659663056*^9}, {
   3.892284962849916*^9, 3.892285029076515*^9}, {3.892285081405795*^9, 
   3.892285086227106*^9}, 3.892286380798327*^9, {3.892404497023959*^9, 
   3.892404523023902*^9}, {3.892404650686117*^9, 3.8924047118090067`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"99d1b81c-810d-45d2-a29f-5a98cab26628"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Round6", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{"x", ",", 
     SuperscriptBox["10.0", 
      RowBox[{"-", "6"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Round6", ",", " ", 
    RowBox[{"{", "Listable", "}"}]}], "]"}], ";"}]}], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"71f1c380-61db-4fdd-a698-f40d657ddbd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "Shipit", "]"}], ";"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"565e36ec-b493-439c-9e9d-4434bd1e92d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetSharedFunction", "[", "ShipitM", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Shipit0", "[", "args__", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"input", ",", " ", "result", ",", " ", "paramsRound"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"input", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< \>\""}], ")"}],
             "&"}], "/@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "args", "}"}], "]"}]}], " ", ")"}], "//", " ", 
         "StringJoin"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"RunProcess", "[", 
         RowBox[{"shipitCmd", ",", " ", "All", ",", "  ", "input"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ImportString", "[", 
         RowBox[{
          RowBox[{"result", "[", "\"\<StandardOutput\>\"", "]"}], ",", 
          "\"\<CSV\>\""}], "]"}], "//", "Flatten"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"point__", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
     "m_", ",", "seed_", ",", " ", "weeks_", ",", "trials_", ",", "mean_", 
      ",", " ", "sigma_", ",", "error_"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Shipit", "[", 
   RowBox[{"point__", ",", " ", "params_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "input", ",", " ", "result", ",", " ", "paramsRound", ",", " ", 
      "memKey"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paramsRound", "=", 
      RowBox[{"Round6", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"memKey", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"{", 
        RowBox[{"point", ",", " ", "paramsRound"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"ShipitM", "[", "memKey", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"result", " ", "=!=", " ", "Null"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"Head", "[", "result", "]"}], "=!=", "ShipitM"}]}], " ", ",",
        " ", "\[IndentingNewLine]", "result", ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"Shipit0", "[", 
          RowBox[{"point", ",", " ", "paramsRound"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ShipitM", "[", "memKey", "]"}], "=", " ", "result"}], ";", 
        "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}]}],
    "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQLRCj0vT2/xvHC48+d4DoFb/WzAXRinvnLwLRbkf+
7wDRducL94No88T/h0H0vrv3ToLorTWHb4HolEmf74Dom/Y6b0C0jLLvOxB9
5eCqLyBaeE7FdxC9VMnguSDDW0dt1UsvQPS14pmvhIC02vZN70B0ZsM6CWEg
Hb1VSxZE+yrsUwXRaTFJBmA6YKk5iNZKXwemS3gmWIPoJccXOID5O9fdAtG/
ON0fg+i4kp0vQXRT8bH/IHod34pHYkBadO6HFyA60Of5L3kgnfJjGo8CkP70
VlYURO/67aQAonlW2aiC6GM+3zVBNJtIyHYNIJ1k578TRE/4ZXPCF0gveuN3
BkRXiDpeB9HLkk7eANEaT7/dAdFuj7TvgmgA6qu7LQ==
  "],
 CellLabel->"In[15]:=",ExpressionUUID->"a8be6fec-fd30-4251-94a9-df5ecb9bf47c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"palette1", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "#", "]"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0.1", ",", "1", ",", "0.2"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"palette2", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<GreenPinkTones\>\"", "]"}], "[", "#", 
     "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"0.1", ",", "1", ",", "0.11"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.892444806783107*^9, 3.89244481773134*^9}, {
  3.892444879963766*^9, 3.892444881017469*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a8c6977b-ebc7-49f7-ab1a-f348e278e430"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|
    "color" -> RGBColor[0.2748608, 0.18226360000000003`, 0.7272788]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.29795960000000005`, 0.5657928, 0.7522386]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.513417, 0.72992, 0.440682]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.8083416, 0.7110806, 0.255976]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.8929546, 0.38966159999999994`, 0.1794008]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8924631211998253`*^9, 3.892475086382999*^9, 
  3.892475410827136*^9, 3.892475954489174*^9, 3.8925307327356663`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d9838aa7-a842-44a0-8e66-682f36ca4e7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[0.0040354945, 0.568068, 0.0569705]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.09983128500000002, 0.87799845, 0.15298735000000002`]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.4229240000000001, 0.967009, 0.4300436000000001]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.7761015000000001, 0.96462, 0.7750478000000001]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.9733956, 0.8343598999999999, 0.9720344000000001]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.9947572499999999, 0.5233977499999999, 0.99041525]|>,
    
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.9295473999999999, 0.26290779999999997`, 0.926568]|>,
    
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.6712855500000001, 0.14407742000000004`, 0.6713075500000002]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.3077854000000001, 0.06492684000000001, 0.30532590000000004`]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.8924631211998253`*^9, 3.892475086382999*^9, 
  3.892475410827136*^9, 3.892475954489174*^9, 3.8925307327369328`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"83124ace-d6c9-407e-9183-3e853a7fe69c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save and load ShipitM", "Subsection",
 CellChangeTimes->{{3.892475452037092*^9, 
  3.892475467836718*^9}},ExpressionUUID->"08679477-d019-4a1e-9406-\
dedb27a8c78c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"<<", " ", 
    RowBox[{"(", 
     RowBox[{"ProjectPath", " ", "<>", " ", "\"\</mem_shipit.nb\>\""}], 
     ")"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.892355270744549*^9, 3.892355333598682*^9}, {
  3.892397400476807*^9, 3.892397405483794*^9}, {3.892405399502255*^9, 
  3.89240540175354*^9}, {3.892434896999758*^9, 3.892434900185154*^9}, {
  3.892463101014223*^9, 3.892463103064296*^9}, {3.892471821692342*^9, 
  3.892471824963708*^9}, {3.892475179098378*^9, 3.8924751898595133`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"38f9af7f-8d26-49f5-af85-be85fc6b7403"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Save", "[", 
    RowBox[{
     RowBox[{"ProjectPath", "<>", "\"\</mem_shipit_new.nb\>\""}], ",", " ", 
     "ShipitM"}], "]"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.892361115293391*^9, 3.89236116158144*^9}, {
  3.892406946273904*^9, 3.892406949928833*^9}, {3.892463096255427*^9, 
  3.8924630987494373`*^9}, {3.892471828381034*^9, 3.8924718387775393`*^9}, {
  3.8924729848850927`*^9, 3.892472986844046*^9}, {3.892475159467599*^9, 
  3.892475212445229*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"02920c6b-51f4-4bd8-a999-52cd7bf860a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test \[OpenCurlyDoubleQuote]shipit\[CloseCurlyDoubleQuote] binary", \
"Subsection",
 CellChangeTimes->{{3.8923973388890553`*^9, 3.892397343405209*^9}, {
   3.892397474790414*^9, 3.892397478560897*^9}, 3.8924556808990107`*^9, {
   3.8924753874249687`*^9, 3.8924753990742292`*^9}, {3.89247562202645*^9, 
   3.89247562252346*^9}},ExpressionUUID->"5e7f1786-fb15-4f3b-ac11-\
3bd05c954d39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"11", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", 
    RowBox[{"0.42", ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.892475611841715*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"7694ba3d-a90a-49ac-9779-02768894680b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.084610894`", ",", "0.002202908`"}], "}"}]], "Output",
 CellChangeTimes->{3.892475954789699*^9, 3.892530733950306*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"abb2b0a5-62ce-42e4-8bd0-9140b1ded2f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"30", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", " ", 
    RowBox[{
    "1.9738814126886406", ",", " ", "0.5347630010785354", ",", " ", 
     "0.01108"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.892276832736293*^9, 3.892276850508582*^9}, {
   3.892277131106421*^9, 3.892277148165187*^9}, {3.892375130127079*^9, 
   3.8923751402198153`*^9}, {3.892380867294653*^9, 3.892380872753808*^9}, 
   3.8923853584338617`*^9, 3.892391208972621*^9, 3.8923973202859163`*^9, 
   3.8924755593169603`*^9, 3.8924755975594673`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"f95f5866-6295-41c9-b953-51a67ec23e2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10781865`", ",", "0.0024796487`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463122574087*^9, 3.892475086829628*^9, 
  3.8924754264594088`*^9, 3.892475955163641*^9, 3.892530734323245*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"9f1e81d1-08ee-4674-9768-154f26ca5be2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"32", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "0.1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", 
    RowBox[{"0.4316821622352789", ",", " ", "1.0119072802518363"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.892379120474126*^9, 3.892379156598653*^9}, 
   3.89238000938628*^9, {3.892380094186372*^9, 3.892380097254405*^9}, 
   3.892380257749885*^9, {3.8923811996144648`*^9, 3.8923812038980703`*^9}, 
   3.892385354878006*^9, 3.892475561571589*^9, 3.892475598880169*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"c31bcb45-5180-408c-8ce9-0f6a1f07f214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7764809`", ",", "0.025644261`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463123158152*^9, 3.8924750873644943`*^9, 
  3.892475427063661*^9, 3.892475955710134*^9, 3.892530734905463*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"ee904451-c07a-44ae-8805-d15db37b0d85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"14", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "0.1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", 
    RowBox[{"1.6171875000000004", ",", " ", "0.0"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.892383469714966*^9, 3.892383470853753*^9}, {
   3.892385338732745*^9, 3.8923853479753447`*^9}, 3.892475564061163*^9, 
   3.892475599849394*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"06723046-0a50-4dcc-8018-b80f264bb2a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7560943`", ",", "0.021130502`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463124111546*^9, 3.892475088149226*^9, 
  3.8924754278405323`*^9, 3.892475956111123*^9, 3.892530735285692*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"5109a932-2c04-4025-bd56-107704ca2d89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"15", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "0.1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", "1.6171875000000004", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8923834812634172`*^9, 3.892383484174493*^9}, 
   3.8923853356369877`*^9, 3.892475565668893*^9, 3.892475600960843*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"d3cddb5c-2500-4b78-89b1-db1e8c1d0d96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7560943`", ",", "0.021130502`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463124504479*^9, 3.892475088524984*^9, 
  3.89247542823687*^9, 3.892475956531663*^9, 3.8925307356675797`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"5aadf246-54e9-4a08-b4d2-3125ca7cda87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"20", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", 
    RowBox[{"0.5929603648059317", ",", 
     RowBox[{
      RowBox[{"Log", "[", "0.5929603648059317", "]"}], " ", "+", " ", 
      "11.85168706794350"}], ",", " ", "2", ",", " ", "1.82082485716244320"}],
     "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8923839764152927`*^9, 3.892383987770603*^9}, 
   3.892385363019504*^9, {3.892385526860365*^9, 3.892385534489296*^9}, {
   3.892385704820183*^9, 3.8923857110987883`*^9}, {3.892386300055415*^9, 
   3.8923863577034607`*^9}, {3.892386663308116*^9, 3.892386667658018*^9}, {
   3.8923872971977386`*^9, 3.892387322559412*^9}, {3.892391146027176*^9, 
   3.892391196474091*^9}, {3.892391905828752*^9, 3.89239191105765*^9}, {
   3.892391958149189*^9, 3.892391966628766*^9}, {3.8923973113271112`*^9, 
   3.892397316180956*^9}, 3.892475567165532*^9, 3.8924756038070393`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"3ad4cc1d-0033-437f-bc89-90b81446785b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10974446`", ",", "0.0027322675`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463124786265*^9, 3.892475088820561*^9, 
  3.892475428508254*^9, 3.892475956806591*^9, 3.8925307359498987`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"f33b57f0-0824-4d82-9410-dcdbb36634da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit0", "[", 
  RowBox[{"21", ",", " ", "1", ",", " ", "300000", ",", " ", "25", ",", " ", 
   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "16", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5929603648059317", ",", "11", ",", " ", "1.82082485716244320"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.892387948176981*^9, 3.89238794871301*^9}, {
   3.892388033701111*^9, 3.8923880338211737`*^9}, {3.892388857737132*^9, 
   3.892388858068363*^9}, {3.8923889518739967`*^9, 3.892388952010058*^9}, 
   3.892391926903627*^9, 3.892397307070354*^9, 3.89247556900526*^9, 
   3.892475605383299*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"8afb6bc9-e44c-432c-be57-ac25cf66fd0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10975716`", ",", "0.0026047737`"}], "}"}]], "Output",
 CellChangeTimes->{3.8924631250812693`*^9, 3.8924750890957737`*^9, 
  3.8924754287827187`*^9, 3.892475957101138*^9, 3.892530736223135*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a10f49a7-3ec4-495b-b8d2-5b479d6a7804"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compare m=14 vs m = 30 for mean=-0.5;  sigma=1.0; ", "Subsection",
 CellChangeTimes->{{3.892277249107211*^9, 3.892277265873797*^9}, 
   3.8923974694882307`*^9, {3.892475688513126*^9, 3.892475702161422*^9}, {
   3.892475744251495*^9, 
   3.892475750218977*^9}},ExpressionUUID->"d5626012-6c5d-495a-b7c9-\
e10ed4edbb8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanB0", "=", 
   RowBox[{"-", "0.5"}]}], ";", 
  RowBox[{"sigmaB0", "=", "1.0"}], ";"}]], "Input",
 CellChangeTimes->{{3.889413201018927*^9, 3.889413206451325*^9}, {
   3.889413384059664*^9, 3.889413390343498*^9}, {3.889413698315248*^9, 
   3.889413701700427*^9}, {3.8894140710478983`*^9, 3.889414129436462*^9}, 
   3.892449262076622*^9, {3.892449522519371*^9, 3.892449527520865*^9}, {
   3.8924499061242*^9, 3.892449913558715*^9}, {3.8924502226473846`*^9, 
   3.892450236394405*^9}, 3.892450453180216*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"47669576-38a6-48d9-bd34-043292119571"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "300000"}], ";"}]], "Input",
 CellChangeTimes->{{3.892475283794456*^9, 3.892475289819243*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2e8ad3ab-2334-4d76-8160-51e9e60b99d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit", "[", 
  RowBox[{
  "30", ",", " ", "1", ",", " ", "n", ",", " ", "25", ",", " ", "meanB0", ",",
    " ", "sigmaB0", ",", " ", "32", ",", 
   RowBox[{"{", 
    RowBox[{"0.96849", ",", " ", "0.64", ",", " ", 
     RowBox[{"-", "0.023"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.892452865583119*^9, 3.8924528803257437`*^9}, {
   3.8924529153139544`*^9, 3.8924529788257837`*^9}, {3.892453571373822*^9, 
   3.89245357856308*^9}, 3.8924752925211697`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"87494a31-f1d6-4bd1-8995-0d7eb1065a57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.36152342`", ",", "0.010334707`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463136965905*^9, 3.892475100337782*^9, 
  3.892475429356759*^9, 3.892475957124447*^9, 3.892530736248682*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8d2e4cd1-712a-436e-a722-308d1eed5c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit", "[", 
  RowBox[{
  "30", ",", " ", "1", ",", " ", "n", ",", " ", "25", ",", " ", "meanB0", ",",
    " ", "sigmaB0", ",", " ", "32", ",", 
   RowBox[{"{", 
    RowBox[{"0.96849", ",", " ", "0.64", ",", " ", "0"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.89245319893503*^9, {3.892453566826475*^9, 3.892453580368898*^9}, 
   3.89247529473374*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"917952fb-a8e7-4c88-ba0c-3d16c668fd32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.36149`", ",", "0.011385822`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463148473659*^9, 3.892475111338008*^9, 
  3.89247542970557*^9, 3.892475957141686*^9, 3.892530736261662*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"a2fae6ec-743c-48b9-86db-68964e724ac4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit", "[", 
  RowBox[{
  "30", ",", " ", "1", ",", "n", ",", " ", "25", ",", " ", "meanB0", ",", " ",
    "sigmaB0", ",", " ", "32", ",", 
   RowBox[{"{", 
    RowBox[{"1.28", ",", " ", "0.5", ",", " ", 
     RowBox[{"-", "0.023"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8924532268961277`*^9, 3.892453232786379*^9}, {
   3.892453277997534*^9, 3.8924534345152617`*^9}, {3.892453539899613*^9, 
   3.892453582149084*^9}, 3.892475296870105*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"a064c1d5-9dd8-476f-b8ff-dbc03374dcd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.36410774`", ",", "0.01154618`"}], "}"}]], "Output",
 CellChangeTimes->{3.8924631601926107`*^9, 3.892475127599999*^9, 
  3.892475430059926*^9, 3.892475957147647*^9, 3.892530736265306*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"b87c5003-a87e-4ec3-a913-ff7e978bd750"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit", "[", 
  RowBox[{
  "30", ",", " ", "1", ",", " ", "n", ",", " ", "25", ",", " ", "meanB0", ",",
    " ", "sigmaB0", ",", " ", "32", ",", 
   RowBox[{"{", 
    RowBox[{"1.352", ",", " ", "0.5", ",", " ", 
     RowBox[{"-", "0.013"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8924551934072733`*^9, 3.8924552996989393`*^9}, 
   3.892475300702551*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"80eb4451-d2de-45da-89af-f23146f1d8d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.36043627`", ",", "0.010367346`"}], "}"}]], "Output",
 CellChangeTimes->{3.8924632766559267`*^9, 3.8924754309888897`*^9, 
  3.892475957164627*^9, 3.892530736280651*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4993919f-8062-43c1-8443-22a4fa4f9621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shipit", "[", 
  RowBox[{
  "14", ",", " ", "1", ",", " ", "n", ",", " ", "25", ",", " ", "meanB0", ",",
    " ", "sigmaB0", ",", " ", "32", ",", 
   RowBox[{"{", 
    RowBox[{"1.43", ",", " ", "0.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.892455536344654*^9, 3.89245553646206*^9}, 
   3.892475313341176*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"19cd263b-7300-4475-be1e-f3a1bbf2c867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.35793417`", ",", "0.0099414014`"}], "}"}]], "Output",
 CellChangeTimes->{3.892463373697274*^9, 3.892475431612832*^9, 
  3.892475957169815*^9, 3.892530736286016*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e0ee02ae-b9f1-4ffc-b333-428d0161c76c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sp0", "=", "1.419913"}], ";"}]], "Input",
 CellChangeTimes->{{3.892450484796867*^9, 3.892450485168161*^9}, {
   3.892450538311288*^9, 3.892450569737352*^9}, {3.8924505997453337`*^9, 
   3.892450624625731*^9}, {3.8924506913547993`*^9, 3.8924506921746683`*^9}, {
   3.892452478224289*^9, 3.892452485658011*^9}, {3.8924526015671597`*^9, 
   3.8924526043380537`*^9}, {3.892452637272914*^9, 3.89245264469388*^9}, {
   3.892452713914874*^9, 3.892452717603479*^9}, {3.892452838316634*^9, 
   3.892452838519843*^9}, 3.892453033833407*^9, {3.8924550805317802`*^9, 
   3.892455106016561*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e506393a-4548-4a53-87c9-ffdf6005ea0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sg0", "=", "1.352"}], ";", 
  RowBox[{"ksig0", "=", "0.0"}], ";"}]], "Input",
 CellChangeTimes->{{3.892453114120717*^9, 3.8924531177811604`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"d8a496cd-a986-4f3f-8754-be3e0fa78fdd"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sm0", "=", "0.64"}], ";", 
   RowBox[{"l0", "=", "20.0"}], ";", " ", 
   RowBox[{"ksim0", "=", "2.27"}], ";"}], " ", "*)"}]], "Input",
 CellChangeTimes->{
  3.8924524871219397`*^9, {3.892452701566733*^9, 3.892452701787339*^9}, {
   3.892453128947308*^9, 3.892453145613441*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"812eae1f-8bff-4f15-b828-5b26f9642d58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sm0", "=", "0.646"}], ";", 
  RowBox[{"l0", "=", "3.82"}], ";", " ", 
  RowBox[{"ksim0", "=", "3.62"}], ";"}]], "Input",
 CellChangeTimes->{{3.892452501295944*^9, 3.892452526351824*^9}, {
   3.892452750360126*^9, 3.8924527529337807`*^9}, 3.8924531271045713`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"2b029c60-2673-4760-b3fe-49f7a731e427"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"PIndex", "[", 
         RowBox[{"mean", ",", "sigma", ",", "sp"}], "]"}], "<", " ", 
        RowBox[{"PIndex", "[", 
         RowBox[{"meanB", ",", "sigmaB", ",", "sp"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"sg", "*", "sigma"}], ",", "ksig"}], "]"}], "<", " ", 
        RowBox[{"GIndex", "[", 
         RowBox[{"meanB", ",", 
          RowBox[{"sg", "*", "sigmaB"}], ",", "ksig"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MossIndex", "[", 
         RowBox[{"mean", ",", " ", "sigma", ",", "sm", ",", "l", ",", "ksi"}],
          "]"}], "<", " ", 
        RowBox[{"MossIndex", "[", 
         RowBox[{"meanB", ",", "sigmaB", ",", "sm", ",", "l", ",", "ksi"}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"mean", ",", " ", 
       RowBox[{"-", "0.6"}], ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"sigma", ",", " ", "0.4", ",", "1.2"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"meanB", ",", " ", "meanB0"}], "}"}], ",", " ", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaB", ",", " ", "sigmaB0"}], "}"}], ",", " ", "0.1", ",", 
     "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sg", ",", " ", "sg0"}], "}"}], ",", " ", "0.2", ",", "2.2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ksig", ",", " ", "ksig0"}], "}"}], ",", " ", 
     RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sp", ",", " ", "sp0"}], "}"}], ",", " ", "0.2", ",", "2.2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sm", ",", " ", "sm0"}], "}"}], ",", " ", "0.2", ",", "2.2"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "l0"}], "}"}], ",", " ", "0.1", ",", "24"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ksim", ",", " ", "ksim0"}], "}"}], ",", " ", 
     RowBox[{"-", "0.5"}], ",", "15.0"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7bfrp175rzeOpWnS+iBaq3OSKYieYjezA0Tby6yb
BqJD7+QsBdGm9/+tBdF9ikIbQfQFV6adIPpIntN+EF2WKXsKRC+ceO8CiL54
xuYjiG7QPfQZbO4awx8gWsqg/x+Yf+bPD0eGt45z1N3/gWgW8wlKTkD6l1G5
Foj+XnbKFEQf02+2ANEGrPc8QfSJM5+CQTR30PIIEF0nZREJopeuv14IovPX
tBaD6AW8LnUgOuBgKpje8cl3EYhWmx4Epqvtu1aA6Gf9C1aD6KZuvS5nIP1K
zhZMWwYt3waiZaa47gDRn59Z3QLRvd0ST0E0AKs/ny0=
  "],
 CellLabel->"In[40]:=",ExpressionUUID->"5df03ea6-3bcf-4d5d-9c6a-4b7cc388400f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ksig$$ = 0., $CellContext`ksim$$ = 
    3.62, $CellContext`l$$ = 
    3.82, $CellContext`meanB$$ = -0.5, $CellContext`sg$$ = 
    1.352, $CellContext`sigmaB$$ = 1., $CellContext`sm$$ = 
    0.646, $CellContext`sp$$ = 1.419913, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`meanB$$], -0.5}, -2, 0}, {{
       Hold[$CellContext`sigmaB$$], 1.}, 0.1, 2}, {{
       Hold[$CellContext`sg$$], 1.352}, 0.2, 2.2}, {{
       Hold[$CellContext`ksig$$], 0.}, -0.1, 0.1}, {{
       Hold[$CellContext`sp$$], 1.419913}, 0.2, 2.2}, {{
       Hold[$CellContext`sm$$], 0.646}, 0.2, 2.2}, {{
       Hold[$CellContext`l$$], 3.82}, 0.1, 24}, {{
       Hold[$CellContext`ksim$$], 3.62}, -0.5, 15.}}, Typeset`size$$ = {
    450., {221., 227.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ksig$$ = 0., $CellContext`ksim$$ = 
        3.62, $CellContext`l$$ = 
        3.82, $CellContext`meanB$$ = -0.5, $CellContext`sg$$ = 
        1.352, $CellContext`sigmaB$$ = 1., $CellContext`sm$$ = 
        0.646, $CellContext`sp$$ = 1.419913}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      RegionPlot[{$CellContext`PIndex[$CellContext`mean, $CellContext`sigma, \
$CellContext`sp$$] < $CellContext`PIndex[$CellContext`meanB$$, \
$CellContext`sigmaB$$, $CellContext`sp$$], \
$CellContext`GIndex[$CellContext`mean, $CellContext`sg$$ $CellContext`sigma, \
$CellContext`ksig$$] < $CellContext`GIndex[$CellContext`meanB$$, \
$CellContext`sg$$ $CellContext`sigmaB$$, $CellContext`ksig$$], \
$CellContext`MossIndex[$CellContext`mean, $CellContext`sigma, \
$CellContext`sm$$, $CellContext`l$$, $CellContext`ksi] < \
$CellContext`MossIndex[$CellContext`meanB$$, $CellContext`sigmaB$$, \
$CellContext`sm$$, $CellContext`l$$, $CellContext`ksi]}, {$CellContext`mean, \
-0.6, 0.1}, {$CellContext`sigma, 0.4, 1.2}], 
      "Specifications" :> {{{$CellContext`meanB$$, -0.5}, -2, 
         0}, {{$CellContext`sigmaB$$, 1.}, 0.1, 
         2}, {{$CellContext`sg$$, 1.352}, 0.2, 
         2.2}, {{$CellContext`ksig$$, 0.}, -0.1, 
         0.1}, {{$CellContext`sp$$, 1.419913}, 0.2, 
         2.2}, {{$CellContext`sm$$, 0.646}, 0.2, 
         2.2}, {{$CellContext`l$$, 3.82}, 0.1, 
         24}, {{$CellContext`ksim$$, 3.62}, -0.5, 15.}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{818., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.892463374095929*^9, 3.892475431642756*^9, 
  3.892475957200858*^9, 3.892530736371274*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a8c6f566-dc48-43f3-b6b9-3ba5e2596251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigma0", " ", "=", " ", 
  RowBox[{
   RowBox[{"PIndex", "[", 
    RowBox[{"meanB0", ",", " ", "sigmaB0", ",", " ", "sp0"}], "]"}], "/", 
   "sp0"}]}]], "Input",
 CellChangeTimes->{{3.892451157450653*^9, 3.892451229554016*^9}, {
  3.892451374386137*^9, 3.892451375346672*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"75e87854-97bd-4825-a8c6-802c29142dcb"],

Cell[BoxData["0.6478657495212735`"], "Output",
 CellChangeTimes->{3.892463375254293*^9, 3.892475431794963*^9, 
  3.892475957309708*^9, 3.892530736375145*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"97ee6801-9548-4a72-bbba-d8f7af15d92a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksi", " ", "=", " ", 
  RowBox[{"3.82", " ", "+", " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sigmaB0", "+", "sigma0"}], ")"}], "/", "2"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8924510051309423`*^9, 3.892451018230938*^9}, {
  3.89245109719059*^9, 3.892451102770268*^9}, {3.892451382369507*^9, 
  3.892451414183464*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e470f69f-8b93-4c20-9a35-d3934d88258f"],

Cell[BoxData["3.626333784939941`"], "Output",
 CellChangeTimes->{3.89246337528301*^9, 3.8924754318078613`*^9, 
  3.892475957334462*^9, 3.892530736387698*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"89713842-4f14-4cc8-8480-bb102a4ea352"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"meanCnd", "[", "mean_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "==", "mean"}], "&"}], ")"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.892273131418695*^9, 3.892273166888391*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"3855a7a2-a15f-4806-8508-f3570d3d968c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.892274653063751*^9, 3.892274671906608*^9}, {
  3.892274725570512*^9, 3.892274728124301*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"04843c40-d761-4bd5-a724-5b51188ce08c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.892463375408985*^9, 3.8924754318266706`*^9, 
  3.8924759573508787`*^9, 3.892530736394153*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"05645dec-63e4-4d49-a91a-52a69c9d8521"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Element", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x_", " ", "\[Element]", " ", "s_List"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{"s", ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Element", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8922747304255943`*^9, 3.8922747424864798`*^9}, {
  3.892274781685626*^9, 3.892274842451187*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"870dbba3-148c-40f0-b3b2-3a7b51335c47"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import shipit_results.txt", "Subsection",
 CellChangeTimes->{{3.8890304500635023`*^9, 3.889030457368888*^9}, 
   3.889375494772086*^9, {3.892475755109655*^9, 
   3.892475760952907*^9}},ExpressionUUID->"bd8d119b-d1e7-44a4-a52e-\
87cfc5a6832b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"file", "=", "\"\<~/projects/shipit/shipit_results.txt\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.88902724259061*^9, 3.889027296158798*^9}, {
  3.892272423054549*^9, 3.892272423752557*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"60cee4bc-e606-4eb5-8a39-dba4a2812d39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fields", "=", 
   RowBox[{"StringSplit", "[", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<result\\tresult_sigma\\tm\\tseed\\tweeks\\ttrials\\tmean\\tsigma\\\
terror\\tp1\\tp2\\tp3\\tp4\\tp5\>\"", ",", "\"\<\\t\>\""}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intFields", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<m\>\"", ",", " ", "\"\<seed\>\"", ",", " ", "\"\<weeks\>\"", ",", 
     " ", "\"\<trials\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"types", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[Rule]", "\"\<Number\>\""}], ")"}], "&"}], "/@", 
     "fields"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"types", "[", "#", "]"}], "=", "\"\<Integer\>\""}], ";"}], 
     ")"}], "&"}], "/@", "intFields"}], 
  ";"}], "\[IndentingNewLine]", "types"}], "Input",
 CellChangeTimes->{{3.88903168770947*^9, 3.889031873100232*^9}, {
  3.889416338731955*^9, 3.8894163423330317`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"3c244c23-0c4d-4a38-85ea-633840ecce39"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"result\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"result_sigma\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"seed\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"weeks\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"trials\"\>", "\[Rule]", "\<\"Integer\"\>"}], ",", 
   RowBox[{"\<\"mean\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"sigma\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"error\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p1\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p2\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p3\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p4\"\>", "\[Rule]", "\<\"Number\"\>"}], ",", 
   RowBox[{"\<\"p5\"\>", "\[Rule]", "\<\"Number\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.892463375549458*^9, 3.892471855315467*^9, 
  3.892475957372579*^9, 3.892530736411584*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"d81e6d58-fc5f-4421-8c1f-325f91a043af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data0", "=", 
  RowBox[{"SemanticImport", "[", 
   RowBox[{"file", ",", " ", "types"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8890297680831747`*^9, 3.889029780917309*^9}, {
   3.889029821524221*^9, 3.889029822970726*^9}, {3.8890298571496067`*^9, 
   3.889029887481098*^9}, {3.889029919809422*^9, 3.889029921044608*^9}, 
   3.889031414618245*^9, {3.889031602410425*^9, 3.889031680406893*^9}, {
   3.88903188022434*^9, 3.889031881342936*^9}, {3.892403472468143*^9, 
   3.8924034951100397`*^9}, 3.892403662164506*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"4e325b7e-ef20-4324-92e3-924a577ad2ef"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7389755417545766047116961391263457488333759584721426950152], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
            1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
            1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
            1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
            1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "result" -> TypeSystem`PackageScope`AtomShape[60], 
                "result_sigma" -> TypeSystem`PackageScope`AtomShape[60], "m" -> 
                TypeSystem`PackageScope`AtomShape[34], "seed" -> 
                TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
                TypeSystem`PackageScope`AtomShape[34], "trials" -> 
                TypeSystem`PackageScope`AtomShape[34], "mean" -> 
                TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
                TypeSystem`PackageScope`AtomShape[60], "error" -> 
                TypeSystem`PackageScope`AtomShape[60], "p1" -> 
                TypeSystem`PackageScope`AtomShape[60], "p2" -> 
                TypeSystem`PackageScope`AtomShape[60], "p3" -> 
                TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
             "sigma", "error", "p1", "p2", "p3", "p4"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`UnknownType, 
             TypeSystem`UnknownType}], 1295], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
            1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
            1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
            1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
            1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "result" -> TypeSystem`PackageScope`AtomShape[60], 
                "result_sigma" -> TypeSystem`PackageScope`AtomShape[60], "m" -> 
                TypeSystem`PackageScope`AtomShape[34], "seed" -> 
                TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
                TypeSystem`PackageScope`AtomShape[34], "trials" -> 
                TypeSystem`PackageScope`AtomShape[34], "mean" -> 
                TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
                TypeSystem`PackageScope`AtomShape[60], "error" -> 
                TypeSystem`PackageScope`AtomShape[60], "p1" -> 
                TypeSystem`PackageScope`AtomShape[60], "p2" -> 
                TypeSystem`PackageScope`AtomShape[60], "p3" -> 
                TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
             "sigma", "error", "p1", "p2", "p3", "p4"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`UnknownType, 
             TypeSystem`UnknownType}], 1295], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
         "DataRowCount" -> 1295, "DataColumnCount" -> 13, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "result"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["result_sigma", 
                    Style[
                    "result_sigma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result_sigma"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["m", 
                    Style[
                    "m", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "m"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "m"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["seed", 
                    Style[
                    "seed", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "seed"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "seed"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["weeks", 
                    Style[
                    "weeks", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "weeks"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "weeks"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["trials", 
                    Style[
                    "trials", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "trials"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "trials"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["mean", 
                    Style[
                    "mean", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "mean"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "mean"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["sigma", 
                    Style[
                    "sigma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "sigma"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "sigma"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "error"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["p1", 
                    Style[
                    "p1", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "p1"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "p1"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0004164"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00000424489"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000501819"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00000492746"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000570618"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00000818972"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000759321"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000167583"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000870294"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000199125"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000911648"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000233636"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000989549"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000285861"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00104554"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000284425"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["35"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00163488"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000118914"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0024557"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000217436"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00297852"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000240508"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0033312"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000339591"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00341289"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000216188"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.792"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00368287"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000388207"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00456494"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000655178"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00481603"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000233566"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.792"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00496505"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000842048"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00518809"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000860674"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00567791"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0000438537"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.792"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.00607456"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["result"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000134067"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["result_sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["m"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["seed"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20000000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["weeks"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["trials"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["mean"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["sigma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["error"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.88"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["p1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1295, 1], {1, 1295 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1295, 1], {1, 1295 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1295, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1295, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1295, 1], {1, 1295 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1295, 1], {1, 1295 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {744., {394.91754150390625`, 402.08245849609375`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {744., {394.91754150390625`, 402.08245849609375`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7389755417545766047116961391263457488333759584721426950152,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.89246338295091*^9, 3.892471856330122*^9, 
  3.892475961284943*^9, 3.892530740483829*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"536c0853-5f81-41c8-ad70-b5457bfb7bea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"data0", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<m\>\"", "]"}], "!=", "11"}], "&"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8924038867927227`*^9, 3.8924038881277637`*^9}, {
  3.8924039340024443`*^9, 3.892403992613393*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"176b11b4-56c5-4e39-b54e-9d6be2de5a02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KeyFn", "[", "r_", "]"}], ":=", 
   RowBox[{"HK", "[", 
    RowBox[{
     RowBox[{"r", "[", "\"\<m\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<sigma\>\"", "]"}], ",", 
     RowBox[{"r", "[", "\"\<error\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataHash", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
       RowBox[{"k", "=", 
        RowBox[{"KeyFn", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"dataHash", ",", " ", "k", ",", "Null"}], "]"}], "==", 
           "Null"}], " ", "||", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dataHash", "[", "k", "]"}], "[", "\"\<weeks\>\"", "]"}], 
           "<", 
           RowBox[{"r", "[", "\"\<result\>\"", "]"}]}], "||", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dataHash", "[", "k", "]"}], "[", "\"\<result\>\"", "]"}],
            "<", 
           RowBox[{"r", "[", "\"\<result\>\"", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dataHash", "[", "k", "]"}], "=", "r"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ")"}], 
     "&"}], "/@", 
    RowBox[{"data1", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<weeks\>\"", "]"}], "\[GreaterEqual]", 
        "1000000"}], "&"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"Values", "[", "dataHash", "]"}], "]"}], "//", "Sort"}], " ", 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889030798386899*^9, 3.889030801181291*^9}, {
   3.8890308335623703`*^9, 3.889031146093865*^9}, 3.88903117947878*^9, {
   3.889031285916507*^9, 3.889031294939742*^9}, {3.889031350276247*^9, 
   3.889031380241672*^9}, {3.889031423685122*^9, 3.889031493606927*^9}, {
   3.889031898304885*^9, 3.8890319196363983`*^9}, {3.8890324024790497`*^9, 
   3.8890324191273746`*^9}, {3.8924020960619287`*^9, 3.892402103721466*^9}, {
   3.892404138076066*^9, 3.8924041382286863`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"cf960611-826b-45e3-bc8e-8532f989fa4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "data0", "]"}], ",", 
   RowBox[{"Length", "[", "dataHash", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.889031318696292*^9, 3.889031329624084*^9}, {
  3.88903138665021*^9, 3.889031408215726*^9}, {3.8890319301362047`*^9, 
  3.889031934959474*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"332717e4-74bd-4692-ae49-6a666b76c651"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1295", ",", "1142"}], "}"}]], "Output",
 CellChangeTimes->{3.892463384665736*^9, 3.892471856364954*^9, 
  3.89247596138058*^9, 3.892530740583728*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"706da550-f1f6-41d6-925b-cfcfaeb760d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"prefilteredData", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"Select", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "\[Equal]", "1"}], " ", "&&",
         " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
         RowBox[{"-", "1"}]}]}], "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.889030767684058*^9, 3.88903078596043*^9}, {
  3.8890320456500893`*^9, 3.889032046260572*^9}, {3.889032222416234*^9, 
  3.8890322969357767`*^9}, {3.889422327978612*^9, 3.8894223284087763`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"2f39dd8a-877f-4fd8-b498-99dcd78d6037"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"prefilteredData", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "35"}], ")"}], 
     " ", "&"}], " ", "]"}], "]"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.889380575860787*^9, 3.889380587559224*^9}, {
  3.889422441601982*^9, 3.889422442254023*^9}, {3.892405094867064*^9, 
  3.8924050952923594`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"30deb7bb-5bbf-430c-bd28-bb891ff26509"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.11034874, "result_sigma" -> 0.00068635246, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035533, "result_sigma" -> 0.00068723922, "m" -> 12, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        2.248123285654279`16., "p3" -> 0.555184537084243, "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035533, "result_sigma" -> 0.00068723922, "m" -> 15, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        Missing["NoInput"], "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035921, "result_sigma" -> 0.00068810121, "m" -> 13, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        2.24819028894203, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11066879, "result_sigma" -> 0.00072564092, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7375824007923694`16., "p2" -> 
        1.0051553747283584`17., "p3" -> -0.023013424818385666`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11069363, "result_sigma" -> 0.00070593882, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.8241151447318499`16., "p2" -> 
        0.9807262863019222`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11070938, "result_sigma" -> 0.00072180239, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7841218733487192`16., "p2" -> 
        5.523138782118317`16., "p3" -> 1.7013870770787807`17., "p4" -> 
        1.3752708823543123`17.|>, <|
       "result" -> 0.11093361, "result_sigma" -> 0.00074379096, "m" -> 21, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.5526730106019143`16., "p2" -> 
        14.303656366053831`17., "p3" -> 1.7954671906097197`17., "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Path" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 8, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000686352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000687239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000687239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110359"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000688101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000725641"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7375824007923694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000705939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8241151447318499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110709"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000721802"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7841218733487192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000743791"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5526730106019143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{732., {186.91754150390625`, 194.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{732., {186.91754150390625`, 194.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892463384797179*^9, 3.8924718564141903`*^9, 
  3.892475961433145*^9, 3.892530740627788*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6e6a19bb-519e-4207-9740-f6d6bebfbf6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prefilteredData", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "14"}], ")"}], "&"}], 
   " ", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8923977729584503`*^9, 3.892397784067905*^9}, {
  3.8924050878707657`*^9, 3.892405089489356*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"c1d66ae9-569f-46c3-9c6c-9fe99b3836ad"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.063475935, "result_sigma" -> 0.000025156445000000002`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        1.9412109375000008`17., "p2" -> -0.0009809570312500004`19., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.085537333, "result_sigma" -> 0.000049101839000000005`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 4, "p1" -> 
        1.9426801964628644`17., "p2" -> 0.00048237953519893065`20., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.094749278, "result_sigma" -> 0.00010864192, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 2.0099611465787053`17., "p2" -> 
        0.0002489731404963654`19., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.099955669, "result_sigma" -> 0.00012550863, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 2.002257761057966`16., "p2" -> 
        0.00008648719693248948, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10272994, "result_sigma" -> 0.0002240334, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 2.0115837756743313`17., "p2" -> 
        0.00008270977787271102, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10498127, "result_sigma" -> 0.00023823332, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 12, "p1" -> 2.0305897856067605`17., 
        "p2" -> -0.00001872099109071979, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10717557, "result_sigma" -> 0.00028238113, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 2.023271677219686`16., "p2" -> 
        0.00006085206644041772, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10749467, "result_sigma" -> 0.00032837785, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 2.0632357410716287`17., "p2" -> 
        0.0000606905062682297, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10876247, "result_sigma" -> 0.00042122736, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 20, "p1" -> 2.0360232036268338`17., "p2" -> 
        0.001697604388449789`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10939028, "result_sigma" -> 0.00038239342, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 2.1125308974595534`17., 
        "p2" -> -0.001337614644268001`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11023173, "result_sigma" -> 0.00067731784, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 2.1963986544406984`17., "p2" -> 
        0.002415988581010166`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11034874, "result_sigma" -> 0.00068635246, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11037616, "result_sigma" -> 0.00061727147, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 25, "p1" -> 2.0487802545778315`17., 
        "p2" -> -0.001343453810329548`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Path" -> {}, "DisplayedRowCount" -> 
     13, "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0634759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000251564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9412109375000008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000491018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9426801964628644"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000108642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0099611465787052"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0999557"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000125509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.002257761057966"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10273"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000224033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0115837756743316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.104981"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000238233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0305897856067608"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000282381"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.023271677219686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000328378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0632357410716288"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000421227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.036023203626834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000382393"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1125308974595536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110232"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000677318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1963986544406984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000686352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000617271"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0487802545778316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924633852731524`*^9, 3.892471856464902*^9, 
  3.8924759614814253`*^9, 3.8925307406749983`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"fda11108-e7a4-40f5-b97c-3415cd5502af"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d10", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "10"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d12", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "12"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d14", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "14"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d20", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "20"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d21", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "20"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d30", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "30"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d32", "=", 
   RowBox[{
    RowBox[{"prefilteredData", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "32"}], ")"}], 
       "&"}], " ", "]"}], "]"}], "//", "Sort"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.889029964413473*^9, 3.889030014644607*^9}, {
   3.889030058869574*^9, 3.889030065474325*^9}, {3.889030108058992*^9, 
   3.889030189457815*^9}, {3.889030276502334*^9, 3.889030302556431*^9}, {
   3.889030336670285*^9, 3.8890303829140472`*^9}, {3.889030563165979*^9, 
   3.889030564173089*^9}, {3.889030615463028*^9, 3.889030655967799*^9}, {
   3.8890307385461283`*^9, 3.88903074033993*^9}, {3.889031956349987*^9, 
   3.889031958829611*^9}, {3.889032006546339*^9, 3.889032012565119*^9}, {
   3.889032071894038*^9, 3.889032082228984*^9}, 3.889032193256177*^9, 
   3.8890322501592617`*^9, {3.8893724114421988`*^9, 3.889372415814137*^9}, 
   3.889372463337228*^9, {3.889376945293167*^9, 3.889376954216332*^9}, {
   3.889416392491241*^9, 3.889416398484396*^9}, {3.889422447708993*^9, 
   3.8894224591012087`*^9}, {3.892375429742033*^9, 3.892375469993669*^9}, {
   3.8923975685006027`*^9, 3.892397615573058*^9}, {3.892397879923053*^9, 
   3.8923978883788843`*^9}, {3.892404870850501*^9, 3.892404879235063*^9}, {
   3.8924051085542507`*^9, 3.8924051427528143`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"7d565826-7f76-41ed-9285-6e8766d7c391"],

Cell[BoxData[
 RowBox[{
  RowBox[{"basicMs", "=", 
   RowBox[{"{", 
    RowBox[{"14", ",", "20", ",", "30", ",", "32"}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.8923980142789183`*^9, 3.8923980219474173`*^9}, {
  3.892404867424193*^9, 3.892404867813178*^9}, {3.89240491272567*^9, 
  3.89240491341844*^9}, {3.8924597154201193`*^9, 3.892459716556159*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"b17f8ced-bbd9-40ad-8f29-4cf4f10d8560"]
}, Closed]],

Cell[CellGroupData[{

Cell["mean = -1, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.8894520303150587`*^9, 
  3.88945203992778*^9}},ExpressionUUID->"eac29dc3-ffb9-4189-ae37-\
62b0961b373e"],

Cell[CellGroupData[{

Cell[BoxData["d14"], "Input",
 CellChangeTimes->{{3.8893805586119633`*^9, 3.889380559159822*^9}, {
  3.89236348398286*^9, 3.892363484255131*^9}, {3.892397664184661*^9, 
  3.892397685524518*^9}, {3.892397804952124*^9, 3.8923978059327993`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"00815652-bf83-4001-8aa9-9b621f9df248"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.063475935, "result_sigma" -> 0.000025156445000000002`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        1.9412109375000008`17., "p2" -> -0.0009809570312500004`19., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.085537333, "result_sigma" -> 0.000049101839000000005`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 4, "p1" -> 
        1.9426801964628644`17., "p2" -> 0.00048237953519893065`20., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.094749278, "result_sigma" -> 0.00010864192, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 2.0099611465787053`17., "p2" -> 
        0.0002489731404963654`19., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.099955669, "result_sigma" -> 0.00012550863, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 2.002257761057966`16., "p2" -> 
        0.00008648719693248948, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10272994, "result_sigma" -> 0.0002240334, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 2.0115837756743313`17., "p2" -> 
        0.00008270977787271102, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10498127, "result_sigma" -> 0.00023823332, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 12, "p1" -> 2.0305897856067605`17., 
        "p2" -> -0.00001872099109071979, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10717557, "result_sigma" -> 0.00028238113, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 2.023271677219686`16., "p2" -> 
        0.00006085206644041772, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10749467, "result_sigma" -> 0.00032837785, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 2.0632357410716287`17., "p2" -> 
        0.0000606905062682297, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10876247, "result_sigma" -> 0.00042122736, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 20, "p1" -> 2.0360232036268338`17., "p2" -> 
        0.001697604388449789`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10939028, "result_sigma" -> 0.00038239342, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 2.1125308974595534`17., 
        "p2" -> -0.001337614644268001`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11023173, "result_sigma" -> 0.00067731784, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 2.1963986544406984`17., "p2" -> 
        0.002415988581010166`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11034874, "result_sigma" -> 0.00068635246, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11037616, "result_sigma" -> 0.00061727147, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 25, "p1" -> 2.0487802545778315`17., 
        "p2" -> -0.001343453810329548`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Path" -> {}, "DisplayedRowCount" -> 
     13, "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0634759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000251564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9412109375000008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000491018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9426801964628644"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000108642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0099611465787052"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0999557"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000125509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.002257761057966"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10273"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000224033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0115837756743316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.104981"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000238233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0305897856067608"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000282381"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.023271677219686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000328378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0632357410716288"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000421227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.036023203626834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000382393"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1125308974595536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110232"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000677318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1963986544406984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000686352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000617271"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0487802545778316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892463385828331*^9, 3.8924759615371103`*^9, 
  3.892530740734502*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"db732fab-aede-4776-8ded-b6c46c6415c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d21"], "Input",
 CellChangeTimes->{{3.892446122560738*^9, 3.8924461232775307`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"67358896-2e92-47c7-a66b-3bdda412471c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.015232912, "result_sigma" -> 2.8553318*^-6, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 0.5, "p1" -> 1.7479206911418554`17., 
        "p2" -> -0.0005497926699176107`19., "p3" -> 2, "p4" -> 
        0.7980983054842659`16.|>, <|
       "result" -> 0.036601243, "result_sigma" -> 9.4493559*^-6, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 1, "p1" -> 1.6275718369788006`17., 
        "p2" -> -0.00037216849575784496`20., "p3" -> 2, "p4" -> 
        1.1747107576474574`17.|>, <|
       "result" -> 0.063452313, "result_sigma" -> 0.000024805422, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 2, "p1" -> 0.5851455790501449`16., "p2" -> 
        10.448133864820493`17., "p3" -> 2, "p4" -> 2.291377563795419`16.|>, <|
       "result" -> 0.063526457, "result_sigma" -> 0.000028088732000000002`, 
        "m" -> 20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1, "sigma" -> 1, "error" -> 2, "p1" -> 
        0.7485307201787403`16., "p2" -> 5.200715642445966`16., "p3" -> 
        1.6484038434149761`17., "p4" -> 1.9296833198814474`17.|>, <|
       "result" -> 0.077409895, "result_sigma" -> 0.000033204965, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 3, "p1" -> 0.7711791216823437`16., "p2" -> 
        5.141542179590905`16., "p3" -> 1.7485026609757743`17., "p4" -> 
        1.7223520408158497`17.|>, <|
       "result" -> 0.085565587, "result_sigma" -> 0.00005663259, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.7628384589323133`16., "p2" -> 
        5.513612455355359`16., "p3" -> 1.7342355379047552`17., "p4" -> 
        1.3632736385019668`17.|>, <|
       "result" -> 0.085570395, "result_sigma" -> 0.00005333599900000001, "m" -> 
        20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.5305653546143787`16., "p2" -> 
        13.784909390498639`17., "p3" -> 2, "p4" -> 2.461072759223229`16.|>, <|
       "result" -> 0.094718817, "result_sigma" -> 0.000093825019, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.5637449105046811`16., "p2" -> 
        12.96658016004753`16., "p3" -> 2, "p4" -> 2.2372810985687837`17.|>, <|
       "result" -> 0.094755875, "result_sigma" -> 0.00008835069500000001, "m" -> 
        20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.7662585629104995`16., "p2" -> 
        5.448228210239508`16., "p3" -> 1.6431560277996786`17., "p4" -> 
        1.5399456424423654`17.|>, <|
       "result" -> 0.099458291, "result_sigma" -> 0.00012682946, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.7592347581160193`16., "p2" -> 
        5.023893701527202`16., "p3" -> 1.6979644796517022`17., "p4" -> 
        1.8403252182636185`17.|>, <|
       "result" -> 0.099945554, "result_sigma" -> 0.00014850959, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.605303456407232, "p2" -> 
        11.009436204784706`17., "p3" -> 2, "p4" -> 2.200146484215078`16.|>, <|
       "result" -> 0.1015181, "result_sigma" -> 0.00013560558, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 9, "p1" -> 0.7720915243008761`16., "p2" -> 
        5.3328012095546224`17., "p3" -> 1.6268929867115405`17., "p4" -> 
        1.7070038271795358`17.|>, <|
       "result" -> 0.10255221, "result_sigma" -> 0.00020993995, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 10, "p1" -> 0.7548384766895572`16., "p2" -> 
        5.328719707391471`16., "p3" -> 1.5748729379864996`17., "p4" -> 
        1.9712449219604609`17.|>, <|
       "result" -> 0.10486237, "result_sigma" -> 0.00025478381, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 12, "p1" -> 0.7554019476414615`16., "p2" -> 
        5.358565888363225`16., "p3" -> 1.6828078937509052`17., "p4" -> 
        1.8226019642673421`17.|>, <|
       "result" -> 0.10517994, "result_sigma" -> 0.00029667282, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 14, "p1" -> 0.7100832540764686`16., "p2" -> 
        5.097600773249422`16., "p3" -> 1.2876531481070395`17., "p4" -> 
        2.9963429630788303`17.|>, <|
       "result" -> 0.10679464, "result_sigma" -> 0.00029790215, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 15, "p1" -> 0.7670824969723535`16., "p2" -> 
        5.2780609802964555`17., "p3" -> 1.6193516433025184`17., "p4" -> 
        1.7480830431945498`17.|>, <|
       "result" -> 0.10711696, "result_sigma" -> 0.00032736512, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.7576632110744983`16., "p2" -> 
        5.1928350288421115`17., "p3" -> 1.6900623883796695`17., "p4" -> 
        1.6738887672048133`17.|>, <|
       "result" -> 0.10771739, "result_sigma" -> 0.00031319464, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5929603648059317`16., "p2" -> 
        11.851687067943502`17., "p3" -> 2, "p4" -> 1.8208248571624432`17.|>, <|
       "result" -> 0.10849649, "result_sigma" -> 0.00034931727, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 20, "p1" -> 0.7735237296846857`16., "p2" -> 
        5.631301480487547`16., "p3" -> 1.5872589800419186`17., "p4" -> 
        1.5873978837858402`17.|>, <|
       "result" -> 0.10942116, "result_sigma" -> 0.00038925289, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 22, "p1" -> 0.5528056806470549`16., "p2" -> 
        13.620225766249508`17., "p3" -> 2, "p4" -> 2.0310294883530364`17.|>, <|
       "result" -> 0.11006286, "result_sigma" -> 0.00051199024, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 25, "p1" -> 0.7522458379871574`16., "p2" -> 
        5.624025365435596`16., "p3" -> 1.6946465658272163`17., "p4" -> 
        3.2414842714940306`17.|>, <|
       "result" -> 0.11018282, "result_sigma" -> 0.00065108685, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.7549875210219072`16., "p2" -> 
        5.529208204868553`16., "p3" -> 1.5784723655088941`17., "p4" -> 
        1.7042388304453806`17.|>, <|
       "result" -> 0.11070938, "result_sigma" -> 0.00072180239, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7841218733487192`16., "p2" -> 
        5.523138782118317`16., "p3" -> 1.7013870770787807`17., "p4" -> 
        1.3752708823543123`17.|>, <|
       "result" -> 0.11100421, "result_sigma" -> 0.00056608868, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 32, "p1" -> 0.781359996132614, "p2" -> 
        5.554598077466224`16., "p3" -> 1.8032986377318203`17., "p4" -> 
        1.1662334456821077`17.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[60], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[60], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 24, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0152329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000285533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.7479206911418554"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0366012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000944936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.6275718369788006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0634523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000248054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5851455790501449"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0635265"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000280887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7485307201787403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0774099"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000033205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7711791216823437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000566326"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7628384589323133"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855704"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000053336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5305653546143787"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947188"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000093825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5637449105046811"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000883507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7662585629104995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0994583"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000126829"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7592347581160193"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0999456"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00014851"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.605303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.101518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000135606"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7720915243008761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.102552"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00020994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7548384766895572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.104862"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000254784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7554019476414615"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000296673"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7100832540764686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.106795"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000297902"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7670824969723535"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107117"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000327365"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7576632110744983"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107717"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000313195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5929603648059317"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108496"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000349317"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7735237296846857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109421"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000389253"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5528056806470549"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{803., {390.91754150390625`, 398.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{803., {390.91754150390625`, 398.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892463385934555*^9, 3.8924759616070623`*^9, 
  3.892530740791997*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"34a07f80-e552-4c94-9f48-e88fd1d8a99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d12", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"d14", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d21", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}], ",", "\[IndentingNewLine]", 
     RowBox[{"d30", "[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}, {3.892397830421192*^9, 
  3.8923978670134993`*^9}, {3.892404836116103*^9, 3.892404837319696*^9}, {
  3.892404895822797*^9, 3.8924049030148993`*^9}, {3.8924456706405163`*^9, 
  3.89244567208383*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"001ea2e4-62e4-4aaa-a1d4-e3ae4b2d1829"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.063476154}, {4., 0.085537779}, {6., 0.094751269}, {8., 
       0.099955808}, {10., 0.10272663}, {12., 0.10498418}, {15., 
       0.10717676}, {16., 0.10758496}, {20., 0.10876251}, {22., 0.1093844}, {
       32., 0.11022038}, {35., 0.11035533}, {25., 0.11037726}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.063475935}, {4., 0.085537333}, {6., 0.094749278}, {8., 
       0.099955669}, {10., 0.10272994}, {12., 0.10498127}, {15., 
       0.10717557}, {16., 0.10749467}, {20., 0.10876247}, {22., 0.10939028}, {
       32., 0.11023173}, {35., 0.11034874}, {25., 0.11037616}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEP7I9LP7+WZ9RvD+F/sJeXiX6duncRlM/g4HjC
QDPTbgOcX/vSTtzVGcbncAjJzmxXurgZyhdwmPPrcuiC51vh/EWP2Bk+wvkS
Do/Xh/DW2e+A869Oszrx2hHGV3BYZqVpLVm2E86f23xelWMajK/kwLOrWFz8
L4yv4uCnIDrljsMuKF/DwVBt90KnGzC+joPRibpJQm9hfD2HJ2oG+56E7Yby
DRxcWXgSWHIQ/GXrnF7HTobxTRzePHTnyT0G45s5fN+zIZ+NeQ+Ub+lg6GGS
IKIL49s5pKtV//hgAuM7OBwVWz37aBaU3+DooHW/VK84fI89ACtSZg4=
       "]],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.063570956}, {3., 0.076791526}, {4., 0.085673634}, {6., 
       0.094000992}, {8., 0.10007687}, {10., 0.103069}, {12., 0.10513311}, {
       15., 0.10704407}, {16., 0.10789585}, {20., 0.10863451}, {22., 
       0.10970868}, {25., 0.11027616}, {30., 0.11051935}, {35., 0.11066879}, {
       32., 0.11096631}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{591.9031249999998, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0, 0.11100421}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386094512*^9, 3.892475961697516*^9, 
  3.892530741029332*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"d65b73ec-76a7-4161-9e0e-9800acc5ae15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"d12", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d14", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d30", "[", 
       RowBox[{"All", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<error\>\"", ",", " ", "\"\<result\>\""}], "}"}]}], 
       "]"}], "//", "Sort"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.10", ",", "0.115"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.889427876336645*^9, 
  3.889427947817156*^9}, {3.88944693178889*^9, 3.889446932573399*^9}, {
  3.8923979030597057`*^9, 3.892397912968329*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"6b6352dd-6c70-409c-a7ed-a70f45f3cac9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.031898115432902, 0.1}, {10., 0.10272663}, {12., 
       0.10498418}, {15., 0.10717676}, {16., 0.10758496}, {20., 0.10876251}, {
       22., 0.1093844}, {25., 0.11037726}, {32., 0.11022038}, {35., 
       0.11035533}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.031958665898182, 0.1}, {10., 0.10272994}, {12., 
       0.10498127}, {15., 0.10717557}, {16., 0.10749467}, {20., 0.10876247}, {
       22., 0.10939028}, {25., 0.11037616}, {32., 0.11023173}, {35., 
       0.11034874}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.9746966611245345`, 0.1}, {8., 0.10007687}, {10., 
       0.103069}, {12., 0.10513311}, {15., 0.10704407}, {16., 0.10789585}, {
       20., 0.10863451}, {22., 0.10970868}, {25., 0.11027616}, {30., 
       0.11051935}, {32., 0.11096631}, {35., 0.11066879}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.000000000000011, 0.10000000000000023`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{425.4999999999994, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5., 36.}, {0.1, 0.115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924633861239443`*^9, 3.892475961716807*^9, 
  3.892530741050707*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"0f4fa520-32dd-469f-88a1-367ed81d16b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dss", "=", 
  RowBox[{"ResultVsError", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "basicMs"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.889451819849722*^9, 3.8894518307564487`*^9}, {
  3.889451874733609*^9, 3.88945189397722*^9}, {3.892273395343173*^9, 
  3.8922733964428043`*^9}, {3.892367028570966*^9, 3.89236708154408*^9}, {
  3.8923979480085287`*^9, 3.892397972696869*^9}, {3.8923980357148857`*^9, 
  3.892398037027913*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"1d72ea0a-69ea-4791-b7da-8dd5468a20f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> {<|"error" -> 2, "result" -> 0.063475935|>, <|
         "error" -> 4, "result" -> 0.085537333|>, <|
         "error" -> 6, "result" -> 0.094749278|>, <|
         "error" -> 8, "result" -> 0.099955669|>, <|
         "error" -> 10, "result" -> 0.10272994|>, <|
         "error" -> 12, "result" -> 0.10498127|>, <|
         "error" -> 15, "result" -> 0.10717557|>, <|
         "error" -> 16, "result" -> 0.10749467|>, <|
         "error" -> 20, "result" -> 0.10876247|>, <|
         "error" -> 22, "result" -> 0.10939028|>, <|
         "error" -> 25, "result" -> 0.11037616|>, <|
         "error" -> 32, "result" -> 0.11023173|>, <|
         "error" -> 35, "result" -> 0.11034874|>}, "AllowEmbedding" -> True, 
       "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 13, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 13, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 13], "Path" -> {}, "DisplayedRowCount" -> 
       13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 13, 
       "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0634759"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0855373"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0947493"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0999557"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10273"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.104981"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107176"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107495"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108762"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10939"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110376"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110232"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110349"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{132., {245.91754150390625`, 253.08245849609375`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{132., {245.91754150390625`, 253.08245849609375`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> {<|"error" -> 0.5, "result" -> 0.015232912|>, <|
         "error" -> 1, "result" -> 0.036601243|>, <|
         "error" -> 2, "result" -> 0.063452313|>, <|
         "error" -> 2, "result" -> 0.063526457|>, <|
         "error" -> 3, "result" -> 0.077409895|>, <|
         "error" -> 4, "result" -> 0.085565587|>, <|
         "error" -> 4, "result" -> 0.085570395|>, <|
         "error" -> 6, "result" -> 0.094718817|>, <|
         "error" -> 6, "result" -> 0.094755875|>, <|
         "error" -> 8, "result" -> 0.099458291|>, <|
         "error" -> 8, "result" -> 0.099945554|>, <|
         "error" -> 9, "result" -> 0.1015181|>, <|
         "error" -> 10, "result" -> 0.10255221|>, <|
         "error" -> 12, "result" -> 0.10486237|>, <|
         "error" -> 14, "result" -> 0.10517994|>, <|
         "error" -> 15, "result" -> 0.10679464|>, <|
         "error" -> 16, "result" -> 0.10711696|>, <|
         "error" -> 16, "result" -> 0.10771739|>, <|
         "error" -> 20, "result" -> 0.10849649|>, <|
         "error" -> 22, "result" -> 0.10942116|>, <|
         "error" -> 25, "result" -> 0.11006286|>, <|
         "error" -> 30, "result" -> 0.11018282|>, <|
         "error" -> 32, "result" -> 0.11100421|>, <|
         "error" -> 35, "result" -> 0.11070938|>}, "AllowEmbedding" -> True, 
       "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[60], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 20, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[60], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 20, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
       20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 24, 
       "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0152329"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0366012"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0634523"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0635265"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0774099"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0855656"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0855704"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0947188"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0947559"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0994583"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0999456"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.101518"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.102552"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.104862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10518"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.106795"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107117"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107717"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108496"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109421"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                 ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{211., {378.41754150390625`, 385.58245849609375`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{211., {378.41754150390625`, 385.58245849609375`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> {<|"error" -> 2, "result" -> 0.063570956|>, <|
         "error" -> 3, "result" -> 0.076791526|>, <|
         "error" -> 4, "result" -> 0.085673634|>, <|
         "error" -> 6, "result" -> 0.094000992|>, <|
         "error" -> 8, "result" -> 0.10007687|>, <|
         "error" -> 10, "result" -> 0.103069|>, <|
         "error" -> 12, "result" -> 0.10513311|>, <|
         "error" -> 15, "result" -> 0.10704407|>, <|
         "error" -> 16, "result" -> 0.10789585|>, <|
         "error" -> 20, "result" -> 0.10863451|>, <|
         "error" -> 22, "result" -> 0.10970868|>, <|
         "error" -> 25, "result" -> 0.11027616|>, <|
         "error" -> 30, "result" -> 0.11051935|>, <|
         "error" -> 32, "result" -> 0.11096631|>, <|
         "error" -> 35, "result" -> 0.11066879|>}, "AllowEmbedding" -> True, 
       "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 15, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 15], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 15, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 15], "Path" -> {}, "DisplayedRowCount" -> 
       15, "DisplayedColumnCount" -> 2, "DataRowCount" -> 15, 
       "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.063571"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0767915"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0856736"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.094001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.100077"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.103069"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.105133"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107044"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107896"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108635"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109709"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110276"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110519"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110966"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110669"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{132., {279.91754150390625`, 287.08245849609375`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{132., {279.91754150390625`, 287.08245849609375`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> {<|"error" -> 2, "result" -> 0.063584773|>, <|
         "error" -> 3, "result" -> 0.077454522|>, <|
         "error" -> 4, "result" -> 0.085668748|>, <|
         "error" -> 6, "result" -> 0.094879419|>, <|
         "error" -> 8, "result" -> 0.10005478|>, <|
         "error" -> 10, "result" -> 0.10304937|>, <|
         "error" -> 12, "result" -> 0.10505286|>, <|
         "error" -> 15, "result" -> 0.10711498|>, <|
         "error" -> 16, "result" -> 0.10785201|>, <|
         "error" -> 20, "result" -> 0.10853488|>, <|
         "error" -> 22, "result" -> 0.10950646|>, <|
         "error" -> 25, "result" -> 0.10984047|>, <|
         "error" -> 25, "result" -> 0.1101982|>, <|
         "error" -> 30, "result" -> 0.11073835|>, <|
         "error" -> 30, "result" -> 0.1108011|>, <|
         "error" -> 32, "result" -> 0.11101862|>, <|
         "error" -> 35, "result" -> 0.11069363|>}, "AllowEmbedding" -> True, 
       "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 17, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 17], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "error"} -> 
          1, {All, "result"} -> 1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[<|
             "error" -> TypeSystem`PackageScope`AtomShape[34], "result" -> 
              TypeSystem`PackageScope`AtomShape[60]|>], 
            DirectedInfinity[1], 2, {All}]], 17, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"error", "result"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real]}], 17], "Path" -> {}, "DisplayedRowCount" -> 
       17, "DisplayedColumnCount" -> 2, "DataRowCount" -> 17, 
       "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["error", 
                    Style[
                    "error", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "error"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "error"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["result", 
                    Style[
                    "result", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "result"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "result"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0635848"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0774545"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0856687"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0948794"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.100055"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.103049"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.105053"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107115"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.107852"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.108535"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.109506"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.10984"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110198"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110738"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110801"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.111019"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["error"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.110694"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                   Key["result"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{132., {313.91754150390625`, 321.08245849609375`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{132., {313.91754150390625`, 321.08245849609375`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.892463386203239*^9, 3.8924759617861137`*^9, 
  3.8925307411140423`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"f878f154-87a9-4640-85fc-5ea8f80d04d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.10", ",", "0.115"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8894519119696293`*^9, 3.889451912362995*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"99731d28-9a44-468b-b117-9080e5dcafe9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.031958665898182, 0.1}, {10., 0.10272994}, {12., 
       0.10498127}, {15., 0.10717557}, {16., 0.10749467}, {20., 0.10876247}, {
       22., 0.10939028}, {25., 0.11037616}, {32., 0.11023173}, {35., 
       0.11034874}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.03462283456255, 0.1}, {9., 0.1015181}, {10., 0.10255221}, {
       12., 0.10486237}, {14., 0.10517994}, {15., 0.10679464}, {16., 
       0.10711696}, {16., 0.10771739}, {20., 0.10849649}, {22., 0.10942116}, {
       25., 0.11006286}, {30., 0.11018282}, {32., 0.11100421}, {35., 
       0.11070938}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.9746966611245345`, 0.1}, {8., 0.10007687}, {10., 
       0.103069}, {12., 0.10513311}, {15., 0.10704407}, {16., 0.10789585}, {
       20., 0.10863451}, {22., 0.10970868}, {25., 0.11027616}, {30., 
       0.11051935}, {32., 0.11096631}, {35., 0.11066879}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.9788304622614765`, 0.1}, {8., 0.10005478}, {10., 
       0.10304937}, {12., 0.10505286}, {15., 0.10711498}, {16., 0.10785201}, {
       20., 0.10853488}, {22., 0.10950646}, {25., 0.10984047}, {25., 
       0.1101982}, {30., 0.11073835}, {30., 0.1108011}, {32., 0.11101862}, {
       35., 0.11069363}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.000000000000011, 0.10000000000000023`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{565.4812499999989, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5., 36.}, {0.1, 0.115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386306159*^9, 3.892475961814921*^9, 
  3.892530741156906*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"f1c22629-b53b-4257-bd5e-d6d5c5a1c1ec"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mean = -0.5, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.889422375176359*^9, 3.889422382819119*^9}, {3.889452020107152*^9, 
  3.889452047781554*^9}},ExpressionUUID->"64966230-c00f-4c00-9795-\
bad0c7ee1069"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dss", "=", 
   RowBox[{"ResultVsError", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"-", "0.5"}], ",", " ", "1", ",", " ", "basicMs"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.889451942596156*^9, 3.8894519598148527`*^9}, {
   3.889452081299705*^9, 3.889452083557353*^9}, 3.892398043261766*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"3122e93f-25ab-4f21-9466-64b09e6a48d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"dss", ",", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}, {3.889451964156145*^9, 
  3.889451968845459*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"63f23d75-17c3-47ed-b54c-8ecb3f7bb301"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18723889}, {4., 0.26403557}, {6., 0.29857616}, {8., 
       0.3184155}, {10., 0.33092993}, {16., 0.35063804}, {22., 0.35971076}, {
       32., 0.37025758}, {35., 0.36944347}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18591747}, {4., 0.26179154}, {6., 0.29530853}, {8., 
       0.31280992}, {16., 0.34541086}, {22., 0.35620226}, {32., 0.34878449}}],
      
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18723501}, {4., 0.26411675}, {6., 0.29744481}, {8., 
       0.31767467}, {10., 0.32980058}, {16., 0.34963769}, {22., 0.35863229}, {
       32., 0.36665694}, {35., 0.36718741}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.18725882}, {4., 0.26409056}, {6., 0.29873509}, {8., 
       0.3182587}, {10., 0.33106572}, {16., 0.34979888}, {22., 0.36002626}, {
       32., 0.36757962}, {35., 0.36975652}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.1756763527777784},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0.1756763527777784, 0.37025758}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386350774*^9, 3.892471868093508*^9, 
  3.8924759618781023`*^9, 3.8925307411848583`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"fd824bdf-bab9-4952-a590-7dfe93b9a51c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30", ",", "0.4"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.8894224891272783`*^9, 
  3.889422495356296*^9}, {3.889446951297909*^9, 3.88944695205163*^9}, {
  3.889451977786235*^9, 3.8894519782004147`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9bb06c9a-b635-41de-88cc-73292431abac"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.143537032985977, 0.3}, {8., 0.3184155}, {10., 0.33092993}, {
       16., 0.35063804}, {22., 0.35971076}, {32., 0.37025758}, {35., 
       0.36944347}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.536125416324072, 0.3}, {8., 0.31280992}, {16., 
       0.34541086}, {22., 0.35620226}, {32., 0.34878449}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.252615687898976, 0.3}, {8., 0.31767467}, {10., 
       0.32980058}, {16., 0.34963769}, {22., 0.35863229}, {32., 0.36665694}, {
       35., 0.36718741}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{6.129577470560005, 0.3}, {8., 0.3182587}, {10., 0.33106572}, {
       16., 0.34979888}, {22., 0.36002626}, {32., 0.36757962}, {35., 
       0.36975652}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.000000000000011, 0.30000000000000066`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5., 36.}, {0.3, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89246338638645*^9, 3.892471876846422*^9, 
  3.8924759618959084`*^9, 3.8925307412036867`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"481b9bba-64fa-487c-856b-0452d3958d43"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["mean = -1.5, sigma = 1. Plot result vs error", "Subsection",
 CellChangeTimes->{{3.8890304960438833`*^9, 3.889030535502289*^9}, {
  3.889422375176359*^9, 3.889422382819119*^9}, {3.88945149821452*^9, 
  3.889451498375552*^9}, {3.889452058222687*^9, 
  3.8894520585302763`*^9}},ExpressionUUID->"461467d7-8212-49d3-916c-\
b6def20576c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dss", "=", 
   RowBox[{"ResultVsError", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1", ",", " ", "basicMs"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8894520676155653`*^9, 3.889452071066574*^9}, {
  3.889452105257896*^9, 3.8894521054582787`*^9}, {3.892398050683613*^9, 
  3.892398050932592*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"2fdc68bc-65d0-4d05-8ff6-4b471c186d72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"dss", ",", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889030397785151*^9, 3.8890304296461782`*^9}, {
  3.889030547594755*^9, 3.889030553659648*^9}, {3.889030679994338*^9, 
  3.889030696816305*^9}, {3.8890320151224537`*^9, 3.889032015393979*^9}, {
  3.88903208403344*^9, 3.889032095276582*^9}, {3.8890321684511642`*^9, 
  3.8890321778925447`*^9}, {3.889372400460079*^9, 3.889372433269342*^9}, {
  3.889376964757367*^9, 3.8893770398340693`*^9}, {3.889416411618257*^9, 
  3.8894164166255913`*^9}, {3.88941647741033*^9, 3.889416478250074*^9}, {
  3.8894173856147137`*^9, 3.889417390015993*^9}, {3.889452001485681*^9, 
  3.889452006564324*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"3e382268-e028-4f51-9054-3ad0d574cabf"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022228858}, {4., 0.029971727}, {6., 0.033131569}, {8., 
       0.034927491}, {10., 0.036081358}, {16., 0.037366824}, {22., 
       0.038071095}, {32., 0.038554617}, {35., 0.038493017}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022137425}, {4., 0.029848796}, {6., 0.032880029}, {8., 
       0.034585602}, {16., 0.037113558}, {22., 0.037465075}, {32., 
       0.038216885}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.02229209}, {4., 0.030110763}, {6., 0.032831323}, {8., 
       0.035066506}, {10., 0.03620254}, {16., 0.037651149}, {22., 
       0.038310885}, {32., 0.038618822}, {35., 0.038072928}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{2., 0.022321883}, {4., 0.030105276}, {6., 0.033255187}, {8., 
       0.035103983}, {10., 0.036186251}, {16., 0.037516174}, {22., 
       0.03798677}, {32., 0.038761906}, {35., 0.038633231}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.021213842722222494`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 35.}, {0.021213842722222494`, 0.038761906}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386438004*^9, 3.8924759619178133`*^9, 
  3.89253074122781*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"f1641705-7819-4fbd-8a7d-559a2e3c4823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"dss", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "36"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.035", ",", "0.040"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889416698744495*^9, 3.88941673843207*^9}, {
  3.889416785939801*^9, 3.889416789804497*^9}, {3.88941683332016*^9, 
  3.8894168616200447`*^9}, {3.8894169100106783`*^9, 3.889416916223075*^9}, {
  3.889416955089135*^9, 3.8894169597311974`*^9}, {3.889417122816264*^9, 
  3.889417132010194*^9}, {3.8894171772568817`*^9, 3.889417185952941*^9}, {
  3.889417394866982*^9, 3.8894174354674473`*^9}, {3.8894224891272783`*^9, 
  3.889422495356296*^9}, {3.889446951297909*^9, 3.88944695205163*^9}, {
  3.889451539078417*^9, 3.8894515586032257`*^9}, {3.88945211794936*^9, 
  3.8894521183827677`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"23923018-d684-41d1-96fe-395a82c55278"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{8.12567999604808, 0.035}, {10., 0.036081358}, {16., 
       0.037366824}, {22., 0.038071095}, {32., 0.038554617}, {35., 
       0.038493017}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{9.311408901104302, 0.035}, {16., 0.037113558}, {22., 
       0.037465075}, {32., 0.038216885}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.940491673388717, 0.035}, {8., 0.035066506}, {10., 
       0.03620254}, {16., 0.037651149}, {22., 0.038310885}, {32., 
       0.038618822}, {35., 0.038072928}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      LineBox[{{7.887512738019776, 0.035}, {8., 0.035103983}, {10., 
       0.036186251}, {16., 0.037516174}, {22., 0.03798677}, {32., 
       0.038761906}, {35., 0.038633231}}],
      FontFamily->"Arial"]}}, {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.000000000000011, 0.03500000000000008},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{5., 36.}, {0.035, 0.04}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386482724*^9, 3.892475961940708*^9, 
  3.8925307412463017`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"5f55fed8-17ea-4564-8b6f-3e338d7744fb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Region plots for all methods", "Subsection",
 CellChangeTimes->{{3.8893758560120363`*^9, 3.889375862123891*^9}, {
  3.892475769605386*^9, 
  3.8924757771629868`*^9}},ExpressionUUID->"3fbacd10-c07b-41af-b25c-\
d9cba457eef9"],

Cell[CellGroupData[{

Cell["GIndex, m = 30", "Subsubsection",
 CellChangeTimes->{{3.889380218299718*^9, 3.889380220625326*^9}, {
  3.8923980922065773`*^9, 
  3.892398145723707*^9}},ExpressionUUID->"8adf1496-2492-4465-89e2-\
41ea67ee9cec"],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "munfl"}], "]"}]], "Input",
 CellChangeTimes->{{3.889376237371978*^9, 3.889376260975976*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"e18a4dbb-dc6f-4359-9593-5949a867db27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d30", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "16"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377635105544*^9, 3.8893776905797873`*^9}, {
  3.889377732532257*^9, 3.889377741455358*^9}, {3.892398095300149*^9, 
  3.8923980958440866`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"9c64219a-d132-435c-9f99-c78840f78893"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.10789585, "result_sigma" -> 0.0003410395, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.7726207622047019`16., "p2" -> 
        1.0011749958822755`17., "p3" -> -0.02298769233041938`17., "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 1], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     1, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107896"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00034104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7726207622047019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{732., {67.91754150390625, 75.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{732., {67.91754150390625, 75.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924633865181103`*^9, 3.892475961961342*^9, 
  3.8925307412678022`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"68febbf0-1191-4c76-81e6-1b8d3cca35aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ship", "=", "0.97559"}], ";", " ", 
  RowBox[{"s", "=", "0.8029"}], ";", " ", 
  RowBox[{"ksi", "=", 
   RowBox[{"-", "0.022"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g7", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GIndex", "[", 
        RowBox[{"mean", ",", 
         RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", "<=",
        "  ", 
       RowBox[{"GIndex", "[", 
        RowBox[{"meanB", ",", 
         RowBox[{"s", " ", "*", " ", "sigmaB"}], ",", "ksi"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", 
        "*", "ship"}], " ", "<=", " ", "mean"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.889375869271365*^9, 3.889375989293068*^9}, {
   3.8893761135803747`*^9, 3.889376218885538*^9}, {3.889376268361972*^9, 
   3.889376289643519*^9}, {3.889376354208544*^9, 3.889376364650154*^9}, {
   3.889376417185766*^9, 3.8893764504554777`*^9}, {3.8893764963322287`*^9, 
   3.889376527894845*^9}, {3.889376568956876*^9, 3.889376614749627*^9}, 
   3.8893777799916286`*^9, {3.889377841521777*^9, 3.8893778779374647`*^9}, {
   3.8893779605269213`*^9, 3.889377971038549*^9}, {3.889379364299802*^9, 
   3.889379372647895*^9}, {3.8894158885834513`*^9, 3.889415897415433*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"9d163b7f-4f28-4bd5-8413-3ddaa13eabdc"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztmndQlEm3xkFRkcWECVxxUVAJRgyggofVFTELRhAUMGJgURADuiAgKCqu
CC66BnTBhCAKYlg+G5EcJA0wRIcMQ5gBRRHT9au6T1N3rPvnrVv31vqP9Stm
3j7nebtPP316Rtv/arG1h5ycnENPObl//+9xZdKP06a9YebKwq6Gw96UPPeo
9uPENs7KoowZc9ZKOYf2mOHzW3YL5ykL8kJ82sWc43x//dt/aANns3TlwguG
tZwFynelVzdUcY6/6j9s+ecKzkLNtCUb5xdzlt7ueczxZD7ngdZHdn++msHZ
ZFtbobpePOeEFxd7fSi7wfnI0ICVx9vvEniS2/1GjykJnL84zXa3Dc3ivD3a
XknjtIDziknaBQNMSzjPuNNy7evX15yh35qcOw4D6AHXDwz9wNAPDP3A0A8M
/cDQDwz9wNAPDP3A0A8M/cDQDwz9wNAPDP3A0A8M/cDQDwz9NK51Rr9oZVw/
MPQDQz8w9ANDPzD0A0M/MPQDQz8w9ANDPzD0A0M/MPQDQz8w9ANDPzD0A0M/
MPR7F6v5ddaKFK4fGPqBoR8Y+oGhHxj6gaEfGPqBoR8Y+oGhHxj6gaEfGPqB
oR8Y+oGhHxj6gaEfGPpZj1qiNfjWK64fGPqBoR8Y+oGhHxj6gaEfGPqBoR8Y
+oGhHxj6gaEfGPqBoR8Y+oGhHxj6gaEfGPpVznuq5fo1j+sHhn5g6AeGfmDo
B4Z+YOgHhn5g6AeGfmDoB4Z+YOgHhn5g6AeGfmDoB4Y+ge+WPrYPL+T6gKEP
GPqAoQ8Y+oChDxj6gKEPGPqAoQ8Y+oChDxj6gKEPGPqAoQ8Yeiy8K1q0Yl0J
1wMMPcDQAww9wNADDD3A0AMMPcDQAww9wNADDD3A0AMMPcDIt8vGpWxOzwqe
Lxj5gpEvGPmCkS8Y+YKRLxj5gpEvGPmCkS8Y+YKRLxj5FSp6GwQWiXh+YOQH
Rn5g5AdGfmDkB0Z+YOQHRn5g5AdGfmDkB0Y+96uyPPwiqng+YOQDRj5g5ANG
PmDkA0Y+YOQDRj5g5ANGPmDEfyJueLqHVw2PH4z4wYgfjPjBiB+M+MGIH4z4
wYgfjPjBiNfugt3gA5Z1PF4w4gUjXjDiBSNeMOIFI14w4gUjntlO4dZ7Jjfw
eMCIB4x4wIgHjHjAiAeMeMAYf/DijrDNvcR8fDDGB2N8MMYHY3wwxgdjvGZN
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
7KM/dtrqCmaYo5t2+3A9ZQa9tY3ya2F7RjNNh9RWUpht0nNORw5VpQ/1nzC9
kBrNxtyb9tMjFm5tXhmdJ6K85NXCHj1T2NN36zRj3Kto5tpXxqq9hWzespOJ
+oJasqq0vrSpuZpNGGWYvlPSSHITq9T3W4jZecuCmncTWmh7nt7Os/ptbIyi
XVPhhW6/8M998j/3yf/cJ//fu0/+5374v94P/3+7r/3fvg9FfLLna9l4/qfu
HxEPGPGAEY/seP/d/R7Gkz3/gzEeGOOBMZ7s89EvwPPBeD4Yzwfj+WA8X/Z5
OA/heWA8D4zngfE82e/j/ITvg/F9ML4v+3n4SXwejM/L/h39EfxdltEfgb+f
3/P33cv+esnPR2DsF2Ccr8Dwn+gX4vwGxvkP/Qb4dTD8MPoPOF+iv4Dz6H93
n4DzLfoHOF+gf4DzMPoHOD/jfIrzCfoB2A+RH/ZD2fxl6zvyRb2TzVe2fsjm
J3tfjvxk+/uY/8gX+WO+/T2Q9hl2SNjI8uJH8w8l8f6e5y/ypSNzM3l/Gucb
9KfRn0U/Eecb9O9l++vo76Pfj347+vHoR2K+QV/0j9HvR78d8aLfCMb5HvqD
oT/Od/g7GH9HPz3n9z1mU8am8X46GP0IvD8w9gPcT6DfjX4t4sN8AaP/C8b8
AWN+QH/MB+iN+QC9sb5k1xvyw3kQ+WA/Rj5T43qIy1Sq+fvHepRdn8gX9yXI
F+tTdr1iPuN8i/mD9Yv1jP0KjP47+tn4PPYT9KvR/8d6ll3fmO83DFWyD/ZL
IvT/sd6x/lF/wbhfQD8cn0e9Rb8d9wOoF6gfqMdg3G/g/I7Pox7jvgr3P6g3
qD+o12Dcr+F+DJ9H/VY8U5xyKqaUcJ8FPaE/8oMeiA/54PmIB/rj/YLxfvE+
8HzohfcBxvuAfhgfekB/MPSGPogP+UJfMPRE/ogf+1Oq2y8KP1skcX/eW3dQ
1nb9VO7P28N0dcKd07g/35JWYiffnE7D4rR6mp6v+u73h6q3et3fU9DtZ/fH
HIpKSMzh/vCj26Bpw0IFFJaYV6kkzPru92EHyhym6U0t4n4i9MKo/irRlTRS
/ZzmhmFpPH/MT7OtEa0mq6tJI2PXb0qteTxfzDf7WKOIso81tHSCWtyC6cV8
PmD+3O2l7RN0t460Puz2Elh17++ov88jKhMX2jWQm8IxweNe7Sz5wRbNLPlk
srub8PS0nZTteb9mn97QFLrXdrNnuLiRmUbuSmh7k0bp2RvX76RGpl+l0KG1
JJ0UtQw2ZdTWsRLzM196XM6g2cYDjK2Wilio/o655htySCnk1Ov358rYlx+a
D23Yl0vJiqI/L44sYL31G++9kxfQ1SEzXLRv5DKVSS7KHfsKaKDvHvUjisnM
ftGRmpjTQhLm1F3Su/eQjTLfnO+VV0rPz8g5VIUF0xfnCrMFk19/WyenR7o6
JlFGwnOph3YVpa6TnyD+9l4CE1UVr1ZX0wlN3Yy05EIKb3XY5X2jluZZ5eYM
+LuMdLXvvE/eWk8THIOmWQ3s/r0v9vMdHm96frqRQqJo8bqTXfW8PmJ//zEk
RSAXmcn9TahKesSm6CyKPC/ydv1WL7F+mq/bLN+YVcTXD/Z/ldGbTg/0yqeA
/JXS9yr5vB6inlanxE2yf11Av/dO+SSZkcz9gfHarvrsjn995w/66OjeWjag
nLbaXLVz6RnF/cLA2J9+lhh48d+fwT+MH1rWoHG12z9MSm5aKKcmosh7Sgei
2sP4er54QCiq0Ov2E/AXorduOXK1Ivrk9uiNwtUEvp5RjxUtf/Z67llFPjlt
brYe2Xz9oj407MjJ0xxfQ2MMRq+KG1LI6x3qwREtHTYlr5Zmf7A1NlxSxv3C
pmUfX9xfJmVJb/rd2qqZQgo0Yc2Ekd8O4s/9I6sGp9KNiafUg4dLmGG2cWz4
gxSqGdWqcOJKDdsi53t5q1oWzbZ+ed1zRQ2z77r/rmVlFrVmiveucKhiLxO8
dSenv6LFm4dZaDAhqyHbpPC7eeQhLD/Sz1rAVATnhbbLBVQ1NFFL82wmQz++
0iOupd2UMWlo54B8vRIyyhx06qkgmKkqOBu2/VZO8b2/Zg9xeUgBKmNrtu8V
0efFKx+2RT6nxmUTjZ2WVlJg6djwVzrPaXd0R2Sf+ZU0d8BE/R7uGTRrb/GX
i72qST+p90LXlHwqjjuifCahhpySHdVOJhRTWOsv3te96ui2/hqLHlGvqWDy
Ry2VRQ3UZdbfQ2VmBQ1eNsfdpKjbXxWF+LSktddzf2/WElRS8yyJ+/tn62aP
dr6WzP3E25OWbekJGdwPXFmWv216YPd+cDb/TeGKICHtql22NKm4nTm/sJrt
6Z1Ej/6a41ksaGezolL15vsmkVdt7OWEc23M8ZfR40oXJdOpPkU/ZE5vY0Fa
v4q9jydz/+aoNC/YNyuVvOcuccjf2sJmtowba7QxlVoP3gjwFDWz8FlVn2Zd
SKWdzL3T91YT6+OXetP5pzQ6LVy2qO5eE4ttadbXVk/jfm9tk+He8+PTqXMI
dSTtFbPHNzu1pFFppFDYEKGj3sC+PG02DKvv9neCibs+/NUvh/pvqXGJMqli
chdzXMc2v6Jho620o9dVshapznPbJ9l0zz9uWUgPEavTaJo93yOH+von7zGf
0c6ubrM3qq7p9n99n4zKeaaTTC3DKuInS6TMIkJn/+voZO7/Fu/tl9Y5MoWi
BqmbHLeSsKThr/7eE5xCnc6x80JM6liQwKm6Vj6TLHZvH7iH1bK1Y2rD36/O
JGWF8BVavWq5f2uOWqI3TVTCfusyP/ryXS7dm3XqmdmNEmYvqA10V+r+ffeJ
SOvoB0e/7SMf7w9O9yzhfvO005Q+mg2FzGRswNIwi3zq3B9jsXF9Ad/fxbHv
Q+6lJ7LpJYHyolLht/W+uEMpL4HZD2kQyW0o5n71hBzr+1ixhBoCEjqU/BO4
f30ReChnfscTttbdYobblxLuZx9mG76O8S2lCa7GfQ5IY7m/xf7ew23Mmwrv
ejrofumtjaCcnw96m9q03RjYwCT+7oG+rek0b65peJhHNdtWrbMoQpxFz+cN
sT3pX8GaBxhNO1yVQ3Nfzeh4apXPFIMPTDj8WEDKawpntVRlsykrnpkfmVZI
kXYLJZmmaax5/qMRkvgi0o7PfxK5OYHinM8ZbHhWSbaVFgrZB1Jp2JxHOyov
VJFjTb8xvx1/RV1z7N/+6lJNcoO+3npqmkfpldPcGi1qKEZj6G23hQU09oW/
9S79Wlo9etGgXguE1LdkX3CHSh2VqfxZvYZKyW2CaNKJt3U0JlC7zl7ShwU6
DHsZtraCmh8O/nj7/BOyMA+Qj68QUb+slnNTS24zn/lvb4+/XUYtp7Xsd4bc
pvBztTXbFUT0H5eE6YM=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
qNU094+9OzXlO6WmfbfE3vsf3+R3EA==
          "]], PolygonBox[CompressedData["
1:eJwt1FmIyFEUx/F7GDH2ZZgZxjAN2ZJSakpNqSkNTZOx74x9m7GOnez7vhMp
yhsND5JddiJRigck3iSSrSzf0/k9fDr/5Xb/955z7r+gsrqiqk5KaQAycMBS
WoH2aILJqEADtMRlLEMnFOIibqA76mM9rqILumEKhqIhWmE11uAf38on3sU9
9MRvnp0mnsLfFGMucX0LPZCJiXiFEnzi/TPifHzjuog4FcPRCFmoxGv0x2fG
jCZeQWfc53438S0G4gf3T4nV+Mp1H+ViFf6kyInvfT8aKweLsBg/eZ9HHIkX
KPY88GwE8Tn6ojZFbtahq3K0U3Pkac1vsA2bGFtKHGaxxyI987Xu0ly+5iEW
a/a11vDsjJ75dVviDsxDO9VgMJ6gt9c2xbuF+J5izB3cVm68Jlsxx2Iu74Gx
eIl+njfGjCdeU60/cr/B14m66IAZGIOmyMYJfMAgZCg3S/ArRY5OWtTEa9Ga
uEA1zdIaZ1v0nPfaF+5riRfQEfUw16JnMtUT3iub9a0S1Wapeq1Ye1mLpD3t
w3S0UY334h3KtMblFmegUD20XTUrVc8cJr5HuUUPr1QOstVDvvfjFr3oOajB
NIu9eg+dJ05CgfZ0zCKnnsvm2IhZyFWOfW17LHqtTLWtUm68xt77W5QbPwMH
Lc5gvmrivXgUzSx68hEeo5dycg5nLc5aC+JNizPtZ9nP5BHMRI7muG7xz/B/
hf8THuKBeqOXxo7TXnK0lwkWc+cqd4cseqtctRhl8S/ymvwH636LPA==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHeU1sUZhXdnFOxKUZDmgvQSigusgFIiRUDqCrouIpDsooaAGJCAKIkt
9hJjV9RoFEuwEAsRNQRFgkFRFPHEY85JIooISDUg4L3nfb6z/nHPtLfPzJ3f
9zWfPH3ML1NRUdGK4qKirHaZBq8LlwsHNbdJ+FooStFuFvYJXwgbhe9pvxSO
kIGpwu8ke0Djr9AvTqH3jXCo+tvUfis0VD8Lhwi1UsxtF1IK2S3Fsba1OHQs
67mt2LKcbe/Hv/0dpvEOtTsdj/q71O4W6qSI1bJHqb9H7XfC0Sna/wtHppD1
Wu0UsdhWPfJxPeriz+PDU/ixjwYp4nGMx6eol2M7gdZr9amp104kb9ejMfnb
50+EJkJToXmKWB3jAmG6cCxrztP+m9EegV5t1kpS5GP93wgzhOOERcTRSmiE
f/tuzbxjn5miXi2E+1Pk31K4N0X+Jwsn4dM+2qDnXNvSuh4d8eH82qfYb+fd
gdZrncnHeXRC1nl0Yc5+upGP6/FnfHQX2uHHdp8RfkUeVwmXkuNC4isVumKv
hFrs4/y6pns51z2wb9s9aR37IKG30Efoi61uzHVi3/rQOqde5O+108nHOrNT
+OgnXC3MIpdxwghhpHCGcCo23hPKhAHCT+l77Xni6y+chk/7GIie4xpMTF5f
LfxFuEwYwpzjOpPWOZ2FD/tfgs9hxDSQGozGrm2UC8PRO5vWOVwrzEF3DLL2
82vkxwqjsGdb4/HhuS3cc9+Xc5izzz8IVwrThImsnSvME84TLhDOx1ZhbTT+
5xJrBbLlxPtuCr4z100RJmCjjD33Of0ZcxOpewf29QPkJwuvCpXCJObGEUcl
fjx+Ddkq4Z/CcmF+Ch71ufP5+0TjqcLFwhphpXCF8DehWrgoBc/t59xuhlvN
JwUutq2PyKcae1PIYxMcVuDmA9gq8LvX3sb/NPaqcO62wsWZnCqp5Xa40hyy
Gw41L5jLPWd+2QUXm6d2wNHW2QmHerwHXrb+ATjXXLOX+3lMquFryzlP32Gv
7YeXCxzv1ms3peC+meRmfrPdAi+bs5yTuaghZ64Ba5m5BsRqTmpMPo3QKcJG
fXJoitw9Kfh6BrGat0qoi/mnGXmWMC7wuPXvFi5JwfU+b2dQf3NvC3I0h7ck
F/s3v7VONdzanpg814o8PNcu1XB0G3Jrx9g5dUTfcZnbupKPOa3AzZ2Qc6yd
WTsJ2QJnd2Ht5hRcbF42P5uLT0nB4aXEUODZHsRYxrgD+Zfhrxdj++/NuC16
3VMN//bGvznNHHdLCp6dTYx9WTN/9kO/M7LWN9/2J4Za5NyIOLwPA/A9kL25
VbgGW143Bw5nbQRj2zYHDk41nDsEf54bhF3rDcP2SPRvS8Gn5k5zlXnk58ia
x8aiPwod2zXnFXh6NGvmfnP60FTD1+X4GMf4jhTfbnPRMY+Ox8a5jC1rjqtE
3xxQgdz5rN0p3JCCmz1n7plCfOOxYf6chB3z5wXYmoDsZPxNxEZv8nRttvEd
6btrrqtC/q/C0hR87nvie28e+C193x9zqjnuFym4w/fM3GLuNb9WM3cJ808L
T6X4nvA+z2avHeNU5F8UXkjxtvrO+bz73vVA3ufzOWFxivfeMc3A/yvCyyne
y+Hs8zBqMY/alrMn3uvr6Xv+TeGNFO/Ijci7jm8JK1K8HX8UHk3BR47rKmK7
Dl+2+bjwWKr5TlxAbDOZc7z/EFaleIP9dvlNujDF96G/B+uS69Xka9vXkovP
1O348jt+F3Ycw23I/p7cKqjzLdibi/5Y9KzvHyw3oFOB7Sex5zrcSS1cG9+X
KmzfgT37fIL4vLeLqEkD/Xb5nrrNw0cF9XANpxPXn8jz4RScVkodHqAW9Ri7
Jj57N1HLheiYA+9hbxYgZ36vg+zj1P0+5k9m/Bj7cy9rLfBpX34PfMdfSnEO
1zI2l5knzbnm28X0vUfm5GdTnItF1MJ2LqXfivZp5n3Gn8em7TxH7o1Vt4Pk
2hMZn/362HU9ZqHTHf+L0TUn+fwPpT6OqTU27M93bQ4yPksFvjiPHN//kY0l
yLxE7kPJ7xlqbm4wR/iOvMvYHLQaX/2x8wq6nnuRGJbidxLtUuw8xB60pL4L
id9zD7J3vou+L+aXv6e4P747/g70Ga1Cxt98PnuvMW+eXy98jP56dC3/qbAh
BZe5vxL7q5ibhs4KfLl9i/4axpb3u/Ye+2afb+J3ObHOx/Ya5F+gXj5jV+Jv
GvVeTQ09Z74wx76DvvvLqLtreLzOzL4f2X+H3JdTlyryWIXuG8zPp/a2czk1
MHdfTB7vE8NK6vI2dXANzdUf0bf9D4V1xPMB40nU3/3J2FuLzY/RryaXdciu
Q979KchY95EU970UO47P7/zr6LvOS1gbQA3XMvchMdlOZ9Vqe4p72UX9nSnu
0yfkfxF5bqAOG8jd8/Ukv5dadVV/T4r7VFv93ezjBHxVkuN66rOcvus3FX/V
5LuMWvn7wd86fpdt+7Ac9vuq/XeKe/eZcGqOu/AvoVEO7hqk9kAK3jDvnpDj
DIxQe0iOd+BCtcfm4GL/t3Qk/y/ZdrMc9tup3cQ52S80zHE226vdnOK92CWM
zPG9Nkbt2BxvwKE5/NnXqBw1cvzjc9iyndbq18nxtpytdlyO96aD2nNyvEtH
q63K8c5sE/rkuP//FZrn4BOvH4XMRqFNjjNQrfY47H8ltM1xT78mN+dVrvbw
HG9cxxy+7fd/QqscXNRUbZMc392uzefU3/tcK8deO5b/pIinJEddbsXnlyn8
+l7Wz3HXeqntkeO9cbxfcG59purmOFd+fx2X3+hjcuyZ98t6ZegOV3tWjrdz
aI5z7DN8kHPgM+DYzyT+njnOis9Jd/VLc7yZW33ecryFvhP+09L3oljtkBzf
N1uEATne7ME57o9lTlHbLcdvrP5qd6S4o99wVnxOfLcysXnPq9mX09R+m4Lv
T1e/X467/QOeCVKV
          "]], PolygonBox[CompressedData["
1:eJwtk9mLz1EYxr/OO/Y1+5IwlitcWLLvNIwRxr6PwYWSGSEuLGXfGYSE7JSU
UlJKSkr+BSH7miU33Mjn6TkXn87zfn/n+zvved7n26O6pnJtKoqiDEpgahRF
OWzk4S74Bn2pT7FqYz/0QDiNroG3sIT6Hms5zEfPg+3J7/RHD4Yz6FroiW4C
+9DHoSn6D2td8rPG1KVwDL0XmoXf0d790BL9l/UEHIBV1F9Z18AzGEn9QufA
efgE1Tx7zLoaxqLH6A7oi9AZ3QV2oEvhH3SiPpT87AuspH6azxgf9kB3vwy9
0C3CvZyESegfrFfhGnyAKp49VK/QKvyO9h6EQC+CO8me90b3Cf9WlXvRf+q/
1NPEsKe1+YxB6AlwJdnjEnQ3OILeDQ3Qi+EuehNMRpfBevROSOiucBi9Idn7
SriRPAPNtmH4Xc14Fnom7Eneswz9Pvf6AOZSzw7P7iYsR3/Md3+UPOs54d/q
sjdtYEuyR0vR73KW7sO0cCaVxevJXr3WvZM9Wxi+g3q/nXz3ivBeebAA/VJz
gls5C+1ga3Im5M0b5SLZI826A2xLnrm8/Z5nLY/bU6+AJ8l7OoYzqOwp88pm
83BWldHfMDqctUswAP2cdV3yNzSdun54VkehCPesXjWjRmFP5MXm5LM/5yyr
h6HUQ8LZPQsj0D9z9s9B6/CMNBt53DY8E81CHsibUdQXskevsqfyUt+IvOke
7k0eTUHXC2dHmVEWZoR7UyY0m3Hhu2pGw9DDw73pm/yVe1RvOvM/GuWEbw==

          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0tlSDgAYx+HPkixRqAv4zrgH7kGRtZSIsiUi+65SIqQsRZYkIaKslc9a
JKRQUqLGgRnX4PlmHDwz78E7/6NfMC0rYf2oQCAQYjThO46ZzCaedHIpoJxq
GmihnS76GOI3f/jLOGNBltPAXe5wj8N8I43bVDLCea5SQB/LuEU9FfSSyhry
GCCfQ5zjK0tZzRmGOcsBmjlICyncpJ03tNHBW6rZzxeSuUE5vzjNZa6wl33s
oYzPJJHJLr6zm52coofFZHCSn5Syncfs4AlLqOMFL3nOa15xiW10s4jrHGeI
E1xkK59YSC3H+EEJVaxiC7ls5ihdLGAlm+gnh2yK+UAi6YR4xkM20MQjNvKR
+VyjiEGOcIEs3jOPGtZRyDsSWEErT7nPWhp5QDjSTuaG/7Q1h1nMIJbpTGMq
MUQzhclEMYmJTGA8keE+iWAsY/73/w/+PWn2
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0mk3lGEAx+Fn0CqkjZLKUtGukrRRytpmQntqjNLp0OnD+Cg+jWi3DMOM
nUqu5/TiOr//3HO/mDPPUxL7GB2IBEEwxLgxxhq5GUHwiWHOZwbBBU5zixln
DXqRas5wm1nnd3Q/63aj/tMiPcBnu0Yvc4kr1DLi/Jqm9Kqm9bqO6lMNmLPP
ahPNRGjhIMVk8Iwv7h3Sr1qn9dxg3ueb+k2fayYL9jltpY173OUwWdxnEw9Y
dPeIftcXupkle4u+5Iddoj/1lW5l2a7Sh7TziCilbKODLjpZcTdb+9hOGTt4
Sw6rvs/T9+RSzk7ekc8xjvLLvW7dxZq9W18zZh/XcX2je/ht79UYE3aFTmqP
7uOPXaBxEnalTmmvFvLXfqxPOMkppp2d0KQOMEg/H+gjHv6+8LkSpSV8TuE7
Fv5/5LDq/VthmSUWWWCeOdKkmGWGJNNMkWCSicj/93kDMBlV1A==
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463386812652*^9, 3.8924759621897984`*^9, 
  3.892530741549569*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"466134a1-a67c-4ecf-b94e-f1f809e77c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ship", "=", "1.0"}], ";", " ", 
  RowBox[{"s", "=", "1.0"}], ";", " ", 
  RowBox[{"ksi", "=", 
   RowBox[{"-", "0.06"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g30", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GIndex", "[", 
        RowBox[{"mean", ",", 
         RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", "<=",
        "  ", 
       RowBox[{"GIndex", "[", 
        RowBox[{"meanB", ",", 
         RowBox[{"s", " ", "*", " ", "sigmaB"}], ",", "ksi"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"GIndex", "[", 
         RowBox[{"mean", ",", 
          RowBox[{"s", " ", "*", " ", "sigma"}], ",", "ksi"}], "]"}], " ", 
        "*", "ship"}], " ", "<=", " ", "mean"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.889375869271365*^9, 3.889375989293068*^9}, {
   3.8893761135803747`*^9, 3.889376218885538*^9}, {3.889376268361972*^9, 
   3.889376289643519*^9}, {3.889376354208544*^9, 3.889376364650154*^9}, {
   3.889376417185766*^9, 3.8893764504554777`*^9}, {3.8893764963322287`*^9, 
   3.889376527894845*^9}, {3.889376568956876*^9, 3.889376614749627*^9}, 
   3.8893777799916286`*^9, {3.889377841521777*^9, 3.8893778779374647`*^9}, {
   3.8893779605269213`*^9, 3.889377971038549*^9}, {3.889379364299802*^9, 
   3.889379372647895*^9}, {3.8893808223886623`*^9, 3.88938086272535*^9}, {
   3.8893809436559753`*^9, 3.8893809579424553`*^9}, {3.889419084139812*^9, 
   3.889419092086376*^9}, {3.8923981561768713`*^9, 3.892398156499642*^9}, 
   3.8925181824378557`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"a2e28d99-75ee-4711-ba28-022aaadb6330"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
oCLzxbp2/RqYw9XB+wxeCCh0+hj9ssQ6dsC/wSb1QBZZ7/L93NW4kpmO2nGz
dlwuTTSp63NyrogtMitNiDLII7E8xWFzbBELFGu5NFwqIN3yld2SvuYzlZWL
bO9UCmnitn+alvlmsvj1x5SuXCqmXvWCOINfU9mGEQ/yzZRKKWZ7YfSH5hjm
RbPmbij+1ndr9RP0WXWFPricnZ27XkROB3/+uuBeDCVaRh0OHCYmN8PxLSm+
KSQ06K55cEMlfV6WbHxiZiqJn1qci/CtJJW72Qcs+uZQsd2nJv+OKrq4Ys8I
3ZP55HJi0rWLjyWktt7Tzd+rlLyXu02eMraG11OPmAkqy6/XkM/UrdbXNMt4
fUU/8fi0/+ju6zOov0a4WfgDKc8XqLdlq6tdGwZm836iKeWQaGlINtWyQVkq
MhHPFyf7BMuCz5fyfIF6fNRqcUjOmALaYZ58rGWwkK8Htf4nlH7qp/i9Iuqz
+WazKyIqVpxn/HrXatD6EqqIWCq6eeUNzy9Yf7+FeMxJ/xa3TPeHGeN6POL1
20D10sHXdT7892uo53/GT5jkpiWi9/m6hmWbbvP8gXwz236/yQprRT+4I+Oi
6bORVVSx4XalcUQqzycxnoWzdz0T8HyCfqBvwlpNjcdV5BoYWf9+Qh7PJ7zf
WXOxuItEQiu0kk8ND5aze1oTPvcWvaU5WtVhXppyNjuxdnrE0gxiJKwasVnG
DlvRo1OfMmjJlurX747XsJijo1WXLsim2Z9PebSq1rDAxIDInH3f9luBvut6
r5Uw6d+fL4dNyqF5B1acjfcuYyr+k6qVNuST+bGwja9Citj946G/v79WQE3j
9GbsXZvD+h6oOZ49p4hm6zmpeXRLY8scBe3l90sofFM/9Quuicza751Af0cZ
pcSrjWiZEMSuFffb7n29gixuiY/bzLlBBZe+aIVcF5HulDmV9maJJAt0cDHM
EdPUscaaI8dm0pWHLkp5ZlU0N32h87WdOXSp5anOXyoS8rilNM+texEdW/8m
78ddin731tPLHicmveX1Tyc9++QrP0X9Kt/n/9TRKY/XJ/0/F5wr1Sjk+TXx
/bAs9dJy2ic1mSAsamHOPRyMS0VvaMjeH5aOy2lh22a/CcutUfQ/Bx5nyKrj
Mulwb+Xh00jGvAa2tRiNzKSLJRWDBl9sZmuXnLs63j+TTM0PHL26uYmpqL6Q
rRgiIM8hffpbxzaxtJ/3bdBXEvD+qOPNlVV+EQLqxuSn1hs0Mh1JvsejLQJa
lr3E3q9nPbP9rGF5qr+iH/LPHzeRqnLIcUVFa5i8immGLPzL1S6HdBaL+lgu
qmIxTRuXb7meQ9bnZ+StvC5mYQ4tFsG/5PL+aKWPSWO1VyUFsA6Vlvhk2n4j
53eZnqIfUu+2JVJ3UA1dn9n9xtdtxWSd4BawIbaagqckncpNLqbcsBXT4l9X
03rl3ttlhi3MJDzvzgOHt7wfyjU6p7s/4S2FJi9wO6/+LX+GLnJc9DCL1C6p
qcmv1bI+JuKjx0uz6EVxj7sT+tby/kPYenm89fwKlmBg6tn4WtE/JZi+rWoz
zKf2sZPEtkElzMjsbIukPZ88BetDfk9S9MOCMBsV80l5rL9dh5qxn6K/erDp
U2iQbhG5bZacmvpHFrObfnvr3dpv+7xMmxL/6wJeTz8HJ51LC4lharMs3pZW
ftt3uTTEd22LYk7vNg7uZ6n4fevBA7k51058471XOtasucH7Ne2OIu8oyRz2
m63maK2uInKIc01WfnCe9x/OO2bu3NNFzkalS2/ZumTQCB/vz7USKTPw773c
elgWhS/0l/+8q5o1hMw7cflxNl3+a4Bj73li5qRnXVV/O5daisf1lgiFTGNz
1sLB84XU+ovHzoPvkpnTUaPVrx+V0qitPX/RrnvGps9PNz+jXU6XXPX12o5H
Ub+BO6Oux4tIKC0Ud7n6jAplXu+3uonJIzc8quR1LtFxt/HRdhJ6kG3ot89c
SGe9KzQ8VappZUXbse1Ls8iwZ/THaWFVZFSrf+2raTkpFWRuc/asoen7v7ib
fE1nCXeKMscsKqHN4lOuGrfTaV3685t2dZX0HzYVoZU=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXn8l1MWx5+LSkXWaNVCZYmiFCqSdvEjUipRNLJU9jVEiEFEtuwkyRay
xJCRypKQUIgIDYZQjHXMec99P6+vP07ne59z77mfz7nL83l+NRsxtv+Y9Yqi
mBL/rB9+q7AUxrOt9TyfEnZf2PSwxmEbhtUMq2d8g7D6+mph2xivFdYwrHpY
jbAGxmk38hm5mti3dljLsM3CNg9rFrZR2MZh24VtErZp2LZhdWy38BljdpID
2Juaj/GtzLdF2Pb6LcN2DKvrmNaOg1O3sJ3DdglrI+6Gtuvb3t05wNjWOJx2
1VOnDsabh7WzLnDdzTjtjsbhtIcervuID06d5QD2PY3Dey99S3NsbF06+ayV
POqJe++wHczb1dzw3ldP37fC5oW9FLbfX2rQQ57w66mHx4FiAktvebYP66On
Tn311KOX4+h3gJwZ389a0K4yHzwO0lOD/mFd5DFADmA/TM+6HWKc+g0RK3MO
NA6nwfIhNtQ42AcZ7x52uL6HPJq43kfYF34nmpdxR8pz/7BjxQqW4XKD6wg9
NTtaD9ejHEe/v4Ud7PhjjFODUeY7NOw4PTU4Xk8NRosF7GP0cD3B+EA5tXEt
xxqnTqfIbZjWRz4nGadOJ+vpd6r94H2aHh6n6+F9ljzhcab8aV8gbnCdEzZS
3ufqqd9449T4PPnDe5xx2hcah/dFenhfJj5wXSpu+E0wDu+L9fA739xgusRn
jLk77Oqwa8ImmoO8l5sbrn/XnxF2j30nh/VMmfMVYVeFnS3Xq+UJjxvEPcEx
54nlWj11uk4/3tzj7He9/Bk/xTjtSc7DHDeaG643y4163OQz2lN9Br9b9NRv
c14EKa/hrT6D9x1hV8qpU8Rbp1yDu5wbfncap80+5Sx2DZsmT/hxv8wOe6LI
75YpcpouZ9p9Usb0UNgM49Tsfj38tow+66WM8QG5wXWmcdqPhN0u9ll6MD4Z
dq9zznb9wPiocTg9pmcvPGhuava4zxjzjJhmymeaeZ8yN/ye1s8wdq085/iM
8ewhzg3nZK64wft82MO25zsH2F8wDt5/6sG7wDjzzxMr/F40TnuhcXC9rAfL
YvOSb5Fzg6VfyjxfCdsqfm8Q9myRbaa1fy3sOcd0iXiblGv2ujnI+4a5wfKm
fp61mG5tlhR5f8B1qXzAu8w5wMX7g3uYu3u5z5hnhXl5j33ofLSHBJaqlLm+
b1+4fqCn31dhK8M+CXsv7FXn+8h84FolDub8wvHM87Hxt8NqxjwbpvzsiPD9
U86BVuJd/H+dEc+qp8xvtTnA/rXzfxr2bz1z7ht924Wti9/fhn0W9nnYgJTb
P4Y1iN+1Us73fdiXcvpBT+41jgP7Ouf4JmytcdobR46NUu77n7DvzPeznny/
h/1kfFDKsT/CfjG+VozLrXfj6LNJyvFSX27l3Kvsu1/EO6ScOxmvaz3edU0+
1bMGpe6kpmhJdBc6DN3XtMjvbPRfM9voo+a2axlHg6Ej0VRoL/QR+gGdgc7j
XYkGQqc2/sscbY2hPVs4Hg3a0jbY0VdorZrOU47f1fH1zb2z9WjtmHo+o11H
XOBGw7ZyDjQUe79nUdFwXc2HhukmZ3RXezl3sE2ujrZL3dlRDnvaLvUl7c9d
Q/Z6dfk3kFM7sTRxnnbi6+T4xsbhXM1x9eXXTdw7iX0fa9pdDqXWLLVnD2PU
oLNz7Og41qyn76IziooG5Y7gnc37a6Kc0Vp9HYOm6i9ntFk/OR9oGw5Vtjsa
Z3wXxx1cVHRqlVgONS+cBtgudeqAoqIvB8lpsG3qMdB+4ENTDbMGQ+zXx2dH
iOMo+7EXhtqvt/Gh1nGQecE+3DH0Q+eMLSp6dIRzo7uOlxt6bKRcj7UNt1G2
4XyM40s9WurT4+zH3CeaFyyjbZc6dXRR0Zcnif0U24PFOEZ8Z7q+w1zXU+TE
s9OLis4eXlS06alFRZueZt06uJ7l90mfoqJBz5HbONvMjY66SE5os/PkeoFt
uI23Pcr4uKKiTUuteqH9Sg06Qc6X2IbzpbbBiua6rKhozcvlPNF+zIEuRHdx
aV5hjc712SSxTLYfOhRtdqU8J9lm/c5ybKlBJxu7s8iaCdzosuuKil6cKj/0
2PXyudE2fG6yfaHxKeJmXKlJb7YfPG81b2s1HXw7p6w1U8p47xIT/O62faUY
0Xkj5Xa2nO+xH5zQF9OKirYueU6zH+9vdAeag3cP98sOYkenoeH6Bo79w9ZP
GTfap9Sb+PvFhx6bJb8H7ddHTTS1qOjLR8WNvkPnoWcfsg6lZn1EDo87hjnQ
Y3PEjiacXVS0Zqk98U+KfY4x5kCjPSfn2eYF+7PmbaO+A/PeKes5+IJjruOp
0VJrBia0XKlD8S8UFX250Dnm2Y85X7LdT102R6wLiorOnW8/9OYrYgM3uuxV
x6PN3nROdNxi8S2yH3hft32vczwhvsXGZtmeW1S06RvOvcQ55st1ievY17Ws
UsctFBP65F3nXmabMejBj5yP9+nyoqJB33e+D20vMr7MuRlXatsV9quuxnzb
+dBJK4uKTvrEvLy/PzPvF7bJu+ov/dB+X5l3tf1W+uzLoqJH6ddfjQmOYSlr
XPTuU9Zggbm/cUw7dd9a50ZXolkHqGfpt1vK+rV2yvOhM78rKvqVdi016Rfm
XVdUdOta+6FbfzQ/49GnPxUV/Uq7W8p6uk7KMfTmb47/xX5DU/5mqJayvv3d
sd1T1qmbplzTb8WPtv3DsWjY/5qTO7XwbwFNwm/hd3Uv7zPu9L6eLfZS0/B1
/aY9KKyGe4uzuIHfYM3Cb+03GOu/od8XS90T7IcDxM652j7lb5KPXVvqSA0P
swbUcbvwjdT924Y19FviENeEcc3D1/e7ZY21hj/fC9s5doeU22us5SZ+G7QI
v43fAHwLtPD34daS+u6Yco3428MuKX/b8w7oKib2x64pf3+W9djae2GflPHV
s3Z1vUOrixnuNYwvdU228H1Z29yr5dTIPVTLOsBld3GXnLZxvfcIv5nrvbn4
CzE2c43g0VRcDeRSSyzNredyzyjnBlwtxVbHvcoaNbS+4IHT9vJi33BfP+Ae
20lu7C3eo7xD26bc5x8+29na4mnfZo621ratteZ3x5T39J/xu33KtfjF88fZ
Xutzfv9qzl3Mz7P29qdWe1mv3z0nv+k7WsM9/c1crG0r15dne9iHvNTyFjF3
kRcaobNcqFk38axvH+qE39v+zLufc7Wzzr96F3V1rTa1D3jx3e3P+e2d8hnm
u6OX9e5hH8Zx5omdYc07ia2XY1jf5HPG9jYPz+HGO2aq90Mf9zO6o6+/y//P
4HuIe4H3KO/QL8Pf6L4v/17G+38pe0Tuy8MvS/ncfEMt3fcrwz6Vw8iwufbn
jueu/1eR7xXuRu6Wn1jnlM8Gz7g33/FOYgz3Un9/M3ZJ+MWu0xVh063VB2Er
XLMfwq5O+dzQ9037fxI22/pzb3AvcwZvCv+w+T8M/6jr+HT4k91v34dNTPlu
ehuM7oPLw+5N+ZyNCVvo2DfCz3C9Xg1/Vcp78xrxgQ0Mg8X/nnnJeXDKd/c7
3sOsC3v4wJTb/KZ26IaF9iFWzXFVju1nf/qWdVzhvT1QzAc5Xw2fEePu4t7u
b00G+Hydcw4xf5XjuQ8HyYd9/nn4ySnfoS+EPZ/yffBc2LMpn+9DU56D/HPC
jxfDz+biXTnYnKzRx64x67s6bErK5/vJsEkp31eHmLe22GlzJ5dagffsZa4l
6zg6bE3Kd/GqsDtSPn93h91gPceF3ZXyHcDeZ0+znxl3u2OJv2ufl8MWpHxn
TQiblvK787qwtSnf6y+FzUv5nrgn7OaU9/sIcrtn7gz/Vsrn+7WwRSnffQ+F
jbL+L6ZcO+rG+ZuV8hk8P+zBlO++R8JOdE3B+7iY2ePsV/bq2eHvS/md8VjY
WGvOWTkp5fNyafj51pazcrxrd1HKOMBwZNhTKb8/LrCO1HCG3G5z7w0Qz/3h
j075Ljoh5XukkXW61lodm/J9xF10jGvPug9PeZ+xx663LtSEfTfT51+HTU35
vXecbX5f7NrUlNMz8rot5fuIu+iclNeA+nO+P0r5vLyecr2o1f8Ar0SfdQ==

          "]], PolygonBox[CompressedData["
1:eJwt1GmIzWEUx/H/sYREZA9j7pgxg0xGJktCMnVLKVJqEmbIzsienexjy07k
hWlERGSJsUV2MTK2bIMkSV7wRonv6fxefHrmP/c+z/88Z7mp0rKRs+okSZJG
PSy0JJmODsjGAkxFe3TGJHzFcNzj+3NZS9AKmZiN++iHf3w+n3Uy2iEL0/Ad
o/wcPp/C+g0jUMPzDdZXGIS2WIsNaIKuWILtaIl8jMdnpFHO/jLWnyjGX55n
sP7AaPzmeR7rRLRBCsuwE61RgE04hI4oRAWOoCEaYRXW6O88TMAXDMNJzt/i
eUEf5WARZiIDOdjvcWCszlxvkfNs3fG1cu65HoxzmINO6IZtFjnPVA52YTly
dadKfEIRmuGocuS56cJ6FmeUG4/poGLM0Z13WOQopZy8tKhhlmpyQj3gtc9V
bOPQXTHuVY7yVPMDqqHXznvoGq6jJ6o4Y6VFzb3WDXBVNSnQdy7gPFroHVW4
gh5eJ/ZfVk/k6393cBe98SeJ3lqts73HvHdXoL5FD3vtlqKuavgO7zEETVGD
Z4p1IGs1nmIADG/xRu/yPTdVQ69dLzzHC4u9/o7D+IChqtEe/MIYxXQapyx6
1WfQe2kz+lr01CXc0tmN8RAX0Rz9sRWPLGrtOfPe36i7+Az47K3TXp9Bn53F
uktasey2mEWPyXt1n8Wses/6bJVb9JbP2BM8Vi08Jx9RazH7fsfbFjNVqJr4
XR4oVr/TcRyzmB3/DfkP1viHSw==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ISfnwvv/CYzJpQ72zCXX5Pn/KW9nvQ==
          "]], PolygonBox[CompressedData["
1:eJwtlFmIj1EYhz/nHeSCC6SxG1nHWEuWiGQZ+5jBmLE2ZBAzdhcuXblRsiYS
SfZ9kBAhOykppaSk5I6Q3fPr9108nef8+773nPN+v/Mvqqkvr0tZlo2HAlgZ
WdYLTvJjAyzFu8Ix/CK0wmfBHfwejMFL4Sq+A1rj/eA0fgXa4JVwH38AJeEa
evcULMDbwxH8LPyCtczfMm6GUXif8LOX4S9sYP6BcSv8gZHhvW7RQfDR4bW3
wQ+Yyfw2YzX8hKHMzzPWQiN8E3zCt0MLfDgcx/fDd6hn/oqxCjrhQ+AcfhS+
QRnzm4wToQgfBheSe1aDdw4/qzV74iPgUnKPu+HNw73Vmm3xQXAG3wnL8Fo4
gJ+Apvg0uJ685iK8AB7jT/LedQ/vXT1ch//Oe/kO1oR7oLO/yc/WAfYkn3EK
PhWu4aVQFz6jzvYSVod7ql6+hvXhb6Dev0/eWxO4kbzHyfgkmJBcU2sNDn9r
rVmFzwn3XhkZiM+FR8k9qA5nTNl6CIXhTClLh2E6/jXfq9asYF4e/la3kmtF
+F3V3BjOiLLxMc9SMRxMzpSyMAAOJWeiS7hn6tU+aBfuiXqxG3qHe6Czq8YX
WMX8RfKZ+4fX1Fqq2THcQ/Vur57BPzPuSr5D85nPC9fWnegR/ob6dsrAbPxf
nv270Dd8R3Q3dOcW4mPDtZWJJXhjeIo/y/emjClb2mMzfEa4V7ojyrYypSwp
48qyauhdZXoxPi7cC9VcEc6osvk8OdvLw66M67+iZXiv+s/4D6GEk+4=
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt09lSDgAYBuA/skWWcAHO1DVwD7gBpGSvbJV9C5G02SmSrShLlJSdSEVR
QpIlSZYinTRjPP+Mg2fmPfpm3pn3mxIdP2tZSCAQqGEIwTyZSKYzk1hSSCeP
EqqppYUOuullgEH+MsGxRCqo4wnpPGYPtSRQxns+0EE+HznNbnqJ5zJXyOMn
S0nmKAMcYxcPeUQNwXKXaOMtb3hHO6dI4wdLKOUiR/jOYpLYQR87SeUwPSxk
Na+5x30qecB2vrGIEg7yh0OcpJCtbGMzB+gmjlW08oo7bOI6d9nCVxZwgX30
s58CNvKF+ZxnA7l0EcNKsvlNDuu5yW1uEUsxL2jmOS9p4QTr+Mw8zlFEFp3M
ZQV7+UUma7lBNVVEc5anPKOBJho5zho+MYczpFBPBtcoZzbLuUoUESTbWwwz
mMZUJjGRiOAWGc84xhLOGEYTxihGMoLhDCOUof//4h9Fj3aK
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0lszllEYgOH1fZ+9lH1lm1IiCpWiEBUVRai0kUjaCWVXnHXkxEzTjD/Q
L/DbpOzpMh1cc7/zzDzrnVmzSoYnesYjIYQVNnyskxoNoZiLLLNKeyyEO7Ty
jBjPqaGW43zi98Geruk97eAu9+nkj3mXJvCARLr5az6ueSRxkxcMkM9LLnGZ
AiZYt1OnG9qjvTwkmT42zSe1kBRuMUgcr7hCEUMUM0wqV9my+1lPcIjbvCae
Eeop4Q0nGSWNUuY5RQOHOc0Xtp15TXd0Ss9whDbe8o4PvOc6ZXzkLGOk08iu
/WktJ4MKZtgzb9J9fayZPCKLShY4RzNVfOU82dwgMMsFcqhmjggtROnnKU/I
5RjfOMov//3JD5ZY5DvzB3fJKP20UUsRKSSTRCIJxBNHjCgRAvve5h677LDN
FpuR/2/3H6+sQCU=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924633871187143`*^9, 3.892475962413249*^9, 
  3.8925181858281927`*^9, 3.892530741831665*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"5971af18-0f4e-4013-9d22-db9005ea31f6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PValue, m = 12", "Subsubsection",
 CellChangeTimes->{{3.889380228262825*^9, 3.889380230033225*^9}, {
  3.892398165763419*^9, 3.89239817022497*^9}, {3.892398236396737*^9, 
  3.8923982365901737`*^9}},ExpressionUUID->"1b28e14a-0ab9-443a-b381-\
2c7da4e680d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d12", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "16"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377905780076*^9, 3.889377913635694*^9}, {
  3.892398172686594*^9, 3.892398176168796*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"565733fc-b3a9-41ff-aaa1-97daad2d241a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.10758496, "result_sigma" -> 0.00032469075, "m" -> 12, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 2.071019001773679`16., "p2" -> 
        2.0760184173266287`17., "p3" -> 0.511534115121723, "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 1], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     1, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107585"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000324691"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.071019001773679"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{724., {67.91754150390625, 75.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{724., {67.91754150390625, 75.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924633871636343`*^9, 3.8924759624615088`*^9, 
  3.8925307418513393`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"ba143080-8739-4392-9ceb-3c2b86e5d29f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean", " ", "+", " ", 
   RowBox[{"lStop", " ", "*", " ", "\[Sigma]"}]}], " ", "<", " ", 
  RowBox[{"meanBase", " ", "+", " ", 
   RowBox[{
   "lStop", " ", "*", " ", "\[Sigma]Base"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"mean", " ", ">", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"sigma", "-", "sigma0"}], ")"}], "*", "lShip"}]}]}], "Text",
 CellChangeTimes->{{3.889378766629274*^9, 3.88937879133603*^9}, {
  3.8893789869544907`*^9, 3.889379086625688*^9}, {3.889379131581746*^9, 
  3.8893791359039583`*^9}, {3.889419106079623*^9, 
  3.889419106659741*^9}},ExpressionUUID->"90abd3a3-2556-49ca-9f28-\
e159214f4f47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"lShip", "=", "0.599"}], ";", " ", 
   RowBox[{"lStop", "=", "2.11"}], ";", " ", 
   RowBox[{"sigma0", "=", "0.0"}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"g12", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{"mean", ",", "sigma", ",", "lStop"}], "]"}], " ", "<=", "  ", 
       
       RowBox[{"PIndex", "[", 
        RowBox[{"meanB", ",", "sigmaB", ",", "lStop"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{
         RowBox[{"-", "mean"}], ",", 
         RowBox[{"sigma", "-", "sigma0"}], ",", "lShip"}], "]"}], "  ", "<=", 
       " ", 
       RowBox[{"PIndex", "[", 
        RowBox[{"0", ",", "sigma0", ",", "ksi"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8893791385519047`*^9, 3.889379142357905*^9}, {
   3.8893792201528807`*^9, 3.889379292239603*^9}, {3.889379327762835*^9, 
   3.8893793574983597`*^9}, {3.8893793879484997`*^9, 3.889379432882966*^9}, 
   3.889379470718635*^9, {3.889380076754243*^9, 3.889380135004732*^9}, {
   3.889419139724086*^9, 3.8894192097288513`*^9}, 3.8894637706368628`*^9, {
   3.892398187651577*^9, 3.892398188103454*^9}, {3.8923982324501762`*^9, 
   3.892398232696587*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ed6f1265-02a3-4031-8256-9b6380b6220a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJy1mnlUjWv7xxNlnhqoTDklGRKFEroiypjkiJQkylyG3mRKUTmno0hIJKFB
CJFSylNpRvO8d9Nu3s1Jx1R+3rXO926trN8fv/V7X3+wPms/+7nv6/Pc93Vd
z71NtbQ1shIVEREp/PnXv/91uj1ngrr6R27jiOKvDSddKEX7jHJUUgfjEZXv
Fiw2bmccKLrAzTGrhfHclbkBbp1CxrEXbF97SjcwXpUxovC6Zi3j/BEP2/1N
BYzj/T3HGfSUMy5WSF9rrlvCuP3BQGebP/MYjzE7fbDH/x1jHeuOwkmz4hkn
JviKfeHfY3xa+oqha+dDAs859bTRaW4i497DWmctAj8w3vPCcpj8xXzGG+Yo
F4zWK2W8ILTlzo8fFYzhb3N26L7RFM78geEPDH9g+APDHxj+wPAHhj8w/IHh
Dwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4k7/z+UVCK8f8geEPDH9g+APDHxj+
wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4645U+LFoQyrzB4Y/
MPyB4Q8Mf2D4A8MfGP7A8AeGPzD8geEPDH9g+APDHxj+wPAHhj8w/IHhz2zy
WkXJkEzmDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4A8MfGP7A8AeGPzD8geEP
DH9g+APDX9XyaEX7H7nMHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB
4Q8Mf2D4A8MfGP7A8HW1e12U5aNC5gsMX2D4AsMXGL7A8AWGLzB8geELDF9g
+ALDFxi+wPAFhi8wfIHhCww/+g8rV2/YUsr8gOEHDD9g+AHDDxh+wPADhh8w
/IDhBww/YPgBww8YfsDwA4YfMHx83W7HXzywnPkAwwcYPsDwAYYPMHyA4QMM
H2D4AMMHGD7A8AGGDzB8gBFv4RAXjatFlSxeMOIFI14w4gUjXjDiBSNeMOIF
I14w4gUjXjDiBSNeMOJ7Kvjg5B4mYPGBER8Y8YERHxjxgREfGPGBER8Y8YER
HxjxgREfGPH8ETs+w+l8DYsHjHjAiAeMeMCIB4x4wIgHjHjAiAeMeMCY787r
OyWPm9Sx+YIxXzDmC8Z8wZgvGPMFY75gzBeM+YIxP63Dj8wOqTaw+YExPzDm
B8b8wJgfGPMDY35gjC+55lPQLjEhGx+M8cEYH4zxwRgfjPHBGK9ZgdpMeE1s
PDDGA2M8MMYDYzww7p/c84emYXgLuz8Y9wfj/mB8378o11nvQhv7PhjfB+P6
2K2eVv5P2tn14MQm95jBCmU0ZJ8t7+yMHOIdTm4bv6+IYiYOtDlYkM/6BfDH
Tz8UlZ/mkE32dRET52LyEMlf+lvLK5J3mem9UoVPdiHt12RmOVGexptpaiUV
LJ+CnxVukTETRHCJn5TNLiVW0emmgFv2j7M5v6yjQa43qmm39b//FHJ2obGt
p2xq2X4Byz353PNbSyVncF5c8+iKelpXNWuesTyfsecB02q5jGpOabuh8165
RraewKIz3qRJhNRxIho3M8zbhSS8f95bdGczVzymRnJzSjPZ18k/GebSyNh8
Z53D16Vt3HOhyva1fq3seYD3XVJUPTGyg9MTLM6TX9ROCq0FUz+d6uTUsyr/
nqDYwfyD0a/CN/z37+fgE3771zP4gr/++Qc+4Av7CX767w/ECx9Yb4gf6+n0
miVh573KqWuzlMgpqVy6lmUv8C4qppChD67siS8gu1O+QyRC3tDII1lROjJl
5CJbsfHTqUxOQi9ZY+CoGorrvTOodkEll/Rla0ZbdD3NixUV8iWqOb+8e5J1
lxrJo2vmzaTQJs7gwsLg3MUtNOC5x9lYt1ZOeadTW9rYNhriUZL6VwSPMlXN
Vx8R5lGw66hjauovqG6N7ACN1nJauMbIs1Mul+tV22/W+7mGjm/f+LdFYBX3
rK6nVRjYQE1yEfytzjWce7y+ZtVJIelv4l/UkWnhltjxMj4otbLng/gQb/9+
2WbYsIRS8w4a120XcViYyvYDGP3SPU2JLIeRyTTfx9VmzXIeub8o8t2bmsFY
uSry7sjaZLYfwKhnfv6yF8QS0zglE3nJIQrVJK5TppDrWcb85V07EbJqsZD5
Qr+G+SzyMVB7rJNN2+IWT/v9YAmrlxjvxsZJ1Wv9YjjNg6daR2j21WPcH+sD
98f+758P0C+H/R4+PnBSHjlXd/C2Xy9i+73//kf/4RWleKvY8Am37mxh+tj1
VWw/Y7+DUY+unDupXRpeyhWPiAjqyqxj+7n//sb6DjphlZXfVsueN/Y39j8Y
+VlWIy3i/fsGzvKml3ORYTPb3/33O/ZDjIaDWml4OydtME0q6Xsb2//98wHy
rd31GdOM5Tu5z95Rc7Y3trP3DficKiHVc+trAdtP6NfgL0N1cbxVoAdncWVe
0DjLvn4QviYnjzcR5Bdxwimjnb9U17L6g3h3FI9LNDSv5+zDms34Vn31DfOV
qc+eJbOvg3OeZOVXcayd5toq1jp0lf/yPjnFu27NstYi2vM69evskjcsP2H9
Reoub5UN6nvfcHHeqeKzu4o6J/3VGT4qi+UrrMdsk9FnB8YLKEBu+Y4/xSpY
vkJ8DtEbXo7MrSNrN/8bjpbVv9TvbctNHhrVCEnrvd+761ObWP5C/Ps7li51
oWYyXHkzwnBA2y/1UjlOwbdGua8+bgj9mnCzsJ3t995petVaLh1kL/To2O5Z
Qc13lrjdjMyl5r0pCzZ9LiYjPc+31gUFlB1ynac1KIH2r89Z9PleGX0vq9/X
I/WBK9xr4OOhX0Oig9pOR4hUcDubbY2M5/zsp5ab+u14J+C8OZkjsXGNtOrD
VqeT4k3cFF2t2a6BLTTKc0n52Y2t3KZx1Wua1NvILW9W0kxdPp0rd1pZvbKv
PrsJ3EP2ahRQ+50Hs72keGw9HRUPuZG/OY/lA/EzOz83+qbSjdq3r+0k+XR5
Wt0OCbEMcsnhJ/k48Yj/MXBAKC+CRC5Kf9FR66vfmqEveDOHVpJgzJ9Be6Ke
sHru4GQgXLjiKcsnMs8URvs4pnB/rX6s0Xi2mm6YmOgaF+RwbyZuNt4wuq+e
z666u+uufS1FmurpRln31fd1Gg/FUqZVcasD7MfKdDeQYP0y6VlKPFbPUM9H
7H+0te6PRnp27G7+saNVbP9LffbY9e5wDXf22JS5jq4/+8Vm/zgVo1q2/uOL
h46XetzMHbDk/zXjYCvxrfyC6+f11XvUd9F7vpVm3a3UWe576e7YvnpfvPlD
81mHdrZfkvnhxSdedHKaTa55EfodtFtiXZXZ3r76j/pe7L/spSw/j9TyQgRq
C4pYvkS/lRuj+SX/St/5RPHd4VJnTMvokvJWj4TZqb/0Awono60aI8vJS3fz
nYcCHZZP0X+ZXXMfVBXZ9z44US0u23ZCDY3Luy5wM0j9pX8Q/5Sh1ZRWQ3bK
+h7SekUs36IfM/rgcHGLYh3rJxrO5KvO5fX1E/ONzzn7LRSS4qY7Av6yepZP
kY9XiO2RyvRqYv1F+cvEqOBVray/UPY8PFQysI3mV7wzcD3c158i32qpXwrj
zrbT++PNvdu/F1G56sdhn9YV0ivvbzKBlrnULR3KHeoqpsxpS+VnJfhT4wmv
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
BMsh
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
keMbthc7d7k54a/8Pfqm87qkzG82GBtO8XZR4ZSrigqPLHnle44xDy7ykbHf
dx6xP7CNv0+cd7T8roy92nkDU+aUcEHirdEGv/C3z4sKv4QvVZHrlTH4/jTk
sJR55NYp12WV8d/Vbo15fKFfYnxpm7F1tpm73vYxcsy15gHf25L/fVtU+OXX
2m+03U2uuq6o8NHSHjv45eCUuey2ctgNYmHuJmMcnjL3rS7/3aR/7OGV3xWZ
f27W76G+UZwLeOj3+jkhZT5aQ076L233jO+dt/j7Apr7lnuXO5X3omHKv9vp
a+f9xB3NuedscQ/Ui/5d/Y3aKGV+zz7ez3uFuUd5bji3+8Z3Xbny3iG7b/G+
ojkn2Cd/a6x27Vn37taD+tZP+V4rfwNUla/vE7qWvyv2T/l3AuNdrDfr2sn9
gu8Goets8RsD/Y3rsJ38/sCU+T19/B6vJ97jQu9gTQuxkHvjlOtb/v2GOlPD
Zinb8wZgt6O2LVLmGdQAv9STuvVy3VjjNiljK38z1RLX1vattgZ7uJ+OTBlb
bX3vbZ2r27dRfHXdK9WsAxhZ871S3gc7iQUc5W88zkVN8yEX9kb7LfYH7xxv
HDXb17WubT7V9HeQ+w9paH2apmx7W5Fr2ch6Uo/9rEkt1/Uz4zS1nnwfoS19
zew/xDn0N0/5nPzJvcj30+rm1h/dwm/w4BNMs10b3jvqdKC1Yryl/vHTSv+c
3yPFzR3VxnXizPDmzfWMwXvGer74vq7IPlrrp731vc657cyHM4WfRfHdMeX2
IteH+2utcxjj7HGWuIu5h38xBjXgfHCWqurvKPuZ28l9hab9od+dU953nZ3z
oTE5Y5yvrn5v8NzR5uzxJh9vntwf/a0HvgfoZ3Hoae6LRSFTUz4rnIWeqXKv
8f2td0IP9zXf3L9/L3IefK9zLvab7evu/u/hN/PfC/22dX8r5HXXNZnbSm0H
Of+N0PNcd+xWaftOyHzXDh9v6mdpyKUp78fy73dwnN7mBi7+74XflvzW5M7m
7v6hyPEHWp9tzQF86MHmw90+xPk1/AbvV6FvTfkOeDVkibUiJrGZyzmHS7Mf
rww9MeV7/OKQ+1M+B1eFfsV1nx7ymHvy7NBzUr4vxoZclPL98Vnoe1K+X9aG
3J3yubk8ZK578qXQL6Z85kaELLNua0LfkfJd9nHI7Smf+/UhN6Z8h94c8rh7
6YbQz7hPrg95VFzcz33s72P7B89RX/Pv4L5cZA362c/cY52/2fp+p2aMe/uj
0LNSvquuCVmQMs/+ImRSymfrS/ylfBdODnkk5TW81vVgLVaHzEj5nnuZGqR8
Z8wOecJ1XxF6ecr3yokhz6Z8hz4UclvK+5T1ed41Yg0fdh3vDFnoPqH271r/
B0LfkvJZHOk6sUajUl4/1u65kLNCDk75t8KDKb/r94Z+2vqA6S5xEecMY3E+
hqV8Rlir4dZ5vuvNWoPvVDG+FvrClN8D9tdQ14L1vM81ZU89ZW6npbxX2CdP
hpyZ8jliLyxy3clxtHme4n5iL7GvV6a8t29yb7GvZqZ8ZjgvV7uWrONJrhNr
NMV1ZU352xx/9+FvVCenvCfYD78CGz2FxA==
          "]], PolygonBox[CompressedData["
1:eJwt1GmITnEUx/F7polkyRZZBg8z1pAhDaWmlHpKiWkSM8gYW5ixL1mym7Hv
y4wlRLwUIfsyIg2yNyWJ0oS8kxDjezq/F5/Ofe69/+Wec/5PqqR8XFlGkiRp
ZOKqJckN9EMLrMNGNEJP3MIjDEETXEAp6hnbi1itMf5uO8zGJ4zBT96ZRfyI
0fjB7zriKjRwnU/cbrEHX7s5SvAOI1HHO0eJmyzWao8nqEUVz4YSH+INhmuP
81CM1sjCS7xCntasIb7GMAzGTjxGD7TEIizB7yTu7cZnjMUv7t0j3scg1PB7
NfEQ2iAXh7EGOWiLyRbf7N96hffPEs/gL9f/cJ7rczBk4K7FnLlaw+daq2c+
5yTcwUDl4DZxGQagP4rwFiNQyfPrxGv6tr56thR/knjHx+5FK82xAist9pZN
3Kd72crpCWxBb3TwNbAQ3dFUtViAlGryFcfwnfnGEw+iDF2Usy84oloXEuux
X7kqIG7AfHSz6MlvOGnRWxNUy3J0VU39eqpFL/q9D6iw6N00jmtPvpfGOKA1
C1STKu2pUDW5iQfqlUyL3t5h0ave43MwUbnthKd4ZtGbnuM9Fj2ZpRy/x2at
PQqXNYeP7YMZ2nNaOfNcb1VuPed+NtZrL35GSjWnz+Vn8gXxuUVv5inXUyx6
0XN+CRctzmJH1W6mxbXX8LRFz3uvd7bo/V0WveRn4JRq4LlvhuUWPei95z25
GHMtxvoZ8l6Yrl5JqZbTLM6y19T/G7ZpLv+P+A8h44pZ
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlulvlFUUxmdOC1O11SrYVrRiBaqItVYEV4oo4oKiVrCIRWhLqV0EY3CN
aJQYI25xQ427cY9L1LjFfYt7/KL+D35whRamFevz5P4m83745dz3zr33Pfc5
yztNPRs7NkQul/tNVIiL9bBS7CdOFn/kc7kd4j6NfxGtYiSf5v8UO8Vf4m8x
ypyfdzH3j7iMPWMir/G47L9iN/u9tkvzK8QhYnmktRMix3gcRnjP9Eh+FcUi
jaeIOhFRPrsyymdMimT9/slYrz1UVIiC6Im0p0rswdj79sRO5uxR/K7JrN0b
67UzRLXYRwxFWlcr9mXstavReabo5HffoQmf7dPUzL56fp+Kree+p4kDxIGi
GXuQOAzbKBYQy+3EZxQd+zjH+2dxXgMxHyHuY+g3wdw4c6PEcBwtdvO8gvj9
R/x3ZXJkJ/va0a2aXMgTmyE0q87EaRJxKRCnSnSuysSm9FzD3lK8vXaeOAJd
F0Z6917EMXhPDRrXEpNO8r82o/epkfJsfzFftBDnUux9xuXs9x360NKaHi+O
Jj4Xio5I+TsbWyTXm9BtDv76vmdEenaeHoktcM8Z3OUoxn7vJWIV8WzFNmTy
Y5poY+z8WMqz8+UYrHNmiThc/J5P58/nHT7zOM5tQlv7vAytS77Owf8z8bvA
/hZ8Po8zffZqrP0/R8xFm2Z0s88XoGPJ1zb8Pwm/G9kzF03t17EZPefhbxfr
ivSlInnexvnNxMdxcr2skb00Uv10YHcwvwB91sn2Rjm32onPKZFyznPrGFuH
brE2Uj6twtYx7zxz7vWL9ZHqexrWMTxdLGaun3EDvizBn8WZfSeiUSNrz2a9
9TgXnZxjy4iZNTgf3Zeie1vm/tvpvR3osJAY+16DYiDK9W/rvL4oUl/w3CDj
Ir3Cv7nnu3aGI9XeWmyp7s5CE/veiv8Pil+JvWvO3y330s/Ep5Hy6AvxJfdc
xLlTMu/wmQ+ITzjnFvE+50zw/ahAt340/VncESmnbxUfRspH678GnT4WH6Hf
9+J+9HxXvIPej4tvItXAi+IFYtWJDu49zin3virmhpi/Sbwdqc7sy3v4Y/+c
M+7nfYwbsH3M1zOuIw5dxGI2Y8eiVJMz0akbrZyr7i/ugbN49jmV+FnB/V0v
/oas5JzSd3CY8eviNWLbwz2dP67HAfwZoT6dY+vR33dxvrmW2qEXfQbYP8Z3
2e9zDS7nN8/bDkY59wb5vZczC/juOLqOnAs3o0OpVn33LeKDSHn5lrgB3fz/
6N5IOXqVeIL1m8R1jK8R14uDxdfi7kg98XaxmXOeFE9F6rP3RMpL+/CmeCNS
D3hZvBQp754WV0eqd2vuWurk/Zt477O82+99VbwSqT89Kq6M1KNuFI9E6psb
xbWR6v1z2a2ResUP4sdIPeIr9nj9d+LbSH3dd3qMezn3n4mU/7eJnyJ9V54T
z4sTxJ2R6so5fBe6tLB2A+udK93EwXXvunXNXiG24edm4mENHxIPR/oebOM+
XjOMPs7D/wENPAfJ
          "]], PolygonBox[CompressedData["
1:eJwt0tkrpXEcx/Hjae7cnXLjAiPCyTLZl0Q6dsZBKbnzBwxGZCvkYIgsJXvW
jN0QZrLO2LLMyPCnuJf3r+dz8ep5zvL8fr/n8/l+rK4p+2I5HI54fEArH3oR
jhx8wxPKEYhd/IAb2RjGC6oQCi9GEYMCnKMbYYjFPv6gCBE4wE/kIhi/0K77
SHRgQPd5OMEZCrXmJjaQgUzMYBq+iMIVLuBCMdp0BrN3EOrxjEo4cYMpJOAz
jnCPEkSjEXt6d39Mog5vPmTI9RaD2jsRi1jQfz/hDrP6zazZjB1kwQ8rWEYA
UvCIJSSjFE1YRzpe2XOE6xySlHkLVpGqNb6jB2n6bl6dheoZc/b/qNA7/OY6
jjh1tGbZM5GjPbfRhXyduVMZmWxCLHs2vOrerW461J3pqB/Xlp2VS1lfqhuT
+bE6cWqPCcuewUCd6VAdmW5y1d2Q9jYdfsWWZsHMwKkyNNkV6l371H2Fsv0L
jzI2s16rbM3Mm9luUDdmxv/hQV16lO2YZc+2yfgdLENf1A==
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt01lTDQAYBuCTpRBl6we4q/EX+A9ymf0QWbOXypYWirJvUZTEEbJEiEih
shQRUUiW1EwXZlx7zoyLZ+a9+m7e95sWTJ29JiIQCDQygnCOI4GZJJJMOgWU
EKKOZtrppo8BhvnDX2Icm84K6qljL7e5wz6+sZxazjJEOZcopI8UbnCTM3xl
GevZw3cKyKeMzySzjnc85RkPaGE3X1jKdU4zSCkh8uhlCdfI5RQ9LGYtu+gn
h52U8JFFpPKWJpq5zxOy+USQGk7wm5Nc4CLb2cE2jtPNAsIlHWWAY2zlEY9p
ZCFX6eA17XTyhiqy+MB8rnCYXxyhkvNkkMkWDvGeuazmAD85SBoNpPOQeVzm
OS9o4xUvOcdmuphDNcX8YD8VrGIjm9hAK0Xc5R5JrOQWCcSGu7GvWcwgnqlM
YTKTmEhseINMYDzRjGMsY4giktGMYuT/H/gHpaNuRQ==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0kdOlAEABeB/ZuGChQmJCTEgCTuuoMfgACw4wAwgTUSBQTqidEVQaSLN
QlF6kyq93oK6YkPCl7D48vLW76VkRNMioSAIYqSHg+BMSZUR9qjkJQMMUkCU
VjLZp4oPtLHIEuMUMcYrqjkgi4+8ZpUallnhH+2s8Ye/TFDMJLUcU0cJQwwz
Qjaf6KCedd6yQSeb/GeaUqaI8Y5DnjNDGT/4yQty+EwuR7znK19o4IRG3vCL
34ySRxfdNLHFDtv0sMsc88xSzgLNnNJCBf18p5B8evlGH09J5hlPSCKRxyTw
iHgeEscDwtza+IZrrrjkgvPQ/QfuAKyTT3Q=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463387274034*^9, 3.8924759625072727`*^9, 
  3.892530741907174*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"3a811269-ba96-4df1-969d-0f699e077432"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PValue, m = 14", "Subsubsection",
 CellChangeTimes->{{3.889380243489545*^9, 3.889380245519685*^9}, {
  3.8923982016409683`*^9, 
  3.8923982065391493`*^9}},ExpressionUUID->"507022c4-24c1-4844-83a5-\
dcbf3a7836d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d14", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "15"}]}], " ", 
     "&"}], "]"}], ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.889377905780076*^9, 3.889377913635694*^9}, {
  3.889380256770393*^9, 3.88938028161279*^9}, {3.892398211630479*^9, 
  3.892398212926096*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"84ce365c-f28b-4758-aa56-27df99d4d922"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.10717557, "result_sigma" -> 0.00028238113, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 2.023271677219686`16., "p2" -> 
        0.00006085206644041772, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 1], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 1], "Path" -> {}, "DisplayedRowCount" -> 1,
      "DisplayedColumnCount" -> 10, "DataRowCount" -> 1, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000282381"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.023271677219686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{724., {67.91754150390625, 75.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{724., {67.91754150390625, 75.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924633873117933`*^9, 3.892475962525655*^9, 
  3.8925307419268227`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"63efd85b-17d5-486c-a0e1-0e649479f23e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meanB", "=", 
    RowBox[{"-", "1.0"}]}], ";", 
   RowBox[{"sigmaB", "=", "1.0"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"lStop", "=", "2.02"}], ";", "  ", 
   RowBox[{"lShip", "=", 
    RowBox[{"lStop", " ", "+", " ", "0.0000608"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"sigma0", "=", 
    RowBox[{
     RowBox[{"PIndex", "[", 
      RowBox[{"meanB", ",", " ", "sigmaB", ",", " ", "lStop"}], "]"}], "/", 
     "lStop"}]}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"g14", "=", 
  RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{"mean", ",", "sigma", ",", "lStop"}], "]"}], " ", "<=", "  ", 
       
       RowBox[{"PIndex", "[", 
        RowBox[{"meanB", ",", "sigmaB", ",", "lStop"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{
         RowBox[{"-", "mean"}], ",", "sigma", ",", "lShip"}], "]"}], " ", "<=",
        " ", 
       RowBox[{"PIndex", "[", 
        RowBox[{"0", ",", "sigma0", ",", "lShip"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"mean", ",", " ", 
      RowBox[{"-", "1.2"}], ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"sigma", ",", " ", "0.01", ",", "1.1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8893791385519047`*^9, 3.889379142357905*^9}, {
   3.8893792201528807`*^9, 3.889379292239603*^9}, {3.889379327762835*^9, 
   3.8893793574983597`*^9}, {3.8893793879484997`*^9, 3.889379432882966*^9}, 
   3.889379470718635*^9, {3.889380076754243*^9, 3.889380135004732*^9}, {
   3.8893802913994837`*^9, 3.889380415489606*^9}, 3.8893806621417503`*^9, 
   3.8893807259274673`*^9, {3.889463679201809*^9, 3.889463689801283*^9}, 
   3.8894637593184633`*^9, {3.892398227613633*^9, 3.892398228858859*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"42a5c055-f0c9-4623-89c4-7cfa56a30532"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJztmmdQlcmXhxETomJCZVAUCQ4mMIKCeswYUDBhQmRQFB3EhIhgAEkGgjKC
oARHAUcdA4IBRBsREEHJOVwvWS45mEBx/VfNr+/WtfbLVm3Vpvky9ZQvb/d5
3u7Tp7vvGPN9ayykpaSk1naXkvrX/x2DNEdMm9bGVvcr6Hhv70JJc49rPE5o
4dxPmDpDz7iZc6j0DLcT6Q2cJy/OuurWKuIc677vqdfQ95yXpvTL85tZxTmn
363m4C3lnOOCvYat+ibgXKD6eoXpwkLOzX91d7I+k815oMkxq2/BqZzn7WzJ
U5oQxzn+RUDPLyXXOB8b6mPk2nqLwJoO92odJ8dz7tqve9Is9C3nXZHmssoe
OZwNNTVyBywp4jzjZkPI9+/vOMPf+oybuwdQBPcHhj8w/IHhDwx/YPgDwx8Y
/sDwB4Y/MPyB4Q8Mf2D4A8MfGP7A8AeGPzD8geFPOeRz5ItGxv2B4Q8Mf2D4
A8MfGP7A8AeGPzD8geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/YPj7+Ej1+yzD
V9wfGP7A8AeGPzD8geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/YPgDwx8Y/sDw
B4Y/k1Er1IbcSOP+wPAHhj8w/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4
A8MfGP7A8AeGPzD8lS2IVrP9nsX9geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/
YPgDwx8Y/sDwB4Y/MPyB4Q8MXxc/Gjw2v53HfYHhCwxfYPgCwxcYvsDwBYYv
MHyB4QsMX2D4AsMXGL7A8AWGLzB86N8SLjPcUMR9gOEDDB9g+ADDBxg+wPAB
hg8wfIDhAwwfYPgAwwcYPsDwAUb8HVttSvS6C3j8YMQPRvxgxA9G/GDED0b8
YMQPRvxgxA9G/GDED0b8YMQPRrx5Mi46F/OFPF4w4gUjXjDiBSNeMOIFI14w
4gUjXjDiBSNeMOIFI5575W8dz94p5/GAEQ8Y8YARDxjxgBEPGPGAEQ8Y8YAR
DxjxgNH/07HDUxydK3n/weg/GP0Ho/9g9B+M/oPRfzD6D0b/weg/GP39ze+3
IUc2VfP+gtFfMPoLRn/B6C8Y/QWjv2D0F4z+gtE/3f23TfZqvef9A6N/YPQP
jP6B0T8w+gdG/8Bof8jyD2Hbe4p4+2C0D0b7YLQPRvtgtA9Ge/Wq1LSpuI63
B0Z7YLQHRntgtAfG+xO/nZ5pFNHA3w/G+8F4Pxh/H5yf5bTEvYn/PRh/D8bz
sRu9LILvNvPnwfF1Z2N6q5aSzO59xSfHZVLbh+9qGvcyKWZkd2ur3Bwa9tEm
ar/oFVln+Eltcirg6x3YUypnjkrDE1J2Gf/H4kkldD9vg4JJeRTL1nmuPrXw
HdncaPZVmOBIYI2yR3/2r0pk8R80TLzjy3j+AR+ru3rF9u8MFph+MMzVv4J2
7PzXf3nM5mZso4N1FSne/fxNpUHIVjn3mnlwUQ15/b6lQjGlgo3dauRkqVjL
xw9Yetzz5ME3qpmUzuUU02YRia47/yH9Wz0rGFg5ZH1SPdlWK9+VdanlbPpb
tV3HnCb2QDRp64rARu4fvNtbTeto/xa2pFwvW3lWM6k25o754NDKpqULP41Q
a+G+waif4BN+US/Ar+R6C1/wifwMf5L5Ej7gR3L+IT7Ej/GEeDFe7qyLGB6q
lE03+vzlsysul85G5gdYvkqhzc/01NdZFdKFx2pXCozuMjOfKWHDzIUUpbou
dqjMSzbTyqGx38xyetYV0qNqhpAlfNmY0hRdQ1NipUUlgytYYPa1IdXeteTZ
Pv5yws06tspdOzxLr4G6PfA8GevWyDR+c2xKHtREsy6tmvr3vAxyqmgp3uqX
T/6rlSpWBMYwg5N5rwetLKPA4F/ce8Yns7GblIfIqFbQka2rP5mFlrH71d8a
RaHvSX9ticc8hQY226Y45e3YRspafGrUxfxWZi0r+6LIVPx9wMX7E5uG787n
4x+M+nbMYPlvVzpyKU3LdNkBUTb5ptuW/5FfwDlFSy/OItST+zAomzDFWLmE
j1cw8mmveaWqWV6lrKBfVFh7WjWvp9G+jGfhq3NRxdS+Xl7KQV5cv+P9yM94
/6jE4ZvKc/KZaPQApy8VVfx7wy/m9809jy+M7UzhzPdTy2ffcb4goBHHUh65
zM3g81lyfmN82jgEyAy+8ZymX3K1Xr6gmM9vzH8w6qNNJGe74lswVS//pZtO
o4DPb8n5jvHs8su71R8c0vj3xfyXzAdYP2/1fnhI9CmHdU3dY9L1uZLPd8n5
j/wedtQiPaepip2N059ZZi/i8x/5AYx8/YtOctSbN++Z+eULTvlG9Xz+S+YD
zJ8YHbupRRHNbOgqdfmEr008P0jmC+RfG79x6sbKrezzH481t9Y2i89X/vEZ
7ip3aOq0SOp/IP3xPIVSXj/Ah/byNV6tills8JJEne5y4voE8dcpRpVsdKrk
8w/rEeLdVjAs3si0htneqTcpsRCvd+ivQk3GBIXdLcxJySLw3aFmvl++IIyd
e+JoBinLz6qdejyb5zOM56t2H2d7GGaTT8/NRr+rJf+0X7BaVv98fUYxXZvl
9c5KIZznN8TvUKb+bHu4gIZGdEYPNUn4qd5TKfQM8fujgvsYH3YrOKirkvzv
DB+coi3Of/z8Rr9LsHu3uB7y2xRv2ueWiBaMuLNOZFzH8yH8mH8dGpIrX09+
R7SN+/dr+ml97dZ7r3fMePF6uqvA756ysFl8fpUW8KuXbwtNn665LH9oDgXq
BVie25ZH/mXOln5zU8lMbpDeGZ9CunbT08NgUSi7MOlh26TXQprZ0mkwoesF
axvWUvK3eTmZeukqZwW9Y8MHf4j91FlDlZZ/KGrJVrCjnZPDbX1rSc6n00B/
VB2b0/9L4ALfBvLf2ua+bVMjm30uoEqg2UTyf6uorlidT3nVLwTjknIoZaLr
oJ6qBSTTkrpI2zSH/rbUlmNFGRQcPSvi1y/5fH3P7r547rOOAtJ9brU2wiud
54M6A/2V6jFxfHwaRSnc/TDgMWvLv/pE4FtG9ddbH/y9wIuv91jf12nrbkvR
KKfRXvWH44XRfP53CCulhhxOZhtelPy5VauCnu2We7YlKZWPb7eGgLJDK3N5
vsuJX1AVbV7CfskO9R+nVUPtEwMmHbYqY8NXLy5LTBbXj16eYdukqZbit5T4
bBkkrgesd5hPK0qq4uN/4CzLzanBtayiSHnZsfx6yjpyZE/203o2x2DZi4Hm
jRQfVzf9m4O4PuD71fnPRluLGsnq9YFchyni+kDoc/x3w0PNfP5oX4p7KrdK
XB8ojsttuBIo4Pke9YHe86Bnaup5ZLM/XrR+av5P9cKCszGxE87n83qhOP23
OQkWRZSa6BxYFviA51vk60ND+zw30Svl9YPHF5tgp0NlvH7YGJgsWCkop6kX
BgqN/DN5PkU+HksjRysuE+9n4kWrR2vn1JCgK0zlwJOSn+qNBCNhcPSZ97To
UdCDpfUVPN+iPvNpm/bOtb2W/Af/GvX7nzU8vyI/m/q5j16zrY7XJ1N7fjZV
n9HI65OuGytCWkKaSGWeaWeimbh+Rf7dGZbeZOraTGoLBwc4vCqlApHjyhaf
TGrcuezLntBYMpNd8+ZFYgnJ2OXYLqxLY+ulJiVN+FpBVieNMybV57KHtZb3
bvlWkaZ9arck4wq2UHXOt/1Pf/T3bB/1w4urWVGllfcHzToKY9Nfr0lpZoYx
e2o0dzRT4BFF0+0eRVRgOcbPc2I2nV5+sdUiOYHMPCKc1ScWk5zppbh29Ve0
3OyPEgO/IhLKNano7L1HatvGGatuE1CX/6oe2oqpbNfoQb3mOFeQV2/zj9H3
s9g6Oi76klxJ7ctX9V3yayF7pBGdbWdeTeGrBsx8eqOSHdV1SllkLiKT/a4L
ulXUsGLVZ5EvO+vodECDzS+ffuSrGa63vDubqPVTj8iM6ibm6tPD172tiYJK
I5hWQAtz9BYuc08Rr0d7+pruK9dtod3FGT1/H97G5NVt9r92b6Hj2+4u25He
yi4HLPRU3NFCThn70j7samVS92RMGie38PXebdLGEHsZIV8/d5iHjtqUUs/r
qSmtjs+VYn7kGz3lAzcbf+SVIf23zP2STS750Uqy17zZq12TYqbsEpJzpMtB
SwtP9vJl0ZQnP+odh5T4ibmr3Uil9HUw+/yO11MddzxMG0bV0IIUs0h1pSLW
O7999dKQaqp2W/r5e0IRq/mmqZ2ZXE3DbE4Y7zEUsT4znXVFmg00yribmadj
LSs0719wIbmePCLlVyiNLyHb5zMyS7ZlUbtKytPwGvH5JuqxruPdTesCsnj9
9HX4YcGuykwamek1e2Z8yU/1mt6y6fuangmp14B1ozzO5DOXtQsPKH+tIlOD
4NXK3cX7a9RvC7fVpj2Sq+b1zbyJKgM+RFZRSUvJlGkaP9d3x2tHeN8/2UAK
Aef+PrtbXO/Jn+znNsPiHdnO8z09LymDAkMnd9rZZZHugFX1thPzyTL+9JvC
7snUVZb43GZbEYVnhSi0erygeO2gpXmfi+l8glZH/4D7LF56grGbVhmN8pGO
XHTqGsVNFRTKTXxHCrubx4bMSmSq9Tup5+tyGi8lDEy/l8rUJjzenu1bQccW
mlQcWpXDXOXbDNZoVZGGxeVeSUFCtqxmz2gj8/cUbOWh6W9bxW4P+DQxKFlE
JZs6Dn2sr2N9j2SbPulsoHVe0rMEEe9Z3y9Th400r6fzDvtPzNZoYlZmA5bq
+DbRiy0PZ3SaN7Ndrsd7tU9uJuf5U9a6S7Uyy4S34+O/NZPdJrsFsvZp1LVd
3bYgsYAGhnYzL3V7xtTuDBuh87WM3vi2m90/28D2jmGqu5MbSW2/hvaFyFzS
vXDnepFPLk0+YrbYedIjio+ac+GgTym1H9nx15Yhmcw195qGi3klWa2ZN01B
SsBqZp/cHOJbQ/cn+8wXFFSwpRZ9Les7a8l8jYyBmnwNu7VKf/XvvnX056pD
i15MaWHvQ8MUtlxq/v/7Zon75v/r98X/1+53/7fdt/5Pv+/8736/iP5K9ue/
6v4O/ZHcz4LRH8n2/7P3ZWgfjPbBaB+M9iXb+4/up9AeGO2B0R4Y7YHRnuT7
sV/H+8F4PxjvB+P9YLxf8u+x38ffg/H3YPy95PPYz+B5MJ6X/HfUY/h3MPYj
7zJ7nLFKu87r2xidTK/3fk/4/mVh9/NWK6+/5PsdMPZHOH9D/Yr9H+o97Pew
/wJjv4b9N/Zzkudt2G9jf4j9NfaP2E+jHsd+GvUs9nOIH4z9l+Tv5eAD65Vk
/JK/r0H88CGZHyXjl7yvR/zwIXlfDR8Yj4gfPjA+ML7gA34wHnAe3ZYT82ps
gz8/T140a+LdxWNv8/O0kaWFDxceTeTn2xnn9y6drP6an0efWtSteGTmG34e
jvNVnNfhfB3nnTjvxvk2zttxvo7z1mszB6fb9U8knLfjfB7npTg/x3kgzgMw
PsCYbzhfxPk6znfB+L6IF98X8eL8FfHge4LxPREf5g/GD+o/MO4H4BvPo17K
9j16Y6meiMm4zPnaKYri8w/zEfUUGOe3e+t2jMldEMufRz2C888945aobnj7
gs9PyfmK8Yrze3xPzF/MZ6ynYJ9T9nOLIooY9od4HusZ9n+4T5A8T+f12T+M
+xecB0uet+M+gp+3/5Ov8f1xHo/7BOQDyfyA+YD7D5yvI18gfyB/gnE/gv0q
nkc+xX4a9x/4Pvie8AW/eB/aRz5GPsL4AGN8YP5iPIHx/THewBhfGA/oD74X
xgMY4wHfD/1FfpbM18hX+H6S9yd4Hozn8T3xPHzie4Hxvfh5xT++0mp27orq
EudvlXfCpBnL6n/6ve6YMNPNVz0eUcapDYmDL4r3I5hP8aXHNZ1a4ni9qzr4
ld/3Lxm0fLxLz6qaop9+rxa7wXq4f3o25ehZdPMJfvDT72n84oIu7Rv7jmSH
+PVMUgwnyfP/Yc4q/Xp0ieuHRxerz12fW0W9Flf2Lpcu5OMJ4++Uju6bfTer
SfPl1y8Okdms8sxndavzeZRmEOgx5mUj2+z1ebxhQhCtW3xrh6GoloXvHK1z
7HoMXVWdvrnPvWpWvPFkXPTjl9TY7bnhy0MVbHuXtcVDpRSaKdRffHymkH1c
reVaMD+DRO2XDMtnlLL29PS3NsWZ5BhxW9eY/Vi/r+lfPSiXS4rWTD1laQY7
cZgd3D+/gMzXh485FvqSLViqs9ja5kf+PrZ3wyWTGLYgKd9TVq6U1ISeR4QG
Zsz5za+TXZSFdPVE283T9x7Sl7MddYMcyygkuN3w9YZoqni4/ZfuMWU0Ki8r
86v/a9IPCZE+tbaCpOzfPlE5kUc3Xk0YmB5dRZbPot/ebS+hPhG7vqxc++/W
8yLPfrPl3/P13N5+1t4zGn58PbdXcr53zCqcDDzD9F+pNvL5gfnW7XDdVhfh
feqYPHJJqLWI51fMP4tzp82qtWNplYZfmHq0uB5Ss89Uuyio/KkeGNuuOKVC
/w11pPYLle5RweeX3YEVLkPHlfH5hXpB22OdVotSOgW79e8tEyTg+RX5OfLc
aoULO7JoyeFuSbJT83k90apgl1Bz7Off/zWWxyq8ti+keUdLXc94p/P5eiku
5dRC9WQ+X1FvfLxbODyjSlxvuGvsCPjNqIR8jBO7e0eL6w/Md+92R3/Lp6U0
eV1XoZaR10+/h5BXuujhuFRcP5er2xpkWJZTln2zTFNZNK9fBn486z5nSwKv
X1DPvD/X483aURW8nrmf/NojMLuChpud79WalMrzg5lHZo9Af3F9g3onSnNj
P+UzlfTg/eZebGUuz9/I/ycybxvUt1WRTMdO/dgnJbweLBl4LWSXegMzbNCu
nHbnNlW25O86GFHPbtiEljUuukeKE8aeKnavY+HWQfJ95/zIn33uH/E1eM+K
TeZqObnE0f2aWXsNB1Wx7dKaOcdESfQ18aV5n7wyVn9D6aid0VuyV76y/uUY
IbumOMVr/cYMkj1+/bB1RyGLUbuxIc8mm67OemxW7pzNTnwaNT7nRh4pL/bO
3T4ihR1r2/a0X3Eh9Xv1PXiadyyrT//YpZ9cQgt1dd55l95ivUbcG251Q0Bf
heOTM/L+oirbIR+mNwjJrLpWaajKS6psj5yT6VZO/tpl1/16Z9BiQdNYI+VK
srube1x2YTaFny6uk2qopD1bHxXXd2ZSwAKBjlJgJZ1enNimG11I4b2OTQ9y
q+brSdbhxxO9X73k68XKzM/+43Rzeb42sPnu8cS0htdjAlbzxiCyjIR3+waW
CR9QpLDh0a21ZZSn2dZw5ZyArlhsVev7pIY2fomMsfQRkK5b6Zbw6BqafCZa
cHl3NdO5abGnbV4C3er5ePtEYRULuWO8fMTqRF6/afn4NtYHJpHR19Y3bani
eq5ytN6SqwsqWcjNS8VrXZJ5ffc6f/Y+14OvqePTvWPTW8T13vnDESsDx+Qy
xZXTLFSLxfVe6xT7TyvD8kj2VvRgl+pMNjI1+w6zyef1X1zOWx3FgQUULD/D
RuNaJq8H/eWvRGZcaGIu6243+X04T4OXXbd7YlzPRiU2Si2VjSCV/jfPdT0R
sckKBhpp+x6T6a+TrA+OqGWaA9OWU94zsqqb6vTkeA27GjE0ulwpnk65+AbN
yxawjV8Vl5+Ry6SOJ0HmGv7FbKP9Ux/1v7JIcf7N01EmBWxkus9I9/k5JPRw
uX6vKpKF7n+55mlRKUk7+Ap0q66wa43br2yw+bHvlX4QJ511iaL+DPIpcRPS
wLnZqZbCHDrc+vCO7doqan74KqxkRAEVBv558FflarJzYsJ242IqLG7x+1Bf
TVO7EvQ29y5jYw3dHQ1FaTTv7eXOpndJTBi0wvHZjSKaayr4dHprEg1NGXd1
XEM5nT5YfN4oLJOORFqc+cut8sf3H+23qL2B0eXC2Dv6YdReMW9TdWg501i7
pGnY41Qy2nH2gLLxWyYcfVtnjFwhOZZG6MvsjmOhrSqyo+eXkKlXafeINEby
5wodtiiXk9SqV7f357whO5uhFkXRFfRvGUE8vQ==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], PolygonBox[CompressedData["
1:eJwt1Hloz3Ecx/Hvey2EmGOX2fiRo4kopZRSK7WS1pJrzH0Nm3Nz39dcYY4Z
4h+J9g8hOXKUY7kLkRZ/IPafKBLyfPV+//Ho/b1+3+P9eb9+qRlVpZVpSZIU
Ix1TLEleYzjOsl9HXYse6IjTaME4tMZhfEYJ/nJ9A/ULSpHgBL5iLNIwF+9R
jG9ccol6Bb3QBrPRjFF6DueXUa+hD/rhAD5hDH5x/jH1EV6xPZj6EjVxbhj1
BXbjB/tDqU/w1PzafxyrpE5HJ+TiKm6iP35z/ga1CYPi2DbsRCukMA8fMBrf
uX4pdS/aoi/K4p30LvWcn0p9gxG4zf406luM1Hewv5K6Bn/YLqAuRzV+sp9P
nYl3KMJHjk2kXo/e1LC/gDoJ7ZGFRSiPtcvBQkxGB2TjPM7Fu+k346Nn6tUs
jlVQJ6AdMrEBR5GBAXiAhxgYPb4V1+hcob4Rd2Jba7TH/J6Z0aO7eI4h6Iwd
WILu0eMV5t+UFT1oim/IjjVZrPdEF+ThjPkMava6xb3moGvc81n8Ji+eedC8
5wXRk33R8/z45npsRM+YkZMxA6l45mXMR2/zGb6IC+azrWduQlW8i+GI+czl
Rg9XxxrlxJorS4diFpQpzfp+8yxq5pXNVeazqYzex71Ye63B1uipeplunsVj
MSvKpLJ43DxbyqSyfMp8dpVpzeY68yxrRpU9zbRmWRlUdmvNs68MN5rPtGZZ
/xHK7vZ4tjKsbOwyz7Yyollfb549zbxmeYv5f0NR9Hpz9Eo9/w+ER4lL
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmU1lUZx2fuTwVUBAQZYSAFFxhoAGUTnARpskEBHRYFIhRKs1wAo1Qy
irTMfWk1yCDNUAQ3CipALZWwMGw77cupU53jkqIo4kLP5zyf90x/fM9dn/U+
93t/7ztg4aLpl5a6urp19XV1VbQrY/BY4IUY/zjaVYELAofG4vTAipJ7WH87
0Dv6BwU6oSTw35h7KVCi/3K0u+tzfU+0rwUOiP4r0b4a2B94sT5lqpJ7Wasv
qQP5A0vu3SPQxdxPSsq+E+gc/dej3RvoVlIvvhxWcp3xIdHfF+2bge76ip0e
tvh7hLqxcXDgjfqU6VJSN2PiJA7s9SzpNzH1skX+cPWx1mBu8LFPSV3oHhp4
V+CowBWBCwNdA31dx9+PGkNj4Eh1dFGuu74frT18ObbkeWBzoD4RU/+SeUFm
gHt7abuH8se4F/l+2kXmOPVh/3hb4mjWNvqG2WLz3epl7Sl9HRL4jn40BbYE
1gQ+EhiuHPY/pu3BgUHaIR8jtc3cCcaJXyfasjZCHayt9tzJ59bAvYGLAmv1
ZXSgRRn0nawfjE8yBuJ7j+vYuSpwsbKT3Dcu0BoYr44ZgTMCU1xrNjcTA2MC
YwOn2iJ/ifMT1DFMP96rPHPvU3eLuie5PsUW+z93/vTApdprC7zfGE4JzFRm
qmhV92nqZt90dWBnvf32wJnuQ9/PAhsCiwLT/k/Ha94N7s4sbbD+hcDlJTmE
uIea34cDi9V/tnux8wF9RceSwJzABwOXBeYHFgTmuX62+Rui3tuNYXbg3MBc
9Z1nO08dc1yb65nNdG66443KLyzJTXDFfnkNrmD8orxCnX0ixksD55fkJXgR
foQ74cq35Du4ocZ/tPDDL/TvQ4FNtujZFtgc+HhJHoRPsL1brmS8o2Q9TS7J
R/BDJ2OZb97gLPgE3uDOcTcONR7uN/d8n/zIvto9P8444Yxu2oMneuh3T8fE
jw7uGvHBIb2sg96OazzbvXRwZU99bXAf/vXRPvvgDfji2pL8WONC+KFRfUe5
Dz+OdozeAY4bjONY/YAf4JrO2mnQl4HKEH9f/eitHDLcDWr/NNcGmSM4bbA+
wXVN+owf1PjQ0sGPzfrKHPV6XWBZSc7D/nD3YRPOGVE6OO4E42lWL3wGl41S
F3dgtL6OUBd2xrqGzEmO0THOMbpPMb4bSnLcJcrDOeO1zXqNL1tc62as/bQB
50xwDU5o1Q4cNal0cN9EbU9yPEw7Nb5rVabFfKPrpsDyktx2a+BzJWsbHXAV
PAUHTlZnjR9ZuztwV8n3FX1wzDRluO/tjuGSWcrBBzO0zdpUdc1QBv6DH89y
bZYyrY7RAb/BR+cow52El2p8BL/cFri6JLfNdY57e0vJ76wl6p6nHPe9zRzC
UQvcP9P1Gp/N1d63AneWfGfhEvjlw4FHS/Lxc/XJPwu1vddvHe4Hd407x73+
YuDKkvfuu4F7Sr6nnypZv9yB+wPrSr6RVyrbqK+cG7XxdMl3o02/L/Mc5xgr
+fl0yRpk/0OBB0u+E59RT5vnv0TZMe6n/q9RJ3n5fuB7Jfnzen3FzzsCXy9Z
6/i+TD/x9wrjJTeXm59+7mvUzlXa+nzgk+75UbQ/LPkGEN9n9RN/lxvLzcbA
/I3GOcE4Vhg7d5E7OdI4rjbGLZ4j78oyz6PRPF+r78vVO0H7N2uL2qMO27V/
k34x97DzfPj/2zPF5q3aJZ+36Qs5v0V/8YXa4l0jjhvMzZfUSyyPl/wdsVK/
vlE69t5hHu90nbhWOkYner5c8u7whn7TM7ldG+d4ntd5Nl9xfrZ7V6nncfvP
1ycHrPZ8qVPqFf682DFn+mTgCffRX6Nv37bPu4meu+1zD3gD4P2fBraX5OX+
zlM7QyK3/9EOOtDFfdyqfJMt92qwcvfYv1B7XfXpLu2u0w4+P1CSj+CiZ+zD
g9yb9Z7vWmVGuWenayvM3Wz3P6SexY6Rva/kezPKlvFFxnuv/m/Qj0XqfVA9
1OZXS94ravZrJWv2kZK1xzlyb+AlvnmeDexyzDnwLcX3BfPw10L3c9/gMepl
i/lc6tr5+kCMcDwcABcsUN8Tnin6flCSHzYpi86Nyiyw3ajdNdpCdptrzFNf
1NlK57apc7N99vA7Gs6lDrH/pHr4hsQnvhUfdd8F+rVZfx5TP7Lke2vpqJmt
nsUqZdlzYtTbyCrzTi7hd74pz7MPz2/3/NDDG8rbybvJ9wnfMf0d895M9Hz5
7p/smSO71rmnnec+w6u1OifG1Z4z573YvTvcv8Nxm/5gd4h6t9t/yn6TZ7TL
WDZbK5v0fac6aZ+xv8H+euPe5VnsDfyjZM2c6/nO1xfiWeTeZ92/UxvUUlPk
9Z8l7yWxcZbUJ9+CcDbcfUjsed54+b+kq/+ZnBntWyX5+4jov2SdDI3+yyXr
99eBPlVy16Boe1bJwS3R/rLke3NW9A+oku9nRNujSs5+IdBcJW9WVe5jzyvK
Izst2j0l37bx0T+5Sl6G+/dbS+0x17nKN6RLtM+ZkzeNAf/7R/uvku/qXwLH
V3lffhvoWyVHjYu2VMn5Z0R7YJXvzx8DA6vkhwHRdtLW6dG+XZLXf08tVsk5
fw4cUyVXTIn2sCrfoqnRHm5+/hYYXOV9GRXtvpI8c2T0G6r8DcqZv+654+Nv
SvpJvn9VMufkhXedN717lfklt38PjK2yvt/RV/wcUWVNUA/UxRvWBr7/rqT/
+PXXkr5x5r2qPHdi+lPJuMhBu3mgdg6usn5GRzumSt4cVmWtLDV/fyiZQ2qn
t/PdqswR+dkdGF7lb1PqaKq54i2qr/KevmpNEPdBVZ4TZ/Q/6CIeoA==
          "]], PolygonBox[CompressedData["
1:eJwtk1lLlmEQhl/f0ai0FSuhwoQ2otTKsoxK2zuLTjouooJChbK0aFfbTdHK
AgkiCCKQCILoZ2S7pQkJJtVBtm9eNzMHF3PP8/G988zM/RTsqNpamSZJUgGZ
MEhSYElyglgFPbCJ/BFxJ2ShZ8Al9HFI0flwAX0UvsMq8pvE3ZCJHiBehGPw
GcZxdorYDAvRxbAHXQtL0SVQh74GT2E1+S1iDoxEfyA2pX7HV7COs07iFhiD
/kS8AifhBazh7C6xBKaiF8FV9Bnohg3kD4jbYBr6N/EwnIPnMJ2z88S58BX6
oAEOwUx+yzGvdRkWm/ekXlTjD7yHs/FNzc7MZ6EZzkKPh9PoFvgJ5eS3U5/J
r7iz7qqZbES/JW6HhzCbfA7Ux9k3yCNvJO6CteiX0fu92E2X7pXhO9JsEtib
+oxU+1nMWneoMJ+Ber8Tu/gRu9VOVprXVK0OWEb+jtgO18M7k2B/6h7SrLOh
OvWZr0e/jt3dh83kveG1x7HbUeZe1I5XoJebe+1G6t5TTdWSB+W1MvPf5Dl5
YT55a3jib+xYuz0Co83voNq60//oWb1qJhPNd6TdaMb98C/+K0/IiyPM30JT
eOMLHAyPZJjvQLPfB2PNPSOv6A1MNu9ZvR6AKeih8JZ2WEo+z/y/7eGlJeZv
Q55agH4T3m2DXHOPyBua+ZPYUUfsfIL5G9Tbk+eKyAvNa9fErD7GtzSzYWhS
fwg=
          "]]}]}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0llTDgAUBuAvO0WIH2Dc5D/kP+CmUJaSJRFZylqSJVkiW9nKkpSUFMpW
spcklKIihbgw0y/wfDNdPDPn5rwX57yz4lMWrA8JBAKNjCI4z2QOc5lPIunk
UEAptSM7LXTQyyB/+ccwE4XNZg213KWGexziG6u5wyX+UMR1cuhjFbep5iK9
rGQjB/jBQfZxga+sYAPvaOMp2dTRxH56SKSKcwxxnhL28oUEKingN4VcI4U9
ZJHJWbpZTvCYp/nFGTJ4QiMNxHOLZlp4QytvucpuulhGBSf5ySmusIvPLOUm
O8mnkyWsYzv97CCdE3wilmRe85BH3Ocx2+ggjnLyGOQ4l0njI4u5QRnH+MAi
1rKF72xlM0dpJ4YkDjPAEVKpZxMPWEgpz3nBM17xkmJyeU908L+6NY8oIplB
BNOZxlTCmcJkwghlUrCTTGA84xjLGEaP9P8/WfxtBw==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0sdSU2EAhuETqhQVBSwIakSkCCqCqHS7KKDGGVcsGBi3sMIr8j7gGlSK
omBvIaGGUER4zrB45v3+/ElmMifRodHYSCQIgteMZwRB3OGVvqE9MwhW9Ssp
+p3X9LieYN3u0Ld6Ut9pp6b1Gxt0OU9qmU5pt27qd2rtKzTSxFVOseWuWVu4
xg/nfzyxt7Vcd/SR/tefVNjTekt39ReBfZsZ+7S+1zsa4bddp9f5Yt/QM2Rw
kzZa+eMuS5+SyVmyeUwOf90f0GfkEiXutTy9ywf7nM7qPc1nwS7Q+3y0K/WT
NmhC6zWpBzVGIec5RC+HWXR/RJ9TRBVH6aOYai4w530PtIQlu1QfMm/X6Gft
0WMs2xf1EpdZcR7jJcMMMsCL8FmE3xs+b5qoDp9x+LvY9h/aYpMN0qyTYo1V
VlhmiUWSJJjw+YXI/n9xD3OHUcE=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463387438445*^9, 3.8924759625725822`*^9, 
  3.892530741968552*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"0bc12758-bd52-4a76-8c63-34834defdbd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"g14", ",", " ", "g30"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.889380667118821*^9, 3.889380670430738*^9}, {
  3.8893809702950583`*^9, 3.889380972995967*^9}, {3.892518166985779*^9, 
  3.892518198020187*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"949685b9-8161-4e1a-84b9-1f19282cc285"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
TGrcuezLntBYMpNd8+ZFYgnJ2OXYLqxLY+ulJiVN+FpBVieNMybV57KHtZb3
bvlWkaZ9arck4wq2UHXOt/1Pf/T3bB/1w4urWVGllfcHzToKY9Nfr0lpZoYx
e2o0dzRT4BFF0+0eRVRgOcbPc2I2nV5+sdUiOYHMPCKc1ScWk5zppbh29Ve0
3OyPEgO/IhLKNano7L1HatvGGatuE1CX/6oe2oqpbNfoQb3mOFeQV2/zj9H3
s9g6Oi76klxJ7ctX9V3yayF7pBGdbWdeTeGrBsx8eqOSHdV1SllkLiKT/a4L
ulXUsGLVZ5EvO+vodECDzS+ffuSrGa63vDubqPVTj8iM6ibm6tPD172tiYJK
I5hWQAtz9BYuc08Rr0d7+pruK9dtod3FGT1/H97G5NVt9r92b6Hj2+4u25He
yi4HLPRU3NFCThn70j7samVS92RMGie38PXebdLGEHsZIV8/d5iHjtqUUs/r
qSmtjs+VYn7kGz3lAzcbf+SVIf23zP2STS750Uqy17zZq12TYqbsEpJzpMtB
SwtP9vJl0ZQnP+odh5T4ibmr3Uil9HUw+/yO11MddzxMG0bV0IIUs0h1pSLW
O7999dKQaqp2W/r5e0IRq/mmqZ2ZXE3DbE4Y7zEUsT4znXVFmg00yribmadj
LSs0719wIbmePCLlVyiNLyHb5zMyS7ZlUbtKytPwGvH5JuqxruPdTesCsnj9
9HX4YcGuykwamek1e2Z8yU/1mt6y6fuangmp14B1ozzO5DOXtQsPKH+tIlOD
4NXK3cX7a9RvC7fVpj2Sq+b1zbyJKgM+RFZRSUvJlGkaP9d3x2tHeN8/2UAK
Aef+PrtbXO/Jn+znNsPiHdnO8z09LymDAkMnd9rZZZHugFX1thPzyTL+9JvC
7snUVZb43GZbEYVnhSi0erygeO2gpXmfi+l8glZH/4D7LF56grGbVhmN8pGO
XHTqGsVNFRTKTXxHCrubx4bMSmSq9Tup5+tyGi8lDEy/l8rUJjzenu1bQccW
mlQcWpXDXOXbDNZoVZGGxeVeSUFCtqxmz2gj8/cUbOWh6W9bxW4P+DQxKFlE
JZs6Dn2sr2N9j2SbPulsoHVe0rMEEe9Z3y9Th400r6fzDvtPzNZoYlZmA5bq
+DbRiy0PZ3SaN7Ndrsd7tU9uJuf5U9a6S7Uyy4S34+O/NZPdJrsFsvZp1LVd
3bYgsYAGhnYzL3V7xtTuDBuh87WM3vi2m90/28D2jmGqu5MbSW2/hvaFyFzS
vXDnepFPLk0+YrbYedIjio+ac+GgTym1H9nx15Yhmcw195qGi3klWa2ZN01B
SsBqZp/cHOJbQ/cn+8wXFFSwpRZ9Les7a8l8jYyBmnwNu7VKf/XvvnX056pD
i15MaWHvQ8MUtlxq/v/7Zon75v/r98X/1+53/7fdt/5Pv+/8736/iP5K9ue/
6v4O/ZHcz4LRH8n2/7P3ZWgfjPbBaB+M9iXb+4/up9AeGO2B0R4Y7YHRnuT7
sV/H+8F4PxjvB+P9YLxf8u+x38ffg/H3YPy95PPYz+B5MJ6X/HfUY/h3MPYj
7zJ7nLFKu87r2xidTK/3fk/4/mVh9/NWK6+/5PsdMPZHOH9D/Yr9H+o97Pew
/wJjv4b9N/Zzkudt2G9jf4j9NfaP2E+jHsd+GvUs9nOIH4z9l+Tv5eAD65Vk
/JK/r0H88CGZHyXjl7yvR/zwIXlfDR8Yj4gfPjA+ML7gA34wHnAe3ZYT82ps
gz8/T140a+LdxWNv8/O0kaWFDxceTeTn2xnn9y6drP6an0efWtSteGTmG34e
jvNVnNfhfB3nnTjvxvk2zttxvo7z1mszB6fb9U8knLfjfB7npTg/x3kgzgMw
PsCYbzhfxPk6znfB+L6IF98X8eL8FfHge4LxPREf5g/GD+o/MO4H4BvPo17K
9j16Y6meiMm4zPnaKYri8w/zEfUUGOe3e+t2jMldEMufRz2C888945aobnj7
gs9PyfmK8Yrze3xPzF/MZ6ynYJ9T9nOLIooY9od4HusZ9n+4T5A8T+f12T+M
+xecB0uet+M+gp+3/5Ov8f1xHo/7BOQDyfyA+YD7D5yvI18gfyB/gnE/gv0q
nkc+xX4a9x/4Pvie8AW/eB/aRz5GPsL4AGN8YP5iPIHx/THewBhfGA/oD74X
xgMY4wHfD/1FfpbM18hX+H6S9yd4Hozn8T3xPHzie4Hxvfh5xT++0mp27orq
EudvlXfCpBnL6n/6ve6YMNPNVz0eUcapDYmDL4r3I5hP8aXHNZ1a4ni9qzr4
ld/3Lxm0fLxLz6qaop9+rxa7wXq4f3o25ehZdPMJfvDT72n84oIu7Rv7jmSH
+PVMUgwnyfP/Yc4q/Xp0ieuHRxerz12fW0W9Flf2Lpcu5OMJ4++Uju6bfTer
SfPl1y8Okdms8sxndavzeZRmEOgx5mUj2+z1ebxhQhCtW3xrh6GoloXvHK1z
7HoMXVWdvrnPvWpWvPFkXPTjl9TY7bnhy0MVbHuXtcVDpRSaKdRffHymkH1c
reVaMD+DRO2XDMtnlLL29PS3NsWZ5BhxW9eY/Vi/r+lfPSiXS4rWTD1laQY7
cZgd3D+/gMzXh485FvqSLViqs9ja5kf+PrZ3wyWTGLYgKd9TVq6U1ISeR4QG
Zsz5za+TXZSFdPVE283T9x7Sl7MddYMcyygkuN3w9YZoqni4/ZfuMWU0Ki8r
86v/a9IPCZE+tbaCpOzfPlE5kUc3Xk0YmB5dRZbPot/ebS+hPhG7vqxc++/W
8yLPfrPl3/P13N5+1t4zGn58PbdXcr53zCqcDDzD9F+pNvL5gfnW7XDdVhfh
feqYPHJJqLWI51fMP4tzp82qtWNplYZfmHq0uB5Ss89Uuyio/KkeGNuuOKVC
/w11pPYLle5RweeX3YEVLkPHlfH5hXpB22OdVotSOgW79e8tEyTg+RX5OfLc
aoULO7JoyeFuSbJT83k90apgl1Bz7Off/zWWxyq8ti+keUdLXc94p/P5eiku
5dRC9WQ+X1FvfLxbODyjSlxvuGvsCPjNqIR8jBO7e0eL6w/Md+92R3/Lp6U0
eV1XoZaR10+/h5BXuujhuFRcP5er2xpkWJZTln2zTFNZNK9fBn486z5nSwKv
X1DPvD/X483aURW8nrmf/NojMLuChpud79WalMrzg5lHZo9Af3F9g3onSnNj
P+UzlfTg/eZebGUuz9/I/ycybxvUt1WRTMdO/dgnJbweLBl4LWSXegMzbNCu
nHbnNlW25O86GFHPbtiEljUuukeKE8aeKnavY+HWQfJ95/zIn33uH/E1eM+K
TeZqObnE0f2aWXsNB1Wx7dKaOcdESfQ18aV5n7wyVn9D6aid0VuyV76y/uUY
IbumOMVr/cYMkj1+/bB1RyGLUbuxIc8mm67OemxW7pzNTnwaNT7nRh4pL/bO
3T4ihR1r2/a0X3Eh9Xv1PXiadyyrT//YpZ9cQgt1dd55l95ivUbcG251Q0Bf
heOTM/L+oirbIR+mNwjJrLpWaajKS6psj5yT6VZO/tpl1/16Z9BiQdNYI+VK
srube1x2YTaFny6uk2qopD1bHxXXd2ZSwAKBjlJgJZ1enNimG11I4b2OTQ9y
q+brSdbhxxO9X73k68XKzM/+43Rzeb42sPnu8cS0htdjAlbzxiCyjIR3+waW
CR9QpLDh0a21ZZSn2dZw5ZyArlhsVev7pIY2fomMsfQRkK5b6Zbw6BqafCZa
cHl3NdO5abGnbV4C3er5ePtEYRULuWO8fMTqRF6/afn4NtYHJpHR19Y3bani
eq5ytN6SqwsqWcjNS8VrXZJ5ffc6f/Y+14OvqePTvWPTW8T13vnDESsDx+Qy
xZXTLFSLxfVe6xT7TyvD8kj2VvRgl+pMNjI1+w6zyef1X1zOWx3FgQUULD/D
RuNaJq8H/eWvRGZcaGIu6243+X04T4OXXbd7YlzPRiU2Si2VjSCV/jfPdT0R
sckKBhpp+x6T6a+TrA+OqGWaA9OWU94zsqqb6vTkeA27GjE0ulwpnk65+AbN
yxawjV8Vl5+Ry6SOJ0HmGv7FbKP9Ux/1v7JIcf7N01EmBWxkus9I9/k5JPRw
uX6vKpKF7n+55mlRKUk7+Ap0q66wa43br2yw+bHvlX4QJ511iaL+DPIpcRPS
wLnZqZbCHDrc+vCO7doqan74KqxkRAEVBv558FflarJzYsJ242IqLG7x+1Bf
TVO7EvQ29y5jYw3dHQ1FaTTv7eXOpndJTBi0wvHZjSKaayr4dHprEg1NGXd1
XEM5nT5YfN4oLJOORFqc+cut8sf3H+23qL2B0eXC2Dv6YdReMW9TdWg501i7
pGnY41Qy2nH2gLLxWyYcfVtnjFwhOZZG6MvsjmOhrSqyo+eXkKlXafeINEby
5wodtiiXk9SqV7f357whO5uhFkXRFfRvGUE8vQ==
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
           "]], PolygonBox[CompressedData["
1:eJwt1Hloz3Ecx/Hvey2EmGOX2fiRo4kopZRSK7WS1pJrzH0Nm3Nz39dcYY4Z
4h+J9g8hOXKUY7kLkRZ/IPafKBLyfPV+//Ho/b1+3+P9eb9+qRlVpZVpSZIU
Ix1TLEleYzjOsl9HXYse6IjTaME4tMZhfEYJ/nJ9A/ULSpHgBL5iLNIwF+9R
jG9ccol6Bb3QBrPRjFF6DueXUa+hD/rhAD5hDH5x/jH1EV6xPZj6EjVxbhj1
BXbjB/tDqU/w1PzafxyrpE5HJ+TiKm6iP35z/ga1CYPi2DbsRCukMA8fMBrf
uX4pdS/aoi/K4p30LvWcn0p9gxG4zf406luM1Hewv5K6Bn/YLqAuRzV+sp9P
nYl3KMJHjk2kXo/e1LC/gDoJ7ZGFRSiPtcvBQkxGB2TjPM7Fu+k346Nn6tUs
jlVQJ6AdMrEBR5GBAXiAhxgYPb4V1+hcob4Rd2Jba7TH/J6Z0aO7eI4h6Iwd
WILu0eMV5t+UFT1oim/IjjVZrPdEF+ThjPkMava6xb3moGvc81n8Ji+eedC8
5wXRk33R8/z45npsRM+YkZMxA6l45mXMR2/zGb6IC+azrWduQlW8i+GI+czl
Rg9XxxrlxJorS4diFpQpzfp+8yxq5pXNVeazqYzex71Ye63B1uipeplunsVj
MSvKpLJ43DxbyqSyfMp8dpVpzeY68yxrRpU9zbRmWRlUdmvNs68MN5rPtGZZ
/xHK7vZ4tjKsbOwyz7Yyollfb549zbxmeYv5f0NR9Hpz9Eo9/w+ER4lL
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmU1lUZx2fuTwVUBAQZYSAFFxhoAGUTnARpskEBHRYFIhRKs1wAo1Qy
irTMfWk1yCDNUAQ3CipALZWwMGw77cupU53jkqIo4kLP5zyf90x/fM9dn/U+
93t/7ztg4aLpl5a6urp19XV1VbQrY/BY4IUY/zjaVYELAofG4vTAipJ7WH87
0Dv6BwU6oSTw35h7KVCi/3K0u+tzfU+0rwUOiP4r0b4a2B94sT5lqpJ7Wasv
qQP5A0vu3SPQxdxPSsq+E+gc/dej3RvoVlIvvhxWcp3xIdHfF+2bge76ip0e
tvh7hLqxcXDgjfqU6VJSN2PiJA7s9SzpNzH1skX+cPWx1mBu8LFPSV3oHhp4
V+CowBWBCwNdA31dx9+PGkNj4Eh1dFGuu74frT18ObbkeWBzoD4RU/+SeUFm
gHt7abuH8se4F/l+2kXmOPVh/3hb4mjWNvqG2WLz3epl7Sl9HRL4jn40BbYE
1gQ+EhiuHPY/pu3BgUHaIR8jtc3cCcaJXyfasjZCHayt9tzJ59bAvYGLAmv1
ZXSgRRn0nawfjE8yBuJ7j+vYuSpwsbKT3Dcu0BoYr44ZgTMCU1xrNjcTA2MC
YwOn2iJ/ifMT1DFMP96rPHPvU3eLuie5PsUW+z93/vTApdprC7zfGE4JzFRm
qmhV92nqZt90dWBnvf32wJnuQ9/PAhsCiwLT/k/Ha94N7s4sbbD+hcDlJTmE
uIea34cDi9V/tnux8wF9RceSwJzABwOXBeYHFgTmuX62+Rui3tuNYXbg3MBc
9Z1nO08dc1yb65nNdG66443KLyzJTXDFfnkNrmD8orxCnX0ixksD55fkJXgR
foQ74cq35Du4ocZ/tPDDL/TvQ4FNtujZFtgc+HhJHoRPsL1brmS8o2Q9TS7J
R/BDJ2OZb97gLPgE3uDOcTcONR7uN/d8n/zIvto9P8444Yxu2oMneuh3T8fE
jw7uGvHBIb2sg96OazzbvXRwZU99bXAf/vXRPvvgDfji2pL8WONC+KFRfUe5
Dz+OdozeAY4bjONY/YAf4JrO2mnQl4HKEH9f/eitHDLcDWr/NNcGmSM4bbA+
wXVN+owf1PjQ0sGPzfrKHPV6XWBZSc7D/nD3YRPOGVE6OO4E42lWL3wGl41S
F3dgtL6OUBd2xrqGzEmO0THOMbpPMb4bSnLcJcrDOeO1zXqNL1tc62as/bQB
50xwDU5o1Q4cNal0cN9EbU9yPEw7Nb5rVabFfKPrpsDyktx2a+BzJWsbHXAV
PAUHTlZnjR9ZuztwV8n3FX1wzDRluO/tjuGSWcrBBzO0zdpUdc1QBv6DH89y
bZYyrY7RAb/BR+cow52El2p8BL/cFri6JLfNdY57e0vJ76wl6p6nHPe9zRzC
UQvcP9P1Gp/N1d63AneWfGfhEvjlw4FHS/Lxc/XJPwu1vddvHe4Hd407x73+
YuDKkvfuu4F7Sr6nnypZv9yB+wPrSr6RVyrbqK+cG7XxdMl3o02/L/Mc5xgr
+fl0yRpk/0OBB0u+E59RT5vnv0TZMe6n/q9RJ3n5fuB7Jfnzen3FzzsCXy9Z
6/i+TD/x9wrjJTeXm59+7mvUzlXa+nzgk+75UbQ/LPkGEN9n9RN/lxvLzcbA
/I3GOcE4Vhg7d5E7OdI4rjbGLZ4j78oyz6PRPF+r78vVO0H7N2uL2qMO27V/
k34x97DzfPj/2zPF5q3aJZ+36Qs5v0V/8YXa4l0jjhvMzZfUSyyPl/wdsVK/
vlE69t5hHu90nbhWOkYner5c8u7whn7TM7ldG+d4ntd5Nl9xfrZ7V6nncfvP
1ycHrPZ8qVPqFf682DFn+mTgCffRX6Nv37bPu4meu+1zD3gD4P2fBraX5OX+
zlM7QyK3/9EOOtDFfdyqfJMt92qwcvfYv1B7XfXpLu2u0w4+P1CSj+CiZ+zD
g9yb9Z7vWmVGuWenayvM3Wz3P6SexY6Rva/kezPKlvFFxnuv/m/Qj0XqfVA9
1OZXS94ravZrJWv2kZK1xzlyb+AlvnmeDexyzDnwLcX3BfPw10L3c9/gMepl
i/lc6tr5+kCMcDwcABcsUN8Tnin6flCSHzYpi86Nyiyw3ajdNdpCdptrzFNf
1NlK57apc7N99vA7Gs6lDrH/pHr4hsQnvhUfdd8F+rVZfx5TP7Lke2vpqJmt
nsUqZdlzYtTbyCrzTi7hd74pz7MPz2/3/NDDG8rbybvJ9wnfMf0d895M9Hz5
7p/smSO71rmnnec+w6u1OifG1Z4z573YvTvcv8Nxm/5gd4h6t9t/yn6TZ7TL
WDZbK5v0fac6aZ+xv8H+euPe5VnsDfyjZM2c6/nO1xfiWeTeZ92/UxvUUlPk
9Z8l7yWxcZbUJ9+CcDbcfUjsed54+b+kq/+ZnBntWyX5+4jov2SdDI3+yyXr
99eBPlVy16Boe1bJwS3R/rLke3NW9A+oku9nRNujSs5+IdBcJW9WVe5jzyvK
Izst2j0l37bx0T+5Sl6G+/dbS+0x17nKN6RLtM+ZkzeNAf/7R/uvku/qXwLH
V3lffhvoWyVHjYu2VMn5Z0R7YJXvzx8DA6vkhwHRdtLW6dG+XZLXf08tVsk5
fw4cUyVXTIn2sCrfoqnRHm5+/hYYXOV9GRXtvpI8c2T0G6r8DcqZv+654+Nv
SvpJvn9VMufkhXedN717lfklt38PjK2yvt/RV/wcUWVNUA/UxRvWBr7/rqT/
+PXXkr5x5r2qPHdi+lPJuMhBu3mgdg6usn5GRzumSt4cVmWtLDV/fyiZQ2qn
t/PdqswR+dkdGF7lb1PqaKq54i2qr/KevmpNEPdBVZ4TZ/Q/6CIeoA==
           "]], PolygonBox[CompressedData["
1:eJwtk1lLlmEQhl/f0ai0FSuhwoQ2otTKsoxK2zuLTjouooJChbK0aFfbTdHK
AgkiCCKQCILoZ2S7pQkJJtVBtm9eNzMHF3PP8/G988zM/RTsqNpamSZJUgGZ
MEhSYElyglgFPbCJ/BFxJ2ShZ8Al9HFI0flwAX0UvsMq8pvE3ZCJHiBehGPw
GcZxdorYDAvRxbAHXQtL0SVQh74GT2E1+S1iDoxEfyA2pX7HV7COs07iFhiD
/kS8AifhBazh7C6xBKaiF8FV9Bnohg3kD4jbYBr6N/EwnIPnMJ2z88S58BX6
oAEOwUx+yzGvdRkWm/ekXlTjD7yHs/FNzc7MZ6EZzkKPh9PoFvgJ5eS3U5/J
r7iz7qqZbES/JW6HhzCbfA7Ux9k3yCNvJO6CteiX0fu92E2X7pXhO9JsEtib
+oxU+1nMWneoMJ+Ber8Tu/gRu9VOVprXVK0OWEb+jtgO18M7k2B/6h7SrLOh
OvWZr0e/jt3dh83kveG1x7HbUeZe1I5XoJebe+1G6t5TTdWSB+W1MvPf5Dl5
YT55a3jib+xYuz0Co83voNq60//oWb1qJhPNd6TdaMb98C/+K0/IiyPM30JT
eOMLHAyPZJjvQLPfB2PNPSOv6A1MNu9ZvR6AKeih8JZ2WEo+z/y/7eGlJeZv
Q55agH4T3m2DXHOPyBua+ZPYUUfsfIL5G9Tbk+eKyAvNa9fErD7GtzSzYWhS
fwg=
           "]]}]}, {}, {}, {}, {}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0llTDgAUBuAvO0WIH2Dc5D/kP+CmUJaSJRFZylqSJVkiW9nKkpSUFMpW
spcklKIihbgw0y/wfDNdPDPn5rwX57yz4lMWrA8JBAKNjCI4z2QOc5lPIunk
UEAptSM7LXTQyyB/+ccwE4XNZg213KWGexziG6u5wyX+UMR1cuhjFbep5iK9
rGQjB/jBQfZxga+sYAPvaOMp2dTRxH56SKSKcwxxnhL28oUEKingN4VcI4U9
ZJHJWbpZTvCYp/nFGTJ4QiMNxHOLZlp4QytvucpuulhGBSf5ySmusIvPLOUm
O8mnkyWsYzv97CCdE3wilmRe85BH3Ocx2+ggjnLyGOQ4l0njI4u5QRnH+MAi
1rKF72xlM0dpJ4YkDjPAEVKpZxMPWEgpz3nBM17xkmJyeU908L+6NY8oIplB
BNOZxlTCmcJkwghlUrCTTGA84xjLGEaP9P8/WfxtBw==
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0sdSU2EAhuETqhQVBSwIakSkCCqCqHS7KKDGGVcsGBi3sMIr8j7gGlSK
omBvIaGGUER4zrB45v3+/ElmMifRodHYSCQIgteMZwRB3OGVvqE9MwhW9Ssp
+p3X9LieYN3u0Ld6Ut9pp6b1Gxt0OU9qmU5pt27qd2rtKzTSxFVOseWuWVu4
xg/nfzyxt7Vcd/SR/tefVNjTekt39ReBfZsZ+7S+1zsa4bddp9f5Yt/QM2Rw
kzZa+eMuS5+SyVmyeUwOf90f0GfkEiXutTy9ywf7nM7qPc1nwS7Q+3y0K/WT
NmhC6zWpBzVGIec5RC+HWXR/RJ9TRBVH6aOYai4w530PtIQlu1QfMm/X6Gft
0WMs2xf1EpdZcR7jJcMMMsCL8FmE3xs+b5qoDp9x+LvY9h/aYpMN0qyTYo1V
VlhmiUWSJJjw+YXI/n9xD3OHUcE=
         "]]}}}], {}}, {GraphicsComplexBox[CompressedData["
1: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
oCLzxbp2/RqYw9XB+wxeCCh0+hj9ssQ6dsC/wSb1QBZZ7/L93NW4kpmO2nGz
dlwuTTSp63NyrogtMitNiDLII7E8xWFzbBELFGu5NFwqIN3yld2SvuYzlZWL
bO9UCmnitn+alvlmsvj1x5SuXCqmXvWCOINfU9mGEQ/yzZRKKWZ7YfSH5hjm
RbPmbij+1ndr9RP0WXWFPricnZ27XkROB3/+uuBeDCVaRh0OHCYmN8PxLSm+
KSQ06K55cEMlfV6WbHxiZiqJn1qci/CtJJW72Qcs+uZQsd2nJv+OKrq4Ys8I
3ZP55HJi0rWLjyWktt7Tzd+rlLyXu02eMraG11OPmAkqy6/XkM/UrdbXNMt4
fUU/8fi0/+ju6zOov0a4WfgDKc8XqLdlq6tdGwZm836iKeWQaGlINtWyQVkq
MhHPFyf7BMuCz5fyfIF6fNRqcUjOmALaYZ58rGWwkK8Htf4nlH7qp/i9Iuqz
+WazKyIqVpxn/HrXatD6EqqIWCq6eeUNzy9Yf7+FeMxJ/xa3TPeHGeN6POL1
20D10sHXdT7892uo53/GT5jkpiWi9/m6hmWbbvP8gXwz236/yQprRT+4I+Oi
6bORVVSx4XalcUQqzycxnoWzdz0T8HyCfqBvwlpNjcdV5BoYWf9+Qh7PJ7zf
WXOxuItEQiu0kk8ND5aze1oTPvcWvaU5WtVhXppyNjuxdnrE0gxiJKwasVnG
DlvRo1OfMmjJlurX747XsJijo1WXLsim2Z9PebSq1rDAxIDInH3f9luBvut6
r5Uw6d+fL4dNyqF5B1acjfcuYyr+k6qVNuST+bGwja9Citj946G/v79WQE3j
9GbsXZvD+h6oOZ49p4hm6zmpeXRLY8scBe3l90sofFM/9Quuicza751Af0cZ
pcSrjWiZEMSuFffb7n29gixuiY/bzLlBBZe+aIVcF5HulDmV9maJJAt0cDHM
EdPUscaaI8dm0pWHLkp5ZlU0N32h87WdOXSp5anOXyoS8rilNM+texEdW/8m
78ddin731tPLHicmveX1Tyc9++QrP0X9Kt/n/9TRKY/XJ/0/F5wr1Sjk+TXx
/bAs9dJy2ic1mSAsamHOPRyMS0VvaMjeH5aOy2lh22a/CcutUfQ/Bx5nyKrj
Mulwb+Xh00jGvAa2tRiNzKSLJRWDBl9sZmuXnLs63j+TTM0PHL26uYmpqL6Q
rRgiIM8hffpbxzaxtJ/3bdBXEvD+qOPNlVV+EQLqxuSn1hs0Mh1JvsejLQJa
lr3E3q9nPbP9rGF5qr+iH/LPHzeRqnLIcUVFa5i8immGLPzL1S6HdBaL+lgu
qmIxTRuXb7meQ9bnZ+StvC5mYQ4tFsG/5PL+aKWPSWO1VyUFsA6Vlvhk2n4j
53eZnqIfUu+2JVJ3UA1dn9n9xtdtxWSd4BawIbaagqckncpNLqbcsBXT4l9X
03rl3ttlhi3MJDzvzgOHt7wfyjU6p7s/4S2FJi9wO6/+LX+GLnJc9DCL1C6p
qcmv1bI+JuKjx0uz6EVxj7sT+tby/kPYenm89fwKlmBg6tn4WtE/JZi+rWoz
zKf2sZPEtkElzMjsbIukPZ88BetDfk9S9MOCMBsV80l5rL9dh5qxn6K/erDp
U2iQbhG5bZacmvpHFrObfnvr3dpv+7xMmxL/6wJeTz8HJ51LC4lharMs3pZW
ftt3uTTEd22LYk7vNg7uZ6n4fevBA7k51058471XOtasucH7Ne2OIu8oyRz2
m63maK2uInKIc01WfnCe9x/OO2bu3NNFzkalS2/ZumTQCB/vz7USKTPw773c
elgWhS/0l/+8q5o1hMw7cflxNl3+a4Bj73li5qRnXVV/O5daisf1lgiFTGNz
1sLB84XU+ovHzoPvkpnTUaPVrx+V0qitPX/RrnvGps9PNz+jXU6XXPX12o5H
Ub+BO6Oux4tIKC0Ud7n6jAplXu+3uonJIzc8quR1LtFxt/HRdhJ6kG3ot89c
SGe9KzQ8VappZUXbse1Ls8iwZ/THaWFVZFSrf+2raTkpFWRuc/asoen7v7ib
fE1nCXeKMscsKqHN4lOuGrfTaV3685t2dZX0HzYVoZU=
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXn8l1MWx5+LSkXWaNVCZYmiFCqSdvEjUipRNLJU9jVEiEFEtuwkyRay
xJCRypKQUIgIDYZQjHXMec99P6+vP07ne59z77mfz7nL83l+NRsxtv+Y9Yqi
mBL/rB9+q7AUxrOt9TyfEnZf2PSwxmEbhtUMq2d8g7D6+mph2xivFdYwrHpY
jbAGxmk38hm5mti3dljLsM3CNg9rFrZR2MZh24VtErZp2LZhdWy38BljdpID
2Juaj/GtzLdF2Pb6LcN2DKvrmNaOg1O3sJ3DdglrI+6Gtuvb3t05wNjWOJx2
1VOnDsabh7WzLnDdzTjtjsbhtIcervuID06d5QD2PY3Dey99S3NsbF06+ayV
POqJe++wHczb1dzw3ldP37fC5oW9FLbfX2rQQ57w66mHx4FiAktvebYP66On
Tn311KOX4+h3gJwZ389a0K4yHzwO0lOD/mFd5DFADmA/TM+6HWKc+g0RK3MO
NA6nwfIhNtQ42AcZ7x52uL6HPJq43kfYF34nmpdxR8pz/7BjxQqW4XKD6wg9
NTtaD9ejHEe/v4Ud7PhjjFODUeY7NOw4PTU4Xk8NRosF7GP0cD3B+EA5tXEt
xxqnTqfIbZjWRz4nGadOJ+vpd6r94H2aHh6n6+F9ljzhcab8aV8gbnCdEzZS
3ufqqd9449T4PPnDe5xx2hcah/dFenhfJj5wXSpu+E0wDu+L9fA739xgusRn
jLk77Oqwa8ImmoO8l5sbrn/XnxF2j30nh/VMmfMVYVeFnS3Xq+UJjxvEPcEx
54nlWj11uk4/3tzj7He9/Bk/xTjtSc7DHDeaG643y4163OQz2lN9Br9b9NRv
c14EKa/hrT6D9x1hV8qpU8Rbp1yDu5wbfncap80+5Sx2DZsmT/hxv8wOe6LI
75YpcpouZ9p9Usb0UNgM49Tsfj38tow+66WM8QG5wXWmcdqPhN0u9ll6MD4Z
dq9zznb9wPiocTg9pmcvPGhuava4zxjzjJhmymeaeZ8yN/ye1s8wdq085/iM
8ewhzg3nZK64wft82MO25zsH2F8wDt5/6sG7wDjzzxMr/F40TnuhcXC9rAfL
YvOSb5Fzg6VfyjxfCdsqfm8Q9myRbaa1fy3sOcd0iXiblGv2ujnI+4a5wfKm
fp61mG5tlhR5f8B1qXzAu8w5wMX7g3uYu3u5z5hnhXl5j33ofLSHBJaqlLm+
b1+4fqCn31dhK8M+CXsv7FXn+8h84FolDub8wvHM87Hxt8NqxjwbpvzsiPD9
U86BVuJd/H+dEc+qp8xvtTnA/rXzfxr2bz1z7ht924Wti9/fhn0W9nnYgJTb
P4Y1iN+1Us73fdiXcvpBT+41jgP7Ouf4JmytcdobR46NUu77n7DvzPeznny/
h/1kfFDKsT/CfjG+VozLrXfj6LNJyvFSX27l3Kvsu1/EO6ScOxmvaz3edU0+
1bMGpe6kpmhJdBc6DN3XtMjvbPRfM9voo+a2axlHg6Ej0VRoL/QR+gGdgc7j
XYkGQqc2/sscbY2hPVs4Hg3a0jbY0VdorZrOU47f1fH1zb2z9WjtmHo+o11H
XOBGw7ZyDjQUe79nUdFwXc2HhukmZ3RXezl3sE2ujrZL3dlRDnvaLvUl7c9d
Q/Z6dfk3kFM7sTRxnnbi6+T4xsbhXM1x9eXXTdw7iX0fa9pdDqXWLLVnD2PU
oLNz7Og41qyn76IziooG5Y7gnc37a6Kc0Vp9HYOm6i9ntFk/OR9oGw5Vtjsa
Z3wXxx1cVHRqlVgONS+cBtgudeqAoqIvB8lpsG3qMdB+4ENTDbMGQ+zXx2dH
iOMo+7EXhtqvt/Gh1nGQecE+3DH0Q+eMLSp6dIRzo7uOlxt6bKRcj7UNt1G2
4XyM40s9WurT4+zH3CeaFyyjbZc6dXRR0Zcnif0U24PFOEZ8Z7q+w1zXU+TE
s9OLis4eXlS06alFRZueZt06uJ7l90mfoqJBz5HbONvMjY66SE5os/PkeoFt
uI23Pcr4uKKiTUuteqH9Sg06Qc6X2IbzpbbBiua6rKhozcvlPNF+zIEuRHdx
aV5hjc712SSxTLYfOhRtdqU8J9lm/c5ybKlBJxu7s8iaCdzosuuKil6cKj/0
2PXyudE2fG6yfaHxKeJmXKlJb7YfPG81b2s1HXw7p6w1U8p47xIT/O62faUY
0Xkj5Xa2nO+xH5zQF9OKirYueU6zH+9vdAeag3cP98sOYkenoeH6Bo79w9ZP
GTfap9Sb+PvFhx6bJb8H7ddHTTS1qOjLR8WNvkPnoWcfsg6lZn1EDo87hjnQ
Y3PEjiacXVS0Zqk98U+KfY4x5kCjPSfn2eYF+7PmbaO+A/PeKes5+IJjruOp
0VJrBia0XKlD8S8UFX250Dnm2Y85X7LdT102R6wLiorOnW8/9OYrYgM3uuxV
x6PN3nROdNxi8S2yH3hft32vczwhvsXGZtmeW1S06RvOvcQ55st1ievY17Ws
UsctFBP65F3nXmabMejBj5yP9+nyoqJB33e+D20vMr7MuRlXatsV9quuxnzb
+dBJK4uKTvrEvLy/PzPvF7bJu+ov/dB+X5l3tf1W+uzLoqJH6ddfjQmOYSlr
XPTuU9Zggbm/cUw7dd9a50ZXolkHqGfpt1vK+rV2yvOhM78rKvqVdi016Rfm
XVdUdOta+6FbfzQ/49GnPxUV/Uq7W8p6uk7KMfTmb47/xX5DU/5mqJayvv3d
sd1T1qmbplzTb8WPtv3DsWjY/5qTO7XwbwFNwm/hd3Uv7zPu9L6eLfZS0/B1
/aY9KKyGe4uzuIHfYM3Cb+03GOu/od8XS90T7IcDxM652j7lb5KPXVvqSA0P
swbUcbvwjdT924Y19FviENeEcc3D1/e7ZY21hj/fC9s5doeU22us5SZ+G7QI
v43fAHwLtPD34daS+u6Yco3428MuKX/b8w7oKib2x64pf3+W9djae2GflPHV
s3Z1vUOrixnuNYwvdU228H1Z29yr5dTIPVTLOsBld3GXnLZxvfcIv5nrvbn4
CzE2c43g0VRcDeRSSyzNredyzyjnBlwtxVbHvcoaNbS+4IHT9vJi33BfP+Ae
20lu7C3eo7xD26bc5x8+29na4mnfZo621ratteZ3x5T39J/xu33KtfjF88fZ
Xutzfv9qzl3Mz7P29qdWe1mv3z0nv+k7WsM9/c1crG0r15dne9iHvNTyFjF3
kRcaobNcqFk38axvH+qE39v+zLufc7Wzzr96F3V1rTa1D3jx3e3P+e2d8hnm
u6OX9e5hH8Zx5omdYc07ia2XY1jf5HPG9jYPz+HGO2aq90Mf9zO6o6+/y//P
4HuIe4H3KO/QL8Pf6L4v/17G+38pe0Tuy8MvS/ncfEMt3fcrwz6Vw8iwufbn
jueu/1eR7xXuRu6Wn1jnlM8Gz7g33/FOYgz3Un9/M3ZJ+MWu0xVh063VB2Er
XLMfwq5O+dzQ9037fxI22/pzb3AvcwZvCv+w+T8M/6jr+HT4k91v34dNTPlu
ehuM7oPLw+5N+ZyNCVvo2DfCz3C9Xg1/Vcp78xrxgQ0Mg8X/nnnJeXDKd/c7
3sOsC3v4wJTb/KZ26IaF9iFWzXFVju1nf/qWdVzhvT1QzAc5Xw2fEePu4t7u
b00G+Hydcw4xf5XjuQ8HyYd9/nn4ySnfoS+EPZ/yffBc2LMpn+9DU56D/HPC
jxfDz+biXTnYnKzRx64x67s6bErK5/vJsEkp31eHmLe22GlzJ5dagffsZa4l
6zg6bE3Kd/GqsDtSPn93h91gPceF3ZXyHcDeZ0+znxl3u2OJv2ufl8MWpHxn
TQiblvK787qwtSnf6y+FzUv5nrgn7OaU9/sIcrtn7gz/Vsrn+7WwRSnffQ+F
jbL+L6ZcO+rG+ZuV8hk8P+zBlO++R8JOdE3B+7iY2ePsV/bq2eHvS/md8VjY
WGvOWTkp5fNyafj51pazcrxrd1HKOMBwZNhTKb8/LrCO1HCG3G5z7w0Qz/3h
j075Ljoh5XukkXW61lodm/J9xF10jGvPug9PeZ+xx663LtSEfTfT51+HTU35
vXecbX5f7NrUlNMz8rot5fuIu+iclNeA+nO+P0r5vLyecr2o1f8Ar0SfdQ==

           "]], PolygonBox[CompressedData["
1:eJwt1GmIzWEUx/H/sYREZA9j7pgxg0xGJktCMnVLKVJqEmbIzsienexjy07k
hWlERGSJsUV2MTK2bIMkSV7wRonv6fxefHrmP/c+z/88Z7mp0rKRs+okSZJG
PSy0JJmODsjGAkxFe3TGJHzFcNzj+3NZS9AKmZiN++iHf3w+n3Uy2iEL0/Ad
o/wcPp/C+g0jUMPzDdZXGIS2WIsNaIKuWILtaIl8jMdnpFHO/jLWnyjGX55n
sP7AaPzmeR7rRLRBCsuwE61RgE04hI4oRAWOoCEaYRXW6O88TMAXDMNJzt/i
eUEf5WARZiIDOdjvcWCszlxvkfNs3fG1cu65HoxzmINO6IZtFjnPVA52YTly
dadKfEIRmuGocuS56cJ6FmeUG4/poGLM0Z13WOQopZy8tKhhlmpyQj3gtc9V
bOPQXTHuVY7yVPMDqqHXznvoGq6jJ6o4Y6VFzb3WDXBVNSnQdy7gPFroHVW4
gh5eJ/ZfVk/k6393cBe98SeJ3lqts73HvHdXoL5FD3vtlqKuavgO7zEETVGD
Z4p1IGs1nmIADG/xRu/yPTdVQ69dLzzHC4u9/o7D+IChqtEe/MIYxXQapyx6
1WfQe2kz+lr01CXc0tmN8RAX0Rz9sRWPLGrtOfPe36i7+Az47K3TXp9Bn53F
uktasey2mEWPyXt1n8Wses/6bJVb9JbP2BM8Vi08Jx9RazH7fsfbFjNVqJr4
XR4oVr/TcRyzmB3/DfkP1viHSw==
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ISfnwvv/CYzJpQ72zCXX5Pn/KW9nvQ==
           "]], PolygonBox[CompressedData["
1:eJwtlFmIj1EYhz/nHeSCC6SxG1nHWEuWiGQZ+5jBmLE2ZBAzdhcuXblRsiYS
SfZ9kBAhOykppaSk5I6Q3fPr9108nef8+773nPN+v/Mvqqkvr0tZlo2HAlgZ
WdYLTvJjAyzFu8Ix/CK0wmfBHfwejMFL4Sq+A1rj/eA0fgXa4JVwH38AJeEa
evcULMDbwxH8LPyCtczfMm6GUXif8LOX4S9sYP6BcSv8gZHhvW7RQfDR4bW3
wQ+Yyfw2YzX8hKHMzzPWQiN8E3zCt0MLfDgcx/fDd6hn/oqxCjrhQ+AcfhS+
QRnzm4wToQgfBheSe1aDdw4/qzV74iPgUnKPu+HNw73Vmm3xQXAG3wnL8Fo4
gJ+Apvg0uJ685iK8AB7jT/LedQ/vXT1ch//Oe/kO1oR7oLO/yc/WAfYkn3EK
PhWu4aVQFz6jzvYSVod7ql6+hvXhb6Dev0/eWxO4kbzHyfgkmJBcU2sNDn9r
rVmFzwn3XhkZiM+FR8k9qA5nTNl6CIXhTClLh2E6/jXfq9asYF4e/la3kmtF
+F3V3BjOiLLxMc9SMRxMzpSyMAAOJWeiS7hn6tU+aBfuiXqxG3qHe6Czq8YX
WMX8RfKZ+4fX1Fqq2THcQ/Vur57BPzPuSr5D85nPC9fWnegR/ob6dsrAbPxf
nv270Dd8R3Q3dOcW4mPDtZWJJXhjeIo/y/emjClb2mMzfEa4V7ojyrYypSwp
48qyauhdZXoxPi7cC9VcEc6osvk8OdvLw66M67+iZXiv+s/4D6GEk+4=
           "]]}]}, {}, {}, {}, {}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt09lSDgAYBuA/skWWcAHO1DVwD7gBpGSvbJV9C5G02SmSrShLlJSdSEVR
QpIlSZYinTRjPP+Mg2fmPfpm3pn3mxIdP2tZSCAQqGEIwTyZSKYzk1hSSCeP
EqqppYUOuullgEH+MsGxRCqo4wnpPGYPtSRQxns+0EE+HznNbnqJ5zJXyOMn
S0nmKAMcYxcPeUQNwXKXaOMtb3hHO6dI4wdLKOUiR/jOYpLYQR87SeUwPSxk
Na+5x30qecB2vrGIEg7yh0OcpJCtbGMzB+gmjlW08oo7bOI6d9nCVxZwgX30
s58CNvKF+ZxnA7l0EcNKsvlNDuu5yW1uEUsxL2jmOS9p4QTr+Mw8zlFEFp3M
ZQV7+UUma7lBNVVEc5anPKOBJho5zho+MYczpFBPBtcoZzbLuUoUESTbWwwz
mMZUJjGRiOAWGc84xhLOGEYTxihGMoLhDCOUof//4h9Fj3aK
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0lszllEYgOH1fZ+9lH1lm1IiCpWiEBUVRai0kUjaCWVXnHXkxEzTjD/Q
L/DbpOzpMh1cc7/zzDzrnVmzSoYnesYjIYQVNnyskxoNoZiLLLNKeyyEO7Ty
jBjPqaGW43zi98Geruk97eAu9+nkj3mXJvCARLr5az6ueSRxkxcMkM9LLnGZ
AiZYt1OnG9qjvTwkmT42zSe1kBRuMUgcr7hCEUMUM0wqV9my+1lPcIjbvCae
Eeop4Q0nGSWNUuY5RQOHOc0Xtp15TXd0Ss9whDbe8o4PvOc6ZXzkLGOk08iu
/WktJ4MKZtgzb9J9fayZPCKLShY4RzNVfOU82dwgMMsFcqhmjggtROnnKU/I
5RjfOMov//3JD5ZY5DvzB3fJKP20UUsRKSSTRCIJxBNHjCgRAvve5h677LDN
FpuR/2/3H6+sQCU=
         "]]}}}], {}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.2, 0.5}, {0.01, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924633874880447`*^9, 3.892475962601685*^9, 
  3.8925307419788513`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c2aac3f2-0f74-4224-8fbb-920db9d615c8"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Define DataRegions to draw regions from data", "Subsection",
 CellChangeTimes->{{3.8925188921134977`*^9, 3.892518902804174*^9}, 
   3.8925190415546207`*^9, {3.89252006452481*^9, 
   3.892520076912715*^9}},ExpressionUUID->"6f934b23-5476-4ee8-b2b4-\
0542a1ea6f45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DataRegions", "[", 
   RowBox[{"data_", ",", " ", "cnds_", ",", " ", "rCndsFn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"filteredData", ",", " ", "r"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filteredData", "=", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cnds", "[", "#", "]"}], "&&", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "<", "0"}]}], "&"}], " ",
          "]"}], "]"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "=", "#"}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rCndsFn", "[", 
               RowBox[{
                RowBox[{"r", "[", "\"\<mean\>\"", "]"}], ",", " ", 
                RowBox[{"r", "[", "\"\<sigma\>\"", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"r", "[", "\"\<p1\>\"", "]"}], ",", " ", 
                  RowBox[{"r", "[", "\"\<p2\>\"", "]"}], ",", " ", 
                  RowBox[{"r", "[", "\"\<p3\>\"", "]"}], ",", 
                  RowBox[{"r", "[", "\"\<p4\>\"", "]"}], ",", 
                  RowBox[{"r", "[", "\"\<p5\>\"", "]"}]}], "}"}]}], "]"}], 
              ",", "r"}], "}"}]}], "\[IndentingNewLine]", ")"}], "&"}], "/@", 
         "filteredData"}], "\[IndentingNewLine]", ")"}], " ", "//", " ", 
       "Normal"}], "//", "Transpose"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8925189151902857`*^9, 3.892518926798952*^9}, {
  3.892518964920096*^9, 3.892519037660164*^9}, {3.892519115510208*^9, 
  3.892519118363359*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"9fec5f42-608e-4f45-a0c2-1dde82975a15"]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 12 DataRegions", "Subsection",
 CellChangeTimes->{{3.889463297602539*^9, 3.889463303822102*^9}, {
  3.889464437752005*^9, 3.8894644538021717`*^9}, {3.892272458655945*^9, 
  3.892272459359953*^9}, {3.8923980624670343`*^9, 3.892398062965094*^9}, {
  3.892445031088294*^9, 3.8924450312220173`*^9}, {3.892518211944042*^9, 
  3.892518245372559*^9}, {3.892520050293426*^9, 
  3.8925200530611067`*^9}},ExpressionUUID->"22cb7753-475f-4950-8e9a-\
2aff206de546"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"p", "-", "value"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RCndsM11", "[", 
     RowBox[{"baseMean_", ",", " ", "baseSigma_", ",", 
      RowBox[{"{", 
       RowBox[{"pShipSigmas_", ",", "pStopSigmas_", ",", "others___"}], 
       "}"}]}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{"mean", ",", "sigma", ",", "pStopSigmas"}], "]"}], " ", "<=", 
       "  ", "0"}], " ", "||", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PIndex", "[", 
        RowBox[{
         RowBox[{"-", "mean"}], ",", "sigma", ",", "pShipSigmas"}], "]"}], 
       " ", "<=", " ", "0"}]}], "\[IndentingNewLine]", ")"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.892524069571476*^9, 3.892524189663499*^9}, {
  3.892524282784162*^9, 3.892524300785555*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"020fd48c-7bdf-4092-a879-67c1ef5450dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RCndsM12", "[", 
    RowBox[{"baseMean_", ",", " ", "baseSigma_", ",", 
     RowBox[{"{", 
      RowBox[{
      "pShipSigmas_", ",", "pStopSigmas_", ",", "sigmaMul_", ",", 
       "others___"}], "}"}]}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"PIndex", "[", 
       RowBox[{"mean", ",", "sigma", ",", "pStopSigmas"}], "]"}], " ", "<=", 
      "  ", 
      RowBox[{"PIndex", "[", 
       RowBox[{"baseMean", ",", "baseSigma", ",", "pStopSigmas"}], "]"}]}], 
     " ", "||", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PIndex", "[", 
       RowBox[{
        RowBox[{"-", "mean"}], ",", "sigma", ",", "pShipSigmas"}], "]"}], " ",
       "<=", " ", 
      RowBox[{"PIndex", "[", 
       RowBox[{"0", ",", 
        RowBox[{"sigmaMul", " ", "*", " ", "baseSigma"}], ",", 
        "pShipSigmas"}], "]"}]}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8894516015997972`*^9, 3.889451707470255*^9}, {
   3.889451745784664*^9, 3.8894518040441427`*^9}, {3.889451835185034*^9, 
   3.8894518413784533`*^9}, {3.889463362082859*^9, 3.889463669379313*^9}, 
   3.889463797710271*^9, {3.8894639262231073`*^9, 3.889463926937849*^9}, {
   3.889464011977312*^9, 3.889464018122746*^9}, {3.889464100573876*^9, 
   3.889464105512054*^9}, {3.892272562732802*^9, 3.892272574314699*^9}, {
   3.892273261962988*^9, 3.892273276095542*^9}, {3.892398066466235*^9, 
   3.89239806692039*^9}, {3.892445034773776*^9, 3.8924451633239813`*^9}, {
   3.8924452293000813`*^9, 3.892445229406918*^9}, {3.892445415560944*^9, 
   3.8924454279177322`*^9}, {3.892519431543901*^9, 3.892519631771769*^9}, {
   3.892519693920313*^9, 3.8925197018234253`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"0ff4c4ee-e9b1-4fac-ba15-bbb8d9a9c570"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs12", ",", " ", "rs12"}], "}"}], "=", 
   RowBox[{"DataRegions", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<m\>\"", "]"}], "==", "12"}], "&&", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "==", "32"}]}], "&"}], ",", 
     " ", "RCndsM12"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889463810909971*^9, 3.889463849817318*^9}, {
  3.889463942922558*^9, 3.889463944979388*^9}, {3.892272582796894*^9, 
  3.892272621095049*^9}, {3.892273284117131*^9, 3.8922732950393057`*^9}, {
  3.892398074974516*^9, 3.892398080629643*^9}, {3.892445173806099*^9, 
  3.892445177307987*^9}, {3.892519563239785*^9, 3.892519584541163*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"2ecd6576-b7fa-473d-97d0-c801e6b43e73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs12", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8894639367070627`*^9, 3.889464034722911*^9}, {
  3.892273325731839*^9, 3.892273331963327*^9}, {3.8923982673581247`*^9, 
  3.892398267740696*^9}, {3.892445442921061*^9, 3.892445443074711*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"7d9851a0-5966-4a91-85d0-786c4c302217"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Ou0wrqljlss+HZo2bt+6XPKu2yJR9imMEk712DbiUB5t1Bt/IeNDIUsKmGVU
+DmfHlX7xb90vSd1PpDgWdU8nG4pfRynveYpqT+xbFrlQBTdmhS733GUF921
MGtS5UE03Tp985KB6yMxX5V3TYks/fU5Fbx8Hae9VcFfS19k1z36JI5G29yo
ZH/gleCzMzz0m1scCWHrzgR0HPcqgWbcC2hnNMeX1GbKegaeTRD8dvrswINv
SxJp1u67Fh7nQxW/bzVkr766aSybd+L0GeVzSdRozLOJcq33bIDtkchekUmU
fFa5gX3XRBEvGtT6PF19ZDCd+LLMaHj7DNqx/1Spa9MUwXenG9cscR2azmq5
rEtTcsukhfmB6bKzb8nEt6b5AZUssiyM7Wr06i3Fyu/s9R6p4L917w0yy3bO
Iq0tuhl+NRR8WKmNjrqFazb7fHGE0aPtZfxk/4lf1X8NoaLt/u9Nlyj4cdxe
r0krVufS9C0Lt3ksyS8Xnw5mqeycdbWM/679pdDPWMF327ZvpB1bv4zf1Dz0
6cLNsv3h1sO2VtOjaXNr36m/nSkgj0hTppkbTW9+u9PNW6WQCkw/Lw2bpuDD
2l4T7E3NY2ml4fTnO5sU0eSZqg81P7+n0qbzVk7rVExbDC3WeyRfFusR+LL9
mYsxbm/DKP1kSk23dk8EPz5Yu1eA5q3y37f5MFd38L6RsTSJfe1q9OiZiFfg
084W/fySTd+L9eDq4TmT7sxOEHx6ZsHFHed/T6K1UZp9tW8HCD7dKHfgLYO2
SWJ9w/p412ZPpfggxfq3IOOV7puameTybs8Y7ZDgcny6wfgG8x8PzxHxtOVx
lelbI7NoWMiY7kYrFOcb4Nsm0677h1AerWq347XmggJxvoD1sFbrFqqF0XKx
ng7L9X6pby6nVWtbxcuaKvg51qPUyU9bZ1oU0P7zmy8ZBEQJPr5jh1uy3+8x
Il6L+GucuXVWaSH5pN54oXfuCWs+un3h4tYxtHVe2h0Dx0T2q8OK+k/NUsv8
Q91XUz2VDTlM1puGZ1C/nUfNPRalsmGpi07v3JZB2oaPjis/y2c5EwraHDsi
p3qOQ3voz3WnT6vuN7qn+47e2V3cbdXajemMn2LpOjGSGqz4kOW33o+pDy9e
0qbwPWXfr/ZMM9mfqfjsG1RPL4667z78ptT0JRkYdDGZ+FRGnmvG17X4LYB6
NkjerrI4ibR3TLtqahrPZmooR8yrkUI77tdoarT+NS1+P+ReUUIyBQ7b5KkX
lsRGNwgb3yI6raw/8gYNnOUsv/YTq7TYPBpUu+8E9Tnh1KmKfffRoXmU2eXT
OPX6ETTKU0Nvr6GcgoftavExpoBl2Gk/HTGqjM99WHorULWQTXF/uDR5fj4t
di5Y4yGLoLv+ZyKbpcgV72uvLOo9+vg7sn6Q7abXYL/i97d8Do5Qv+sh8Pnm
CeO1cyxp4KRdNQs2h9Hx7UdyZFk3qOTNqmLbliGkcri6sTz9Io182zTIoX4o
ddCuMVa960MKuTNtWczaEEpZqRIjW/6IBi0s1dczDCUf+y1yVxtPWt0vUz93
ezhV7n1by8LxGV0e3jC/4akyXm84eZ1Hiwdi/Ry19NMDA68nZLarU+bO3yNp
/ojnw7X3PBf7DYPlywv83jyn80mGC+zfxdEq0z5uBpE+5OBjtj51fzztbXrX
Xa+Zn9hveJ92K3FN8iPXKdYvD9woi6czJ/bR3x0i9ht3Ou711HsdQkodAtsH
qeaScWU1T71GoTR2UO9HDQfmkprVyRpuZor9/Duzjgdb2eWx4sC9af065ZFH
QkMD9UlhYj9ie/JFouxkGIVXG7ogbXwe7es4zN50c6zYj5gtbOemZxVLc491
dnvdtohOpRybKO/znq62qOtU7FhEBtOrhWq2jRP7EePXK4foz4gjnahCzelX
i2lHysDDjnPK7NDkbr/7t4pps9Wc53q5TwWfaVE9YknY5xd0Yv8kl8IZCeRg
Em8g3xqrqF8+tL+9hUEcmxMR1P+uYTKtKD123bRtoDg/UXOpnuS35zVVnXYj
61B2mbzymUOmn99Q3Jrba2LzUyh97eAeRk8DaceKaapnqpbt53ONZ6nPDKTA
4xt/a7oulZTS6yySZwcJ/jS15iAfPbMgOhM97LnTpzQ6l3rztNWuIGq75NO5
2Q3TaVB4vqWHdTA57B6iqrwjgxqsDtvq8fCt4Of+25c/01N9SwM+1Cms2juT
9tVyNVT/jzx3zdB4jQPZ5FL/wyFTvxy2xezxl55Ny8Yrb+kR0+JssR/C/ugq
O763e9n4to2JNJ92NpcNmHq/meHhXNpa4j3euTSXWdzMO5H4JpfedZhq4REe
StYqucdtnudS9LDF2kZJobRg1N3ohq9zab6hYSujlEhxXlNvVPg9vU6RdOP9
l/Q3jfMp9tUgHf3LkZRrP+3BwZX5ZD/kxnHTpVGkf/jKrtzifOo3766W0ZAo
alwp8VyDqHz6MCggUnYzWvDXEXdbVbXvGk2HD3yaaGBZQGPGjhquvjKGPpiP
+Ggzt5BObK/cxOj0e3rxoM6C+qlFpL25mqpbL0W+CfvLU+2f641YmEyage1H
qOcF0AvZ6Za9g5ME/63VItO/rW8ybf4Wf1+J/Z2yz2G565bXYn8XfjI1vrSG
Yn93p+fOGvatImjhq3G1HxvJqeBFxn29/RHiPOLhkpiB2pUixf4PfDlgpm6n
kH4F1G+c5pKwxe6sw8vHD2s+iCLlqJv17We/ZRZzju07rZFAhsYf+2rrRbNF
M5dUmp5Rtk830+puZJXApk3rZ17PM6WMzw3T15Yns+G/1swIOJhOriuHrvPo
kMbqmQ4ZN7kkg6bqLrS2OpLFKi+q91TtVRnf1eyYJjvwjgz3tB99bXo2BUdN
nWanl89W68wIGdxXToHXbybNtypiCzKLro2bVsYnujerZJ/4im2P15k82C2O
XE+HtDfyC2OrYpRelGxPpMqT3m11nJ3BVNOuWLnNy6L2j1ONzUwL2ZLrXrXP
nM8nU+WuZh7JJ5jem8zhk5LDacXVd5GlNZ+zhi/26/jsjaVTp8yqub16RhfO
T7EPjoyl9oa3+up7yNiEkPM3VnZII+0Mu+ATmnK2Lrddn8O78mhzQMvobQYF
bPmK/WY5WXIymxDTUf92DGlNUy5pc0icT1fU11XU11XU11XU11XU1/3N6usq
vpdU8fsq/8z6O9gPGParqM/7r+vzYL+Ker0/fm/836Ve71+t/u7vVj/3r/69
pj9bHyatx8L5L86ncN4LjPNeaf3Kj76XhPNgYJyH/l2/pyT9fpL0ex7S71lI
vw8i/f6G9Psd0ny6ND+MeCS1z9/1+0fS76Egv43zlz/7PSTko1EvIf0eEvKf
uP8/+/tIyE9Lv/cD/aXfI8H3PNAfzD/k2zH/pBj+gu8nIR8OjPmK/A7OS6X1
GPA3YNRDAMPfgOFvsCf0hT6oz4E+wNAH/g85/B9YWj8HDP6E+gnkw6X1d9J6
LtT7SL9n9I/W90jr96T1YaifQr3AP1pPgHgIvgGM+gTUX0nrA6X1aKjXQr0N
7g85ziMhl34vBusBML6PA3/EeEnjF9YL1H9Jv0f0o+/PSOsfUQ8Ce0vrH1E/
BntgPYM+qO+AvtL6JdhTOj7/aL2F9PtW/9j3qH78/R7YV/r9nh/9nhjsh/aq
o0psHTfbk3T/0/xju85fe8aJ/Q/wnaRrcbLZfiTl/6nDtpsYrkgQ/g98y8l1
SViDcOE/tg9c4kofK87bMT53D0Yfd7ms4MvA5sFTZ8tXpYj1x6lvJxurtlli
fRnVMWOHh+l/Wj+i3x2zGq74vpWo//y4eJGBkqI+HDj0yLpF8rvxLHnk5vrG
smRaPGCRrtGAeNJ9HjjAwzWZMkNnO5rWTWFKXR9urj24bJ3THBElW5bJNOt9
SPI8mUFfZ7w6oyzLZTUPVTF3KM4i281P+z87lM/qPzqXc75jLmmc7LtYPuIp
zW/bdXLW1zh6vbdylmxusPDHzdV8Pvj99pYML/RJ8J6RSHLrHqvC5smY9fI7
d9rUSyXtGVeGqfvFKH5/b6/DMo86sbTC2nzs2ntJlM3bE9qDvxTP7Db1smYa
KfkotbT4XVHPm9rWOrjUM41tyGTDPi1PJxnHBAw+szyqbdR4wwzq0vXdGPWx
iu/lVF68Ss1CM4fZB3257uKXSV8XfcMEDH7Tt4NlPSe7LNIcYfmi9Ivi+3W2
U7q0+dhPzlzv9W88o10OWXNMwOA71dZEjS7xyaEdOo1aW4Qr+I9GYmlv/VuK
73c1OHM3fBsVkeN1cto4TVHff73PPIu8ZnIKX3TldWnOIxEfvLn/Kvar39eD
rtWUtbZPiqc7vD1J+SjkD7k/i3gpvnez67NTh72J5MPHl6R8FXLwr6SJE+a2
/ZpCWnx8Bf+y4vOjHP+6ffLKsY290wX/wvh+fv5tfAUfM+Pzpdz3aXA9+NmW
lKqBgasU36fBeGvz8VbwVz7fyn2fBteDvxUu/GS43kXB3zD+jfj4i3g0gs9X
EY/A73B9LJ+/Yj0AHzb6rbNP8mrF+ynwD0vuHyTlx2iv+ba2eoOW/wVfWLAv
4+T+PGrE/Ymk/BnyTnz+MszfXXy+MsxXp+G6Xnc98ln8hUU9bAbkUiPujwz+
2OhtQhf9Ly9ZdKKuZkSXBFLmmIA9coao2t8NZ0W+q3ZaW5etvxwTcDCPT4T4
lMrjESEeKfF4RIhHn3k8IsQj6wtTDe1SC9ibExfeHnuSS9Y8PhHi03muP0F/
K96e0L7B8zF5ox2K2Sy7odarsvOoHscE3GfqxVlmIeX5Jebfd7ngmwEjm7oF
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
w2Y1r5Zx5Gyxqk6f3pm0nZMT5Niv4Y4TFsZOyib3hA9zZKGJfD44+Wj7F5Ks
d+yt5FDexDG5NIbDBIx8MGpFdJ9lk5TntZmX0yrPqPhVuR6NfrA+JGHHi3cX
x1QtoEwOEzDywxi9qZ8rJhZS/RdaJrLW2azBtaZ7drctIjUOE3CP+keeV2rl
kNFnq7Lp94qoomWXak6TCnh/4dDs0vyERwV02n+yhfGwYtq96/Jc9RAVXzo3
sEndPn2UfiV43CpNF5X/WJWRP+DdpRJS2zTMzzBVlR9aJgzbNuyCnJ36aDz/
qrsy3+MwASM/XDNVu41Hl1K60XRJtuSz6n2HRmrbEnZIFex91WmLLGoogAm4
b50Pelptvs4fsX6+yPl8Un59YivT9Yz3xw16/7rfvurH5Jw9Pc45Op3iuOu/
6scE+Wlu/33Fhzp1P8FVOzqT7Lj19VU/Jsjh/885z1kd8lSV32I9neXWE5/v
unP7+yu+FH6P/PfCmjc/zXmaz+e/WF9J3Pri8+EFnH/g82Hkx/i9Fecf+HiN
fPnyuAX1pVGq8wfwbs4/8PEV8X6mw9oCvaXFVM6tt6/e14B8DOcv+PMj4vWs
ilvx6pky2smtRxKeVyBHfJtjLr+buESVn2N91uLWJ5+vh3H+iM/X4c/xe+Tv
c+J1LlzIUOXvWK+e3Hrl83nwqeDPkN/j93LO/zD4Hz3OvzD4Fydu/zHsv3xu
vzHstw87ii4bfohgQ5ZsqLXymYRyOUzAY7R6R2qOe8kuXv3gtMIii4ZzmIAf
cv6U4E9Hcf6U4E/tOH9K8KfSdLOaTlZ5bKVv7PJNB6WUz2ECBl8j8m6k5eC8
YnLhMAFHuVd0fD9DxqjU1CRrnNIf3Dn606P9MjZ1f58uActKKIKTE+QrODlB
rsn5c4I/D+L8OcGfy3p9nKjeVHUe1ub8G4N/O8HF36/6Rx1rFFe9+rMUSgoa
XiRpe5PNlE3q1rhZGvlzmICHPeobpembwULllbKb3gW0ufmp6l6Jkq/47dEH
vO1bHiygtyVruppWy2adP74vXd+giAq58fH5RRInJ8h1ufsT7o/zSWBD/8aN
JxXSQIcMb8Ms1fsHG7jnf/V+Ap5fXrevqaw086v3DWLKi9em1S+ihTvIWGYU
yPaWRmjJHqbRTxwmYPd2q0vC54eS+qKyGgfaS2hE6mqTBKdnbIV5ce3J2zNI
m8ME/Hqq/yKZWTyFrcqr2+h1Jlk2C4isPPmG7d36rpHTiRxycZSuTViWzswL
a0qLjPLpdOQoY9mUXHr5Y9OcWgOlpFex95bOmXxWc5BDbpZESsM5TMApvR7X
t84tpAFD1PPDjhbTwxu7f3x7SsoW/WRfcFVPRvc5TMBNnpxP2fGwmBxH1C6y
L5bRmEhP97yGclZji8tb3Slyyv6YX6XPPAVbvNMp9YNnKWnd1m1pXZnIum7M
UI8bnE3lC71bOmmmsnrZ9Qp6l+aS/NaB9+NzZOylVds3s1xL6Hh61LSDA0tZ
/20tU1op970/Zy8Ge0k4ezDYw4yzB8Eexzl7EOzhytmDwR4STl8GfZtx+jDo
M4rTh6BPJqcPQZ/QrJet3u8po8t+Hs+ezFVQe04/gn5yTj+CfjJOP4J+Tpx+
BP1Evo3ItxH5NiLfRuTbiHwbkW8j8m1Evs2/l28j8mt+y6+BvUR+DYdhn78r
3wb2ENaD/6p8HOgvrGf/Wfk6wn5Z0OfP2j8L4xe+v/5H5f9gvMAYr7Cfzn+L
L4TxAGM8/63+XBgPMMYDjPH8u/p54fnAeD4wni/sb/TP9gPD84DxPGA8DxjP
+739w3A/vL+K+wHjfsC437f6jQn5Ft+qL6N+g/9/eb7Fl3oP6jOo36DegvoM
6iWotwgx/o8V9hOD//4Wfwv+8Pf2D/tePyPUb4T4W/3EhP2MUM/B++DAsLew
Xv+tfmCIH7APMOwDfww5sLD/l7Dfl7BfDvQTYuwv8KnATwKfCv+ng08F/oSw
nxf4IeBDgJ+A/l3gT4HvBD4Cnof6APgGwv5cwv5T4FPhefj/Hu/7AmM+vsWX
+L18HiFfUcivgz2xPvn3fb9g8MNgP1yP9YrrgbGesP7gb4BRzwC/C9djfeJ6
YCEfRchvw3xgfjBezAcw5uP39idC/x2MF3w1zAf2B54vfN9ZGI+gD/hu6Bf2
3X5aX/g56KeF/YjrgXE9xofrhXw5YIy/6q+/v8ivLyF/Fhj7H3w4zIeQTwuM
8wP4apgvIb9WyP/EfgYfUcj/hL2F39v7bf6SxvNzhHxO8Ckxn0I+q5DPCb4l
+IdYr4h32K/on4XzPuwt7AeI8y7sO5qzP88Xw/kP9gSfDPtZyEcGfwx8TiEf
F3xM7Lfv9UuDPX+bv6bx+wf6wz7Q/5/tnyXsvwn82/w/jYT91rBfgTG/GA/m
F/4O44H/4Nf7l/+zqrhN1Qvck8LP38qtDbvXnJzGz9dK56GRe5plkMHb9lGa
wS9IeF5vmVPtrlFyFiXq1HlROS2RhOfZR4MjPDqczyU9kzv7bBVv+PiJ8Q18
1G9eZ6NccrVu4Gt4IJ2Pn6ZHzV9Uts3m4+WIdqmbEuqmqM4bpqfGqHup+mep
GcyoCJ+hyv+1m2fNVXdV9VuAv7Y/8HLR6kaq/Dyt/7B3j0fK6XTrV7r6gzJI
mK+ajTTqW/NSKZmNnXRPZ7cqf4S/dj8zZs3FMgWNa385UKdaIumWvm9toZlD
UQtn9da/m8xM3dYvuj4lj9R0Jxmre6Qxx6DdG5fLCqiuxlw9Lass9tTfK8Hd
QEr1y8176evlM6OmZ+Uap4tpaUSvAMNBqfRTSg213kp8nGpumrVPygpcu3y2
KpBR2LWTlgkrMynMcf0x3WsKcq3yoaP1rDiKMr+dkuuSTruanv4cXs+Vn//T
w7TXJCyNJ8vy290XumRQf6Nx9ra7g/j95rJ50T0dq5dU385nXcLJLLK7VrY3
SC+G32813l17rLn0FZ8vWm2w2ZSgn8LKtT9a1HPLpwYO3mPUL7wmpxVTT9k7
q/LDkJmKia7mBVTlrlq85ihVvrhluv1CWcMMVk2ScKlIv4jqR0mOWtx6S/0/
TJVUcVblj/7PTc/eaSml7bZDR2u9yODzSZfknp1MX+ewUzvWv55Rojxfvi7X
cFqQQs8bN/J4Fqk6zw5M21Ck2FJMFVNX+eksVfXTOn13sLr1lULWLmnh+yej
VPnmAXvjZaZvZRRkEfZSUqbqdxL99MLH8YHF7OIAwxZDjpeQ4/mEYfryNGq0
wO2nNGW8vH/4R1/DTenUx6+sR/PIEgq+/jS5cruEPn3aNCUmQk4mVU+8rqyv
yk81l/U9ZjtDlZ8m9l83SmtsKO8/Y2v5WwQdiuZx4Bq/nW4TA7/qX9Xyec+b
Z3JTaOVL1thp00U+XiHetZTOmtbmZjoF2eo+0tF6zvsjxM/RGnKtJysy6JhJ
4s9uZk/4+IX492jED/p5mzJpzOOplyzi4/l4hXi38khm/8DhOXw8W32jyQvd
mvl0duG22bKzr0jYj7hV5auQ2lGFJJe8ygzf8YaE+XK3VauP7BpcxOfLaZcN
51iEq/LlRX5Lr3n0UvGn/E0NOjVxKKH8+YeH639M5c8HL4vMfAzz0wX8JwlV
X1Ra0XavnKK4/nh8vEO8bFBb+5R1iZzGzNtXeaNbFn9eqPZq20WLiY+pwbJo
t1EhKfTmSf+0yncOpNHmWrLWsnQ68IjqejV/wCYMCiyU1FHuS7ehs9U7xbHp
+ce1wj2zqWubpW8ll5OYgZl9r/zqynzpyIbXO9rLGT1M+ME5S3m+3rV16kFb
BQtpEzqs7mDlebNJwd6gcTFkTBlrJp5KpXZtwyuPXoim2vpGnUqvpdC2Yxv1
tJbdIQ/5jGvnm6dRuxey1qYl15n31f4Ztv4SmqgzoI/+9QgWaNrwB4u5WZSr
9UbTuuglk1q369/tcw7NXLp6rmxvIu2+uTtt48kcMjp/4YqhUxK1H7mnZ75z
HhlNDV6aEPyK2l/pM7x+RC6lfXAkffNUujDbIdo+spjurz15yG11Gpms2lRr
TqSM6teNWipTjuO0ra1n4w0yOt6nfr5ZgYyt/di0dc5wOTn/0HThummlTDGj
mu5ch1LSSk8feSWgjDmk7x8ZkKogF71VU9UPZdK+Oe+uzYlQ9ePubZhz00qt
jDYHbHC1OJZFo1eHpnePKKOJoy7paU3MouGWh7rW2aM8L5wre1EZpTo/ZA4f
UtsrMo489H45NL+ehJLUO81VbxhLDw/PsAyem0YP95c81zSMpabTo660PpVG
e295jtVar3ofSrZ66m1Du3hyLL3vXeVuBtncHsB0Vr2gruqnFvZ1yaQmdY8Z
qtdJ4M8Tm4vM6zttS6CQ06c83E9mU2CjyRZBEW/584RP/56apqVvyWPO2ciW
r4ooVy8vLTzgHW3c16ZB9gRlfj6gdaChdwp/nuD6paXQ2Gen+1+YUEz+Nc8p
wo9I+PPE6eeF2RJvCZU3SZi/56OctHMMq3tVy6DZdhZ5dwxKaXu/pluDXmfw
54m6C2YZqdfNpBZnjDrtM1BQi2rGLZzexH7VP/fA1Trh08vS6LOr+XzZqJe0
5Yoizm1FFvUKWLIoYcBrPl8x3f2iifXWZKo1d8mC69b51LeVR9mNU8mUNGPF
4rvO+XSlarNVQbpv6OFl86tW3QsppV+H9ErjFAqvlWtlEiKl06c+dbIOUfUH
P3QiJNblgPI8MibW/14dOW3JDrqaN03Gjt38fGhfbgnJXvVYlzAmnc9/DKd7
H3QrSaOYnjUO91b6X42h6U2c4tJp9+Cg6FudlPbpHN/D1DaD/JvM33cuopT0
mh46bns4g6YHGNcwf15Kk1+mH3FzjOH96d4BP/vq5Cbx55nt0q4hOm5pgv/j
0ijWob/7MIMSGqXbxy8mW/V/2pawiKO12pexs0uTwywOKsgooefRWltU/z/h
/KOxVPr8tJeCz7er25SVPpypPA85tfeKyVLw56O0xuV+OhoRZPz8wv5drVOo
ru5Ti6Dd0XS2x2fdbadSaMPYakO1zl2jBXY7Hy0JTiOj1wX99Y/4s+U/zfs0
fmEGedf9dM5wyzN22tiyUa0a2TRntGZn0xmvmLv6eINc91yyibqbEd7hLRtx
KmbauPI8GvBmo4fhgVc0JHS55uiTynwtNO915et0NsHw+sFepwpJz/19qObV
bHa12uPFauekZNb7lJ3txgI2ymHiyqXSYvKxnR4Q076YheUOsU8cWUJGA1ss
k+Upz1mSPSvWTZDRLau52m9tS9ik0d0vGxyVk96QXg2bFZSyzDhv7yuSUlLb
Xrw5qHEWZUrixuoZlNGNaq0rwq1SmffDLnujxxdQ3P6gezr6mUzyZsAJ+/wi
il8ecdmwYR7bHG5nfmdsMcWPTzxikVzEKjpt+rn7SRm1d63u6LbzPoV+KA+o
vTKVfkxvetHC7hj70Fzt6aOGEgp+3K2D9fzndCs9qviIi4QsKwLaWKc+ZjUi
JbWu3MqkIcGbF8ns4ln9nQ9GHJiRQ4W17hyz8HhDk3foPp/tXEh9I/1eV35I
J/sReaEVBsr5T3zU7n2AnLWqX3Dt/VDV/48iv0zkl4n8MpFfJvLLRH6ZyC8T
+WUiv0zs5/RH4JvBfmK/p9/HR4N9RH4ah2EfYNjn78pfg32E9Y2/Kr8N+v9V
+G7QDxj6/Vn5cNAPGPr9Uflxwu9VYvx/FL4cxvef4sfh+cB4/r+LHyf8Xiae
/8/y4YTf08T9fy//TchfA8b/7ah/QQ4MOepTqD+h3gWMehX+z4b/Bv4W/+23
/VFUfCDUq1B/wn4DRr0eGPUs/J+N9Q4MOf7vRz8ByIEhRz0M//ejfwAw6luo
Z2F+gSGH/dEvAHJgyJFPCucH+QnyS+H8QA77w58jXgrtL+TPCfm0QvtCDvsJ
+a1C+wm/V4P1C/sJ1z/sAT4Q+Cng7wj5d+C7gX+HfmDg44D/Br4M7gd+C/hd
4G8I+Xh4Hvh34G+BD4Lno58R5OgXhPGA/wU+D/obAaP/D8YLjPUAfX67fr7N
rxPyVYGR/4MfBL4M+FrA2I+4H+I1MPiLQj6ckK+I9YD5AX8G9gHGesb8YL6E
+T3sCXvj/rifMF7AnvBP8F/Ip4H575l84TsJ+bzAyH/BPwNfDPeHHPU+Id8M
/hH7ERjrD/xP2B/5Cvinv+0n9X0+Ffwn9jMw+Ifgq2I/wt8h/gGjPxf4XtjP
Qv+I+Af+K/hbuD/k6I8FOc47sDf/fZ4v8yHkUyOeAGM/w37wZ9AX8QIY/Fro
j/gPfcCvhb5YH8J+iJhf2BP2h72wvv9RPpqwfygw9gPWl/B7pd/qbynkNwr7
fQq/lwz/JuyfJ/y+GPYb5hP6SvI+XTO84c/Hq7V3176/cTKChOfbnMU5g142
zlX9v/4FV7nYaU2CZTx/3jJccWhxwoFkPp7ZZV6Yoz5LdV6Af4oPsd2QfEJ1
ngC+MX72dPUsFZ8zzrPBZPVN2Xy80zXNU9yonc/HM+MHrtIbJ4pImB92TF34
Xr+wlEY06bkx4agqnmG/QO58Pfdy3lyVvx4nWa+vleDHZA38pbJ7mdSuclof
/VNJzFthMOdcq0JKmvb5iNueFKr30H/rLG0pWSVPnaJ+P4u1D5pRGhAooy1X
l8+QFeQxz7br61r9KKfhx43Wzepbwg4eGUYTU8vovbeRp+F2Z2Z+3SV54OgM
WsthAl6hfb6F0+0HzGRiT68Br7LImMMErHEop7fpk0e0fc2Lml4DsylzxCqr
hNcx/P5q129Yd9OVL1nnY71Hp7vmU6PFnTtZUxw5/9iobzct5bmMkxPk2J9P
rLY6hLoWUK/ar5YnVCSovpf+1EJHK/wtG2psvnquYxFpcpiA2zlvn6X+Qzq/
X9eoDxmv5ZhOTnN0Uz6NVO3nUdHPXKfNl5Hexx+nqnup8kGrh/PiKl/msExL
SWXLTcr4wGECRj54O0HjaWRXOVk5bEyU1CikddFVm8cXKXHAPasELymf7wWf
j+r7trOMhaZcH1DYuYyGe40pMlOOq7LPDz0czBUUxMkJcuR/J3I9ugT5llHM
9G1X8zap8kHkd3WmznqXsfv/vidUMEbr3UU+31vKYX7/7+L2j+r/oC/54KY5
rvVMDVT5OrAat3/4/0sQv2at7G82+VUevebml4T5O+Twt4N2hgQNNy/i4xXm
szM3n7w/G8ftz6/4Zvj9LW7/8edjxDf78dfsT2wtJk1uvkmY/0MOf15hJPdr
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
f4AhR30N9T3IgSFHvQ/1F6wPYMiF/ad+279M8lX/MqF9hHxooX2E/Srgz6E/
MPSDP4C/FeoHOa7H/oJcuL+F/cfQTwh8GvAlwC8BHwh8D2G/Mfwe/Bj8HvwH
/B78BvweGPbE/YXfU0U9S8jvwnygHgX9gMHfQP0K+oJPhPEDf4+f9xXfSsCv
gr3Al4L+wFhfGB/WHzD4KOBPAWP80AdyjF+Yz8PeeD7WB+zJ1++/2BMY+oA/
JuTXCflWQn6dkH8l5CNifMDg24B/g+dhPLA/MOyP8Qn5j/APwOD/4P7QT9gP
D3wb6IP8G/pgfrHe4E+Afxv/0vj5EfaLBMZ84f4Yj5Af9j0+V/WsPj1M0y/x
582kz1trO40N5P1P2U8HB+vHqviSTvrslo5NFAnz+6bnhznseCwl14vlzZ2a
xvH+COsDcrPLR4zUc17w+dcQjx6HbYNf8f5J7fqjyMqjb3j/kz1Le2+QTwof
D9M8Rx1yO6fa3yvsxt0ybHeM9iYOTXprk01z3lemSs74swN2i+YecVeu5z7p
ixNMIsk/d1S1iPFSCrm0PbVydCwbp9ck2tuqmEKerd8QdPoVq+EzIE+/n5xc
hgYccpuXxurdOlbPM76M1pU1OWP79gFpuL1bOHRzASXNSFiRYPmEbZ7W47C6
QRGFcZiAy+P3huloxfDxyvDT0lxJ8nMWk3NigOkUGY3jMAF37WRXFq4eT4ej
DWN/nv//5Md3/U+/byon+bO1YZrxCXy80pq0zd7W7DVNGLG+UEOzlExs5hff
6PmObTmpUbNadQWd7R9jot4mhT3fVe/+jTkKms7JCXI+n1ldLebUojLStmxH
+h6pX/VbutZoV+16hbl0/5hzvuTMLT4+IR7d19eUKwpy6Swn59dnneG/rhfV
efhLPBsWEjHk+jAVXwdYytmLX69Wn8yG6zeN49erJbde+PMC9nfS1tSrMZaq
/Qacz9mLhPH95LF5fgZ3S6kKt75IGN8gh/8vUJsSekRpnx6cffh4Z2XQa7LW
4xg2ZsWq1k4Ti2kQt94I683bMPe4RUUUq+b3PCL5oHI/cJiAg7j1R1h/ltz9
CPebY7TCVBb/kt3vpshaNa6ELD+H6eiXvGRjBmotHGZUQkacnCA34+QEeRC3
ngnrWWLjsyfofQp72GWWWkKeguofKPCwuJzK5lfVebV5XhmlcHKCXI2TE+TH
uf1A2A9vuf3Hx9u7Zy+dtf1wn/eve7n9wrBfRl1MaGl9KYyPtxs6qPXV14mg
FXV20bJWyv2Y0Lam16fnvL/V5vYDw35IsT77WnI1mc/P+nLrn2H9dzQbviqo
/RtmorP1aMysUrpiM6iV6Y53fPx24fYDYT80K/64XDY2hbpb19i2aJOC5NOa
7wyqtYftt686tHv1bJIY/YoJWMb5Fwb/Mpbzl/z/hzNr+zS1/uTBqqzJmJ4V
n0M9H5n7G7rfZHOGPxrjtVu5Xzg5QV6HkxPkJw5N665fNZit+amFtb5dPnnP
CvHS6RXMglJrr9tyOJ+ucvbl4+t67nrC9Qe46wnXz+Dszecb1Xr/8FRT+zGz
G7b8WsLBQtLl/CGDP7Tl5oNhPqS9fr2ecL3xvaJmTlfjWGqh2ewuecUUxM0X
H38NOTlB3te/2kitwYnMsnba/GdBJTTuZvW4yjpJLM536pZaM+Q0J0ty2bBK
MjuzYJ+V/yU5JXLzy8fDEdz1hOuNuOsJ12ty802Yb29uvvn8R4ObX4b59VZb
ecb2WiqbG3f16IQFZVT91NBmTg1vszl97o26ci+XUl1+xQScN2DnPrcNfnw+
OuhUxJKEcYF8vDUrPVHdaWsUE+Yru6/MbdruZDFpcfoT9Ee+MqqjpXv1ZnLa
ubzGCK3wRD6/wvctEf9sepYXSXxS+PMm8rdap20G5xxSkCenD0GfZgu2xml2
UeXDp7uWVve6FELjPuzd3HlhIb3eEfXp6KNnzGVR15mG1YopgsMEHDzkfQ/T
tS+o69YLJh+eyyjUrPCeZtgblp7/2PrgoVK6wd2P4X6h3PUM1wdz1xOuF/lG
It9I5BuJfCORbyTyjUS+kcg3EvlGIt9I5BuJfCORbyTyjcT+QP95PhLsJ/KT
RH7SP8NPgj3+rnwl6P934StBXyFf4K/CX4J+wNDvz8pfgj7A0OfPwlfC+IEx
fmCM/z/FV8L749/qvwTM80m+1DeBIRfylYARb4BxvZCv9C0+Al8//VLfFPZn
gv8CxvWor3yvXxOuF/Zj+la/Jr7/wpf66Pf6rUAOe+P3wN/r1wR7Iz5CDizk
Q0Eu5EPBn0IOLOzvBPm3+jtB/q1+TpAL+zfhfftv8aXAN/lH+znhe3JCfhX4
LuC/gF8Dfgv4IKg3od+OsL+TsH8T+uegfwzmD8/DeDC/GA/fH+kLFvaf4vsP
fMEYLzDsBYzxA/N8nS8Y+gDDnsDQD5j/nt0XLNQX6xlyrE9grEdgrD9grDdg
rC9gPl4J+JLC/mZYT7CfsB8a+mFhPr7HhxPy0YR8r+/xm/D8wWuDAwddKKLV
+7KbOD17xO9Xo7w1tbx+es7vT0tFu0uGjq/5/RiyM7ODdUkav/+MbH8qDj+j
6v/z9hen+5rj8vn9tf1W0qfx1iq+6+ON86o4TQlm0wNcojYq19covaekPzaW
rb8y6rKdVTEZb/TQ1v+YxC5H7Fu1L0RGA+MfHXKblcaS8iN0bJvI6f7K/rZu
/bJYo4YNPu1dUEoGtd22udXLZ6P6TQ3Zc0MZ32L2BcaskzKbaU6/7K5Q5in9
mlyyKPfh/b/fOQlpJYcxiXfR4B3PVOeLCjW/Bja9i0mtT0ZD6y5Pef8v3f2s
gVOHl0zjef+q29uq/L3pq/ojTPbLyPW8a1fTrATe/1fz8/x09MU7NqF0Y5iN
hcrfB11dvHZYRgm9nXk5rfJMCu//D8hHKcJDJGxXy4DDWwNU/n5cSv5W+YhS
sjT5fNNwnKo/ULNDtwvCz+Ywn8EVM7fUVtDzYzWcLFyV+8E8Ykd1S5X/v+Kt
fz3+tDI+eNv01S9R9TNx7dYxI3xzIcubS+2sZ5SRufmAsMoTjEaeTswZ3qqM
VnmsSa/seZ8ehgcEOZ1TxYf6u1ze+pSXkYbB9K7Wa+/z8cCp6RNj9SW7+fWO
+Jzgumz/rLGqeBDtWlfxyw6V/++1dmE3y2SVvz800t944iBVvNTYPHJxjaMq
f241ztlJUqjy30kaRY9DDJTxST1tgFZLxvvvJte1rRKquNEIba+6hT4F1P7X
71Xdpjajzt3fPriA3Nq6TpU1CWYr/RyydnSV0qXpG3+wnuFDBy4d+tRwZSEN
ybxi5xZ1iS1oOzujSnVVv6OISEm30JGFtHBKXFl4+m3ef/ZxNu5pOtSX35+e
TY2M1NX9aKCP39BWK6Q0yHdFUuVYX+pY45cHIx4UkfvBJq8rZ/lQ/9FrCjut
LaTuPum6+v18qaLW9iFurkX0cHeMRFLzDp+fPHn9MLFykB/tTzWKuGGnPB+v
v2+RkO1HBWbaSanVi8k3Tvtnt5A7dKm5+2aPM8U0s0brhMpud6jayJQf7/Ut
ppd1TlTciPXn85fMnutfVLb0JxvXlWciE1X8qHFH9/bYN0hGgcarPt6wDqDP
+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
V37RauU0WtUvwHb8yvs69yRs+ySThfPuqvz9xUuDzxcNLSXz3Ee6+vqqfgEr
PqwvCH+Yw0a+H3B7/2dVvjNleptXjXcp84kPg64ajsjl/f/ka1s0TcMKmdol
9Zp+I1X+Pv501ECTUJU/f2m4YHX9blI67zY8ufLZxa/ioa599Ns3DVT9ctJ1
bzavMl31fr/ZroXrDU7KaeLdu5csnH34+AZ/LglvHOv0VuW/HTfLa9/pVEZL
P1ztbZp3m17mNdpg9UlG/esevWgxwpeq/Hz1UosBcnrmcPm+zmkfmtUgfUfh
2RKyuVArovLwDeZa7lDT6XMRmQctO2N74wG7rGuuk+sqpaeOq710TIL5eIR4
UP/4khIDJY4ZEPGj6Xpv3j8uGpXkaeHgTeZJWlP75hbRxYWPZ6u/uMn7x74H
F6RUZt2kDYNDx1zsWUybD93fETTwNu8fP7/IbOpEt8mvZrlZ30Uqf9m86yan
NLUiKr9pfs4w2osMN3Svb3O7kIZuSdsbNNmbHLVCTAasKyKDwc6+hsOPUmir
H55svVtIEeZnQnWG3aTp064PMnWQksanAy2c2E3KdYm99qhmMTnf7PQh/Ogt
cvrh3Yzc0GIqGeOSJ+l9m9ymJzWfbSSj9tl+kZoffPl8YniczX636b50JdZl
uP5oOTlrzwzWyfeljhYPfUyeyanKtFaJlSf8aOTU5EfnVyjz8iSfY7Z1/ahB
WF7Onjw5KZrdKg6fe4fPNzTb2JvKHvqR6S8XriQeUfqHTa+Lw/Xv0IJB8rjs
mgr+ffeVuetL9dwUtH/e/G6mW++Q1+S5y3rrKij6dpaD7UN/Ph8pXXLiR/1+
/tR8tGeTVW8V9OO+x+YJzv50OOZAjf3DyujUNbvdbqMC6KbfpabPEspoyWXL
ihs5/rRMzSz24d4y0nhaS+9RDSm7mtNIy8GxjAb2PjNAa3jRV+/rD+98/Vjl
hjLyu378sea6AD5eRK/dF625yIfPFxDPLLdle62/pspvel+JtT+j9O9Lrba4
W/RSxRfdwtonbA18+fhSv3X1ezqefnx8SRn7OU2i7s/Hl8Dik+/DU+PYzJuX
XXpIlP5v2uVpsvzXTHPezvyZ3ZT+d07STHWbdPZWbfbwPSvkFJHxzN7NyYdS
zjocj3EuIXOzSZ6Gu7LZgV3OFx5dV/q/5tNfSWwLmGHvtaVFUgUVPps0Tj0g
kn2W1za31yum++MHfL6RlcAeuqYE+P2s9KfaB+M136ewta3a/1AWVkJ2745W
9fqcwQY+Ll/TqX4pWTq4aOvXyGPla2IfTpmiyu9FfojIDxH5ISI/ROSHiPwQ
kR8i8kNEfojIDxH5ISI/ROSHiPwQkR8i8kP+LPwQ8X198X198X39Pw7/RHxf
/z/7vj7sJ3xf+a/Kl/lXv88P+/H9qb/Y76/Cz/lXv+8P+wn5I8LvT/xR+UFi
/UOsf4j1D7H+IdY/xPqHWP8Q6x9i/UOsf4j1D7H+IdY/xPqHWP8Q6x9i/UOs
f4j1D7H+IdY/xPqHWP8Q6x9i/UOsf4j1D7H+IdY/xPqHWP8Q6x9i/UOsf4j1
D7H+IdY/xPqHWP8Q6x9i/UOsf4j1D7H+IdY/xPqHWP8Q6x9i/eOPXf/4P6NX
qt8=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{13, 10, 9}, {8, 7, 4}, {12, 9, 1}, {34, 14, 6}, {11, 6, 
          2}, {32, 28, 8}, {7, 11, 2}, {5, 12, 1}, {12, 13, 9}, {9, 10, 3}, {
          22, 34, 6}, {18, 29, 10}, {23, 25, 3}, {30, 23, 3}, {28, 27, 8}, {
          16, 24, 4}, {29, 31, 10}, {35, 21, 5}, {20, 35, 5}, {24, 15, 4}}], 
         PolygonBox[{{27, 26, 7, 8}, {19, 22, 6, 11}, {21, 17, 12, 5}, {17, 
          33, 13, 12}, {15, 32, 8, 4}, {26, 19, 11, 7}, {33, 18, 10, 13}, {31,
           30, 3, 10}}]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{57, 73, 43}, {71, 72, 47}, {134, 131, 76}, {68, 67, 
          51}, {40, 53, 39}, {38, 52, 37}, {59, 53, 44}, {60, 57, 52}, {76, 
          75, 54}, {55, 80, 49}, {79, 78, 47}, {82, 83, 44}, {41, 82, 40}, {
          78, 79, 54}, {108, 97, 56}, {124, 123, 68}, {80, 81, 48}, {71, 78, 
          46}, {78, 54, 46}, {52, 57, 43}, {56, 60, 52}, {72, 71, 43}, {66, 
          55, 49}, {71, 46, 42}, {61, 58, 53}, {36, 43, 42}, {69, 45, 49}, {
          52, 43, 37}, {82, 41, 45}, {137, 98, 57}, {56, 52, 38}, {74, 59, 
          44}, {53, 58, 39}, {81, 80, 55}, {59, 61, 53}, {70, 69, 48}, {116, 
          95, 62}, {53, 40, 44}, {82, 44, 40}, {117, 99, 63}, {127, 129, 
          72}, {130, 112, 47}, {43, 71, 42}, {118, 119, 64}, {78, 71, 47}, {
          84, 83, 69}, {142, 101, 58}, {76, 77, 50}, {112, 87, 47}, {141, 102,
           59}, {106, 133, 54}, {101, 110, 58}, {104, 132, 77}, {88, 113, 
          48}, {70, 74, 44}, {54, 75, 46}, {73, 72, 43}, {126, 125, 70}, {80, 
          69, 49}, {86, 90, 48}, {67, 66, 51}, {84, 70, 44}, {140, 96, 56}, {
          69, 83, 45}, {100, 142, 58}, {85, 137, 57}, {103, 141, 59}, {83, 84,
           44}, {66, 67, 55}, {97, 140, 56}, {83, 82, 45}, {135, 94, 55}, {70,
           84, 69}, {120, 121, 65}, {93, 106, 54}, {113, 86, 48}, {128, 130, 
          47}, {94, 105, 55}, {75, 76, 50}, {69, 80, 48}, {122, 136, 67}, {43,
           36, 37}}], 
         PolygonBox[{{125, 92, 74, 70}, {136, 135, 55, 67}, {91, 127, 72, 
          73}, {111, 100, 58, 61}, {105, 139, 81, 55}, {110, 109, 39, 58}, {
          87, 138, 79, 47}, {109, 117, 63, 39}, {96, 89, 60, 56}, {102, 111, 
          61, 59}, {107, 108, 56, 38}, {89, 85, 57, 60}, {92, 103, 59, 74}, {
          133, 134, 76, 54}, {131, 104, 77, 76}, {98, 91, 73, 57}, {129, 128, 
          47, 72}, {90, 126, 70, 48}, {121, 115, 51, 65}, {119, 107, 38, 
          64}, {115, 124, 68, 51}, {139, 88, 48, 81}, {138, 93, 54, 79}, {114,
           116, 62, 50}, {132, 114, 50, 77}, {123, 122, 67, 68}}]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl3e0z3UYx3+PESG5UiGUJCtRGiQRSWRkZK+0F+f0R6dzqlOncTqdhr25
9r5kc3NzXetaN+PaQlbGNZLMip73eV6/44/3eb6f+ez35/er2Kdfu775EonE
Z5ZI5HfZzWV3R65/T3UMdAxypPjcfQ5zTPZxf8cAxxzHSMcoxxTmdGYa5wY7
0hzDHSMc05kb4pjpGOoY5piF1L4ZrGvtF85objZ3SF8GOrS20DHOMd4xzzHG
MdYxH5nqmOsYzdpP2KvxIs5NcCzDZ927mLmJjvRE+Cz/fkZq31LHJNYWoEd2
LMde+XeH4urI9O9VxEv661jEZYXjSQvfshyrWZe9dS32r3SsYU7+bcBu2ZiN
n9K/nlho7TfHRscmx1rOaV8mds1ibQl+/Iqf8q+Aha2qgS3ERfHeilRONrNX
azncofOqH/mw3bHHsQ67elr4sMOxC5tk+26k9u3ET63t5Zx83Y+tOcR3If7e
4ncWdGzz74P4ILt+R8r2U459xKOL721p4UcPly0chRzHsUP2Nrew8YjjGDbJ
3j+Q2ncUP7R2m+8v5jjj3ye4Q7a39bnTLi85ilqcOZuIfQewt7TPF7aw9zR+
ai0PezU+hz7ZchF/tP4nc7Lrr0T4IP1/O06y7zzrWitucddlRweL81cS0W9p
1EMnny9hMd/MZQMLnVfRp/saWYxvOK4xJ/0J5q/hQw75KGmxls9xrwWP/JsI
/lDfqH/EGVMYa+0CfohHprImLpnGWBwwG7vFEapn9VuSRzQewpz4QXwxhzPq
efWReiyVOlJfDGavdKxjXnU2ir06n+SUJMfM466y7lMRi5oZn4j+W4hv6osl
+JbOOMkj6eT2HLUh35axJn3qwZXYlMGafBK/qAfFGyuIQ376QGvijSz8nc7e
DOKSyR75tBod6eQqB7/lfzY+rGcsnzYwlj/qx434v4a75nNuLT5s5l7ZvYVx
kke2YNc2xkvRr3trWMRUfVMH7pxFvNeiTzap13Zj017GSU5Rr3a16HlxRLKH
j2G3+msf+vYzTnLHQXSov9XnLenRLdh4gDNVff5OC74Ul4g7DieCA3OJrWw5
jm7Zd4Kx+HA7cduJXUe5V1yQh33q45PYl8dY+s+wrzDcI5uftuCUW+Ew3XeE
vcXgI+lRL6vmHuRNT4ED1cfn0af+u4C+i4zbwgeyowF9rPkXLPjidgtuucz9
0iNOuMK91xjrXp39B7su4UtN/y5vwVXiInHNdZ+/ixgrpin8BtHZWi4rWnCM
akQ9oNqu5LIU7+4DjjLwrHSLi25QdwV5C6pYvCWa686bkEst6NxBcikb1I+t
iLHWX3LZhv5XvIvCA/Jffqiv76GW9V3ZZTnejAr4qnhVt3hLlKt2xFKxvh//
8hHvFHxPMH+D2jpPvDv63Mvw+OMWvz+SsSmFjwWoW/kiX+/G3ybEK1lDpe1m
DMpgWzWLfGh/U5fP0asPWfh5lhiUJQ7Spz5fTq7Lke/i5Fr7JyTit4w4piHv
hHxVDXTGl5LkWv7Kjyr4IturYY9srI6d9V3Ww0fJpyw4UX7XZ763y170bRuk
bH6Rfj5M7mqQv97Mb6cmq1KXymNNcvmE4zELXhb/iqPFz+Jz8fJsZD3sUf89
TE2XJ46KiWqhMnWiHFainkuTo8LEST2cwn118Uu9qJ78j1oVfx1KRI22wUf5
1JQ8NXY8S2zLktMixLsx8+KWJuj/3DGCPeJjcas4bKWPX8GvRtyp/lXMFNNC
zDXizovwiDhENrai3lrzfQj7W1OPW9knHlZ/yM/kHc3wV9/PUD+SDflWXJ+n
Rq9in3gp2+Uy7lfe1DOZ9F0t6k59JV47R2+2t9Cvb3Gi6lk914E7JTW+jJ5O
zJdgXt+dmb8OD3XBv+bU5A7u7Mg97dF3CR5uh+/iqx7EVrI79SnZjW+9ZXpv
9NYIml/FXC/2SH9XYt6CuzSv9Z528x3swp46xCuTPb3Zf8plf4s+U62JH9VH
e1z+YNG7LdjfnFw1IHfJPtT+NHTo3ZcefaunHnVZ24IP1TePWPTOAccoC37Z
5xhuwQfjHV9bxD6D2lXd6v9uNnn/SLGx4IjDjkkWfXmaWOu9+8TlxxbvRJ5j
qAX3DHN8SvwXOlIt+GCDYx3+7VZsLHpyoyPHog9OO8ZY9L1+J+md0dv+PnbI
huOOsdz5lmMO8Znm8qRFne5wLCKGQ7BPtk12nLHo4y8dRyx4ZaLjhAV//GiR
M+VrNDbJnkGONHIt23di/1zHOxZ1qDsmcI9iPI44z7awQzZsdYy06DvZ2Bc7
5cfryVy7fBNdfSxqRXXyrmOBRf2/QV6V07fJt3L9veOoBUemEq8K1MI89qx1
rLHgMOVwBnn8yjHTopenOwZb9OJAxzELjtfd33G/9u5iv/xYjy+K6xfEdpOj
n0VfL3b5Ht/K1VTy9YFjswXP1mYuH7maQr6yHK9a1Pw2l7kW/PWaBc9m+fw3
LpdY9EG641vuk+0DsF+2LMaG5S4/tHijMtGh+/8HA9mO1A==
          "]], PolygonBox[CompressedData["
1:eJwt01lLVlEUh/GzwwwFKcgUqcwpU5s0tCjDUDMCISJBoru0ySZttESLBrLB
bJAGqWiwLAkpK2iwQbEizbIBLaJIu+gj1JXRs9j/ix9r85737LP2WmvHl5Qv
2zwiCIIChKDFBcEtjEQozmEP0hCDJ3iMdMzCRgxhOf7x/mHiW+QiD/fxALH4
y/MdxDqMRRYe4TriMRPbsQlxSMZxVGIKInEMFUjUHu+xBUnIx35sw2RE4Kr2
tL0m4QhuIkFnOInbSEEULuEepitn+3a1amE5dOCFRc4yh3gGVUhFNGrQqvUo
XMQ+TMNEtOM15iMMjbiDqRiPQ7imXBfobGtUeztjKZ5jtnLoIu7CPMzFSuVo
uXXy/DPxo/ZepFw+aW05/cZp6yH/XUE8gd3IxjgMYoN6V6xeX8EY9XwA/Rjm
+WLiM+d7bL3NxFp8xxJ944bzM5Knnr9SD/NVk3fodX6WclWbDyhQjd6oRlab
HDzEUWRgBl5ilc5uNelGj/5rOTbozHZWm/Ev+Op87qPxEwe1LnJ+lsowwfmZ
stkrcX4WE1WrLtU+W7NwyvlZsplYrz1trz98v414V2vb87JqXKya7lQNM9Xj
bzjr/CwVOj+bF5yfJZtRm9169cpmuNn5O2V3yWbc7u4B5+9Cmnqx1/nZs578
wDr8Ip+lxPP6zdbhqv1WLFQPViunQr3TRKxV7e3O9uGp3rV3/gOCzH2/
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
yjN6y5jRun/Z/7b9S8W3PR/0Ay3kPaKLe2yjTWjxIvE/qbxl5qM7t9jH2M1h
/7V9s0h7tb62On+N37ca17v27/V7uf626+cuv4llpzyXiTudv8s239Qd6tB8
/e2yf4/9K4xttVx2O8acNqHxDXM5R/bcYQzz3Wuec/c6n3fNPeYOT4l1E3O5
u+84j7343c1vWPSm8n8Wfg/2jbmH5/KOWTfZtQcHDs0lJ1cGts7lbc0MnJXL
G/ggbHYumj4p8Pxc7vaMwB65vJFegVflct9OC1yWi06cErgoF+1oF7g4F63t
GLgkFz3jHaKj6NtF0Xd8LufWLHBpLnrwftjVuWht08BDcqkH5O9Uc9gkcFwu
uV4e2D0XzSD29saPv+b6PCKwZy7vcWTg8Fz06bDAPrloegocId+FgS1z0eN+
gfs9i8a58If7gYHzcqkbg3LhCUfy0cGcMH62cxoF1uWisyfnsgf+z8yFA/Hn
wAtyeUeXBh6Zi9YuCGyRS80ZGzgml/fK+SRjrg38KJW3Tw4GmIcTc1nPWn5r
nOHvDfI3zByOymVv9v0wrH8uWsS5nS4vzuocz4t/+g7MRR/qB/bOpY5eHjg6
Fx3vEtg5lxo7PnBCLrrMHWnlPWkQOC0X3ewaODiXd8E9PcC7St9B9hPXvlRi
uyKXs+FcuGttvW/kr0Yu3KOTvEsXBg7J5Xfcx7m9mYc=
          "]], PolygonBox[CompressedData["
1:eJwtk1mIz1EYhv/ON8i+ZMuSfV9C9j1LMVzYlxnrZIkZMwiZEVfjjjvKEtnX
ZN9DCBEiy9SUlJJSkjvG+ry9/4un33P+05zzfd95T/uCkunFKZPJ5EIODIpM
pg5c5MfT0BlvCJfxI9ANHw9X8GNQF68OZ/FLUA0vg8/4NsjBN8MXfAc0x+fB
Q/wx1Mc7wWH8DvTAl8JL/BVMxYfBGfw6dMRrwfnk/6mCCayv8s2HcfhPvnnJ
Nddm/ZvvCbiQXHsXOJrcg/b6ke1Ne64O96Re3sBYfCjsTZ7JJHwilGb3/AUb
WX/gWwSt8IXwDH8OY/AV4V52Qi7eF07i16B3uEbVdhxm4gXwAt8PjfDu4Vmr
x5F4a7iRPPPR+Ay4iZ+DDnhbuIUfgv7hM3XWKViFr4Ry/DVswduEz/oKW/Ga
4bv6lnx3I2Bf8h2W40NgO/4dJuNTwnuXwezwneoub0NXvAHcTZ55v3AGdPea
gWarPbWXZjwfXwBPkmtUVprBo+TM5OF/s7PWb4tZLwpnTTOfgzeB+/g9GB6+
E92FMrQcXwaFyRlTVgfCnuTMqlb1oNpVcymeCff2CUrwevAWfwc1wjPU7DST
UeEZanYHoCU+OPyWnsKA8J7aS2fqLtvBweQ77YlvgPf4ruRe+oSzoZ6ahntU
bw+Ss76edWU2839gbvhv6vEfbGL9MTmz+eGaVItmrOyoJ/WiDBXiReFs7IYl
4Teht6BMKltroSI5Y8p+r3CtegOqvSr7FtWDsjMt/HaVoXX4mnBWK7K1Nw6/
jcpsrS3CZ6vmYnxWeJaa+X9NxZom
          "]]}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmUFtURxT/oalCWkQEFBiUKqGAEUXHBgBL3PUQTjRCNRknMoqIhIVFJ
FFd2Z4QBVxQQJaJEZJfIIKLsiGwKIgrjBBCigICDBEndU78+PX/cU+9196uq
W++9ut9Mq1t7X3tX7UKhsL1WoZC4HWqFwgOOYsfz/mCAY6DjYp93dOzx8Wie
DXK86BjsGOJ4gWeaj+HZUMdEx0jHKMdYng1zvOwoczzpeAU73DEBO8LxT2y5
4yXHE45Sx6s8k9/X8P2U423Wa9108lDMSY6nHc84/oV91jHZ8VwSXN/Eit8U
rDhNxYrreOIr79eJKb8ziDPOMROrfGdhte4trHjPxor3v7HKexpxxuBjGJx/
7LXv5mjrmAM/1WAeeYjfu1jxe8/xBvzex4rfCmIr5jvUTutXUjv5XsC3qsFC
rGqwFJ7itwwrfsux4vcBVjEWw0f78CExFaOvxXeVjgp46IxsdCxi3RrHXHJc
ixXXj7Dius4xH65z8SE+q/GrZxvgIx7r+Vb1+ASrd58Rc4njc6y49rHguclx
uwXPzY5P8adcV1GzCtZNp0ZfUAvV+15fm3KntrJGOX4FB+W1jWfivR3O4vol
zzSv4+u/dVvt+Jp14rELnsprN1a1/AYrfhf42vYW/C5ye4pF/XWnlavu9X8d
H5PTXjhUOfZh/5NEfNktju/IWznuT4Kb5gd4Jh7f41dcDzp2MD/EM/HYCQ9x
KFj+rAy+ql01MRWjtgVncT3Nx6dacD3dIu/E7TCLvM1tLQt/WlMXX8r3MAsr
HodbWOVe38f/I98GFlY8GlpY5V5kYZXvQEc/4pzh6GSRY4nFeq0b7HjEYt0I
i71s7GjCWHkdiVVeR2GVVzNHPYu8mmPlt9Rxn+NMiz3RHdM9Vg9/yHG2o4uj
paMNNov5A6xiHotVzFaOpsRsjVXMKxyd4bSFODrH/fF5jON4Ysj3Cdhj6VnH
4ftcR1d8n8eado6TGGvdVY4f4VN3TL1HfaSXz8/n2yruljhLZ9QvMy2SVb+W
zozlnfq0+pz6g3rqON4N4lv1evXZl3innj6JNdIZ9Sj1XOnNROaj8Kd5pmHq
6dKH8fjK9GYS36qPzU1yPZiV5BowO8n1Zgo8pjEXh+nMlfeMJO+r2vuqJNct
9e5MOyckuSbNSHJNmsm7t4mtb+cwF7cK5hPJtyLJdUt5SzOlKdKYTLPFo4zv
xlO7eXBW3uqxi8hD/XUJMVZxnqbzbHGS9/01Sa5DC8hjNWum4m9hkmvS0iTX
oeXwWZnk+iO7Isl1axkcpAvzqZ3iSBuyvqB7mGmDeqn0azPrtU59eF2S68p6
clIfzvRnA++y3xmTiad16rnSl03kk+ncWmq/Bs6Zxs+Dn/pzJXyqmPehxy+l
jso309WN5KR66A7r3NTjjjelp5Rw3xVTPXwbeWxnrlzVv3eQ+1fMM23YR65a
txWox1ZTl69Zo1rsZN6e/q1cf2GhT5kuqZ/vSXId2pvkOrcLHtXEzjRP79S/
69M3pQUJ2qC8D/JeeX/PXDkdYq6cCvR3/c4dzb6J/wHOxan0+N3wUO8voEu1
0QLpl6FDyk99PtOyuvT9TIc07+m41ELHthFnP/uqelRyjnYRM9Mn8RyEDnVC
E/SboxFaU0zcOvT8mhqgfi3tKiL/pvTp42poUpMamqT5I5wT6doQC207C82R
HhxNjJb08Ey3mtXQG8VexfnYkuT62oDzqzOh83ATepDpmDSiTQ2NOZ5cpTEn
Wq7N8tUZnWnOdyehNV35XjxvcXRHi651XGgR+8+ODuQygP1Xz/ubP/urxe+n
3o67LH6XZ3opn7O5k7qjPSx+E+hMtEj97hLjQYu/s6TRP3dcSb7nWGit6nu9
xe8bnem/U+Mi4nQl1tXUJtP3LtS8C3U7Br9Xsq6EuWryKPH0bIDjcQvdPeCY
yfgyi/OYwEHnS2f7CYvfHXp+g8Xfh3s4p7q/lezhheR/s8XfMG1BN/brj/AX
51/Bpw2+L8e/4l+K/+vc/gT+N1r8nmjN/p7H2p8y1l7rnl5C7r+ET8JZOJ9v
fuv4jeNkbC/GyuUmankFeXZmT36Gb8XpTtyu5NYW3tfD/XJiJ8TvCacFjvZp
cBOP6/ChWqoPdoT3DXAXjx5w+TU828HjGsb6na9z3J49v5H6yN/v2RvleDN5
SsOkPdId+bsFTtcQox01uMPiPPWiRoqp83+344cW96A34+7sZRv8SpOkR+Lx
B/jp/Z3UuBvrdR7uwU83aqcaq8d2gJvuo+L/iRx0D3Ufdd7+YXFPjrA4uzrP
Ov+6h33hqnv9Fwt/Wqf7LC3XXVTPLMZHP/wMdzzJu/stemsjnmtsWL3Tma3F
2gL++5JbX+aK1Y8YReSinKT9Iy16qHLQuNyinz7M86Ph1B9eyvlB8tFdfszi
PuubAXyvGOrXDeHwAN8rvuqV9W3FOBs/+r4FVvMSfD/K8/7EkP/fWZw37c0q
x1T8lMNBXKR/0uC9WPWOhHxUW2mTtGsQNVeOQ/Gj92V8Iw0tw598lFJz+dV9
2sP+9qGe+mYYe1RK3Gy/ShmL42B4ncW4CDuE5w+RTzHjkdRAejqC3MoZN8aW
831/xo2JOxzeneCs87Lf8arFWf7OMY19LIO/YYcz7sda1araMcHiPH/geJOa
qAaqhe5L7TT8ymf2/yD9blXM+cQ90r85Ko07+YZjs4VubXIsJd9Kx4fU6VlH
yzR6UrHbxmn0iGcchTTO+Sc+PjmNvrJMOabRC190tE6jP812tE2j/y12tEuj
R250dEyjD53g9iOLvqW+q5jqC3McVRa68pSFvqrvNnf7qUUvqeA7fTMFDsr/
Xe1bGnWbDOcz4PQ+Mb7RmXLc5tjqeJ6aK6/PLHI7xcfrLHre546SNHqT+vpC
i/59oo9fs9AN1WC5RR1mWOzNOdTgLYs6jIOz+H5MDPk/Ig1tVm/71rHPQrtG
O760uNfiVM152OBolkaP3uF4weLO6o6utLhfr5OfcquTxlnUeWji47UW/bm+
jxuk0bu1t6Ms9veQ26ct7pp+L6wht4MW7/Tc/PskjT6x3THG4k6NJSflc5i/
PzwNfVrBdy04I6stzskS9kD138Z5Ug13O95x3OrYybnRvtTzte9ZaI3O1CKL
c6XzuN7iTBb5uGEav0FUv+eo4f8BTLMRJQ==
          "]], PolygonBox[CompressedData["
1:eJwt1FdsjWEcx/GXPo9Na68GDTcqJGKFRKitKI6tSluxR5FIJBJpImlE3Nt7
xwqCWCH2ir1H0BhxYaa4QXz/+f8uPud/3vO87zN/78kqLknNr5wkSR4CbvHR
NibJSmonXMBejEVfXMM+jMdA3EM296+idsUlZHK9hNoBl/EB49BffR1AR/W5
C1swBKPxD3/xNi1JZlDT6GsHNYWZKLc2za0zakfvw56dg1PYjTHoiXdowj0L
qb3wCz8xDdOxHzsxSnP6iKta20RsQAueX0rNwHXdY22DUIm2OtHHztXY25Gn
OVzBQUzAAH0/rLnbb1/wFMNRiKr0VSX63vXT3NbrWZvjI7ShfQW1B87iBUag
CF/xA8V2LjiPbxiJHHzHb629HZ5rDoXqw/reRm0efIzWXJ+gdkeZsnGTmh48
I3b2d6nNgmcgi+sH1G5YjgqNaWNNRSvaN2kvS/FaayjSHPfgD/qgvbJTjWdm
KUO1+F4jepZm4xUacV0S/IyrR99D2zt7xrJaM/q9ltnVwTNm2SonY8+oJzFZ
Z/AQxzEpeCYf4zMKMAxPcAZTdMaHcENZyFdW7lC7BM9MQ67rR392Hu5rD0q1
RzbW6eBZtTG3as/LtKeW/TXB372U9iZEfxdsj94Hz7hluzc2oiXty3RGa+0s
uV4c/J2yuZ/TvbaGDNrSo2dpqPaiQfS52p4cC57xXGXgCD5hsNZoe/+SuiD4
GdSL3qf1NVd7Vzf69wLN7Wjw/wqbY+Pomc1WH/ZuvsGi4O9o0+gZztFvtpaL
yoatyf5r1uks7T/nts4kX3PcHDyTlkXL9H9vbpVc
          "]]}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
6r53JCfjLdZrrdZ1YK1iuZx4/gfceCeU
          "]], PolygonBox[CompressedData["
1:eJwtlFdrVUEUhQ/JnYloUAxBLCBcRBBCEAIi+QPGEiuKFUtEJSYmsfeCvRcU
UTD4YMPexULsDQvqQ8QKNrD33tBvsffDx15z7r1z96y95qRLKntUZCRJUgwp
GBSTZDdEqAMlsBfqQjaMgVvQFu6FJNlB3Q7/0Am1DA5BQ8iB/rALMiAFk6AP
fOX7r2GV76m9vsB8dF/4hv4A1eip8Bb9E7qhr0NruMm6J/UGFEAt617ULfAX
fRsq0b2j7f0y2N7d4WOw/xiKngHv0L9gHXosvEJ/hw7oy9AS9gTrvSO8CXaG
FeoD2sAL1uXUpfA5WA+b0YvgE/oPtENfgOZQzboz9Qq0gkus11LPQVN4zrof
tSpa75nU4bAR3rN+AgvRI+F3sDNtiuaJvNCzxT6THO/hGPWoZozO9VmOhg3B
Zipv58GzYB7L21HeS4GfVR7LW515djQP5Z16uobu6mfJp06BwfAjmGdLonki
L+SRsjYQsjxz22BntCzdDZYdeZDpGdoHxT6LetQjcNizoMwdgINQX70Hy+6Q
aN9Vhqd5prM9U/uppdDAfzM9WuaUNWViOfoMNPaZ1MJMuMhnhdSrMAKess7z
s0yOlu0sP/sweBzMg07qPdrd0gwmyCtoAQ9Zr6GuhkfBfqPeFkS7C+qxSP8N
aZ9ZF+8hz3uaG20G+T7DcdHuYMozPZ66Plq27wfLop5JK5PnocKz3Ix6HE5E
y8oDnp2k1ri3jTy7c6JlURk+BaejfSZP5N0yaOIenoWtcCfYM51lgO+ddi/a
R7sb8kR3b6J7ozuod83KaL3pnTPLZ1Lonv0HEN+w+w==
          "]]}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmc1lUVxl8W515QEJIdFAcIHAVZYlORXWQGQRYBAUEQEAidAVkdGJC9
JBVRQBAlM8mlEi2LStMsI4O0xSRk34Z1HDaZYe88n/P9fV7/OHN+d3+ec+69
z30n86G8/rllU6lUC/tTzvyhkEoVmi0yO5GRSm0322F2ymyn2S6zb8z2mO01
O03dbrMzeLXNt/FPmf3I7CRzaHzKysfMHzc7yxz7zM6bHTQrNLtodsjssNkV
s6MZPqaEvvvNLpsdoa2UugNmlxintjLB1ykyqxZ8Lq1fxewC65S37+IM53oV
nIU3A9ziHYJ7cY3BvbhWCO4Vj4rBvTidA4v4lA2+/tdmlYJjVXvl4F68rw3u
henq4HOIa9XgGMXpO8G9eF8X3IvPNcH7ljK+kNgdt/ofmC0zqx6ct+JRJzhP
8asXnJs41Q4eC7XVD85HWG4IzlPlrOBx1HzXM05tTc1qmtUyq8vcmvdG5hDG
RsF5KvaNg3MTp5uZr4ZZJn0Vp5uC89R6DahTzJowTm2dzW5h/RrwU7xvY73v
mjWHs3C1hLOw3wpntbUBq9b/Hpzrw6cccWnFOLXdAQdhacHcmrctcwjv7ayv
fh3oK07NmFdrt6NvQ7OOxFfxaE+dONzJuCzqKhPHLvDWfI+bjTebYNYdzsJ1
F16874aD+F0Ga45ZT+pam/WgbyvmG2g2SHGNjrWXWW/wKcZ98OJ6L16x2URM
s836wV88+uPF9T6zTuTwHmLRnjU7w28QvqvZYHw3sy/BMtxsCJzFtXz0uUaY
DaVOnH5p9iJcU9Znq/m1ZmfNthGbvmAX1gfBJK7jwCpco+knTqPgL94j6avy
Q9Sp3/3gFb6HzQYw1xjm6E/OBsHv+3iNm4gXv1KzvXC6aLbb7GWzXXDNNcvj
W9gn4YVrMl54H8ML408YM8tsNt8aN91sLHhn4BWDmXjtiynMoXjkw0HYN5it
A/u7Zq+AbSp9x5BD7VmdvwLWFEbpxLzgujEXrFrnCfxU2qaBcQFeGBfihVHa
pfMg/fqp2atg7MaaOhtzWFNrhOhl3ZU/pE3rP4nX+q8Ro8XBNW0+6583K2b9
S2ZFZj8zOwK3JcHvAN15uu+e/dY6Om+6Y3TvnDF7I/hd/Rn9Vpm9ZfaC2Rq8
6peb/dbsTbPnzb4w2wwuraUzqDO5HU0rRntPUt6DXp1Be89SPogWnUNjS2g7
QF0p+n2KufZTV4LmXGD8YfTqIm26z6UBR9Gry2i59OgK7wDd2yoXoZcqF6PN
un8TbVY50WaVtaZiq/vwCHNf+pY2S58SbVb5LPqqcqLrmqsUbRbWRJtVTrRZ
5UT7NWYXbwHNkbx7TsO5KvkWB2lSdTjozq8JT9VVA7fu+IZwq00/6Zv0ojE8
69BWhRw3Andd2oSpHuWK7KsbiK/WSd4L1zG3eGay9yqzfgPidT1zVaIuk/W0
p9ozt/ZuopPyreAk7coCq85aM9a+CT7iL82SZidvGsXrELFTPmsxrilYNHdL
cEiz2jCmMbG4kbrW8JfeNSe+WawtHu0YX4/5WhC75mBtCD/1032sO20860gX
dK50h+kemsK80rIOrNORsrhJvzrBoQtlcepKWet1o6z1u1NONFVaIg3RHTuK
GEijehDvnpQ38d06pPVec0mvc+ArPtKyXvDrTbkl82mM3gPZxDHRcuGQng5n
bKLf/eAmHRsAbunUYHgOpC3RbMVS99TS4Hd8ousDiWtf1hPuIcwlTR4KvpLg
Oi39lm5L+x8A91DGiI/0bgT8RlLuQ/xGkqd+rDcPLEspjybW4iO9GwuHcZSF
dTzlRKcnhLROq7yXb+E5F1yzXwqu1dLpR5lD2jST8fmUE52eFNI6PRlMUyiL
mzQ6F3zSvmkhrdPTQ1qnZ4T0OyAP3mPguY51hVnaJ40qoJ80bhbjCigLxxzK
wjGXcqLNc8Exn7gm2qxyE+KuPH8Y/E2gd4c0eRHcPzZ7L7jGSjcXs26i6wtY
T5op7VzOd6LPT1IupL/4647XvVCf9d4lbrcZ3/bR34PaM9rf2tvSbf1eeoa5
tIa0VrosPV4ZfK9oHz8HDrVLrw+aHQj+1lGddFra/YnZ74JruM6o9q/O7JXg
b0+dt83Mqb2402xH8HfdRPKkHP3B7B3K0vzVYNhn9mP65sFTHP/FGL3F/hj8
DZSPvUrMf0V/5fp9s1/TdszsaPA3zG/ISZKP1+j/VfB9rbN3wuz14G8PcXob
Xr+Ht94tH5htDOn3ypvgf4E+itVps1PB30CfBs+PYvYXs5/DWe+c/5qtgPcG
uH8En1lwEJdF4H2P+j/DR1z+Efz9lGDZyPxvkS/h+Ssc1uA/of0XtK1hjg+Y
4x1inQ+WD4nvBnKxDlx/ApuwfAzGjfBcTa7eh4f+D7M++J7Wvay7vjUY/wlO
1f2NWP2d72z8p9S/TVs2edKe037bwvcK/BZisg4++cyzibGfBz8Lq/AqrwTL
59RvIb7PE4N/Bz97ytF/iM1mcql1n2WuZeTqI/L1On2Et5yd0bLR7/3twfff
sOD75Thj/xdcG6QLOmPSjx703Ub/rxivvau5dtD/It/SOd3Ve4KfQZ1p3du5
tO+k/zbm0v7PMFxXRe+n8ygNeIT63cy5h3kfZYz6DAGvcK+lTuO1n19h7Vzq
9gff74fZE9o/hXwvBOMB5n+ctpnUHaT+6+B33DPEU2vrfVDBvmP0OOr3i87+
EvyRkNYGfc/Gq20x6wvTejDug7vaj9GnDLnLYX3h0N2iO/AyGPT76QS5Xkh5
AV6/r56mvZjvN8j9MupPBt8vJyk/zb44BV/503wr96XkQfex3hXaL7rnv2Hu
zygvI9fqM4x21a8kX6XwVXsJfXQ/fQEetZ+jj+JcRDyLiPUS9oX233C4XgD/
DupfJk6Kl85gW8ptiPMl4rme8Yqf/r9xhdhuJd/a77Ky6F07ctOWuTVmLe1l
6LOV+hzwfAlO9SlHvfa+NFRvE/2+0u8Bvdl30TaCXGiPSTMXmJ8bPU6NzedF
39uBfaiYNDA/NHquVFchpmOVwVnra75F9HzNYXwBa2bwZtXYwLpF5EBYVpi/
M/q9+Jj5SdHvLeGaB7aq5pdGv7Nnmn8k+rmsrPmi34/y3fh+wvz46Hea9ulT
7GHN0YN5lpsfEP2+1xtkCO8Qce0M3wL9LyL6XdnRfCZ50fpNwNDM/LDoOW9u
/oHo+62T+ZHR99s15h+Mfl89Zz4rura8ZH5gdA2pbX4ymF/U//ei61sb83Wj
6+7timX0vT3CfAfi1sf8rdH33mrz/aLr4Rrzg6JrZnnuRuViovlG5Lqr+YbR
9/Za8z2j3/11zE+Ifr5uMT86ul72Mv9w9HNRw/y46Gd5tvm7omtKFfOjot91
q8xnR9fYwdExCc/95u+Ifu77R8ctzNqDE8GmGHcnzjPMT4/+nso3Pyu6ntWK
nsuNnNfznL+bo8dacVZsehMfYa8O/rHmm0Z/jyhv88nd1Oj8xV05vJY8ilMl
eCmfFcmpYlCNOCiWXYincnU1+Zpiflp0bdZ+uYc9c3f0uCvmbaPnXnnX/q3N
flCeV5BrnbN7o5+1+6LvIe0f5aommHOix10x/z+9oFa+
          "]], PolygonBox[CompressedData["
1:eJwllGmIjmEUht+knpN9GcsP2wgxRrIlZF/HMmaGsUR+DP6Ise9LthkRMxRS
lihZyr7vOyGypZSUklJKSZL8cd3dP666er/e9znPuc/5csvml5TXyLKsAGpC
y8iyhnApZdktmIWPhMv4A+iO94JT+COYh7eGZ/hTyMVnwFn8ALTA68F5/CYU
463gNn4VeuM94Ql+Gibhc+AxfgNq4ZvhAz4dJoRr0NnXYDy+E37hJ2EB3g1e
4i+gHF8Ob/BzyWc3D7+rGprhu+A3vheW4kvC/ir5WyXhWvXNuvgW+Ky7Q7vw
Gfr2YRikd+EvfhAa4dvhG14BjfHZ8BCvhHH4DviOH0+++0S4ntyD/ngbeJ7c
0xy8Cn7g1dAEr4afeBUsxBeF774HCsIZKrsr0A/fDX/w/cl3GQKHku9UgbcN
1/4xufcDwlkqg0q8TjiLT8m16066i+6wFe8Q7sWX5FoLw3dTzcqqabh2Zabs
J4ez1gxsxDfBe/xEci8Hwtzkni4Lz5RmSZmqt13gWHKPt+ENwtl8hY74WniH
34N1+Bq4mPysDF8Fb/G7sBpfCReSn23A14d7qZo6hXdEu3E0ufddw7Uqgx74
4vDsvIZR4Rp0tnZoKN4e7iTvxPBwDTpbNY3AO8P95B2cGZ4hzY6elYbP0Lc1
I2PxffAvuQfyMeFZ0LOp+JRw1meSZ0k7q13VTNUOZ66sp0E+Pjo8K5pRzUrf
8G+aGfVmBRxJ7lH9cObKWhnpv6BP+Cz9JwwLZ6Is9M7g8AxpdjRz6kVeuJfq
iXaxKLzL2sn/cmCkBQ==
          "]]}]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
       None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
fXlgc+vvT+7lfRvx9JV5Hfug47zqCW9illi9sWSPi1/NLJmD2mkzzmCTFwO9
S/Zdm8dcj5p923lBNws8Et9XBb06MDi+NwnavWYvd07QJQI98YmgFwWeiu9z
gy5e025PeS95r3/JWjXT2st3i7S/Nu6tH1ymLzykHw4tKcsZgScCjwfOLNln
8o3M/w08UNJfL4n7D63pA7eW9F389lHPn6lNfi2Zl6lLA5QNWZ5RngHKxvww
95LTby4ZVxd4/2Py/L1k3lzON5/mu+Mj3+knI/1eN7BayNitpj/gh/h2T/X5
tmSvS04jT27lucmePSPOta+Z0/YIembNN18z6O413x79iYUeUmLjRH1tiv52
Yuw9omZMnRJ0/sAyyjJVeU6NuT/VfEfi6Bd9l7z6s/42ym90OTv2LlIz1t7S
DtjkcvkSq1fE+pWBF+L785K/E/CrFr/x59NjfYGaup8WtNSsR6sE3ammbXsG
rTVt0lvZ8OezYm7RmvpOUH++r9EPeC/ilzqKvuRL8h257i796UL97mp9j9gm
xqs+cq1+cl/J32bw2F9f208/ucBvcnCfkvF4Z+A/JfM09pynZm7q5n723Fvy
d2ZXdeqtzV8pGSO9Xb9TPshyhzIOKpmn2inLLcrA/TfK/3xl2Nc7b3KeXuIG
773V88TgQ475bsTn4ep9l7YiLxJLxMsN6tBVWe5xnd+Vd5fM/eC2kv5ZfYvi
+m2uTyyZR8nR+BFx1Ygvcis+Sb4d6hsNccz3a35znticVTI/Plfyb0Pc2U9e
y3o/88v4jX8Qs8T46yXjkrk3S8b0m46X8dzzfvfyjurdQ5T/Sd+mne93WWmt
AZdpT/7WTpwQI4dpA+rjpJI5ARke0I6sf1Eyfq7QZpdqT972Pt+X/S94hj2D
3YcfveRbUgteUS78pW9Jn3m7ZAyv59zNzpM/6OGIzU7hv0/U9EFyALmAnHBx
zVzMXfztn/8DIF8dWbOWXOF7jJL/gJg7qKafoRMxQR6Y7pjvttY7anP/mrnv
Rm3DHDnzq5J5hBr0TKzvW1Nu6iz5l1xxTMzdVvNdbw+6bc13Oyxox5o5pMX7
4Puu59eVB9/kz11r5nHyHr76jW++Ijxq+sQhNfPRicqI/Pwt4/Gg69eMIWww
Wjv0ibndasbQnMDskv3rO8pB/m7UkqXl19YeYOea+fEsZW/Rbi3aBZs/R92o
mQt5t218u8uDblTTTyboi/jhATE3qKZfNNesB8u6zj706lozX2/lPP9vhB+T
38aXtOeTsb59zXywY83cjT23DLpUzTzbQ570exvXrE/wIUfC6xj9An84SXtj
957KSh2ll1uoZo3E344LuktNux0btEvN+F2yZr+Cnxxes6eBz2I1axj8Twi6
oG8xUf49vf8LZdiUvTXfvV3NWrWeen/inq89Tx7Av67Rx+4PulfNeO0bdP+a
tadDzTXmbw56U82/zy1ccx979qvp3/h2U00bNezDmB6P2CWG8YdbY+7omnnx
upr1nnyFn16vr+Jr/N7jd8+N3F8zR4xxjfk9a8YecUf+pI/id+7BNWOY+J2r
DMjTOWi/mrWBvTPcz29wvull14n1x2rWtA1qxsZF7uUMObMXflozV401Nhpy
8U3O6e7d5FRqD3WO30F7o1/NOrdVzRi4RhnZj612qOmj1+tvTdblFbQJv3/J
4TPV+z3lwMeQfW3l/6Dk3wiIBfTeTt1XremL+CH9GTmR33/E1oHG1xjnt5aO
cc/qsX58zfo8x3vX9x7uYx799lHHLYKeX7PXYc845RnneEt5oAO5i9r4mzou
4Hd7/YfaOcJ3mOlbEBN9jIvfPE9dnq9mPu3lmVnyJEe1Me+toxz8Tl+5ZkwS
j+RG8vhp2nu2OjI3yflZysNd9BzEAXXw/6TdY1s=
          "]], PolygonBox[CompressedData["
1:eJwllPlrz3Ecxz/J9X4h95F7JPdcyX1v5o65zzGUK1OYm2HsMjvNtcMMm4nM
fZMjKSWlpJSUkiT5DzyevX541KNv2/f7+bxez+crJjklcWu9KIqSoD6UWRRN
g10hit7DOHw0XMNPwAz8FvzBd8N2vC/swwthKl4Hv/FUWIHfg794OiTh9+Ef
ngGx+EI4hV+Gfvhc8++6CD3wOMjHH0EzvBI+42NhDl4FX4I/Qx98ABzAK6Er
PgFy8TvQHT+mZ8AfQBp+CG7iddANT4fb+F1IwEvhXfCZzMQr4CO+Bwwvhw/4
QBiKL4MzeI0+wwdDGl4Fa/HT8BJ/Df3xTlAW/JkLNAt4jp+D1XgNfMczYZ12
Ab/wbBiJj4EcvBba47XwE0+BNng1fMM3QTDfsXYbq53iJ+Epfhw64g30GV4K
DfHD5rPpAo3w8/AW7wxN8QvwSVmBZGXB/FlewQ48EYrxS/ofvCWU4OWwE1+s
meDV0A6/Cj/wbfpNvBWcxSugNX4FvuKbg8+uBRQFn+FB7R6u4zdgvPk76V2U
gQ34RijA98Ig82fSs2hH2nVj83fVzpeYZ1TZ1DPONs+YsqXvyMGPmGf7iZ5J
uzffbRYswofomYO/8wLzmWgWyvxS8xno3ZWZeeaZUVb0TvPNO6EuaIbDzGei
WRyFKfgW7SB4R0rwVM0QfxH8tzPhcfBnyMIzzP9Xnynr6oi6ocwXm2dY2VUG
1Q11UN1TR/LxPPPdPwzepRhzV6cmmndM3VKGJpt3Sl3Kg/3mO9JudFO022zz
2WnHyu4I89kpw+p2c/NsqePqfm/z3ekGaNfr4U3wnReZd0jdeabvxEeZd0V/
o672Mr9d6qyyO8u8y8qwst3T/HYp4+p6E/OuqPPqXgfzbKqDmnWh+W9p5rnm
O9Ds1Sndwnjz26CbqGyvMe+yMq5utzXPsjqu26AOqTu6Ebq1081vnW6ubucq
827rhqrbw81vqTqubqw077I6otu73Lz7usHKyiTzXSgz/wEFTs2g
          "]]}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
       0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmQnYVtMWx18V8e79alKaUKEMEVFSiZSERIMSzUUZK64pXMMlY26ua7iZ
4uKah2SsRGmkTBGVVJImmpWxu36t/3729zzfev5nn3Petde01/7v89UfOKzr
peUKhULt8oWC/RXaxELhYJMLQ6HwabFQmGgyyeQz4WSTz4XvmXwhnGIyX/i+
yZfCD0y+Ek41WSCcZvK18EOTb4TTTRYKZ5isll70rRGi71uTWSazTZYI55h8
J/zIZKnwY5Nlwrkmi6R7pskKk0+K7usPQnxdKcTXH4X4ukqITYulAzuWS/c8
k7WyEV8LwcfrTH6Sz/j6sxBf1wuxa4MQ3RuF+LpJiK+bhfi6RYivW4X4+osQ
u7abfC9fKwbXtVk2LZBNv8tnfP1DiK9/CsnDX0LysEOIb79KN/HbJWRfywVH
fC0fHPG1QnDE192C+4lNv0kHdrS1+4ebNDE5UXiESTG4n/gX7Xqb/CsFR2zZ
Mziir1JwxL/KwRH/qgRH/KsaHPGvWnDEv72CIzncZPJVcP8WBPetuskBwfWi
70Ah+moG93NXk1pCfK0tJA91hLub1BXuYVJD+onZfiYhuK/1hPhaX4ivDYT4
ur8Qm/aWjgrSvVn10lA24mtf1rthK5Nv5NNBwe9Vly2HCNF3qBD/Ggvx7zBh
beWttvxrIqyr/IH7mDQ12Vf+HSWsJ/+3qJZPMdtaRc9Dc/mJf8cIiX0LIbHv
ZO+eFt2/8wwHmyy066Olm5i1lm/4dJwQn9oI8el4IT6dIMSnZtLRQD5gK/XY
3uRI+fRvk9tMbjfpIN+Y/2QhOjoK8ekUIT6dKsSnb00WmxxLvKPnp5PJ6coV
fnQW4scZQvw4U4gf/fQez/sLed4t+BpjbZ1l0k5+9BCeZNJTiB9nC/Gji3QT
m3PkD358Z7JEftSObm9vkz5lbO8rxKau0oEdvaQbXQNkI/NcZTLEZKjJIP0G
288z6S7bzxf20Ls9ZPtQIbZfIGSeQ7THYftS2XiRycVl7L1EiL2XConl9RoP
MxkoG7FphOzm3mVC7P2byWDZe4UQe68UDpGufspPZ7PrhOj2LpNd15iMLGPj
tUJsvE6ITcOlAzt+Mhlv8q5ySG1SizfKVmy82eRy2fgPITbeIsTGW4Xk4XvZ
Mgrbo9uUan2k7LpDiF13ConZXcK/m9wtvMHkYZN7TP5p8ohwjORm2XWvELt+
NFkpu84yG9qb/GDX7aLbcp/JaOnG1/tlH3Y9IMSuB4XY9ZAQu/4jHC1bbpId
f1eeiPFqk1Wya4LJ8yYvmDyu+ekB44TM/4SQ+Z8UMv9/hcz/lJD5nzEZq9ic
aX51iB6b/QwfM3xOcz6mOdPc4+T3cOW4bnR7eO9lzc2crwiZs5u90zX6nOuk
m7p5vcw8L0o3fryh+bj3pvAlk7eEzPO2kHnWm/xs8pqeP1EmBk9qPLHMnJMV
U+Z5T8g8ae+hX0/RPeZ8X8icG4LX+wcmA6LrnWoyTXNMMvlQyDzThcwzQ4ju
mUJ0J74LF0x8l/FH0ou+j4Xomydd6DjAbJht+KnJZ8Gv55jUj24X4y+C60LH
fOFcky+F6JsoXgpPTVyc8Zwy/n0u3ehKXDzx1NXicImLw6ETF2ecuDjjxMUZ
Jy7OeIZ4KeOZ4qWMZ4mXMk5cnHHi4owTF/+umPkuXDCdE+bLtxXiqYmLryhm
Lv5DMXPxlcXMxRknfr+0mM8Jq+XbWo3xbZ3GX4ufritmLs4Y/r5cuhLvgSsk
Xr6+mLn4RtkK59xWzLx8UzFz8cTNt+hZ4uVbi5lDJ04NwkETf4XbJS7+ezFz
8T/kP/fgtYkXwp9W6PfbFa/fNE78O/FxEB6LT/BS+CF2w0XhpsQIzrtDfnKP
97ZpPvgoPsF/4JWJf/MM3+BEPMNnnldULU/X2ki8vCxnhVMlXg53TbycceLl
VUPm5Yzh41xja4jO0RM3J3/w1/LqHTXkZ02NEy+vGTIvrxUyn64fMkevLX/g
fHXlP/GGv6ZzRaWQeXk9+XCAfEv8vk7I5wSetRJXxZd03iMn1VV38PBTo/Pg
r+V/Q/1+V+WP36R9mv0RHsA+e13IXPywkLn44SFz8SbyAW5wZMhcvKl8OFpj
fGqmMbFprnHi4s1D5uKM4eAtZGfiuyeHzHc7yj+4K1w2cXHGiYszTly8Tchc
nPHp0bn+opDPh23lA9y1nXw4SWN86KBx4uKMOR9w/mmpuLTVHImLYys8FW4G
/6sZnYufJrvhsZ1C5uKnh8zFO4fMxc+Q3V00Zo6uGjNnN42xGx7bPWQuzjhx
hSdD5rvwyMWys4ViCp+F3y7RNfbXic7Fz5WtcNreIXPxPiHz+54hnxP6ydYB
GmPrQI2xdZDG3WXLYMW1l3Sl8yH5TOfDxiFzcbj5weK5/KZk17+GzMfhtxeF
zMUvDpmLXyL7hmmMfcM1xr4RGicuPkL2wW8vD5mLl+W78MsVwdcRXBcOfpXs
PCM6L18um+C614TMxUeGzMWvDZnfXyGb4I7Xy6YbNMamGzXGJjjmTSFzccZD
ZMuVIZ9t0A33HiUb4KFwwzEh8+/bQ+bfd4TMv+8MmX/fpblHa8zc8N17NPcY
jRP/ZrxS18QL3g3n/ldw3g3XhWumc9cQxeV2PU+c+4GQOfeDIXPuhzQ3nHds
yOeBh6Xjfs2xT3Re+6jmg/c+FjLnfjxkzs0YrgevnBDyGYDn7P3sgewd6axL
jNP3KfYN+C+c+FmTo2zOXaKfqypFPwPcK1ml+FSIzkHhn0W7Lhed+5bX7+Cm
O0zWyLeT7f7a4Nwb3cwFD6bf0/cb2fUGw/XsE+jgHZP9tW/QZ+mxBxr2ic43
4dnM+WrwcW9x0HTGoI/sEd0O7N4z+pmKuq9q17tqH61iuNHwneB7KveIF/2G
/kJv+Ul2j1ecCtFj9Wfws+Io1cxfZeK0Q75vtHdv1feZttHXHrXexK5/1+9B
zsDU+W/BewPrr7eu6Wkx+ncH7Dos+nvL5A9zU6u7R7eBcRutY/pOS7uurLyu
Mnkzem6o7ZN0rpxm+LbyNJ3v4soLe3dr5YG9iD2JbzWzDC9Vv/3YcLjJ1cpV
J71DDfdSHSNn65z2vOFik1/sei79x+R/wZ/30lq7xfDL6N/qFoJ8H4ve53uq
158YPabM2076+e08wyuVozmGw6J/5x8VPR8pFycqH3+Qi+g5OT567C5U7OiP
rPNF8p84VChZ/Zg0ZT5yET2PywyXmtRSXNvLnpXE2GTf6HtBG+0HbTQfeXqA
3CkX24hN9DwPNRmiHnSC/L1KsWqneJKf46Lb2FbvEZPthr+aHK71yTqlznf6
rNrZoHXLmiW+W4LHvLX04S9nLc5vnL3IGfGDS6SzHM/m6Dnnv63SAa/bHJzT
wV/LaY2xvtLZj9/Twzgzc8ZOZ13OpZxlOfNx9qOe4AFwgC3SA39MZ91p0gtX
ptexvjdrPFX2zQ753JvOwSB8nR7VUfXPdwjGz+h+B9XnI3pGr+6od7hPj6TX
sO6HKu+jtHZO0TqC07wsP8kFeXhVc89VLNNZHX8aRD8/z5JvH5XxgRh/GvKZ
nGf0horRexY+zZNeeib98ZOQv4lgxzjFm28cfBfBlqcV423B+8yxqh36E3q3
B+db9B36Dz2qRXROw5hv0VuVd2zZrt/Rw+A89Irdoutnnhp2XU15+kZ5Jaff
6j3e2aRcksdm0fce9h2+idF/iXPqofTP6tHPSOhqpB7TUnWwWXX4FbmNXpfs
CfTNlSF/6+FbzADNw7pg3+X7EPtkl+jfqtaoFqgR6oFc9Va+ukf/3kQtpe9W
/L5e9G9bz4b8/egt6WXvHh/y96DJ+h3j9O1tgt5L36He1G8myk56PHvTOr2L
jkl6b4r0vq57/IaefE50jgHf7xGd8++n+/hNz6iivnG+ehExr2b97+XoeR2p
Z8SfswZ1QA3wLvfhRVtVH/SOQYYDVd/kiv2YPLPfN1AMySe1t0x1d2j02mNP
OUJ9darhiOi9jP22qfLSTnYyLxzmyOhrdIfheNXNQtnaUnYOlV/USDXVBjYO
Uh1MVE28q1zzbKruDdQ74ADd5wzVP3pcx1CPJo2j13IN1Tz75w3R1wXv9Yt+
3gL76pqeXF313F52ttPzwYpzA9mJXezxlVUDnD376p2+0t9S+vvr+pXo+zf7
BfvA0dH5zhvR9+adfS86P6Cea1re31WdrSGu0esaXnagcofvjaSfvkP/oV/d
a/h+9P2OXLIXcia6j/hF35fY3w9SHTaUTnQcbPM+Gv0762fUpq57a+5Z0sf/
PNi7+2g9MvfT0TnNzj5MnUbnfCXTOS76HtjIrkdH76OHSg82siffH31fhh/Q
E6lN+MXNMXPmloo9vfAYrQtsby7b9jT9k6LH+C3iEZ3DTjF8Lvpe+2N0fkYN
s/fTW+mrh6h28GsX0/Ow6pm8N1PtHWT3H4zez5aQt+hr7lnDGdH3T2qkgd4/
wt6fHL2fNi45J6NXUvfsWfTJv7R+4LTzo/dNnhN78kH8H4o+N/PS87rLL/aT
rrq+07Bhyfv6M7r/tOqZPs66e0F2YMNa6eLdzw1rlbymdzO8Inq/gu+0Vk6D
3Y8lr906JR9zzTzdZMNYzc28O3tA9D5QtHf3KHkO34selwrKAX2ePf+e6PVB
bVxGDEseG3pP/ZL3n3KG5Uvea+id58pOYsQZiT2f/tpTtV1P79BrFxDX6H0H
Xst7fMPAvrNUe9jSRevxatZFyXsza/ETrcdLTPYteb9kjXGWv0DI2Z41Djfs
rOuLDPcp+X7MXnam9BPXVootvQmbOItgex3ZT/+gj6R9Y2/ZPCE6l8VmeHBN
vX+u4oK/xIvzGPyTWL4ePZ6sJZ6zH2LXi9FtG4t/Je/71NEd0WvpKcPKJV9j
t0VfS6yjmdFrjneI08TosUIX5yi4Df2UvQceSa3jL98nvzdcLj9Ze6xn+At5
fk223224KXqf6i8fW6oX0YPhaOyNs6P3gZ6KEXF8Inrfoedw1oHHsw/TRyuW
vC7eid5nC8rnS9FzynqtpPqsUvKzDT2Bnvpq9JwT53qqPfSzX7JX7mXvVy95
b2IvqlrynnKO5mev31fv81v6x6LoPQTOzbmOHvJ/a2sVXw==
          "]], PolygonBox[CompressedData["
1:eJwtlFWoVkEURo/Xq1c9+7eu3a3YXSCCIIgiovjmm+CDLQaK3YFd2NiFioqN
IihiINhid2EXdq6PvR8W3+w5M2dmdlXtPbjHoKwkSfpANhTNJMloS5KzaZK0
RHOw88Ma7CrY26Eedlf0DnP90ArY7dDa2NfR21ACbmE/RB9AGSgLd2G61vDt
K9xhPDXWfoEtjOvyv87oTc2h36ABPMKej37WGt0DZsM8ncE3QzfCcciGFrBH
e/lfN/Qxa5ahE6EAvMB+h24yf2tNKMnaXPjBt1bYJ+Ak/MZ+CjMZ7zC/e230
MDRifU/0NXNFGK9n/CH1OxyEhsx1R18x9wddBE80Tv0uQ+Fv6nc6L99l/OwM
DIPq2B21jzUj0OdQyTwmQ9AqfO+AjsL+qbvqTnHGYLQy39uj/bCXoMvj7YXR
9+Y+0NtrwRu9A6rpXBijt8S3i+wZidbgf53Qrdhr0Q3wkXEx9Bk8hYpxxym6
F2RBIeUAe4+gCRSF8TAQvrM/Bx2gOEeudGHunHIReqUek3GM+ysnGOdHZ5nP
aXyPubnxz5zIiYvoBdiW+pnK7bfxNuX4VXQs5IPiMAmGwz++FUR/QWnu3CZ8
+hVKYbeOnHwdOdcifLYzctLijnvNfV44ckh7z0ds9Y9burfyzrxm1oTP5Kv3
rD+Nnom3tUl97SlIY09fuAG5uhfsgxVQJHKqOOcVy3js65vXzgLzsWpol3lN
1YsYTEPvm9eianSC8gjKRwzGxpmlwmeqbdWEakE1/iliqNjVQZfKl+a5/kwx
NK9p1XJD9DHMMV9bPnz93fybfH4Trpn3gtx4+9WIlXxwCS6Hr/ZCOfZfidxq
qzzLeA2pdhqb95bN5r1KPUa9bJu5b9XTDLsAvMVujr1OscPOa17Tyo1s7KaR
I/kYvzCv7abh+yzmmkQM8jLOAy9Tn1Mv2m1eq+pJk7XXvLcqR9UrDpjXlnqG
eusM816rHqvaWmn+FtXYqshZ5arOOGpek6pF1Zx6x35z36uHqFcsNu9l6hmq
5dXmvUs1fUxxyPjb9eaCGfepfNnMvJcsNO+l6inqfYfMfa8eKN8Vyvha+fA/
ZKPTew==
          "]]}]}, 
      {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[0.3],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmGe4lsURhg8aW+K3x4KARoMmJpYUoyiKvfeCKIgKR6RLB2kCAhYUrARj
7xArFoIiKBoUu8GIvUcxdkUsMagRde5r7vf6+DFn3m2zzzM7uzPf2az74A6D
VmloaDgx/qwa+uTS0HBUyN21hobXQz4M+SDk0JAdQ3YK2T9k25DtQg5Qtwk5
KGT7kB1CDla3DTnQccYGhRwbclzIYdprF3JEyM4hu4S0V+8acrjjjHUI2S1k
95Cj1HuEHK3eM+QQ9wRrp5C9QvYO6eg47WPs2yeks3pfMe0nvyb5wKOLPOHR
Vc3YCY6zZ3f5gLeHGk4n6jvGujmX9pHyg09P58J7gPjA1UfOcO3tGtrHixFM
fR3HByep4dpLe6zpry+w289x2leFnB0yOWSw/LE9VM5wPUV82BsuZ3gMcxw/
jbAPrqP0BT4YrWb9SMcZO9l12DrL/bA3xn3gOlaNDyaIGx4T1fjp9JCBtYyp
M9TwmBQyRLvjtIGfznR8iLyHieV/IZ+EfBpySchp2p4iZ/hNFRP2zpUPXM9T
w/V8NT47x3XMu1BurL/A8THiOF5fTxYL+10UMl7ef1XDe1rIqY5dKkZ4X6aG
3+VqfPAX8bLmSn0N7yscP8sxfEPsXC0OeHP3nwr5Z8j18oTfzeID13T74DRD
Ddcb9Bf736gG+98cn6rtuSHzQm4NuVjf3yY3ON2uhtNMxxm7Uw5wmqUmlv+u
hsdN7gnWfeM9uzb0XSFHxPc1oWeHdIjv62r51o0oyXNOyD1yht998rlRrDPk
ca+asfmOs+cC+YD3QTWc/hFyi2P3Oxdf3iE/+DzkXHg/KQ589Iic4fqwa+50
bLqYBgb+ziV9wBveKeTnIQu1x5rRJW0+EdKxJNfHa+kb4pW4vk7NeT8tf/j9
Sw32wbG2W0lci0MekN+zanzwvPzh9IIaLM85ztgi/cgew8NeU8jaIa+KER+8
piZeupbsfyXkjVrGJjbeVIP332rwvuie+GyJWMH4dsgztt+xD1z/UYP9XTXY
368lJrBsFhgaS2JYR6zv1TJHMs69+VhMYOFNecs9PxI3Yx86t+IxT18sdS54
/+sa7K0Xe61bEtcycYO3dfTVSnJdvyTWz0O+EDe4PtMea75yb+x+6Tht3hTe
AN7Z5eIGC3dlivHRKuy3DPmmlm8Y953736Lkft+G/F+77PNDyNe1fF9/VGP7
e8fh951YWUN9QF4lv25Ycqwh9NiSdpuFPjWkd8jGIb1CVglZPWSvkF/5TW1C
fiSXt9EeuXJ8yb1ZU9UuzKvqFfYmN5OnujnG+0xe3NEx8ndVc5B3qUvI3eT7
qnahTW4/0jY1zmGur2qXqpbp4LyhgalvSZ+1dR8wUaeQt8nXVb1Cey/7Osqj
i1irGqWLfJps7+nco7UNv6p+OcF57eQB1l8Glo1Kntt++uBYsZMv+mivn3ED
B/J1r1q9FunrPuRB8lpP42a0Ph7pWHvX9dQffbQFv/7uATfy5WD9y9weciOP
DxUfNcBAObEnOZWaY5T74bsB2m1yfJhCbqzqEfQkbRD/k7VLzj1NjOTWsfI8
1Ta8x9uuasHu8hsjf/hMcF5V00zQ7931TVUDjZEzOf0M8U4WK747R3xVvbVy
LVLVJuhza/U66XR9OUm7Ix3HFvmM9/he9yZfX2Af7+qiWr3OuEwO5Nhp8ifX
T63Va5eL3I+8fUmtXq9cqh/pu1h/TXM9uZE8M1+MV7gfZ3KlbbCSt66p1fPW
tXK93jY+mG4bHuTrGfruKm1Vtct0cd/gvKp2oU2dcJf24XOzGMFNPr9FPuTu
meIjP99Rq9cxt8l1pms2CJvNS77llzv3ds/26pXwzdLWEeZ2xqhnZst9mljA
OsLfbdfJmVw/R25zbVd10izXzPds8cE8503RNnuN1S8XypP8/oB8yOnkceqK
x90LHuTbheJ+xHZn64VZ8lzoeuoUapHH4ntQyTpmrVKvG57XXwvcG4zkS+oB
YnSR7bn2PVmr1ytPi5U8/0ytXqMs1hfMfUIO7FPVJs85j3xOfnxfvC+uhIk8
TP6lZqEueVlb1AOviOV1bVR1yZtifcOxqr55tVavFxfU6jUN87qZ2x+WA7XB
W+Ijny+p1WsX2kNK1me/sC54V8z7lawVSkibknUM9ctibbwtDrhSz5Djyf/U
DlW9O09M1A7UDDNj/a0lcwX7UJ+AgzgcaSziP3L7F+KmrvjE/ZbaXuI+S92f
uZ+7DzXCV9qgBqjqBTT1xp9in99YG2GL+qL6PYf+WqyVjaVyW66/lrl3u1i/
Rclaprk1zmdyWqZ/28b35iXrLOx9L6b2xiz36pDQB4dsUrLeaGbtsmvorUvW
NdQzDdY3x3pW3I3e1jSrWQusGrIi+rcrWf/h4197bpxRz9A9rEfhSe2wolav
t34wZokDYqBL6OOtsVua25d77utY055ojLDuj6E3NY6GlaxRNrLGXF8MO4fe
suRZ4Cd8h99+q584xwNDH2DM/TlkK/ffoeQ7uMwzbeH8bUL/znPYqWTdyXn8
Xv81iLG1OHcxBn+U90bWUfh3Q7GNs2Zk7Umez6pib+Gc/Utyxu6AkP4la0r2
Bu9yfbmpZ7GOnPDb9iXP5j19s7nf6xqfy8SytXvtWNJH8N2tJLcGsWxhf3P9
UO2/lRxbi7Pmnm2MCey11e/4dRt9SOxwT9bVB39wr1aeR0vxbi9m+G0nR/y6
ree+u2s3ltMO8jq65P8M+b3JXSBXkZ86Gm+87fDeWe7w2EUu8N7Vc8X2bmIj
15LnyEPwO1Bf7x1yuOfC2bXTZ8PdizzE2R7s+cLpIP3EeuKw0XHu6hra5PfD
mvYdav9htjdxfG/33cfvNcUHX3IlPsAX1Ark4A7yOFK/zPatoM17wd0/ruT9
5+0gR85y3VHaQdPmLWVvYnJ1uXaUb2dt8YbwzhPHrT2H9tomzx7jGaE7eS6j
/Mb+cdp51P6R7kFfZ/vHhD6lZM4D92D37eb3S7V8u07S/yeUzJHkxx6u4750
L/nWvKTNJrnQx1hZyS65r0lba7uum2s5yx7a5P3sUzI+uUPcMe7RxNATSr6t
zO0pnq62+e7vOL79QQ4rXIvdZtrmezX9gn/miBFMvEX95P4zdT/jB/sDXNvL
9mr6bIhc8PFA/cz+Q7VD3yD717LNmWK/r3OYO8xvaj9yMDFInHTxrImlk42B
Tn7f7Xs5VN74ebhnAb8RcuQd4i3+RpvDPQt+F/L7hN8W/ObktxO/Ld6JsQvk
uDzkvpJ38JyQ1/T5eo1Rk5V8t74PWVzyzk2GR2O+Q1eGfGU88Nt/nGcxzjZn
TR4m15JnzyIW5Av+UXL8JvS3Jd+C9cP2wyXfD2KAeKZ2WxR6w8Z8h6i/+L8L
NchD0W7ZmDF1f0iLxnwvF5TkAP5zQ9ZozHfxec6n5Fk9GdK8Md+5u0Ne9awf
EceWnsUoY4o4hcsq4hottjVj7oMlz2Gt+H605Dt6V8ilnik17WjPC/+M1VfY
GeOZNvndVX8x5zs1a3h7n2Gs5Dt4p3zgclnICyXvfS+xgvO5kBUl3+Xx9jdT
T/R7bsjlxsynIVeVvLu9ndNL/80v6UPOf17JGOjtWWPnvJK+wA+PhbRqzNxS
Qk8vmfc4nwdKntEZIZ+XfEuZ+3jJ+R+HfFTyLa9F/zUl8yT85siRM19Y8ty/
DPmi5Pv6VMhbJe/atJCvS+aV90M+CNkzZGnIspJvPnMvdD7x9XTJGFsS8nbJ
vNoY/TeWzMm3ESMl343bQ54t+fZj73Rtwuk0eb0X+o6QPUJeDplU8q3gHpxZ
8i6MNg6IAeJltjEzQ99t4Pnc4xndJKZWntW9nhfxO6VkDHOPzy55l7mjn5S8
p5eEvFiybrhW/+Jb7sETJe/C+SXjmBieWvK94K2YJQfw/wR5ZfqR
          "]], PolygonBox[CompressedData["
1:eJwt1PVrVlEcx/HrjOmmxwBBdIrdbnPWjKnYYsBEEEQQhiAMmbL/wO4ORLG7
MGZ3zW5QfzBQVGxBsfv94Xx+ePHlPPe5957zjdugYPywopQkSfJRDvNCkqRV
TZKxxPJYirlogWzMRzrXC4nlcBuVWY8j1sMjnEEzdMZUlOH6SGJplSR5SDyO
xuiIrdiBOuiKxZiNRsjEFCTcP4J4gfsPElNYj9J7sQJrUAM5WIgZqI82eKz7
0BLdsBYbUBMdsBFbUAu5WII5aIosTMJf5GMf759OLMv7RxPvs56pPLEuIN5j
fYRYgfUYYlU8wTW0Rne8xiv0Qm/sRTX+X0SshM8+g/beT8/EbwxBXax2jjJ9
5mM+UwfnbL3PkOUznsAqtHfODztnOc6RarnTzy50LRe49qrpR+9Je+mLo3iA
dmiIze6RbOdwO5ahrWt6F1dR27+VuuaqtXrqkmuk2rTCM7xAD6TiOrYhzzl8
jjfOXUVMxAf0QQn5PxdiD6r3muNkiD2nXmviXO8JsReV87NYh04h9uxLv0PP
7onT7pFc94Rm4wYxI8QZqc56v2s/QTlnfSXE2SjGLfzEINfwHyZ7r8ND7K3d
rr16TM9+6l7JcO70zGLn8C0+uRbBez/ls+kMm3DeZ+8SYq/dwdAQe+6A96y9
pmOf96S9pDnXl12LPOf2fYi9rxxrFkv8X82kZnFaiLOpmVSvfcfAEHtOZ7+J
wc6BZmWl966Z+YFvIfaS7lFvfcWAEHvsl3si1c/QtUXo7/9oFg+F+C3QTOpb
s9xn0zfnD3aF+G1SDr7gXYizqWdoVmeFOMua2YvOoXKnb8Z/4QSkew==
          "]]}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[0.3], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

          "]], PolygonBox[CompressedData["
1:eJwt1FdIlXEYx/GX6KLJeYIgkJbtssy2LbOoKAkCQQhBiINIV0V7L1pE2N57
kO2yvZe2u2wXlO1d13bV9+H5XXz44znv+z/PNDM9qXBinSRJClAXjyxJXiEf
3XAQ+zEULTAHf1GKj6kk2cW5FxkYhJvYjFx0wC28wAB0xHVsQ3+0xxLMRStk
Yx8OoDmG4C5eYjC64L6e8e+yMBO/UIKnxPOM8xxaozceYjfy0BXvMV+xj+Y8
j3Uo0Dt3sB0D0Vmx7kQzxfwcl9EW/XAWa9BLOWzCVjRFX1zBevTRO5f0jH/X
BhcsYvZYMzELvzEeT4hxHuc7jMQH/i7nPIOWGIET+IliNMR0/MA4VKUito1o
ohg/ee66awznVeXkubTDEXxDIerjFP4gjcaYhu8oQjV31HCutajlKEzGGwxD
ZSqePaq7itSrk4q1RLHP0F3Fyn0VGqkGG7AU3ZXDPxxTbSaodzX6be9hLQ4p
9zLV/qJq6z04rjv83Qa6e4F64b9x2mIms1Xj1XiL4eqBz/Y11SpXtV6pu7zm
Pju3LWbdZ2gZFlrMeg626LMczcgOLEcPixlbgcUWs93TYnbvWcx+nmIpV+89
Jt/VBxazna/av/a+paIHU/AVY/WZ7/Jji932na6y2GHf3U4Wu1ZtMfu+c767
Nyx22Xd4j2L02Hzn/X9BpWajVLks0l2ek8/ObIvdTCuWCtRTTJ/xxWIWvec+
e1MtZsdn8LB6WqZ3/gPNQqN+
          "]]}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmQv8l+P5x3/LOTk890M5q5GS6q+QkJjTQkRFcgg5ZSKSVNbIoYTJECmK
MOU8m2HmMP7bfxtjZk6b2cb2ZzZzmtNm7Hq73s/r2ev1u17Xc9/PfV/39bnu
677uz/P99Rg/aeQpnTo6OlZaoaMj/jpurzo6ziodHbeFfiPk/ZD3QjYKWSVk
1ZCN1auFbKLuHNI9ZPWQLiE9Q9YOqUI2C1kzZK2QzdW86+HYNUI21QbzDwwZ
ErJzyBbaKCG9Q+qQdUK2VK8bslVI15BuIX3V64X0U68f8mXXwY+tQzYU0wA1
mAaqwbSNGr+2VYOvl77gx3b2gWOQmnW2V4N7R2MBjp3U2NhN//qH7GBcGLdH
yP/o4xDHgnuomPuE7KIG965qcH9F3c/Y9XZOf2OwQcie2gb3/q6Nj8PEDNa9
1eDbV2xg+qoxYtxe2qC9j2MZN1jc4BmhbXAfoAbTfo5j7eHapn1xyNSQM0Mu
UU8LGS1msB6kBuvBamJ5SMjuxm+sGqyH6Su+HyUe1hwnTnw/Us27wx1LPA7V
BvNHuQf4cbQ2wHGMcQTrsWqwHqcml49Xjww5QY29I1wHP04UJ/i+pgbfxJAx
4jtZDb5T1Pg4Xl/wY5J94D5VDabT1Kw5RczE4ww1mL6ufxNCTjdGjJtp34nu
z9GuOU384J6uBvcMNbjPUp/gfo53DjHY2Zh+Q9vgnlzSvwtDzhUzWM9Tg+8C
sYFpljFi3DkhJ9k+37GMmyxu8BxeEvNcsJfEc1HIHMeBe7a2J4t7lHvzTTGD
9bchT4U8HTJPzGC9TE0sv6UmfperwTpfX/F9oXhYc4E48f0aNe+ucizxuDLk
bOf/b8h3Q74Xskgb4LhOTJynxWrO0xI1OK5XXxpygxocV7sOftwoHnDcpAbH
t0Ou0Jdb1GBapsbfriV9uDZkuX3YvlUN1tvUYD0lxg8LGRiyQUkMd4R8P+Rm
11wv+ruVxHqffax/Y0mcd4bcLU7wfUcNvnvUS43ZUvHdZYyW2DdPzPdrG0w/
0i72HhQDvl9R8q7kzpxWcv2HQ34gZsY9oA3aC2PM9JANnXON+/+YtvHxcTU+
Pqp/rP2I+Gh/HvJhyEfuG/lI/v3UuOD7z9Ss/3M1fj2hBsfGJf19sspcfsQ1
fx3y45CfhDyjf/j1KzV597Rjic0vxM38/3PP8OM5bdD3gv7h14tq/No0fNik
pF89Stp6ib0t6dNvQn7pOvjxsmvT9zs1Pr6ixsc/hDwrjj+q8eV5fcGPV/+r
7zU1Ps6Pdc8r6ePrrs9Zf0PN+pvH+/8P/U7IOSXH0H5Xzby/OBYf/xbye/16
S41ff1fjy9tqfHnTea8Yv3uN6Xvaxpd/2X7fXPir63ykZp0twreeJW3/Q5/e
dM4btj92LL4sirGzQr4c8qnjmPdZyAeuc13Jdf8Z0qsk5k/06z1jcGT0jytp
e3lJX1cIvaLP2KZOU8OoZStH/79dZ0E8X10yxzuXdt6xIceEdAnpG7JayBoh
15cct6bvVipp79qQb4ZsWZJPwQfgB2MdW0ryWbgfXLDhtbQbXksbTrqpbbhp
d9tbxfw+2CjJK+F78D/45Wa2G75LG77b0zZ8dgvbo2J+f/2BV/byHfyyt+2G
79JuOC6cr+G4ffULDgZv6+r7PlXLTXkHB+zvnIb7bl213HdA1XLfgVXLfbcx
Rowlll20271q+e6gquWju4gN7rdD1XLfHcXAvT/EWPC+4YyDtdXL98xZVxxb
Vi3H3VUMu9luOHHDkYe6BpyC+3amvu9pHoANjgevgzfBSY6uWu47TDzwwX30
abjtwc4Zru/72wbbCNsN3x0hjgNt49NI2/g4yvZ2rrN31XLc0VXLcQ+qWl7b
8Fz0GPdmmHiGi+Mo2/C9w/SbviNdAx7UcM8jHNfw4HHGcrT+NdxumtiOqVoO
R9+ZVct3j61avntc1fLd47U1wfZo92ZC1fLdE8UDdzupavnuxKrlu7ThtpNs
NxyX9iXWCupCw8WPEQ+cbrL4pthuuO8UYzbV9ngxTa1a3nyqfsPlzqpajju9
ajnuDPHMdBxnifza0xhP1ha5Sk5zRpt7hdrJXcq99lTV8t1zxXa+bfy4wDa2
ZtuGM88RF3sCr7tEDHC/i6r2m4o2HPhCsePXHG3Bd+AM94ntUm01vHZe1fLa
y6qW19KmjsMD4YXU9fm24dhzjS144H5XiWeB7YbvLhDPQtv4tMj2DNfHp3Xl
gHPEBle8tmr57nVVy2uvd95S2w0HXV61PHhJ1fLRW8V2o3PAA8+8uWr57rer
lu/eIp7lthuuzPxZvpsvnttdg3dwdjge3PUOfcZ3+N2dVctf4X57/xcv7iZ3
XKjfdzun4feL9RW+cK++3me74b4NF77HNSbqK/t2svs0y1jAE+GL8NwH9f/K
ktx3ffks3Pch/YYDPqxfcLZHXRve9RPXhz8+rn/0/Vg/HnPOXc57xLiy/gPi
+Km2Gl77s6rltbQ3kks+qB/wySe19ZTthmc368Ehn7b9jO2G7z6jf3DIZ/X3
OdsNz258et53tF+w3fBd2nDal/QBXzj/v3EO3A8uODzGbF+SCzfc9FX9e9k5
Dd/9nT7BJ39ftXyXdsNH36larsz8ZcYO3+G5r+lbw0H/rk+va4M58MQ3XANu
CdeEJ8J9/xzPV5Xkzd1LrvOmczaRR7Mvm8lDWe/gkvyxU2l5cMOL33IN6ia1
ntrPWeHMcK72q+MeCjm5tHz3Q+d9bHtEvBtSkp+Smzf5bdZTTsp68NhPjBHz
4ZvwTzgsHBX/xslDsbmz9pgzpiSGL8lnV/TuGRmyi/z0ankoNq8pyWt7O66z
9xScd2U56weuTx+8lfts1ZL8uZPxgv+uFbJ6yKEluWwlD+1SWltdHAN//1Q8
J0Z7Qki/kNNL1lDq526hB1hXtiv5Tch5ecL9Y++otbyn5uweelDJd1uX/M6n
9g6wHlCbvl7yHHIGzw79De1S4zZw/F4lv+exvVQ88Pl9Sn4Tsv5+Jb9hyJvB
ngnOz5zQs0t+h30Ffi8ezlUP/d8j9E4l93yQuUku7ui8d9z7Xj6/bX6QG2eG
niq280vmLnm7jTWYen2h+0l+bKvf+HxAyW+DVdzjvu7jPGPP/u0ZMtR929Ux
YL885FslvwdYZ6CxWleMxGpSyfsAXy4OuajkN85C+/BtX/fySfENESOx2d7+
00rWmsHi28E4b2K8XnTPB7inixxL/NnbbcU7vuTZ4Fz0EVcX4078OW/7l4w7
Pgwzb8AF7l2MzwnGYg2x7iVe/NpP38Cxv3a2Mo59XJ8z38t82cP1id8w1wL3
vmIfLPYexmxv441fX3XfV9H2yvp4oH6SqzeUPHt8u412v5aELC5ZF8hrzlU3
3zNuHceMMVZgHeneX+S8Tu4/tvkePMTx1BnOBGeP/TlIu9iktt3svh9W8hxR
E+Bb8Lwp1nny+DVrJHWNmnZUyW/1j81n+jvUR/rMHh7lGOoP3+Fr+/5oxxxn
P/tObZlSMmeH+q6Lfp3g/n7BO0vyVWoStakOOcnnfuKbaGxpM24tbeHH6o79
mnNZ/3h9wwfsX9isU7LWseenlswF9vxkc4QYj3dfpjieufNcC5vUMO4SOAXx
nm7MqRPUi7n23+S4ZSG3lLwj4U7UROrhDOc+ZJ3k3Q+r7OMdvw1+8bu0Nrv6
DM+9wH38k3NnljyL3MXnlvzdBj/P1v65vuOO/uL7xrzY2HEP6/8Z2p9mP3NZ
5zzXetEcgics0yZ1YKa48H+2WOEM17vP1D/u2cXGlnuN32XIc8bP0Tfyjfz7
3DycW7K2bu44bM51DPnGWeHMcC44k5e41rX2Y//SkuutasyIHXXuNvs7ubfz
zCv47JVioe8y846zyJms1Jf7fJlz19bmrfrR33HFdfBjS2M533h295m4ru/a
zf9dr9AHcFwsRsZe5VxiBLf4zJyh7pOHi401POFgY84zvAP+sYp9S9wL4rvA
mLOfi9zTi4wjPr8nT3rXmrnIHNvGdTd0z2e7j2O0z/rU7yNK1kLy4QZzAr3U
Z2rr1fp2g+P4bY4zxHcRnK2z/ezvoc4d6/ubGuxVtq8zNgu0OVa72ISP8lsm
nIjvcn47gF++F+9Oq7P2Tw29Up33yZ0h42q5Rej7S95F/wrZtM69GBn6wDrv
5NNDf1zy3n0gpHudMRkd+qA6687Y0JvVmcOHhe5dZ/4cEnpMnXfysNCH11nL
9gp9aJ11tmvoVevct++FbFTnOT0g9Ig6/38yLfSadd4tK9eJByzwdTguHHOt
OscxZoXQ0+u8V/cJ/deSNfgx9r/OPP9EbOB6KGTzOnPydX3Fzyr04yW52Jfi
+Yw67/vvhoyvkyvQ12E/3z58C8HXXgu9RZ33K2cIvruCZ4dzdYn9PHfy/a0+
N+9WcK/eLrlf8N3l5j81mLX4pnkh9Dp11gH6l5nzs3w+x7G32H+Oz8x9K/S+
dd5JnUO/6hl5KqTUWYf/HfK8Z+T46PvMnHnFvWQfJ4Zevc67cULoTnXesTuG
/rnnZdd4/lXJO78/OVhnzRga+smS565vPPers34Q4w9LxnlUPP+z5B23ezw/
pz9/Djm1Tt70csikOrnSB+yDNjkH75Y8CwfH8zMlOdPz2sLOH8zF3p6D+0qe
BfLiwZK50TOe/1iSC7POb0uuRe7/sGT+E7/V6ozhr8UJxr+EdKuz9nI+flTy
jPxC/Ph5F3Gt837kHHyn5FlYj3jUyeGeNY7E8O6Qnevksr8M+ajkHfiEcSSG
nN2NzfMNQ99Tsg4/TV7Xye+7hJ5RJx/k3Kzo2bk3ZLc6efNA1qmTu1Gf4QTc
q3Wd54E9wsYa2tmO81End2N//lRyj97XD3x4xLwhZ8iFT0vGijP6aMlz+jfi
VOf9c7/5R+5Rh75fshZx/np4BgeHvqMkzxlUZ5vnncBUZ+1+KeTzkvcwufaP
krEi9reXjP8PzGNy+D826cO+
          "]], PolygonBox[CompressedData["
1:eJwtleWLV1EQhq+5tu45dndirrl2rrFrrF1Yq+KqayAIggiCqAgiIoL/g42B
3S222IXdrdg+LzMfHuad37l77zkz75mtNXlOdl7+JElyoSB8CUkyPybJOmIl
KIJeCBvQDaEMOg/WoptBE3RjGIYeDq+hH/kM4kzYBOPJFxBXpCZJLfQtdF1I
h1NwCLpAb/gNC3hmPbEmBHSE1uiqcBaOQw+oCPugFeujiPngCpyAnlAD9sMM
1lcSE3gGGeQ5xKnwCJ7qHDAYDkMb1scSU6ElugWMDPaNgzoX+WrVBlLQ9aL9
bQoURefCKnQj2AU55Ev1Hc7fS3uFeeTtfa87oa3v+R9MZ32510hn3ap9+Jlv
wl2oD1mwW+fg+WXEJ7y/Kzob5pCnQTX0JUWdCxqQl4Cu6GxojU6DMcHOfE99
IJ9AnAhHYDb5GvUetul38kXEA3zvJHEvdIReUJu1AtAJPQg2QjvyccSVPF8W
XQ46kNeBM/AJWkBf//Z94qRge1DtHxAnB+vBE/dMb+/ZX6+JaqF3FuT528SB
wfagXhxwb6zy3hWL1pvV7o2Hwbwtj8jbR733a/3sL4lNg9VAtb7he1/mvf2j
cwfrsXq3x3utHhaKVhPVonOwuyTPyCu6UyPR1SEzmCcGRauJapEH54P1VL2s
AqWi9VC96wbXg3mqve+hEzo92t0YD6fVm2i6j3wTzcPy7hAoSf7YtTzxDS5C
/2B3rhLrH4jlIQPe+zv1ruZQgfX+0e66avQRKkZ7Vj0dgq4M/YJ5Mn80j010
z8gbbaPNBnlkCnqHe2tJsFn0mbg/1WaSepsv2uxQjy/DD/f2gGBeKRyt1vLM
nWAelTd1Z15A6Wi1mw490NeCzRrdwXfqPb91J5YLdvYJmoFeg87oc8Fmo+5k
d/KrwWaNarZd3uW3xb7n734mnUV3MFOzIlpvW8FPGBFt7+2Czb5fwe6yZqC8
MQzmBvOIZuk735tm6sBo79S7ZgerdVY0rZoPQL8JNqtn+d4uBJul2qPu8lf3
lu60Zvlbf1YzXbPhhddKM6J4tBmq2amZPZx8aLS9a49j0KOjzVrdYf0veEXM
DfY/YZxma7RZMi3YLH7uOsdrvSXYrFDNj8Fm95p68h+n1s6E
          "]]}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
JA+Fm25orPDAjYx1Y21i3USbWP+qTax/0ybWTbWJFT61mbFurt38pmU/TTK2
jqXFX7c01q21L/CZfkNDbiktTgon7GR822o3+eu2xtdZGz4E59qvtHhqZ3O3
hfER9w628Q5uuItxw/t2Mr7dbLvYZ+LcUf9wu5dCXiz5PdK/JG+70vjgh3xH
PBzSp+S3BfPBX/cqLY7bxfn20y9xwAH3dw64GxzukZIcE+4Jz+zq2J3ty/ge
jt1V33BC+CW89WDtfc3RoY45XJuYDrFfZ+0m795Tf2Ptz3xfl+Ssl+sXvndU
aXFQbDgjvO9k54NDNTnpsbZP8D0xwEPhMceX5JAn6BNfcEz45Df6ZDw89r6S
XHZ6Sa52TciIkEEleSVzw0FPL8mfu5kT+DX8+0j9wkPho/BfOO6pJbnqGc73
XMk9t5D94Ktw3cdC7ijJf4njLOeaWpJzXxXyRsiokt+A1NJtJeuJ2qbG2Y+3
+kyd3xPS1/Xkm429wb4YUvJbjneD9dP8dkJvpd8e1sADJb+vaH+o5PcM7dQN
dUR93hsyQKzvGi9r/H7IuJLfBX1dZ2qrv2Opv/+Zb9bvk5CPS347nGY+yOGd
PpOrU5yHfN5eck8QwzY+dzLfPc0haztQ+y7Xk2+E4SE3mmti6acf8neL+SRn
N4v9QfPbyXn6+DzMOHY3Z33F+N+S+w2sd+sHf9/7rqt5HWzeHxcnGM80Tp4f
LVmjZ5iDO0qrrgb8ButAsVzm2hPLE2I+W3+D9HmhMREP+4XvN2r6etfyOnNw
f2nV1VBz08dcdHLO4c7LPCOch3w8bJ76mSPyQ61RQ7uJ9TExDRI/sd1k3MTM
fnm+5J7h7ocTNDkEPAAOwO85nJ/wA/bjOyXPT3L/tPMz51PmBp+MXdhxLzj2
edsWtp3nhczxo+a5v36vcBzjmxwFDkRc7FE4Lff6TyU5Lv5f9XlF/cIPFrTP
TMfwf5bXS96zI7WX9x3PK+gDX+eKFcycP5w5n5XcO/xeNMoY2H9jXN/Z5Ky0
7m8058dbJe/1DdXY59t/tH7msAb6AvdLYp9jDF3FMEqM6Dd8fk1MYOF84A44
ouTZ/7XP79l2hBqbc6RdzRrtZk4+Nw9j7cc584M4uxnfOHPyYcmxx/vufd+P
t41zifOH+6N7SIeYa+6aZ/dHtnVXY1/jfPQ/TE0bZxd3zsfONcNn7h72Kv5O
c30m+o72T+z/seNPEO9cNW3imej7c8RO7cCF4GMbmKMpxkX7F+ZnffttYN55
7ug6fOm7CY7tbj4nm3/av3Is7VPtc7l9ON84f7lHOY8527gnOCe5P6f7/jj7
HOsY5tjfPE77Tfs0+1Pb7OfmXuaspK6oQWqaOnzRPtT/KN9Tq/zGwbc638cT
XQPydnLkcOGa605Oye1R6nbe5ePNO+3whPb22Tf0ujXrhNjYq9Q4XB3uDm+f
5TNceKZ9FvXdLGPm/Y/27xr+1q+5T+f4bfOreqZjX/a5YW2Ahf4rxLjuNc/l
nqE718x9r9A71zxfrwp9Zc375w81+9GH+mefgGXBmmPof0HoC2uej2uGPrPm
Ol+Brvnb5JtiAeNJ8W6RmnVCnju4X/YMvXbNs3e70MvXXJetQy9bc73au79Y
F3QHnz/VPlHd3ueFQl9U806lBmYbC2vX5hoth65Z131Dr1jzfhsSeoea91j/
0BvUvN8WrVkT1MPmrH/NvfVA6INr3q/3h9615l23Xuija9Zsv9CrVH9vDr2W
eAeG3rHmPUn+zjKH6/AbZs09elroDY3h/NBr1LyPBoXeread2aVmfsntAqGP
rXl+cu7C1+Gce/jcRf2re2SMz01eOsd3bZ4n3WyfY/+DbDvQtZ1trd4e7w6t
ebcPCL1xTf4xNPThNe/qPoyreTfeF/rvNe/teVmHmvfCFqGPqXkWbRp6yZp8
qwe4a97Ne4X+V82zhd/g+B2K36WonW2tn91r5oj8UEdbWUs71cw7OT+o5vqx
dqzh6T4fVjNuYj4udMea/Lf5Pwa+e4j3d8ZMvPMbM2u4h+vIuvV37c5m/po8
YZOaOSI/S9TMHXmjXva3ZlaqWZfU5Ko1a4j6WbxmHskhNbK3dbJLzfqj9lj/
+ayB7WvWNPXM+XFAzTOB+t3SGj4y9L01uRj6CJ85w/apuffJdzHn+4U+tebZ
+4/Q99TkZehDfAbrPOJln23jXquMq3l/bVazDqiBf4derOYdR3vDPpwNF7tf
/g9/A028
          "]], PolygonBox[CompressedData["
1:eJwllOmLzlEYht8k+zLDeZAtk7EvSXay77vB2MVYvjF8MLayyzrGFoaxzzAz
9n3fSiklpZSUkpKSlP/AdXd/uOrq/b2/83uec+7n5BQU5q2ukclk8qEmtI5M
pjFcSJnMNViCb4LHeAVMwgvhDl4GLfGGcBqvgkV4P3iEX4bR+Cq4ifeBQfgQ
OIU/hSz8JHzGV8Ie/BC8wS8lrzUQTiSvWRBeQ+9eSa5lApxJrmka3gnu4udg
L34QXuMXYQreFe7hZyHpXfiOr4aOeBfYg9+GA3g3eJC8RrZqhy/4CtiIb4Ai
vByK8bXwMLmH6fgauI+fhzl4KXzFS5KfTQ3Xqv+MxA/DO3wbDMZXQiX+HBrg
x+ET3hda4Y3CvVTDcrw/PMGvwvhwT+pFZ1SEr4dj+DpYgJfBD/wIDA1/U98q
hXr4UfiAt4ccvAPsSj7TFfhmeJZc41itDR/xHdrTcM2q9RZ0D2dM2doPdfEj
8B7PTe69DmQn74HWqh9+pjXV+7jw2tqDanxeuJd/yWuNCu+d1myqbMI3ZSW5
l3awPbmnEXg5/MK3CnwLZOEvYAxeAb+T39HZ91JGkzNQgg8Lv/s2OUu9dYbJ
meoZzrSyXKyew5lUFl8lZ39W+JlmoBLPC2frT3JWd8LL5MzuUu/hvdNv6m1u
OEvqUdnbF15bGawdrlG1qacqfHY4639hZvib+tYBaKYswc/kTLfBm4dn+TrU
Cu+R9kZnlBu+AzT7yoTuisXhWdCdoSwuDd8dymRbvEV4dm/ARLx9OBuaYWVp
WTi7ypSyGeGzU0Z34z3CteqO6hOuUbUp06p9YTjL6kGzOyM8e5ph3Q2Tw3eX
7ogB4ZpUi+6Y/PAeaW90xjp73WG6u5SB+eHMKWs6487hGdTs6c5QloaHZ0WZ
0qw3Cd9tmvn/+hPF2g==
          "]]}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
aWuAA/T1QNt91Mhw2KOm7p9esj6gNjhYDmhhNPFeNbX1jHheraYWP7a0NcCh
pa0BDittDTBCDujnw+VwhG3icohrwAH9fKQcjrINh6NtN/UA7W3U1MOM8aHO
1dT2a+s3uhqd3ejms+yHrh7puBNsN7XBCfp9om38RseeVNp64OTS1gOnlLYe
OLW09cBppa0HaFMH/FT/ya3cySL/kUv5it7+RWlrg9NLWxucUdra4MzS1ga0
965Zb7ymr+j4c/T1l7bx9VzbTW1AGx2HfkQ7rlGzVvl5yXy/0G/FzJLfLDgc
H7+v0DVyc8kzsafnCV/R4ReUtma4sLQ1w0WlrRPQ4mh8NPX5+oS+vVifLrEN
B/T570tbbzBXo7PxmbqA+uDXpa0HLittPXB5aeuBv5S2HrjCedHeV5a2jmrq
ATT41fpxre05PuPfWjXrgb+VrAOI4XXyv6z8/9rgete+Ub/RSWjciaWtAW4p
bQ1Au9Ssnf6uf/x+s37f5Fzz7H+Nv6GL73YN9Pad9rvL9vXud1M3gLeXtha6
ynVGORfaEw06obS6f6zzjrPNemjq+0pbJzR1Azjatcc75k3nv9W+D7vGvcaD
NrXAg47toWbHH+rBD9xrtPy/XJe/r1f/xo6vaORJzvuEbeZ90jbrPGV7kxi3
cdg78bxOzdpgsuPR3M84foptxk+1zfjnbNOPeoC64NsxR7+atTX+ztLnph6g
PtjMbwLfjy3iuXfNv+u8WxL5Tq1as/1qaWsM1tjSnM235BvmZu7gN80B5Mdv
1by33NlPw94v2W7qE+a6wb1kb9et6Ssx/k/JOgcu3HvuKvf0s7BFtperWavz
O/eYu8G96Ij3i22vULN+5nfuDeeVs/qFmvmD9oo1a11+v83zwdlYJt5/ZHuf
mvXbv+P5Q33kzn9csl7lnHxSsp7k3HzHvpybnd1bzsqu8dy/JreVatbArPnF
eF6lJu9egcsa9xEie9E9nt8r+X2caTzhvkO8376mH++5V/TZKN4tb0xnGzfi
gC8be3aJ0WK5fzXerVyTE3FZslQ8iAN3pmdNnnBcYIz4/Q33ZrbnZ1nP0nC+
5+ap992zX+kLe4M/B9b8rh/smsTlNmO7srzoM8xv/2L3DJ/nu5fzPDOrGFs4
L+/53zdwsN+VfiLfuNVdFy0x2Ln5Bs71DM1x7Br2eVuf2Ouh8W5/7+r25kny
zX6BQ2wfGnaIeaG/fZ8xJmv5zeB+9XKPOf8buV/7O44cwDxdzUfMX8z57CG5
4+l43rDm3yBGuVcb+kzf9e2Pz+uYo4a4J+RgfFlPf4hHd/cC3l+RO+eZPPhA
SV966s/acmH+HvrwgGeFNjmTHIP+JM+Qc9DfaPQda85L/81r/ra1fTY3N5GT
0PSfa3j7MA96hvxCbkHn0wfNj74lN32el2yjdXnH8+4lz2Vv52Rcb9cFt/B5
K+eh/7Y189oPS2pX8h25bmufDyrZRheiCXnXx/e7OWZX3zNmhv6wBjmUuVmj
yZtwa3Qmvx1jn2304TzvMbmOGND/ZyX5EyPqGs59P885yPcATcVd2t6z2tyH
nztP35p5pdMzzXef3MV37lHPAHvW5DXe3+c+89v9zr2DY/u6Rz+zL3ORc9D7
exgf7mp/7wVIfpzsednd+Hfz/kzWn11q5rDPaxn77OL8+MlZJkf/2Rjuadym
u3azJwP0gd/3ss8M/67D3wnYj4HGnxw23DuyfGjPW2rmIbTfwb7/KHBRzTu5
XPS5sWaeWyaeb6iZ/84OfN17xf0iv7AP3MUh3qNOn7mbxHpQbeM9SI74tbex
5d0+vmcuctlx3uvhzj3YtY717u/nWuQn8kvz989DfAZpo2U+YN9q3tPb2f+a
34APAx+rmX/gvVjufwp7q2a+nBG4sGbeOTdsds1v502Bc92nLvqHb+8Enlgz
RzX//s3fe8boH7m36ucEcxH+847vHjUkuav5dvLu/cD3an7fqC/pM8C+I3xe
03281JxJfNgHzh65mDxMzXFrzW/UMcSp5t35QeCpPl9HnNyXCYEP1fwOnRV2
T82739k1+cN9zXi+uuZ3+1r22XP4fOBznpFZ3I+a34pVo/95Nb+3XeL5gprf
q9Xi+bc1v4cvB75Uk8fq8f4PNb/V5wSOqnmuLw+8q2aOPTPw7pr3Yw5z1/wW
XRl2X807cmngmJrncZhxHO7eDfO5GqvH7HOge0FcDzK2/D7UPqvZhzku8C6h
UV+reW7W0Ya6Dwe4FnNyvi7xjF0WOLZmTrgicHzNnHBv4LiaWmTFiMNtNb+N
/G3hAPed3DnQ/fpN4Lya38s3a557zvxI9rZmTiN+1xtDzv7jnv8f1rzz3Pej
a9557vvoeD6tpv493/1j7/7B/nTNe/S7mvvH3pGviQVx4Cwc6Xl4MXBaze/t
pLCTa+ZD9uRO9+WMwJmeeeKxxJhMDZxSU+9wjiZ7ljh3T3v2pjOu5v8r9CPj
RayOrZnvyHWc66OM1c01zzFnmDPyfc/JhTXPJWcSH0/XT/LHj43no4En1cxX
JwQ+bGy5H3/zjnAer/JMniJn5nki8MmaOo/z+1fPMHt+uPt+R801mJ87yv3k
bk4MfKSmpry45t3gXsyP5wU1tcs1Ne8kMWF/yHfsET6O1M//AmcRlgA=
          "]], PolygonBox[CompressedData["
1:eJwtlGdIl1EUxt/UMisqUd5rtLOMQAiCIIiIIEIiRPoYfbJB0ybtvffem3a0
aHwJ6kMURUFltEut1LY5yqjMst/DOR9+PPe89/+/45zn3M75k4YWJERRNByS
YGaIomeQCvPiKDqPNs2Iov7oV+KpaArxAPQ68XS0GfFA9A5xCVoMGdAGTsAK
SIIfzN9ET0IZ48boA7inNaA5TISXkA5H+c0YtBHr90XnEm9AN8NnxsnoaIiY
74OO59s+9C/01DmIz6JbdAeoI/6O3gi2dxbcDnZH3S0FfQHPIc3P8A4+QAco
5zfL0Svwj3FpbHdJZP9+fqda9Fawtbr73VfD+9hyMAcmwG/iCN0FF3Rm4q7o
CK0NvSCHb7PQsZ477TmK8RNopXWIF6BvoS08JJ6tPMBPxg0wj3ERxLon8Sl0
DTTx39Sg1XA3tjW2K7fQBTLhTLCcJ/uZ76OXoSa2mj2GR9DSz6Rcb4OK2HI+
EhqgNwzjWz5aD9n6RlyBfnEvac9K3dVzV8+3dHJ7zGufqzwGq2GW16Q18/s9
VznKAXyDbtAC5sNk+MN8gtaBAvdCIz/bEngT2xkP+Jpaq4hvgfHFYN7OUw7g
FxQS93BvyhPygjxap72CzVXzLY35I+7NIe6ttdDRPfYpmOfl9U7oDs+B7l4J
57wmmX4H5W6vny3bvbIIXsfmmWL3lLykHlQv5Huu1ROvYGOwveSJVM530Gsz
OFgvLZOnYuspeXtcsLdAHj/k/xnse27ynCqX6smtnvME94C8sRjauUfWBesB
ef8j89eC9ax6NdFrdzXYWDWcpn2CvSXyaCla5rUtIV4VzPPyunrsKeOl0D7Y
G1YerGfUK/qmt2xKsF7Qm6a3bDdaFdubptqcVo1jq1Fz5mcE661BqlOwmg5x
zxSiC/0stbH1hv6j36pHdPfDweaUg+PBPJ3rOdbbuce9oje0CnYGq73ehI+M
VwZ7e3SmS8E8mednVi+v91yqp/8DvF7iWQ==
          "]]}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
qLToKUWtc6YVtc65pai1zW1FrW1uL2ptc4c47rLN2HfbBst025W2mV7U2uae
otY29xa1tpkh5/ttV5rhSXFTnz9Q1NpmZlFrG9rVbwdjilrnPCwnavzZRa2R
HpTbHPvgQ80/t6j1zGNFrWceL2o9QxsdNMecVHpmXlHrGdpVrf+uY3KOvFDU
2uYZ+VDXP1fUuuUl8b1g3zEx1siUdQk67FUxV1oUfpW2ebmotc0rRa1/5puj
l8RRaS2wonFek2+lZ96Uz9u24fOO7UrPvCNuavv3zREa5HVxf2hfpZfomybW
WUWteXgueV6y38BI7c+ZW/1e1lMOH9u3dRnf2rBdUtY+nzsu41B7fylW6n/q
cGqee/jWpbq+pw5+y/6vxEKd/5O40QI/iO8n2/BGQ1Qa6FvHeN9nvxf3z8aq
tAf1PfoGDfNrkbULdftCx6bOp4Z/MGVd1CdlbbRAzpXO+U3+CxyD8dAEaINK
z9Cu9E+lh/5wjIdTrpv7pVrz8A51NDUytf3xYQelrGnQL2iahY6/rN82dM+S
qcbBNboDfPQvbVxq/5XFt5K12iLeow2u5VOtdZZzHVS6q5qnVY3FO9Th1H38
PtnYsRiT7+4axuLsZk1NSlnnrJ6yBmokzmXtLxyjkWOAq4ljrGJOmoibMdfy
e7CmY6B10CfrOTY1ajPrXurmXj6HJmhhDLQCmoFaljq/tVhapFqTtLGv0kLN
xbSJ7zMGOmdT8bW0r7nxWomVcdAqJ4SNTlmX0EZDoCWo99EQ7Yzb3uuTUtZD
6K1B3if+ocbY1Bi8u3WqtVBbx0drUP8/krKu2NvxeLZjqnUOz6EXOoi5v1zI
O7qHfdvJWOgFtMS+KWuObWyTa3QKugR9sqPj8EyljbraT4wevjMi5fODs5Kz
nLOVc3W8fbRPDTsiZd02xPjE4qzkPOZ7cXXK+xX9PC38zSnr3yPDDkx5r7B/
2E/s/UqPgYXfDuhnH10X/tqUfwM5NuXfF+g/OOV32YdNzRH5qX47YD3yv6ND
7BuVMjbO9BtT3uusbzTdPeasmfO4nvke5PzyHeTbxndtjPPG3I9zLTBPE1PW
7bx3cso6sJvzN9i1MSFsmDk73LG7+9wQc3i3c8k8XugY6Nx7xbmfzw4z7+Tg
IHOIXj/UsU5znoY7ZyOc0+HOWy/ne38xkJuRzt1s80Wuzks510uZx0Pk2Nd5
5Iy7OOXvMe9MTvm3UdYOuRxtPsnlGPN2Wcp7aZxcDzMHYDlCPKOM2Vt+x8nx
FHPX3XHGy491caS4mIejHXOoeSdncx2zg3me7vhPpHwmLuX14ymfj+z1E83n
ODEPFuMpYiDfnCMDzc1E83OY66Cb+TveubrZ2I2NNTbVa+N053W4c0c+zkp5
7TEv08W9bdjZ9nF/pO25fnM405fQ8zvXaj472Xnhd0X21OfuhXN8hnxf5DqA
x/nmknm7IOV1z5yf67yfa/wlzd955pA8XSI3fkPlLOAcYMwpjntlyr/HflZk
T5vfZp8Km+dz5OBy8/2Uz7Mm2ReXOSfXGP9Tzxzafbx3lfdZ91xT+02R+2fi
uc7rM80R+WGdUZNwPt2Qco3CvWe9/ty6hb7dzB955Dy5yevV9LT7OefMPd/c
OV431k/z/gthz6f87WSsZ1LGsZ73mvnMrb47P+ylVNdx+M7e5zvRwWdvS/ns
vdP7nfS097H/VsdhffH9Y429YY1FXXaXfZxL7X2Gb9vRrg/22n0p/27O96Od
9Sm/Z7zJ/MsRTtSmXzgnM5yjp+0jt42iht2szOf6MuG/cW2sENffm/O3w1qX
OeafYS3KvJenGof4z5hHYs5zDVX/v5jn9RuO/brPPOn1FJ953fXJu9x73Pf5
1rHmn3Bu+8X4e5Z5/wwK36rMa+DY8KnM5+Af5KbMOV8sfJ8yn0+7hu9d5nXN
unpUzDvGvd9T3oOHxfWvKf9eOzCuB5T53O0ZvleZ9+oOZR6bcfcOP7jM+3Bf
xizzb7rdw/co8779Imz3Mp8Lf5HXMp9ZncNvV+b9vkT4vmU+a683n1Ndp9Sa
a7juWIfUI7wz6x9rZJZrib061/VGrU3NzfxyLlDTU8/PcA196j1qfr71u7hO
XrXWp/5mb95hTNY5czTbOWUv3Os65yzn+aXF8oh4WO/sw2oPcs0eudb8s8YW
iAMMfcQD3n5yaGQc9uQt5uBF8/CcOSL+MrbBAOb5/8jZfPG/aLuDsZ43t88b
nzitfa6VWB4U20zxkE9qoJleN/J6VXNALjif28R8LnQtce8J759hG5xD4plm
ZT57h4YfVuazeJPw36Vci01gj5b5e/wRvMuc8w3Cf5jyN/CYuF65zN9w9sRb
Ka/PMXHdpMzPjAv/Y8rf8LXiukOZ56hx+F+cl3XKvH9YP5wBy5d5jlibi7s+
12ftl3l+modfrszzdlT4sszf6p3C71zm7xlaeWn1Mut9bdf8HuGXLPN3cPPw
76R8NnaN669TPovg+r5rDLwfuK7Au3qZMbPv27r3vxUTeDi3OBM5u8jflubw
5bAuZa7VNg7/Ssrfpq9S1vbg3D/8ImWuPxrCr1vmmrB/+C9TrgM2iutXU95H
1FGzxVyU+Tz6uyYr8/wx7lJlfofnVyrznDFfPzk3zMuHzhnzNT78KmWua94I
G1XmuuCQ8GuUuQ56TQ7gf9c+7rNPp8iL829Rz8BvzC84OzH/ZT5fFziv/Rxn
Rcdas8zzypyyljkfWc8/hLUsc724apmxgvP/JZ97og==
          "]], PolygonBox[CompressedData["
1:eJwtlPlryHEYx7+Y+773eZyjUChnoUbkvobZ0GZj2ObaLMfMfUvIzK2UlKSU
ktRK/ghn7pxzRe6F8Hr3fH549byf7+fb9/t5Pp/386QVlM4qqZskSTakwO2Q
JIWWJGeJr1OTpCl6LVSTz4D+6JawHL0F7kIx+XliLe9noutDIfkBaK934SI6
G3LQ+XASXQZj0O+J06AIupOXwVX0AmiGLoJz6JkwDJ2Yr62BLugKuIHOhd/Q
ibyUuB3uwzLyC8R28B3akK8gHoZ3MJp8P/Gg3kGXw3V0FnyCr5AJm6AJa33N
9U/qrYPuYb6XXfANxpEfIlaqLnQGHEXnwVMoJb9CTFdN6HpQgN4JL+BmPIt1
MJa1eXAcvRRuwRLyM8Qa/v+SeE81QrnOjLWhsAN9Cvqgs+AYeiO0Nr9D3Z3O
oAYewyqogCGspUIJehu0Qn8mbg5+54PJB6nm4O98Cb6H8nhGtfINrIe5wnwP
+rdq6IXuDavR+fAn7kH/zoG6rL0hbgh+JvrWI1gZv5lifkY6G3nsifbBs8vE
kWDmNWjv8kA39L94tvpnnrlH5A15cAD5QPO9pkFH9C/i1vhPeeNt9LI88kr/
4dk+eRv6mfeAvK8zmkA+3txr8sCHeIe6uwwYgR4Ou9F7gtf6HPbGmhvJS3At
eE+0MPdUZbxj1drV3EuqOd3c0/Ky9qS9T+JZVaxhKnqUeW8cgcnoieZnXRXv
for5mjwg7+TCieAemm/es+pVPWuAnmPeK8WQjZ5truWxh/IV+aXgHplu7kl5
UT2wCL1QMwV9OvhZFJhrnYl6r635XagH1bs/gveieli98zd6Rz2k2fIg3oVm
jGZRc/NZoZmkXmlsfvbqGc22j8FnmWacZsud4L2kGaNZpx5Xb1fHWjqYzy7V
pLtpaD4bdUc90YvNe181aXY9i17UDNNs6mze65pR/wEhTMV3
          "]]}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmQv4l+MZx//D2GbmTP2eFyvVFJUkKTM5zYw5bWZb21jJcZpTtFloDkml
REqOJRVZ6t+J0gmlkHKIopBToVZNDiPs/lzP573erut/X/f7PO/z3Pf3ez/P
+7zv9/dv1OVvp3Xfqq6ubv+t6+rir+6hVFc3NWxK2OBaXV2vsKvDbtNfE3a7
/tqwIfreYUPD/hV2XdjdYX3CbgobHnZD2I1hd+m5N8yx14fdYQzmPxNWHzYp
7B5j9A27L+zmsH5h9+v7h43QDwgbqb8l7AH9wLA7zQOO0WG31jK/MXr4jdXD
7yE9/B7Wg/FesYBjnH3wfkQPp3/ryTlBztRjoh5Oj4lvVNij1ohx08MeFGO9
Y8k5Wf7wnqKH91Q9vKfpH7B29zpnlDUYFDbD2PB+2txgnCVnuM7Ww2+u3OA0
0xox7glj0J7jWMaNlzd85hkb3vP1cHrKceR+0ti0t4o9ty78f8IWyAHez8oZ
routETyesw/ez+up64viA++rciDPS/bB9WU9XF/Rw2OpnjkvhD1uviXmJO4H
5iDea8aG00pxLwx7Xf7wfkPPvn5LPmB/37jEWmYM1uQ9eXJvuX3Eeidskbje
1TPubeNRg9Xigt8rUc+zw64I2+y9NWEfyhmuH+mp08d6OK3Vg2udfrlrs1x+
6/Xw26BfEbZRTz3+q38z7BP9W9Zosuu6psQb9rk84feFnnr8T0/NvtSzDl/p
4bbJ2NTj6y24fqOH67d6uNal7OH6nZQ9XD8LWyWOFa4b67p1yvzh/Zu4PiKs
U9h2KfOE3/dS9mD5QVx/arztU/bw2yFlbnDaJWWsYNwpZT6s1c6uGfd+lPJY
eP8w5RjMPzyu9wtrHrZryjHgt3vK3OC0h55na089PBrotwlrqP9u2I4p5wFH
iutt5Vfo4bd32PdT5rePHn4/1oNxt5SxgKORffBurIfTvnpyNkuZM/X4iR5O
rcRXC2uaco0Y19q+ZA12NWeLlPnDe389vA/Qw7ulvqG12805NWsA5wONDe+O
5gbjwXKGazs9/NrLDU5trRHjDgrby/YhjmVcE3nD5zBjw/unejh1cBy5DzV2
EzFu8DkD60afs05yhuuRergepaeWR+up3zF6uB4nVrCfKB9y/lKeYD9Bz71f
OJZ6/DysjfOPcA3A8StjwONk6wjXU/RwPVXPXj5N/7OwX+uJd7x5wHF6yjzh
91s9/M7Qw+93evj9IexYMZ4kFnB0tg/ef9TD6U96cp4lZ+rxFz2czhMfZ8CZ
1ohx59sHxi6OJefZ8od3Nz28z9HD+1w9cb9b5PFdrUFza3qBseF9ubnB2D3s
93L9mx5+l8gNTn+1RtTmQmPQvtixjPuzvOHTw9jw/iDsZTld5jhyX2ps2m96
pvNuu1LOcOVcWe/7oZccyP8POVPLq/TU79qwi+R0gznI2ds++P1LD/br9HC9
Xs+cfxqPfFebkxpMCBsRNjLsRmNTy5vD/i6uZSlz6BN2UKxFz/A3hfUXK7EH
iwksr4YttWa3yoF7O8XczeE/DrslZf5gGRR2jeMGGI97txkPTrfr4cQ3+fCw
u8JaR8w9wpbH9e5FxjUsrF1c9w1/p2P7ymmE+W51Pn39wu4PG+i98juY78J7
5Amue/Vgv9t5/Y3d03qNNDb1GCUHsLcMPD8OGxLXB4bfO+yNuN6ryBjHhI3d
Au8DxmD+w2Il5zg9uB7Rg2t82H3yeFQP1yHWjL3znN8CfBP0c21Zv/0DQ4Mi
r/9j5iD2VGtN/pVinBT2VtibYfVh08P+bf6ZKe+niWFPiIP2DO/TfjZsbtiT
YZO34D1FT75p5gTH246bFfZ02OPmnCs+xh4a2OeEXxA2z/vkfNG+hWHz7QPX
rjF+67BP4nq28cn/Ttgqecyxb6rz55jz+bCnxFJqLbQH+gdtgcZ4yTlwbR55
9ity/jbhm4W9nyoNyV5rWmScS1LWZOiFUgviSx2JR1+VOhM91ts+2qUWJe5E
9yL7qJd50HjoveHmKHUjuNGUaCv0WF950C41JDwXyZsal9p1uHF5VtBpfYzB
PTQWWgv9VS8WnolSi46sVTqT5638xv3c702+Dz+tVRrykVqlPx+S9zjb4EA/
jZcP39KTxDHBe6XmnCC3etv3Ora+VmnXcdZovLmf9bl5s1ZpzsniRgPNkBN6
a5q1QCc9Lla01UzjoWuerFV6dYo56Jtbq7TrVHGgv2aLa67tUpfOktvTxoXb
PNsY2mSZ3Phuny/XBbbhsND2FHkulBM6bIk4nvPeDPvQWZx3vLN5b8ET/bVI
3ottl1qU+aOdP91avGSOUnO+XKs05ytyfdU2tXnN9lNyeq1WadeX5P26nEud
+bo8V9iG50rbC13PlbVKkxNjrPiekA+6Z1Wt0pnvmBM9tdp6oL/ek88Htks9
+aH4Vnuv1IqldsSvq1Xa7OtapTk/rlWac22t0qVbarZvrdeHYir153qx8jx9
Vqs0J9/G7OVNtks9+UWt0oTf1CrtusG44Npcq3TsxlqlOb+U32bbpS4lLt/n
aAn0Rflb0lhzoFPQNhscx/cRXNFl6DRqgy6jTU40F9/4cGMs98CNhiq1IB7d
tVhurBnnCLoMnVbqT9qlRiUutUT3oH9KLQEmOKDLdrDW3Ad3qUt3ElOSZ6kz
iVVqaWJTDzQOsfhe6ObzQ72IsWOqtOieqdKiDVKlV/fw3cl7j3c1a0L9wMG7
hXfMM6nSonunSovukyrNie7aLcZuE7bJ2jVyXKlFG6dKfzYTXxPvwX8/75X6
5DRr19x7peZsYW40S9tUac4D5NfKNvVDe7VOlUbdv+SWsu6reb+V9W1hvlJ/
HiyPQ2zvbc5Sd+LbuGZN5QPP9s6B26G24YD++mmq9OHRzkcrHZsqjXqYsY/z
XjP7OorxCOtU6s8jU6U/j5JnJ8c1d+zhtn9jfeHxC3OUWvGUVGnRX4odnXWi
3DrY1877x6dKc55svY43LmNPcn6pP0+Vw8nea2q7gzU60dylxu6knS5uNAff
81elSoueYe3QZb+3Xp1tl/qzs7jQUmgqNGAXMZT68yyxdrENvzOdU2rXUseh
ay6VB1qsa6o0Z7dUac5zrPV5tksO58npAtsnmP9M+aClLpQPuuyiVOnP7vK5
2DaYLrFdauCzxXup94h7ubjRQmgOtMdXYWtS9VsmuuwKcfM+5lxBm/bYokY9
jNXN+1eKD711jZx6uU5wuNp2qUVLbfoPc5S/NZwut97G4h56qq880BzXy+FG
21+nrP+WpUqjlpoVj95b6vjLU6Vve5u/nznA1d92T3Oi/dCnfeT4W/lcILcB
zmkSY/YtsqYhNhprsFjQS+i1Ul+NMzf3Sy2LH5QqXcr8A4qso14TH3oNHddA
zXeDWO/2XqknyYMWRAeOdg4aaKx5+IYfYQ6+nR8wN31oPPQK2uIJa8B8NORA
76MJ0Z2jxEruh83Rqsi69HXrco/4BpuH3OjoYdYWnY3GHpoqLUosNBwaCm2I
FkR/odPQiGipicar9/pR8c4wB33oxBWOGWVc3nFTU6UPJ8t7gjHI/5jjPg1b
nfLeJzc65SlzUJ95xkDHzbYu48V7pzngsVXw25Cy7pzuvKdTpavHi4MYs8zN
+3iu92Y4b6p9c8Q7U87lb3PszUN9VxNruyL/rtTFeWjHhXJAcz6Xso5cJKY5
3l8gvkWOa1FkzfmusagH5wDfBujMxSmfG5wfnIFfhK13rT60n/Pks7CPUn4W
GxV5bUbZxx7n+eQZW+b47WPM2pR/h/ky5d+AeogRPYwWX+v4Pt4jNs/452Hr
XP//pPxcspeKiJn8naSh+3SInIm3xP0CdvbQNyn/NkHf/8L+m/LzgX/XfTDZ
tZ3kmqxyXTbLHy4bHTPLtXnPa2q5Wuyb7H/Gmq2xnt8p8u8IxP6R31bvy/tj
43Pm8gwPlPO6LXisd+42/j5BjtbWts8WfOCyc5HP07Xi3SAv5nwiZn7n2Oj1
UtePtasrcq0Z30accLkprk8p8vq96j5Yak14Nt4239dyomZfWYN1rkG9PKjF
THGRb5K8dpEbe2ZnuYHlW9eeNfzCelDD3cT3juu6ylputp5w+oFn7yZzUAP2
4fflAt4dizyP+u3gMwLGH7pm5Oa9MMb6UTvqxjcD3x8nuf5fuge2LfJzy3PG
vuSc5Yzdx9/3OM85M/f098nk+cl5uqe/Ww51PXhP8I5o6G9xd3hdc9+X/3NK
jm3oe6XmNeMPNib7pL0YyLW7z9FQMRReN/I3yQdTHruPz9q+vo/GGLOtuBnb
yHfJXr5DR5vrEOc0dsyDxm/s2XGgGIZZN+rZ1bpuaw2/5zX9Hf2tjD2J/4m/
m3HOcQ6+kHJfM8+0+fbP0zd3DHuC9zI1Zr3pn2/fAdaNmh0sxwa+x+9wPVvK
hRrwbVG+B1tb57U+n8ut4YFyTF6/4Z5sI37WsqVrd5C17eMatTV+T+9d6dhW
YgB7C3m1FTNzee+3cy71oHac9bxfOljDDrYXeN3R/qaOoX+xbc7VNa5HV/dD
E9e6o+Obur/au+7t3APD3Btc8149xDH0j2Kdi/wMnRn+j9aE9x7vb87Xh6Ov
e5HPkuvCX1/kNZwY/uwi47oo/K+tLe9BeM02Vzvznh/+VNflkfCXFvlMGsra
Fvlc4YxgHnWYEO2ziozlmCLPYXyv8Eda/8OKzAH8V4fvZE1Ghh9R5N+Vfxc2
vshn2GXhpxX5/DsnfH2Rz8sp4S8u8pl3SZHbXF8RfmqRz9qrwv/MffjP8IcX
+ZmF91/lfkGR8YFtUPjORT7HbmC/F3m/H1Hk+cw9t8hxiQmWbuIB7xliPqrI
a0D9/1LkulCTa8JfW+QzGk6Xy+voIteCOnQt8jqxRvzOgvZGc98afYOLfM4O
DLulyGf/bWG3F/ksZp3Pc63vDn9Xkf9fdGfY8CKf3aznANf0yvAXFvl56hn+
+CJ/R7Cnhriv+oXvX+R3A/X4szU5rcjzmUu9e1jz+8LfX+T3U9+wm4v8/vg/
h6EDug==
          "]], PolygonBox[CompressedData["
1:eJwtk1drVlEQRa9JMPYSBSFnIBiEgAT/gCXWGLsEY8UWe0vsqC9qROwaW2Ls
hVgQ8UF/h74pNgRFjYotEjX2tZl5WOx97v2+c+7smdO/urayJifLsnLIg1WW
ZXdhEDxOWTYDHQ8/8M9hOn4dfMRnaC3chAHwjGc1aBX8xX+AJfit8Av/Nvm7
meZ76TcbzffUXp9Zz0Y3wxd8LnoGpsBv1r3Q83AZ+sBXnk1Dt8B3/FOYh78N
A+Fl8m8fDZ+S1zAHPwHa8S/gHH4b/MH3jndjoDX5b6rxk+En/g2sxW+Hf8kz
WIAfC2341zAVXwHf8A9gJ35D1JaDToI90BE6wTgYaZ6ValCtS82zUs07ImNl
qzNn4Y9CN+gAq+EaGDzh/X50r/nZndHD5jWqtq5wMTJUdgXoHVgGDaxLI7u5
cC95hqp9n/leyqAOvWD+37yYlZXQnHxmbsF8eMW6BD0Iu+Ah6y7o4shAtbfw
7AS6O3rVPbI/bu7Vg4noQvNs86NXTdAzenYaPQXvkz8bAgfMz3qXPGvtkR+Z
XzKfsdyYoWFwFQojA83yKD1LPtPNsAIese6HnoRG6BE1Do3f6F0j6+HodSiK
PZZHxqWRQXlkpGzusz6G1pvPono6Am5AcWS63rzn6rVmuAG9An3jGzR7g81n
UzNYERmods2gaqs0v8uFMStl8a0WZ+kO6e4Ux7eviVkqirPqotc6U3d5UfRO
d/oQ/kjMljLaZD7zmnXdYfXmrPndVY/+A8ZjrBE=
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
e+r/Ad+lESk=
          "]], PolygonBox[CompressedData["
1:eJwt09lLF1EYxvFBvMw/4XdAMkUJL0qs0FJbCTVMQ1ODSEEQRK/0pmiRNg03
whYi0haJIgUtyxYpKCuL1GyxlMglb4pSi9Qo6PtynosPZ5hh5rznfZ+JLKrI
Lg8LgiAV4ehyQXATsRgPBcEx1r1YiXV4g3fYhqU4g2tIRj7q8B5Z2I5neIp0
ZKATFxGNDXiCPiQhDidRi1TVcByPsNVW6rnHehcRWIs53MZG7MId9CAeS7Af
C9iDh7z/jbUd61GAsziBNL1j10ewRfcO47lqtz0f4D42YTOO4gWq+HYtzjnf
M+vVCvzGddVq7zTgBlIQhSZ8wirEYAyNWIZEfMQH1W49/YWfOttOu496ZKtH
izioXhXr7A3ay3rwD5c12zLWebRqlrvxFxesRzwv1exfI1MZGEYvInWvGp+R
g9WardVQrBm/woB6UcM3p1lPq/ZcjGIfOkL+DJYVy5RlyTJzFaeQp4y8dX6G
NjvL4CV8dz5L1sNJZcKysAOH8AclmAj5s404n0074xfWZix3PsMt6kGpzmh7
T6vWPM26H5UhP/Mhrgedn32C89mtVi8sw1fU8zLNtBu3VMsa57M7g0LnMzyL
H84/K9ReL9U727OG6wPKRop6N6/ZWQ8nWKd0djvTV5x3vjbL/DgeO/+v5ag3
bc5nz3r0H7Wlpz0=
          "]]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
mn93x7pao6292Ues1Cz0ehdrNHHNLmLd156Sq4cxddCkfRxDG6Mxz/fvfcXB
OPoSncp7z6Hy4VqvVGrv/cWEVu2XSi19kBj7Oq/Q7dQuvkHzu0Gu/tZA9w92
faGfB7oeTYpGPUcu7VOptwekUjMPSqUm72/9o1wPB97dhoiVuUe7Z73kWmj1
w8Xf2n7yHFiU8rOAZ8iTKT9HCv18Qir1M/GUsEtTfpYUehv9zfOaZ94Kn0Gn
eO2ylL8ncb/Ocx3Pn0tSnkOtO1Kex7e08XruCZ5V3PPc73eHXZHy96SpKX+D
Y/wu1/BtkvuP+4R75Oqwca6/PeV6w8zBXM71tJS/N3FfXWnujsacac7zTSl/
LyP3NWGXW2OkuchzbdgE18wNm+XYdWET3dvpKb+bc59wHsd4Hjo4zr7fHzYp
5e8xV+nZ25tT/gbE+bgo5e8mQ4w535ztG8IuNO8tKX9vKupwfXDYnLA77dfs
lJ/p9OVxPXvxYPgZ7gf7c7H7eK89GuUeXmr/J3mtp30d796NsFfbuwfj7OGp
5q5jvybYg4fC7rEGfXjY3OfYwx5eu8/r8J4sx1Gu62jPJolntH081N5fZz7O
ztXioq/Xm497gPPP78BYezpGrlPle5n9GSa/aXKc4B53ENctYoP3TXLnrF0r
74nuaw97f6P9npnyeR1mnZn+DZbb3Evm3urecDavsd/j3V96zPmb5Z5wfz0o
dt5buA+5B+f796+VXHO2WLg2332GxwMp94N7cK65V/gOxPvPPPP+6jl5yP3g
3pwjruvty/nOfdT5K3134ZmxyP4vkDPPpjrm4myMdN1jri3OLnNPdmyFeVjL
eSbfE+7pQudznTPCWRplDWrym89zl+cZ31T4feIZyW/PAK/xTln8nzeacknE
Lar5HH2Usg7nrL0f1rya9/yZsEo1n4XNw29RzT19IaxpNffl+bAm1Xwungur
VvOZejYsVfNZaxz+85TP45th21TzWX7aMa4vD9u0mp8TrPsi5bXUX5kyBnC9
lzI26qxKudbqsI2q+Z4B11fuGbi+TBkbXD9JmS+9XWQ/m8X1tz2P4HojZWzL
wjau5nvxnZTnMefjsA2q+X6tF37Dar7vmbs05fm14++1qvncrR1+nWo+B3XC
163m/dss/Keez/Xj7/Wq+QzWhP/LM7gi7DvPzBpxvVY13xvfh/2Q8r20STXz
h/v/OC8p3ze/h/2R8n31TdjilH8DyfeUOX8N/0vK99DXYZ95Hn8K+znl+/j/
esdqEg==
          "]], PolygonBox[CompressedData["
1:eJwt0+lLlUEUx/FxKdOyxLJsw3le+j/4V/gn9Fa4UhhJkUQSERHmVmaZ5lKp
dbUE8V2lrVpmtmmppZgtUkaZLebyPczvxYeZuc8885w559xoT2F+LNE5l4dk
DHjn7uIUqvEIvTiBSnzDVxSgFBmRc2OMh3Aam1lPMpbgKB7jHspwBrk8n2b8
k+NcD+MQHqICe/EJL3Fe33yA2ziGcmzj/e+MNYhjBk9xTnvsrDs4rjPT2b8J
1xTjFJ7gLI7gI4ZRq3fGFbPFehiv0I8qHMBz5cRyUYRRH3JmuTqIebsbGtGE
WbzDReXgFnYTT7dy8FM5tVzWYzvP/jO2oBMLOtPOuoQl/EWh9rxHZhRybzm3
3PzQWTW663006M7Z7P2lszrwQTXpUU13Ml+LVuY3sYN5Aq4wv6HYBxljPtwh
hXUS9vvwzgbm61DMvB2JzJcZ9/lwxi7W66PwrEu5yWJ9XTnaynxLFGpjv/1W
zePKqfXGa9XCeuQtJlSrOh++5dh/Wd+02Nbgqg8xjuCNanVBvfPMh96zHrLY
09Dmwx3srnM+9F5MuV9Es2rwWWfaWSfxTznu0J4V1dRqaTFZr71Q71jPbYxC
TiwX1qPJUci55dpi/qI72t3sP5kahRpZbSxG680+fdt6dBVYia6L
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
3j+8h8iFvnmguV7pGH760D7Wo6/jpFlc5tn05VfIwx4D5BnsXkkvoK9OesHw
IusOQ9yPHpmemX6XfnBmkXWKpFtc5b5Jp7i6yLoD+yadIukW1zivgzkmbWGW
Z7T3WmIbYx79vM9jXTfeMefRQ9/kvpMcDzTv66zdBMcDvHatudNv3VBkDeJG
c7zFvTifPnqaZ093DBv99xRzTToB+9JT32lNiScNY7L7Js1iqgx3uG/SJpJW
cZvzknYz0lqT78Qi6w7ULvW6z8pAPz67yFrDPUXWFOij6S/prV5zv9nulTSL
pGHc6/qprrtfhrnOI8f57pt0h4eKrBc8YS3ozR8psu7waJE1i/lF1ilYn/QI
5iU9YmGRdYdFRdYdFhdZp3i8yPrIPPemHiut/TzzTtrEEq/Rjz9dZK1hmWfT
I68psl6wtsg6xXLzXuk41fQZOem7VxVZm1hdZK2BvZJG8FKRNYKXi6w1bCiy
VpK0k6XmnbSJpFU8775Jm9hYZK3hlSJrE0mreNF5Sa9hHd8LPE8TiqxNsD7p
YjOsJT36m7LRg7/lefTOm933I8dw05u/Y+02OV7ttbeLrDu8L9Nmx0l3+Mjz
6JW/9Dx64a/Nj/76U/el36XvpQemH6R3S9pE0irwW4qsQXxmHlvd9w3PSdrD
F85bb4705vSI9FD0VOu8tskabzFv+HlX/GCc3nxbkTWI782XHpaeNOkR22X+
yfWb3WOHudNr/1JkPeInGeiv6bfJlf6aMbVgb3oxOOi5icFHj86YOtJr04fD
T+/GmFzpf8kv6Q7EktZAbJNM31ljzie/d7wPW82ddyc9OX0tfRt9QepvGSd9
YU/zoFemZ4aZdX8xp32NwczcPawFvTnrqRfXdrcW9KZJn8DvZS3Io7Lz6JcP
DFkLOEg2+vH9Za7s2St8Pl4vsgaRNIn93JfaBNfv6TNycMjaRNIqDnAe9wCd
IOki+KSXVJKBvA/xmaMu9N9HuJ4+97iQdYHj3YN+/bCQtYmkVRzlenKv5j1I
GkQ1Wau6JukLJ7iGvpjfKCv9TFKLpBHUMF/GSSPBJ52gigxJj0j6BD7pFtU9
L+kRSZ/AJ93iFNcnnYJ5/K7kdwy/a5bF8YJQ9gUvhLIvmCIbvXYd+ejL6VN5
/s52TC701w2sSx1j1b1W3zrVdS/qQu9cz7zrOya/hu5Fvo0cJ02hRch6QWM5
mjjmTHrt1nI3dj2/C+ndm3oPmjuGoaX7wtDKcS3Pae4zUc+86bHpPfvJ1to1
7b3WV9aOzmUdPXo72do7Jg967a5ydzCWdIcuIWsWHWWgv+ksUxfHMHR3L3Lt
4Rg9gd66rWz03z1l6+W4rnm1DVmz6BGyNtFLvt6OmUuf3keGvo7beFZv72tb
rzU038TQ39rR79JLTjVO/zZAnkGOk+4wKGR9YZj1omcfLCd9etIthhhLusNQ
OYc5Tr3rXHlGuO8T0R4LpQ6B/jBSrr7mOipkDWJ0yBrEmJA1iLEhaxDjQtYg
xoesQVxr3vTs11vroTJ0cn3/kLWJCSHrEfTzi0OpO0yWhz7+ppB1h5s9jx6c
fnyJ14eHrDvQq6NLTJEr6Q63yjDNcdIdppsrusOd0daEUjtYELLuMDNk3eGu
kHWTG0PWKWaErEfMClmPYMx3DLrDnFA+E+gO6A+rnHNzyBrNxJD1iPtC1iC4
r3w38x1Ry/vH/ewjA9oEehjPKT1k0qAed4x/1P+fjrYwlM/BQvcZaYw5I7z2
mPsz5wmvPR9tvfdpaSg1oxFeX+w+fI74fPI5eSaU37n0tstdN8U1S7x3y/z/
Fs9fanyxuY40/pRzVrjXw97rje65xL0meW2D9Z5j/an5WtdO0bPXZO8F9/2e
UL4XNrpmtjGuP+e9nKN/zhwmOYf7uMB9JunXuHa9NRrpuWtdy2dwnfdzkbHJ
7r/WPNc7Z5R+vfssdk/WjZZ3lOP1/r/Me7BAno3WZKOc7P9htO+83z9E+8D7
sDXa+6F8jnY6oJzHHN79vFd4FtEtXvG+bIr2rlyfR3v5VywveD6fUZ5TnumK
uOd77r9z/P+jUD5rr7p+snu84f9vRftEli+jfWENXjLvR42/4xzeF7wL+bx8
H0qdhTw3ywPLV9G+CeXn5ttoL4bymf/YnBZaA3IlTzSp3v6egHWLvNuibQ/l
M/p/QPnNzA==
          "]], PolygonBox[CompressedData["
1:eJwtz0sKAVAYxfGbrMGcJVmCBTBgMSyBsbcISSlD8n5EhJT3q7z+X53Bb3S7
53zHH4oEwx7nnA9evALOPRFHFUsMUUQWK4xRQw533BBDHgN80UIKe6z1VkIP
bzTUYdldZVnHBVd1RTHHD22k0cEZFXVu1GHZBXzQRwJNdU311zoPmKCOsrY8
tLWmt62y6tqyQEabrPuk2+yGEY7Kss6dbmjqj90+Q1Ib/vgSVIA=
          "]]}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAnYl1Maxr+RsQySSGOLOudT2QstYwtlraRCoiYm+yBJ9nWSstWgbI2t
NBi7MGIo++zDGGYsw0RjCGPfl3l+c37vdbqu777u77znnOc893POu9z/zgcf
O/SYZVpaWrq1aWmJv5ZlckvLmoEOgR+muBZYNrCW/P3A2vJygXXk5QPryisE
1pNXDHSSfxBYX14psIG8cqCzvEpgC+MSr4vX2gZyYNVAu0C3wOqBNQKtXlst
sKHcPrBRoENgzUAP45HXJoGOqejbVEbfZjL6NpfJI7k+a/c0BpoGBnoH+gR2
cQ36t1In+raW0ddL7uK8LsbuI6Ovr4ymIwJnBE4PbKO2roFtZWqwndw9sL2M
7n6BjdW6o4zWnWS07iyjtb9M7QfIPVynvbXeVX1bBnaT0bq7jNY9ZLTuKfd2
bCfr0t19Y28mB44LjA8MshbUYHhgB3UMUT+695bRvY/96NtXRt/+6hlgDYc7
dj/70T1CZtxQ41G/kc5jPw+Q0X2gjO6D3HvyHa1+dP9YRvdPAoMDewWOMj/W
P9JcaB8eGGZ+o4xNrEPUjNZDZXIcazz6zg2Ms3aDrdmPUjkrh6t7nBrI/Wg1
U5tj5JHOP9D1x8toOiEwRq17GZs9ON5+tE6QGXes8VhvovMODpwoU4+TZHSc
YY7U4xQ1o/W0wGFqOMva/TRwpmOb9n7qmeTaaD3Z2MQ6R81o/ZnMuLOdT995
akbTZ4FFgdcDzwUeCSwITFUn9ThfRt8FMvoulNF3kUwuF8vomx44VX0/l9mr
S2TqcamM1stkajBDJveZMvoul9F3hUw9rpQ5I1fJ3GfXmys5zlL/lMAvZLRe
I6P1Whmt18nMv8EY6Lva2MSaE5im1l8HZnttrprR+ksZrTfJaL1ZRustMlp/
JaP1Vhmtt8lovV1G6x0yed0po/UuGa13y2i9R0brPBmt98rU7D4Z3Q+bKzk+
oL4bA/NltD4oo/UhGa2/kW927HTrwv3DM2Og+8B55MwtVDNaH5XR+piM1sdl
tD4ho/VJGa1PyWh9Wkbrb2W0/k5G6x8C97uHf5TR+icZrX+W0foXGa3PyGh9
VqZmf5W5r140V3L8Wyr3GVqfl9H6gozWv8to/YfM/JeM8ZRx2RPOy8teQ+v7
juPaP9WM1tcCv1frv2S0LpLR+rqM1jdktC6W0fpvGa1vymj9j8yz5C0ZrW/L
aF0io/UdGa3vymh9T6Zm/5VfsmZo5Xx8oL5XAh/KaP048KpaP5HR+qm8yLFP
Wxee07zTeJ98rn508+zne4Tvjxtz0fNN4Cv1o/vwuD4ycEBgfi46vw18p2a0
8m35rppWz6WvJRcssQbfy4UZ97WxqWWbXOZRg+/nsq/oXi4XRvfKuTzHyX3F
XPSj+we5MLrbxv9fBH+Zyjcu65HXGuZBu32uua8Q/39kLSfH/8fnkte1jlkt
eNVc4lGPlXJZhzy2iP/XC3QKdHUN1lwnsHwusTvmom1Zvrdl9K1r/4rGgNGx
QS46VwkcGhgR2N816Gf99WXGrWU86tTZedTghMAEc78+Fx0p0M0c8QCt1oK9
2lBGw0bmTb7dHdtRXkY9m6uB3LPxibVpYG1rsJnMuI2NR758G/Ge531Pvuwn
e0Zt2H/2fmvzJXZvcyXHXl6jvYPrsc6P1Ea+2wc2sW/PwDaBbeXu6ttWJq9B
ge2cN9t1twr0cU32tp/roHsX8yCv3QN9Xf/kwEmBnoEBuWhg3I8DeweGBvZw
LLns5hp9RVc17JTL2eoR2NV1GLej6zd9nTwLg82depzhWqNdb+dA/8AQNRDj
9MBprjPMfvIdLqNvP/ND34mBibmcr33sJ699Zcad6lqsPcJ5aN1fZh94dgy0
3mPMj/VHqWGvwFmBM833YHNizYMcO9xxO6hnrHmQ74HGJtYhXhvhflAn7q2f
GI85fIPybca32hHmRww8BN+fnNOjzZX1z7auRwaO8n/29hj7yfdYmXXGmwf3
ceNdec6Os5/cj5MZ91PjsR6+HN+Kj238Oe3Gn9Nu/Da+q/Hn+NnGn9NuvDce
FY+Hl2w8X1dzamde+NLG87MGnhjfio9d1X7aq3iNuI3/Z73Gc+5kPN4rfVP1
3vhSPCH+tbva8K0bp+rJN3P9LWwTG2/Z02f6Yt9JaOvhuPXs75Gq59/E2mzl
/Marb5WqV99a/duYa+PVe6fq1fuk6sMbX76tc9ZQR7dUvfeOqfr/XmrDw+6Q
qlfvl6qfJy4eFb+G32l+N1k/Vd++c6ree3e14lV3SdWr75qqJ9/D9QfaRhse
b3CqPna02gY5rq/9g1L1/Lupc4jzG38+xLyH2m789n5qw/8OT9W308Zzj1Qn
6+Efm+/iMea0u3mNsl7EGJaqPz/AnEbZbjw8cX8W98w5Pkua3zj6GxtPNyFV
v32IWvGqB6ttrG3W47lwmHnzjjoiVV+Nr+zh2gPUjN88yhocbXuI64w1v2Od
T77jbKPhONvUY6K5UgM8wvhUffjxqXrsxnOf6JxBtonBe5RvusWpev7jzAWf
erLaeOadan4nG/eUXN57PMeHq5tazIz2NYFJuejDk56dqmeemqpnPl/99ONp
h/o8+/9zMhUPe46amDdF/XjYxutPclzjvS9QBx50cqo+/MJUffJM9eC5pqXq
w2k33vuSVH078xt/zrjGk1+aqt++PFV/flmqfvvKVL36DOs7eSkNVzqfa1c7
p/Hb16Tqk+em6pN/mao/b/w6PCtVf36tuTLvRjXgWRvff73jGr99U6p+++ZU
vfFdqXrju1P127em6rFvT9Unz0vVn+NJGq/yXqoe/pZUPfkdqfrte1L153e6
h7Mc23j721L14ayH58aH4kvxeXifl1L13vNT9d4PpuqZH03Vqz+Qqid/SP0P
20YHPnRBqt57oRoecVzjvR9L1Xs/nqr3fiJVn/ynVL33U6l6b9r4bLzn71P1
6k9aswWu1/jz36bqpZ9N1Xv/OVXv/ZdUvXrj3f/oGtPVPydVf86c2Y67P1Xv
/Xyq3vsF88M/vpqqV/9bqp7872p+0TbaXnFvyPuftp90r15M1Xu/lqr3/leq
3ntRqj757VS99xupeu/FqfrtN1P16q9bu+eWqtebzllg7s+l6r2XpOq930nV
qzfe/S3XmGb9Zqfqz5nD85d78rxU/fbHqXpyPCre+WvjNJ4Kn9J48k/MG7/z
mbniKb80969to++Lpcbh8/B7+O5vzBU9+Fk8LP4VL4nnJF/8GT4NffTjY/F1
Xc0JPfTjhRe7/hep+nPi4sHwlXgydOJPWaPx27Qbf844ngeMbeM3Pt/S/F6A
bnJnDnrwe+jBZ+NNvzI/vCMe8rpcvHc78yDv1XP1zx3VzLX2aujguDa5+lQ0
Eb+t+a3l/Ffdt6ZmeNN1XBtfmcwVb7Vern6bNrl31kc0vp35i9ynT92rDZyz
vLHxw9S3rTHaey5Y74Zc/HmXXPx6Z3MepqcYox58K94Q34P/GWxcPC5ed04u
3nVLNWztuxzNeNzG029krMafMx9v19O80YS/bPz95o4j117GJffetunrZ16M
3dE2ueJz++bqt/G8PBs4W5yXrvb3sV7kgK/d0Gu91Ya33c68dnKNTV1ze3Xi
YXdW2zauvb11GuT+9TAGGgY4h/XxqnhYPPEQ4xOLb5e9zYX+xovDu7jGHs7v
59y9zJU1B5rLno7r774OzdVv08bvjnLuyz5LqBFr4mH3zdVL42c7WN+uufpw
PO1J1qeH+e3jGuSCrz1APXyLjbY2o+zr5ZwB6hnh2s8E1miN963x8K3424WB
P+Ry3hiHfx3rvENtc37xxkeb41jn81zg98TDzOkI2+SFB8Zbj3Ee7XMcc2Cu
HvsYY42z3Xhp2txDnGnOM89UnjU8Z6YHn5frs4f7ra25jnf+aNfH498ZuNw5
lwbOt8aXBKa6xhW5/D7S2bEnGPvngSmuwW8jF+Rypnoagz26K3C1fTfJjL1I
Zq9mBC7O5YzQf4px2GfOK2f1ssCFtqfl8hsQOoY4j3N1VS6/+zBvVi6/s9B/
q3P4beNc+UjznqIuvv8nuQ+/yMVrcW7uCNzmvFH2s0dX5vJbWE+vTXL/7g3M
U8NEa9jU43xzO956U0PO3GT38BbrcoY6LzT/c83hbPsusm5nWjfyuifwq6V0
TrM+J7hPE9Q003xPt6anWacZxjvRvZ9oXtPNl3uMc3mQuV9u/lOtRU/1XaXG
C9z3U9QxSy0XW99R1u9Sa/NQ4MFc3ov3yat5nfcl3wT328e75Ndycg+vcB/v
DtxsjRjPu6ede8K7g+fo3Fy+Y77xe2buUvW/27lv2cd3zlz3iTEXGf9Uddxu
XTnbd6l7mnvBXt3q3kxzffLY0rrMMx+0PJDL+7HR305991mHG9RzvfPuNc4D
zp/t2Pudy/U5xpxjmzF8L81X32znpqVqynh+D8Ar4inZE8bz/XKte8T/XeJ5
+Q/3sHP8/7xn57PAp66Z4/qruZyvFP+/nMu5e9B9pf4bxPW/5nJO59vHdX5r
OMs8XnE+c1/MZW3WfTiwdmvZ/3bBq7WW/VgzuENreba9EXgvl7P8mjmRzyeB
j63rdeaDvncC7+Zydn8TeNp6EuN14zwS+J21eiywxL1YPWI/lcs981Xgc88W
/Qsd0ynGvJXLPUHui3PJf534/9+53E/rxv9v5nI/fRT40BzXj+tv53IPrRr/
L/LsveAeUP/+nine/8/lUl9qu0Lwiq3lXBLvS2OuHNdWai3ndPng5VrLffB+
4L+53OvLxLXvtZYzTs2+sW5t4tqyreV+YM+/c9+/tnbU7VvrRa1WibFtW8uz
jDp9YK2eUBu6HlU/2h+3XtRqgTWiPv8Dt6KX3w==
          "]], PolygonBox[CompressedData["
1:eJwt09kunVEUwPHPcWqsWau9cEG//QTiRTyCB+CqEUc0Gkm1TdM4FOfgNI1I
ixqPuBVpEdRUQ2seW1MIImIq+l/Z6+KXvb5p77XXXl9WfmFegcdxnFx4seI6
ziQ+oBRbmEYtyuE1vIQS4lbMYhR+PMciJlCNYjzi3RnGOnQjjuuHaCd+iV0s
ox5vsY4p1KAMv/ADVSjCU76NwVfiXvzFPAJ4jQc8i0Yb8QvNrV+f+XWuAbzR
OSXXb7q25HyKE1SgEvHGrilrSc5RxE8Qdu0aEcQZ6CFu0dyH8F73ILUcxDut
6Q4WENQc5NtDxgbXzpHJ9XfGHPS5dq1IY2sd1r3+1loEdK4lrXVQa7mqZyc1
HcEZPiEZ17jC7TN77x53yEaz3Mc/fbcJ20gzthavsI81NOqeYo2tudRazmQM
5/qtzLmne5K9+PTbDT1bmWNT1uJ5J2MIl/iJL/iMRGN7RnqlQ3O/0Weyh3HG
C81dapbCu0nG9qrMeYzHxvaenGk68R/di6whvewx9uykp1OJE4xdqwsHmmNI
z1R6ec61vS49Lf/GMD669h850j379Ez/AwTXnFA=
          "]]}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxFmmm4lVUVgEkpy0olKzUyRTsbUWYZZZZJRgEBuUwyqnCReZB5FJllujLL
PMmkXCcMUSKiBFMhNBPTkjRNDTJxymi/z3n38/1YLvZea6+93vV959yz1mOZ
PkM6DL6gRIkSx+N/Lox6U65EiX1RnolSJ0qIUjbKLVFyrhtFKR+lQpS62m+I
Uk9dLsqt2itGaRDlxig3RamvnXVD94jVWN9KUVpGqR6lRpSmUSpHqRLltig3
R6kWpXmUqq5buMeZu6O0j9IhShPjcb6V8WpGaa2uFaVtlNry3a6Gu526rrHq
mXuBccmro2xwdFJTm85qanCH5/DrIifn79Te2HzrekdXYzeL0kNm+Lq5B3dP
96jTXepW2qtYl17uwdpXTvj6RGnjur+c3N9PO+uiKFOiTI3ysHpalAEyw1oo
JxwD3WM9LEp3cx+kHe771NRvuHY4hsgM32DtrIe6R6wR+sI63md8T5TRUXrL
NFYGmO6XmfU49zhzr88DhpHGo04TjId9ohrWSWr4JqsLrU2hfNNkI/c5UUaZ
1wzZ4HhATW1mqqnBdM/hN0tO8npQ+whrP8g75hp7TJT5csI9zz3WC9yD+yH1
ePk6yL/QPbgXywzrIvdYL5UZ1iXaJ3tPH+u7TH44XotyMMqvo6ySE46V8rPe
YN7kuFo73I9EmW39Nmon93Uyw7dWO+v17hFrk74w7cjl31fy2iIPfNvl4b3e
Jg/rR93jzG+jPB5lb5TNxuP8TuMtj7JLvSLKbjV8e9RwP6aGr1g2cn/WuOT1
pGxwPKWmNk+rqcETnsNvn5ycf0b7JnNd4x2/MvbWKM/JCfd+91gfcA/u59U7
tC+2Li+4t9NnuUvWg+6x/o3MsB7SzvqzKO9E+at14r3gc/B7eeA+KjOsL7rH
+lVzJfdj2mF9SU0NjmuH42VrCvcftLN+xT1indAX1jd9xkeinJQTpj/JANPr
MrP+c5TDnvmdzxKGPxqP86eMh/0tNax/UcP3tvqotTkq399kI/cPjEtep2WD
4+9qavOemhq86zn8/iEn59/XfsJncMw7PjQ2n9GP5IT7n+6x/iTKG3L/S/2m
fHvlP+Me3P+WGdaz7rH+j8ywfqqd9TlzgpvPDe8F3wtfyAP3VzLD+qV7rEuE
fK7k/rV2WP+rpgYXRJ+P5fifNYX7G+2sz7tHrAtD3hfWi0P+3SXHb4c8J0zf
DXkGmC4KeWbW3wv5Pc78Mv770iiXRSkZ8vE4//2Qj/d5lB+EvIb1hyGv4bsk
5DXcxPhKvlIhz0buVxmXvC4PeTY4fhzymtr8NMq3Qr4GPwr5c/hdGfKcnL9C
O+tOURpGaRTlZ8b+TpSfhzwn3KXdY321e3D/Qn2x9rO+C9e4B3eZkGeG9Vr3
WF8f8sywXqed9RNR1kZZFyVnLalBWXngvkENd2XzI9+b5IevvBruCmrqd2OU
n+hXSWbO149STntd7+OeKsaG+2aZ4asuD3w11HDUiRI8X0tO3ouqxuB8RXPh
7traYb1FzfmOURr4bBqYF3xtjFvbZ1ZevtvMr1qUxt4BXxM1dWqqhulWz+HX
3Pw430w76xbGg7WlGtZW6ppR2poLud+upgattdfyGX7tZ7Sd9rpylvK5NpQP
ng5R6vlM7lBTg71R1kR5JEpn+eFYGmVylClRCmSGtYu1YH2XDOTeVTus3dTU
oJd2cu9hTalBd+2se7pHrN768kwG+Mz4PPW1LtTjHnnguDtKe9f3useZ6VEG
RxkSpY/xOD/QeLAWqu+MMkgN333qAmMUyDdUNnIfY1zyGi4bHCPU1GakmhoM
8xx+o+Xk/Cjtvc21q3fcb+x+UcbLCfe4KP1dT3AP7onqAZ6hTrwXk9wb6LMs
lHWye6ynyQzrVO2sZ5gT3A+o4ZiphvtBNdwPmR/5zpYfvjlquOeqqd8sz+G3
IMpYz8/TTg0WGg/WRWpYF6vhK5KN3B9Ww7REO6yrzJt8l2nnHVkpG7bV2slr
uXZqsEKNX3HIf1b4Pl2jL6w7jbtc2xxZt5oruWyIMl/WjWpqtkkN6zrPUYMt
MnN+s3bW24zHZ3S7mho8qqYGu8yF3HerYd2hnVx53/ms83neo506fe7vCH43
PCIfPI9pp06Pq6kBPSR9M700Mwx6fHr+9D3OdxxzAvryNIdA058z26A3r+Pv
l3P+3a+gnT6f+UJTzzPboN9Ps5B6nmfe0UAbcwh685bmQS9OT05vRu9Jr1bV
nFNP38w7mHO0yGWzkNv0S3MN4nYwBj1vde/hDLOWhuZR3twb5rLZR1vz5Xx7
/TrmshnGHdrIgx69IJfNPjqaYzdt1IbeP81COutHvvT+3b2DHNMcAt0vl801
elq79rlsHtPOXLlvgPVqoW8P+Xt5vrn3dPMMsftaa3rY3j7nLuZKfgONS+9N
b/qgsVkP149+PM0/Cj3TQ/uwXDbvGGQeIz1PXej105xjsH7kN1QbOdHjj8pl
84gJ5k1/n/rvMfpRM3r8NP8Yqx91Ha/tHmOMz2VzjYm5bJYx2ToNM48075gk
w1T9uJO+e6658hs+zTDQ08wJ+5xcNvuYYU7zPT/cuqZZyEz9yH2BftxPj77E
u4tcp7nGAnkWuuZ+es5l1o77Z8tJb7tIniWuJ7i3MJfNuYp8HtPca+Jz6uLe
Mv3a+jz6eDe9eJpboDfIxwwgzULQK2XDvt67N3ueXOnj6eeZQ9B3HpZjrTbu
pwenP08zCPpx+rMjnoGPXn+rfFu8Azb6/TQL2a5fmmvszGXziz1y7vAMz3Od
ecwz93W5bPax23j02s/pR69cbD3o35/OZfOONP94Uj9ypGd/Vs5imdJM5Cnv
oUc/ZL706Qe9+5Drbd6/3zrutZaLrQf30BPzPf6Oe/u9O81EDsj9guvN5rXP
Gh3URt70+PT89N70l6kXR79vLvTjr8pA759mHi96fr/2V2Q9pt8BYx33bvr9
NAt5Sb/nvfuEz57enL6dd+GUa3I9qR+5v+aaz+QKnz98L3sHtWQ2wEzgsPHe
sL6vez7NO07lshkHfT5/k/nbfM6avmLcNPt42/P03x9qo8dP84x3jXFS+we5
bA5y2vs/8vxxa5zmIu/pR6709R97H306PTvfLytlTjOOT6zRGdfFsh3JZXOc
txR63LPufer6lHtn5PvM+16Sg/eMXorekb6R3/78BuY3cX9/S/Kbkjzoy+nP
4aBvSrMQ9JfyYKfPT7OPr82b/p7z1Iu+P808vtGPWp7XRq70+yVDNpugP4eH
Xj/19Gj84KHfT7MQNH6w0u9j43kTg3WacRCXHpDell6XZ8as4nwum33gl2Yf
rMmPHj/NMNClzIO++aqQzT4utxb09PT2cJbyTmpB759mHlfoB1NpY8FBb06f
f6k5Xh+yGcfV8lzjmlpfpi/3BNkuMkZpmcuEbOZxrecvMXaaeVynX0mZrpS5
rHHpyek7m5s3PXKaYaDLeSc9e+WQzT5uCtnso7wMVfWDmZlAmkNU1K+0MSrJ
ebNn0myithz8Rq4mB/19TTnQNaxfbW3kSO9eX/5qxoWtjnFhreu6nL71ZEjz
D3770wN0Nt/GIZthoBsZu4X1SrOPxiGbfTQJ2SyjhWzUNc08mumXZhwtZWrt
Os0jOpgrPevtcrbRD+62rtOsqmzI5iNtfR6NZKtnvPZydvQObJ1cN5K7kzxd
rAXfkV/4Pct99Oi9QzbXSHMOdIH5Ye8ld3f9yKmv56kLM4E0/+ihH7W4Sxsc
/TyTZhCD5OD7LM050P3Nm/49zUjQ94ZsrjEwZHONwpDNMoibevgHfAa9zAOm
IfrBMNR1mmWk2QZ6uLnQm48zxij9qMdo1z30HSYbPX2anYzRD74JxoKDnn1i
yOYOM+SZrA2eKa67G3toyOYRM0M2E5kgM/1+mm1M9fwQY6dZ0XT94JtlLHhm
u6bnpvfeGrJZRpptzNGP3p95a7F88/Tj7xD9/vyQzS8WyUxfn2YnD+k3yfsW
y7nUNfWgT19hvvT4y+Qp0i/NQYpCNjdZKNsybeRKb78mZDOO5dZulXfAv9r1
af+u8NmY5TlsfP55t7qEbK6R5hzo9SGbU2wL2bxjozltdp3mF9tlpsZp/rFF
P/LeoR8cO12TC3PMx82VOcUeeXbpl+Ygu3xWa+Vfqe9un9M6bWnG8Zh+xd7B
/59Bn0xPn76j+c7+P+WmRLQ=
         "]]]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxFmHm8VlUVhq+iMqnMgyAyevcBZFRERWS45MBopFaKoaSSOWdapiQRZg45
5YRloGZplKgFgsyKMiPIIIjIPMooKJNA+/mdZ//OH4vF3muvtd93nXO/71tv
40F39L/9+JKSkk/jP+Wi7xBKSnpGuyzap6UlJZOjTYk2N9q4aO9FmxNtrOtF
0SZ5bp7x8dEWmzc12oJoE6K9H22+cdafuDcx2hLPTou2MtrH0WZGWxZterQP
oi01znp5tA+jzYj2mXHWK9z7KNrnemp9Yb1Z0b6Jtiba2mgLvR8OX0abLb/V
enivlwN418mB9VZxg2uDcept1C/yjnnmbC7Ne0pvNhlnvc0acN0uH/jtEwdY
d7gHv536z43N9Y5vvQ+MX1mPWrvtKT3YZR7rvXLmjq+jrXK9RYxw2289elAn
vhPHRysX7ZA84XFQ/qxLQn43PA4bh/d3emofF/I4nI7aR3pwxDjrY+5Rizt3
yLtSyJ8fXE8IOR/4VQg5H3pWPuR8WFcM+R45p4YcK9jhsNN+VA55PbieHHJ/
INopIffkVJEznIbH/98R7c5o1UOOGx7VQs6TdV37BMYaIY/DqWbIPX2qF+3E
aCdFqx3yvsC1VsjjrOsbh9Pperg2CTk+ODUKOQewNzAO7zP0leSx3ufU0D1y
qoacE7gbW4O6Ta0N72b6qmLZ4/typnvwDvYCru3Fwf0t5AO/5iHnz7qdfDjX
0jjv19nmgbF1tNPs01nG6Wsb9+jNOZ6lB52ilYrl3JDzoU8djLM+T25w6mic
9fnuwekCPbUutF4W7YpoXaJ1jdbW++HQ2Tj8LtLDu0wO4O0erZXry8QNrh7G
qfc9fTvvaCnvS+wpvbnYOOue1oBrb/nA7wfiAGsf9+DXV3+BsRbe0SOLGKK1
jdbLetS63J7Sg37mse4vZ+74vvHO9qua78FV0brJ+1fRBkX7abTrxQquq+UM
px/bC9bXhRwH564xfok1+sjj2miX2ssBxln/xL2e3tdX7LeI6YfRbpQb2G8w
znqw3OjfTcZZ/8w9nv/Po11prVut9yN9d5/5QO+Hw23G4Xe7Ht6/kAN475ID
61+LG1x3G6feL/X05k77Qs699pTe3GOc9X3WgOv98oHf78XB59cD7sHvt9Fu
lt8dYrxG7GU+m99Yj1pD7Sk9eNA81sPkzB2/M876IXHDlb8VPif4LHjYXsD1
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
yoe9+XJY6LmkQawIhcaRNA/8olBoFstDoX0sFtNK86fb16R5LPUc2L/wHPcz
p6/z7g2u4bPKc0n7WOX9zCqb7N1ynx88mXFXy4d6a+3HavPht9E7JsmDvWd9
Zm+4t8lz8NnifeQzgyf9AL8nFBpH0jzwW8VNfLf37zMfvMz9SfPYbj693Gks
6RGHQqFBMIeneZvZE37M+0nzwH8jN2b8pH8c8FzSNaibZnjm2I3ec9Bntksc
K8W+KxTaxxHxgoMaSeNImgeeGDgqOcMn7YNzYKzsXE9v+DxOmgeec0m/YLZH
b6iZFfpNDWd18FZxnv9KPkkvOSbWpEfQL7hxlrrwr6oOQF+4B0xwo3bSPPBV
xV3XWk2dt9Mc39G5PGkQjbNC40iax2nmJ82iUVZoH/Xk0NT8iuoA6ALlnfvr
i7WZ52o5mzeXW0vXVZ33m2WF9sGa73K+ex72mTT0jhpqAiErdI3M/gbz6zjX
t5RHa2d83uMKYqwsp4byaeO5pEGcnxUaR9I88O2yQrM4Lyu0j7O9u5P5je1x
0jw6eA6MF3oOTGiX3by7zDV8OnsuaR+sl/hO87dV1/zEE12jS1boGl3tbxfz
xznDoyXwbNrKmc89Prv5bP4/KyKOEA==
         "]]]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
       None], GraphicsGroupBox[PolygonBox[CompressedData["
1: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
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{5, 1, 9, 3, 25, 23, 30, 31, 29, 18, 33, 17, 21, 35, 20, 5}], 
       LineBox[{7, 2, 6, 14, 34, 22, 19, 26, 27, 28, 32, 15, 24, 16, 4, 
        7}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[{37, 36, 42, 46, 75, 50, 62, 95, 116, 114, 132, 104, 131, 134, 
        133, 106, 93, 138, 87, 112, 130, 128, 129, 127, 91, 98, 137, 85, 89, 
        96, 140, 97, 108, 107, 119, 118, 64, 38, 37}], 
       LineBox[{40, 39, 63, 99, 117, 109, 110, 101, 142, 100, 111, 102, 141, 
        103, 92, 125, 126, 90, 86, 113, 88, 139, 105, 94, 135, 136, 122, 123, 
        124, 115, 121, 120, 65, 51, 66, 49, 45, 41, 40}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0sk21wEABeDf35t4hHqU3iAVZUiGUqY0Z8jfPM9UKI2iUKQM0USpTFEo
ig07bfqcY/Gdu7nn3M2NjEo8dDIUBEE3RYRppZdJ5tlgh3+ElA+QRy/XaOUn
CaTSzDotXGWcCd6wN/aEGb7wmW98pZPLLBHLAx5Sw3dOkMJFVrhENpXME00S
7xlhlH7GOM8CMdylhF+U0k4HGWSSxg1mieIU+axSwGmec4YXHOElgwxxmGGO
8pqzvOIcYf5QyB2KWKOYdMr5SxldZFHBHMe4x3EWqSKHAT6QzEfuU80Un5jm
AnVsUssj6vlNA908Jo5lGrlCEz+Ip4dE3vKOSa5zky3aeMotNrhNLs/o4yAR
ob0TBcGu2GadOSbooYVmmmikgXrqqKWGaqqopIJyyiilhOL9L/8HiJt22g==

        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0mlTDVAcwOFzb5uKbJU9shdliawtlspO174U2ixRtFlKpcjoDb5BPofv
JEJa7/XMePHM78x/zpw5Z+bkN7TH2iIhhG+MW3wnGg0hl0LKidFEF4OM8pkx
FiSFsIG1lNFHCgt5yn0auEIj63hDKhc5yDsOcZxMSjnAam5Txx2inOcRj3nI
E1o5xkpeknCvU3qaXbxgzixDixiimGyuk8MN5u2p1mZaaKKQB1SyjC6m7Tuh
S9hCJ1Nm6bqJATaTxTUWs41BtnKS7bylgKVUMeOMbt3BcnbSw6x5jcb1luZy
kxXsYYTdnGEvw5RwjrMEXrGPVeznNREukMRd7lHPGo7wgcNcopaj9JJMjDT6
KSePq7SxiHYuU8EzOnjOejbynny+etMXPvGRATpppJYyCsghQiDhj8aZZ45Z
Zphmir9M8off/GKCn/yI/P/n/wCfkkqm
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl03dbjWEAx/E7p1BmCNllRNZ78RLi77wN2VltKyORskVmIVtGZacyS/bO
+NyXPz7X9/4951znes71nJOVt3RRflIIoZmCRAjLKKeOJtrppZ+05BDGMo1Z
5JNLHuf4yDvGpYTwKL5XH+t47dbnnOYMDbQx02uVupsT5Ngn9Sh3yba36i6G
OQ8niSP2TwY4H9Ppuk17uBXvy27RLg4x1a7QV1xljn1Nn9FJHQfYz0Ume71M
d7Ivfl+7Rvdwngl2se4g4ZxMv3MV30mxG3WiluhffvOHIoLrpTpJm7SaHwy0
B5HKYF64doE056EMYa/dzDznS/qSy8y2r2gtN5hvX9fXHOQmU1wr1zdsjs/S
vq2HuUOWvUV72c4M+54e5xcj7JGMIp23rrUy2jmDMdTb91ng3K59PGCu/VBP
8ZSF9hN9z1ky7Q79wle+8YHPfGJx/AyWxOcXfzvxuZJBarw/v9Ee2mikljJK
KaGYIjaxkQ2sZx2FrGUNq1nFSlawPPH/v/EPXFd1Gg==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl09lSzwEYBuBfB7mFjrsD+54lJoRQUVmSiFIKlZ1CkT0qJUtCka1EWaP+
qCikUriYxtM4eOY9/Wbe94tMz4vPDQuCIMSk8CCYyGKSyaGYShppJ0Q/w0RM
CILf8oFsJMQFurjIR66yix8kcpedlPGdNaRwihFOk8UzntNKPPV08J53dPKB
KnbQRxy3KOIXxVRQyTYySOMQX4glmQMMcZBUnrCZpyznOq94zUve8oYrbKSb
JVSzh5/s5TJJ5LGb9TxmAwUMkk8N1yjkMzHUspQe9rGJ/fSyjBusoIUtNJPO
kfFOOMxNjjLMMbZygj8cp47tnOQrK7nNKvopIZNSvrGaOyTQRjsvyOYsfznD
Pc4xynlyaGAtA1wil0+U08RDHnGfdeM32tUYowzRRxdtNFBBEdkksYhoFrKA
+cwjirnMYTazmMkMpjONqUxhcvj/H/gHm4NuWQ==
        "]]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0/dWDnAAgOFfnBNHyqwQkpk+mdkqe498UTalsssoK6Oyv0+0pMIdcBUu
w15F1i14zvHHcwfvm1VeE61OCCG85m1iCG/4y8BBIaQToZBiKqmjkTjtdPOS
jMEhLGQ+xbQxhonspJso8zjLec4xluM00MhNbtHEAebwmFSq2EIXW9lPLg8Z
yVEirCfOCCYwk3ZymMYa7pPCeC5yiWqmcooapvOAYRyhkE5Wso/J3CGJgyyj
g+XsYS9LWEomZ5hEPk9YwSGyKOA2QzjMUO6yiims5h7JlDGcGGuZwWkuc4V6
rlLOOq5xg+tks5HnbKCCTTxlM7OoZBTNbGM223nEaI6RRgs7mEsRraRzgnHU
UscFFrCbF+ziJCX0UEoei3nGIl5pqocu2ojRQC0VRCkghzQG8Ee3v/nFT/r5
wXf66OUbX/nCZz7xkQ+8513i/w/+ATp0Ve8=
        "]]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl08VWVgEAhdGLa6k/2IKdqGC3YCfYAWKCCQYYgIDd2IrdSXeD7cyBvoO+
Az6D2+Vgj8/kfNEZuSk5YUEQdFASCoJi2vnJb/7QKTwIooglnkSSSSODLHL4
Tj5FDIoIgvnM4RwZvGAfLznCbOoZwBl285k9HCaOGqI4xQ4+sZOrXKGIO/Rl
GDO5yW1uMZ2tVNGHoUyliWlMZiOV9GYIE2lkEuNYTzk9OUQWYymjB3mspp01
ZBJDMRHkspw2VnCQ0byhK9k84CE3iOY6I1nCazozmEU0s5jhXGMEy2hhKUdJ
oJVERnGJyxTShRxCvGUlY1jFO8I5RjdKWEss6yilO/n0ooINjKeAJN6TzAQ2
8ZUUjrOZD2xhCtv5xjZOkMpH0pjBU57xiCc85iTPucd97jKLXVQTyWn6Ucte
4kmnjv6cZSAN7GcurzjABS5ynnks5AsL/m35dgGN5JFNJumkkkQCccQQSRgd
OvrFD9popYVmmmikgXrqqKWGaqqopIJyyigN/e/1L/yfa/U=
        "]]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl1NVWVVEAhtGNhQJ2d3e/gr6B+gTqjQUqdmMX2N0KtoKNkiKpCIhgd3eL
HdPhxeRb/9rnMLjZtB0cNSAyJAiCUD9Sw4IghWIe8oXw8CBoRV/6M4ihRBND
HBtJIInTvGdyRBDsZBspdKwZBJN0Dlvoam/VS5Rwit7ukvUcm+lgT9SLnKCX
fVKf8ZSqdhXGOcewiRC7MpXYYB+jnfNYncU6utjrdTVHaGuP0SzOsoo27kZr
IYn0tJM0kxW0tqP0PHWd6/HJeTkfWcYhWrkfpTOIpbMdp0s4SEt7hE5nEZ3s
xZpHLnvp7m6fZrCAFvZwzSGBbvZuvUIZ17jKMKZxmWxuc50blDOXm+zhDvN4
z3xusZ8efvcBXchd7nGfkXxgKQ94yEwiyaeAw9T3/YY04ILdSCv0C5/5xlca
u/+hP/nOSn5xlD+s4TdrOU57n4/WQDfqIx7zhPFUcx/Kc+cXzGYCRRRzhiae
n9amWqrNtAZhVCeCcJqT6nkt3a41dYfW1jTto+m6i5e84jVTqONZvL7hLe+Y
+u9v8I6UcIlSLlNGOUXkkUkyicSzgVhmMZYhDKQffWhJGBXe2wcUcZFCLnCe
AvLJI5ccsjlHFmfJJIN00sL+/1/4C9DKpTg=
        "]]}, 
      {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl08dSFGEAhdEfEfOACZWlj2DOAiobl65061rxFcScIxgwYwLFHBAFs5gH
MAcEzAgqKmBGPV0uTn11p6eruqd7Bk6fNSU7IYQQZ3AshEFkMY2Z5JBHEeVU
UkcTbbSTmBzCZDqTzkFe85JfVPKTKn7zgGK6p4SwUuu4Qap9U++zjn3sp5Ar
dHV8ueaxhxR7r+7iPF3sZZpLAcn2Tt3Omej67KW6lq3E7G2azyk62ot0Na18
5gtNtLCJJN9ZrI85Ti/7hN5jAwn2fH3IYXraR/Quh/jDHJr5wEdy+MRc/nKU
9RwjOH+ePmIBHeyTupESEu2F+oQldLJLdTPvaWMNX3nKab7xg+9soZx+zivT
Gs7S2z6nO7hIf/uCPuMSfezLupurDLArtJZr9LWvaxG3SbNvaT3PidPNZyv0
BavoYVfrAdq5QwPvaOQVb3lDRvS8yYzuOfpdonfLu9hKI7XEKaOQXGYzg6lM
YiITyCSDdMYzjrGMYTSjGMkIhjOMoQyJ/f/P/APlk4P1
        "]]}, 
      {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl01lTDlAcBvBTqMu4pSKU3XfgI5jhA7jjglEkS5FdSGXf15J9X8qSfXsT
2dMiFMquEGX5vePiN8/8zzNzbs7/pIyfPGZSTAghQp+EEHozktGMYyI5FFFC
OZXU0Uo7XcT2DCGOROaxix3coJ1cFrONDrazhcu0MZdFbOIHm9nAeb4yh4Ws
4zvrWcMZvpDDAlbxjdWs5DifmcV8jtLJMVbQQD7Pmc0DXtHES17TTBXL+EAW
1eznFwe4w1JamcZd9vCTUiop4Q3p1PGMWqZQTwZv2csS9tHCVO6RyTsOksch
3jOd+8zgI4dZzhE+MZOHZPOCAhop5CSxvUI4IR9xii5OU0Q53fRl8jFn+c05
1lJBd/0F+YSL/OESG7lKD/0V+ZRr/OU6W7lFnP6mrOE2wRyROykmxrxbJhEf
vS96Fn1He9dGC7VEKKOYQrKZwFhGMYLhDGMoQxjMINJIZSAD6E8K/ehLMkkk
Jvz/J/8AXYOJHg==
        "]]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1FVXVGEAhtFBRUIF6bKwu7sVu8XuLlCx60L/g/4FvbMVuxU7we4ObAUT
1D3Li83zfufMmllzFpA+PSdzYUggEIjyIzwmEAgjjWZkMIZs1rGBTeSSRwGP
eEsxpYTGBgIViGYucWRRSP84r9UBmsQbe4Ee1/o6gYn045VrffVl8P10Pkft
MzxnkfMLfUIdO4yVhJPIY9fn6SGtpeMYTx8eutZbH2gZncsB+zT3yHG+r7f5
w2znfZqg8dyyZ+lera6/dZmWaDNtynW7p+ZqHvl0dy7QHnpFvzHd3hV8ThrL
ZXua7tQ0/apLtEibaGMu2F10u57iPB2dO9OJs84fmWxv1ZPE2B90km7R9tqW
dmx27qDbdIp+0hRN5rO9WL/oOYbawxjEEAaTynAy6cZFr+uql7SYqfYOraK7
dYZ+16tUtX/oUv2p1xht/9IROoqRVGMMY+nFDfcz9KaWMtPeozV0v87Rv3qH
dDvAckK461o5XU1ZahLKCsrzyP3m2oKWHHSurYeDv8sawVM7UrM5YtfVZ1pJ
11CRekSximheu99KW9OGY84N9IQu1Mq8swfqe22ojYLPwI4PPg9iiQp+dvA7
UOJvrohCHpLPKXazkfWsJYvR9KQpqaSQTBKJJBBPHLHEUJlooqhERSoQSUTM
//8Z/wCPYY2a
        "]]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl01dfzQEAxvG/m7LXKaOsyC57KytEmaFslV0UZZTOOe29bNmUvd3wHngP
XHkDvAFfHxff++fi+SUVluaU9AuC4BfhUBBU0U0fX/nOT/4QGxcEiaSSTjZ5
FFBMOZVE6GFsfBCksYJCHjOGCSyjj+Us4RCPGM14FtHLYi5ziX28YT9FLOA+
cVxgD6/J5TTz6GEEZeTwil1ECJNKI8MYRwp1NFDPLLZym6EkMoOnzGQam7jF
EBJI5glTSeIs63nOBk4xiesMpJg1PGMtJ1lNN7HUEKWaGGrpz1XWMZEMrjGA
MwziBhuZTCY3GUwJU8jiA5spJZsXbGE62/nINs6xg5fsZDbtdNBCG62cp5Mu
mplDE3PZzR2GU85I7pLHfPZyjxAXiecBB1jIQR4yigoqOcInDnOFfN5SwFKO
8ZmjVHGcd5xgJat4T/q/LT4bJUwFZRSRTy5ZpJFCAjH81sUPvvGFXrropIN2
2milhWaaaKSBeuqopYZqokRC/3v8CzmWbjs=
        "]]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl09VWFQEAhtEBu/OAt96p76DPoD4C2AEqdivYCXaBHWDS3WViknYX2GLr
Znmx17f+qYs5Z4ZGxY6NCQuCoJ2MUBCkU00zbYRHBEEEIxjFGKKZTQJJpJBG
NiXUMiwyCK7rFb3EN77Tzk9+UMBeeg7xPL1IOpF2huazhx72LK3lK294y2t2
cJZurpmhS9hGP3u7JnGGrnaMLmIrfe1E3cxputjTdCEb6WNv0vWcorM9VRew
lt72Ol3NCcLtyTqfPFYR5tgkLeMYg+3jmksCgT1BSznCIPuo5rCSv4yjhBQG
OH9Qs1nOH6Ip5gD9nU/WLPbxiyh+s58iCvnIDW7yhMcs6/i9OMRAzzmsK7jF
be4wnqfEU08D85hIOVPo5N6TWkkFn3jOC56xhpekEnJtmm6gkSaamc4rttDC
XRYTSxUz6e7ec1pDNZ/5Qhs7aWUX7zhPhOsv6G7ucZ8HxPGeDzzkEUuZw2Xm
0su9mXqNq9R1HOt4j/7fDTTSRDMt1FNHDcVkkUoyicQTRxSjGclwQoTR6rtr
oopKKiinjFJKKKaIQgrIJ49ccsgmi8zQ/+/6H3z4rp4=
        "]]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl01VXFGEcwOHB7o5lWWLJJewEA0wETMBuEMECu+BaL/U76HfQ76BXdoHd
KNgtPnO8eM7v/77zztmzc2bidS3VzUlBEHSSHAmCCEWUUUsTbZznIpe5Sgfd
kfCmIBhGjARTKWEhy6ignrM84RW9okGwmt6socdeuh7kkTlPc/lrbtGHOlNj
nCKVMkpZThXtzrzkd/i71pVU8NN6vB7ggfkF3zli/UOn6GRGc4Ix5PDVtb16
VyfqJpZSzhI+h/9b93Db/IyPHLb+pF0UmgdxjMFk897+br2h+dqfowxgLnN4
Gz4/vaZP6WOupi81vLa3QN/oeu1HLetYS4INbGQxnc4t0nc6UBu4bi7Qm9qo
Q+g2D9UmbpmL9IOO0FaGM4GRHGcUX1yfp/N5br7DJPM93adj+WYep/u5H74j
Oo1k2ogwnSgnSeGXc9t0O5vZyhZmsIOVrGIFf5xN02Y6zLP0sR7SDAJmE+c0
mSSxiyx2Uk8dxZRwxv0NVFJFefjMKQ7fmfAdJSV8XvT4Drpo5wqXuMA5Wmmk
hlIKKSCfBHnkkkM2WWQSJ4N00kglRgrRyP9v9R9BQXcb
        "]]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0sk6FWAAgOHfrm7BsOgOsm6SUJoMRTQpigZDJJqcY56dQ0VKaCANNFJs
LLIrKl1B3UPte5/H4r2C79tSWpNfnRBCWCaSGEITQ0yzxBp/+MfmpBBSSCWT
YqqIEmeSOZZY4RurrPGdU8khvOU0nXRwj7tkcoATDHKHIYqpY5YM9nOMNxRR
QDWvSCeb6xzlJbtp4hLzXKaRfJ6zk1tU8JELtNNGP31sZx+5dNNLD4cpZYpt
7OUM7zjLQbo4xDneU8YNzvOBcnIY4xGjPOQBNxknRpwB8rjINDu4zS5mqOQI
VbwgjQh7eE0NzUS5wgK1FFLPZ67SwjU+0cBxnvCUCR4zSSvPGOE+w5ykhDmy
+KH7T9b5xVe+sMgsE8SIUEkRGWwlmU389d5vVllkikHixBignz566aGbLjrp
oJ02WmmhmWjixvP/AQLLdx4=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl00lXDXAAxuG/BbU31y3HJ4jPwGHfJmtbTvamMs+FBiFzhcxjt3ke7i0Z
kyJlTJlVZDwex+L5AO85v3f+8lXpmVNCCN1URkKI0sUQ4ySmhBBhAYtZxkqy
yaeMKHH6GWWSaakhzGAms5jNHOaSxlK2sIuDvOEQlUQZY5xhDvCaQs7wk020
0UoLzxhiIzvJY5B8rnONEn5TSjNN7OUJWezgArlMsp5LvKePfnrZwyOO8Yvj
1FPHfe6xhm0cZoRibtPNLbqI08lWVnOHuxxllCO85SLv6OEhD9jNCb6xlsfk
0EAj21nHZbL5zkmucoUPnOIp+xhgP2X8YAM3uMlpPvKZT1TwhRe85DkFvOIs
fyiniHY6iLGZKqo5zwTn+EoNtSxhIUkkEyGFVOYxnan/dmtshD5iVFBKHlms
IINFpJFMAmOaHqSTODE6aKeNVlpopolGGqinjlpqqKYq8v8zfwGOVKEi
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0sdSk1EAhuETeu8oKhICCriXDS51LSMXYAkI4kJ2upYl3AN4DXIB9KZg
BURQFAsWFFBRxAI+/7h45s13MvknyZxEsqvlWiyEMECIh7BfFUKp1nOKZlq5
QS/9DDDJMpukVIdQxnEaOUMLF7jIJW5yiwlmeRV9JhHCAcp5Ya9T6/W4zvCc
BntFl/lIjT2md3lKvb2ki3wgYY/qHRaos5/oPO+ptkd0msfRd7bn9BHviNvD
OsUDjtkP9T5rVNlDOskm9zjqbFC/8IYT9lv9zAbf+MoWB723oz/Z5gffqXD+
S3+zy1/+cMj5vgbd0xSNcZg00kklkwyOkE0OWeSRSyUFFJLPM88q0k9aoi+1
WFe1VF9rN0laaeMy7XRwhU6ucp5znOZk9J9FzyAW/X73Y4kJbtNHD9dJcpYm
6iihmCIKKSCfPHLJIZssMskgnTRSo3tILP7/Hv8DlOFrIQ==
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0UkuJHAUB+B/SbhD25Xe0VWmps0JN1AJB5CQsGCLhBs0fQVDm8cFd2Bt
pso860FpM939icWXX17yW7y8F23qSLRHQgid5EVDyKWGBC1008cgiyyTIk1W
TgjZxKmjkTZ6+cYgQwzznRFGGWOcXf6xxyUpXljnB0888Mg9OxzzzCpbHBI+
hnAk/3DDNWlWuOWOUyJ6J/KKMzLM5zLJL36zzRo/2eCVC/Y54C+bTDDJFNPM
MMsc8wzQTw+tNFBLjA9kvu3phkmWWGCAr3TRTD3VVFFJBeWU8YVSSvhMMUUU
UkA+cWJ8ir7/9j8n4VnT
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0kk31WEAx/FHuGbXPKQBV5v0ElQvoFastLSgpIuWbLPlHbSoF9Cx0apR
oyGUKBmSlAYikSj1uafF53yf33/xnPM/56lqaq+PJ4UQ+kmJhZBMKbWcpoEW
uunjOjcZZoFN0mpCOMgJTnKWc7Rwngtc4SqPGOcd0WMh5JPHov2Zo84PdYwF
auy3Os8njtgP9BmzxOw5fcNHDtn3dZTXVNsz+ooPVNh3dZgpquxpfcly4j/s
2/qUF1Tak/qcYucSvjmvs8FjCn1b0jXeU2RP6A57/GKX72zyhFv85g8/2GKI
O+zzl21+MsI9vjDIYfev6CpfKbWTOEAghWTKiJBGKhmkU04W2WSSSw4F3HBf
D61cpI1LxGmng04u00wjZ6ijlnIiiX/1LuYZYoBr9NJFM/Wc4jglFFNEIQXk
k0eUXHLIJotMMkhPvD0ipMb+v99/BUZvdg==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0FsyggEcxuF/e2ABLr5PIckpZtiBZtQKMLrVTWbYATPsQDPKoXLogCVo
D9lD7cFjXDz3v/ddOKlXzzIRUSZNIhJ2KXPMOdc0GTHmhxmZNGKeHPtUqHHJ
LS3aPPDIE8906NLjhVfeeKfPgCEjPvjki3tuuOCUQ/bIMpf+DYiY6prwzZA7
rmhwxAE7lNhmi002WKfIGgVWybPCMkvkyLKY/P/1CxJ/LqM=
        "]]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0D0uAwAcxuF/E5L2BiQMltZAQn0r+rlaGi5gYtELtHeoO9QR0PooSmmT
ugEJNyCp3ZMYnvmX9507qlVPExGxz2U64oIhH/wwmYmYZpEih5zQ4IxzOrzx
xS+p+YhZlsmywiprrLPBJltsk2OHXfbIU6BIiTIVlpghyVjnkxFtWjSpc8wB
BRaYYoJve94Z8MoLfZ55oscjD9zT5Y5bbrimQ5ur9P9ffx49M2c=
        "]]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl0LtNQmEAgNGfXneQ7tLrCCJXQOUqPhJorAF1A010A01gA01gA0wQnwjo
BR1Bd9DOk1ic/suXPTxKWpkQQpl8FMIqBzQ544obbpnxzS+LuRCyrBBT54QL
OvS4Y8g9DzzyxDMvjHhlzIQpb7yTMmPOB58M6NLmnGNqFFhmiQV+9H2R0uea
S05psM8eu1TZYZuECltsskGZEkXWiSmwFv3/+gMFnTcs
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.5, 1.5}, {0.01, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89246338778938*^9, 3.892475962788692*^9, 
  3.892519593939543*^9, 3.892519646398066*^9, 3.89251970625309*^9, 
  3.892519859890965*^9, 3.892520089633013*^9, 3.892530742171262*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a43ca46c-8b5c-4999-a5e3-6e0a75ecf275"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 14, 13 DataRegions", "Subsection",
 CellChangeTimes->{{3.889463297602539*^9, 3.889463303822102*^9}, {
  3.889464437752005*^9, 3.8894644538021717`*^9}, {3.892272458655945*^9, 
  3.892272459359953*^9}, {3.8923980624670343`*^9, 3.892398062965094*^9}, {
  3.892518219183908*^9, 3.892518248691106*^9}, {3.892520037928198*^9, 
  3.892520057780779*^9}},ExpressionUUID->"fa13ef44-6239-4d5f-a712-\
65f88cd56462"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RCndsM13", "[", 
    RowBox[{"baseMean_", ",", " ", "baseSigma_", ",", 
     RowBox[{"{", 
      RowBox[{"pShipSigmas_", ",", " ", "pStopSigmas_", ",", "others___"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "sigmaMul", "}"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"sigmaMul", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"PIndex", "[", 
          RowBox[{
          "baseMean", ",", " ", "baseSigma", ",", " ", "pStopSigmas"}], "]"}],
          "/", "pStopSigmas"}], "/", " ", "baseSigma"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RCndsM12", "[", 
       RowBox[{"baseMean", ",", " ", "baseSigma", ",", 
        RowBox[{"{", 
         RowBox[{"pShipSigmas", ",", " ", "pStopSigmas", ",", "sigmaMul"}], 
         "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892520002269681*^9, 3.8925200322361507`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"8c076681-fcb3-4e04-accd-4a49bfb8b6fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RCndsM14", "[", 
    RowBox[{"baseMean_", ",", " ", "baseSigma_", ",", 
     RowBox[{"{", 
      RowBox[{"pStopSigmas_", ",", " ", "pA_", ",", "others___"}], "}"}]}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaMul", ",", " ", "pShipSigmas"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pShipSigmas", " ", "=", " ", 
       RowBox[{"pStopSigmas", " ", "+", " ", "pA"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"sigmaMul", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"PIndex", "[", 
          RowBox[{
          "baseMean", ",", " ", "baseSigma", ",", " ", "pStopSigmas"}], "]"}],
          "/", "pStopSigmas"}], "/", " ", "baseSigma"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RCndsM12", "[", 
       RowBox[{"baseMean", ",", " ", "baseSigma", ",", 
        RowBox[{"{", 
         RowBox[{"pShipSigmas", ",", " ", "pStopSigmas", ",", "sigmaMul"}], 
         "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8894516015997972`*^9, 3.889451707470255*^9}, {
   3.889451745784664*^9, 3.8894518040441427`*^9}, {3.889451835185034*^9, 
   3.8894518413784533`*^9}, {3.889463362082859*^9, 3.889463669379313*^9}, 
   3.889463797710271*^9, {3.8894639262231073`*^9, 3.889463926937849*^9}, {
   3.889464011977312*^9, 3.889464018122746*^9}, {3.889464100573876*^9, 
   3.889464105512054*^9}, {3.892272562732802*^9, 3.892272574314699*^9}, {
   3.892273261962988*^9, 3.892273276095542*^9}, {3.892398066466235*^9, 
   3.89239806692039*^9}, {3.892445236035304*^9, 3.892445237220508*^9}, {
   3.89251923762576*^9, 3.892519411547717*^9}, {3.892519727314308*^9, 
   3.892519791463829*^9}, {3.892519937447361*^9, 3.892519976013912*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"eb3e0a7f-70f5-4c96-b38f-8dbaff4603fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs14", ",", " ", "rs14"}], "}"}], "=", 
   RowBox[{"DataRegions", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<m\>\"", "]"}], "==", "14"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "==", "32"}]}], "&"}], ",", 
     " ", "RCndsM14"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889463810909971*^9, 3.889463849817318*^9}, {
  3.889463942922558*^9, 3.889463944979388*^9}, {3.892272582796894*^9, 
  3.892272621095049*^9}, {3.892273284117131*^9, 3.8922732950393057`*^9}, {
  3.892398074974516*^9, 3.892398080629643*^9}, {3.892519209519765*^9, 
  3.892519224734385*^9}, {3.892519421224922*^9, 3.8925194217730207`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"355741b6-61ea-40ec-aba2-5fa6cb034e20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs14", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8894639367070627`*^9, 3.889464034722911*^9}, {
  3.892273325731839*^9, 3.892273331963327*^9}, {3.8923982673581247`*^9, 
  3.892398267740696*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"1cfaf6c4-f4b4-4626-9252-561875a44a0a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzsvXlcTl3bPh43ISUSkqmMoXBHhsSJTBmSKW5DkiQyJESmCElkTEiGFDKV
SJK0k6RCKjTPXY1Xw9XVJEN9r9d1H3v/nt3X536f53l/3/d53jf/+Byftfa6
1jrXWuc61nmce6dutmXB2pYyMjLf+8vI/Mf/G05e+dzYWMcMrx4VK9x9mP7E
xMPMLE3/6RE3AtlyYB+FFkc9Q2rZ529LMf95iovZGaaufYfaGs7zNTKpoxQn
23MlV/zZ9lHeTlrOoBz109u0Dkg3usqW8zGenx7TTtFVhvv9/ptldum5c/1F
f1RXnTd8ev052aYt84uLrGWe3fZaOO20D52or2ocVlLLWJ5/YtVL9j7KCeV/
ts+OF+N3GOIQKn/qNjt+4PS23Z8/eVnHHPBaeTP8TBAwAWP86E/4x6gQnfe1
rL3+7A+hP6ZtFzcOm1pHsv1ip5zb9AiYAXZzHy2v7M7NF+xzWNboWOzjx6w9
gZ1fPBAbvK9l7efsa7rKxqCWEpWM9aOcL9IJKWaA+eul4IT5WH27GhabHR96
2VEsZrGpFLPzIZDWb7I+frXe0D4wnv/VesTzbTLeH+uy/DX7PDCeB8bzPMwU
99MXRZl/YMuB+8tHFQt0qll79ZVidr6wHnYdaDuhYlUMux6AYR/UR3voP+zF
bx/lr97aheu4VrH746UUN9lP8boigXtVHDXOytiWZMTZv8Xsn7jJfkd9YPQX
62VEws2uK3LfsRj2wPjcxp1LHG8cxtoXGPYAxnwAH5nTtZNrUjXz/IOw/srt
53RIigkY40F/sJ7RH2D0B7+H+Zzx/tEqsWotEzbMao1Dxhu2vyifLi0nfjns
Dwz7oz76t3F4ty/RIVXs/NkMOlMosOXWF8ZbbTx12hRLbv0BO6yQ1Xu1oYqR
2do2d2bhIxp7bby3cGsNaatsXFo84TWd9u9hvWRrNfPpkFpfxU+hdFKKCXh3
P8NV4oXcevNZPj3Zfn8thS7SiH9v/Ja1X+fJIYra8gns+mvb4+i8aYK7ZDly
2YGQrKbr8WmvgZcWqodQUPXsu8KW3PrB+sTzFtLnWXttkNqDtRfWL9oL1Bno
KRzBzdcuaf/Z9XZX2n8G/bdtU9lmuLmY8dn18qhcyWXyMdVZ6vJUzHSL+CJK
crpJ26XlhPLRoxpfPXkqJsvVCSuXHb9JB6T2JdjXQ/Z3b+HOGmbR7J7+G0xf
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
6ddi9Ymy4DSKTPa+ZaUcQRNMnRW+TU4i013HGJ2Jn+n9qO8pE56nsee1j+uQ
sWaLM+id75QXOk6J7PltVLztgdW4bCZ1w3pNFdVskr88pyF6bDYdvtpqt6Uq
d35v9HVbu8gvmzRHJP9u4sKd53udT7t4ts6js9lHJ70fm0PVbRWPeCZyes2u
jvcPeV4rouSYsFubd+SR2cqh56x6VDDVrQcNGNi+gHanq6yzKalklMZ+T+pY
Xki7z/UerN+HO99t3d7YeY4rJ7Un9fIdH+WTT/CgOT7FlaQ3TsY9pZzTJ997
xdwQhRWRWuCQifqjuPO97TbRe/en1cxhp3XdnIeU0K19OjN8AqvJod84mT1D
ufN9/KeHV/Vfl5BD38hCwVLuvDfdkdRBuVctnV4bEpllIOT4avyPB3ejS9nz
Xtd8qp7i/DQ68PWOlonwFcsHNksxe/7vHfeivd+EuCbnf9fXHUc9+YPTIxes
ubDZyziDInbclPE7ksjuNyfD9IXi2HR2v4EfhJ7bt6F2WRad9tiW1ujP5Y+A
j3lFHsvb58/lk7zs8l6mRjKfFtPM+tsdb5pfUqcVtr/3oxzqOuiQvefXEtZf
wX92qtuSFfckj8o/bI1S/dRU3+l4dnLUy0COv104ntT/TWghbV92cGNIT46v
zQnZPdLkuqgpHwl5oab6iuMjfW4lDHQIL6IVbwNGmGhz/OTkQYfWfhFVLD8B
X1kS+tr7XkQxlZb7OqoLa5ucXyueyY04+EbI8plxcousB7wpoeunQ1r6GXP8
Bufb4cXZqbrRQsq2n63sKpvHKHXu826RZL2b256wEI/LZVbI+H+8UpBN6a3X
ybleL2KW/ViiXbs9j8I2nD0v27uWORtTklE+U0hXDXtUGzTUMIFbP8xzHC6k
A24BedEzPtAywWn3CIl/0F3SKVOQlErFQS3XtfmSQZu79tsT8jGfmfX8k9UZ
41yaujsuQmdyLjkkDDYaV5JNbdUtq6MT8inKaUJ2uyW5tMFj4taQTULm7E2F
BO1zkvtUY4WS3UYhFclP3fRRgsXhRw7rHRLRsLq9H7fHSe4rj6I7KxtV0aw9
h0wnKhRT29ENUe6H65h3Ntf3DV1XSn3dJjupt6mlRSrR7wzHCqnrJrtE+0N1
dPU2uUy1LKXttbOPqAc05T9n23jan3hbSmfNp1wX+nN8SG+rj9ggrpYuyjYM
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
tg/s6/wqj6rbB31uFBUyqi3dlKa+yCO1SZMKohPLGN+YZfsH5eWTKeXdEI6q
ZTJ9bPNGaAvJRk/ew0o5hhl8+VQf8+hUCu0wca/npxByUXTs1O1uMgVdPTBT
49sr2lSb//rggxTKvvZigkbnGPoYO2RTgKR+cKD3XIXHyUxg95TEq22zSFvV
uCLaP5naH1S0oXZZpNJ+YVs/zVza/niGmYt3DjVcWirrWlrCyFk5xS39KKDa
Cs0o1W+FFKpnUDozPI90/XK/+JaUkJzssmcGnwSkVtU5z95UxCwYoqVZKy4g
zSGnROarRNR/1bvxitUFtLvMbKGLTQ3T4CU3NMhbst++3ze3MaiiyUETQz91
lvjLiQqDMu/UMcY3ugYNmlJKvdN7Mk/2SO6/+6/VxD0ooXex1StsfOrok9z8
Lmf0Wb2M2bv2mHbIgVLq8CFLtb6sllQ6tLh3/rmQprcTySv/XtdEH7NdJFfp
oVDK8s0Dp+fcUW6XyPLHugz560bO2fT1N7XWrlfSmPCKct++8hxfnD1Nf3yl
pHxE97t1vpfTaMqLJf0uy3N80N90q7isoJDEp3TX2zwRMX0d17cvGVFI2WKN
AfWqlUyHQfvcKndzfNDPTTniQ1EhTQ0LWO4SIqKLp10yvowppPLB3tqZ3Ssp
d3nPW3J7Cyn4qdE0jejPzAS1cS19vmTQ4VuCw57lTd+HWj/h7btN8zNZvtXp
wf6+qWszSNvT4rHRXu7986u0YUPI7Apmw5u7RX2tCqi2Ju6a7Hzu/go+Of35
hVV7jxSw/Ehl21bnR4qS/Xra1lenuJzlm73pi8C8opa5dDNyrmYwxy/n91qz
UiwnOc+OPTqqvpTjlweWL5vqs4jjl9meXbRMKIKWf3a++OJZCokTW7a3K/7A
fDF1vSWXkkbZV9Yaigs+0NyomMn3JFj0LnWM/pvPpPdcTnixPoN6335bIriR
x2TOXP170dBcCvIL2h6yo5jmtJObZzhHQPsvOTg7ri5lItcl6y5ank9BvvL7
PFeV0uuWd/tNW5FPqYuqVyQZVNAGs73xnTcWkMyljq2Ht65mFhWoi0+6F1OH
ja1qDHbXMHXTqq+tvFtCNhPNj3tOimD8PStmbZL096VS+TIFLX/q3LVAT809
iRpkBHJ+QdmMbvHJQ9175kj4074Tnp55pP3wwjsnyT4zqXK/a7SzmOnfVtbl
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
wP7l2xPl/PdJoQdDH4K+hngN9C3os796vxT6C/RhYOjD0L+gD+P3oA+jHHoV
9FXod+gP9CqUQ/9B/6Avt64XJmybXcXqycCYf6wPlF/wPuyRfJfD2K9/rx77
z77fytdzf6UHQk/j64N8fQ72xHrAfEJfh/2AsX5gT9gbz6M+3x/DnrA/7AkM
e2K/ohz7FfjfXb/m57/w80HwPjHisfz8Gn4+CfI3/vbvwQl4/Cu3yd+Lg//E
+QcMvTlrQWG4lYaI9a98f4vzEO+Xz71tWC8bLWLbRzneD0c5+/2/P/0zzktg
5E88//Zk+I31nP/m+3Ocp8hPGWzUy2KCHLdeUI78EZT/lT7Oz9/B++KYD/AH
2APxbdgLfAD9Rf4IxsPX1zHfWB+wP/Yb7AH7/f+tp/O/18D/ngHW09+uZ06f
Asb+x/xjPJgf2A8Y6wXzhfG2NJ1umZQdxJ63AzLmD9Hf+r6Jfu/a6YWT+m9Z
rP8F9vWprIwew+n3mP99GqMnPN7H6fUJ1e4VZhI8q7HtA52gLOLfh4642lge
kZxbtidfLlbowZ3n2L9ppkmqOpLy8HFzR+ovL2LP8zg3/9VJ7qXseS2ql4vS
2SRiz+MAW/OTni4c/8T60gyx//1UAMdPjfs+klsnwWNvut20elBNfP45TNxr
xi5tMbufli01UjPS5vjNKI2QFasfVtG4u/PyBS8Cmbeu53vesEqh8Efbjnhe
KWQsVvUbsfFrEVlOmbPPc3wp8+XD5OOjA4Rkez7K0GejiDFN1VIYvLmcjquJ
Tnv2PMOscb7j7uefSL9JMQH7TDnQyfVyBHPMqsBo6oB0GrLd4JlOVBTT7ZaF
24DVGeQmLSeU+8x2eaXzJYHdj0vFBgYaxz7SsEmr7rq+y6bw1sZqJjvT2P1o
9urjMceIdHKdNVvzqGMeiVadmqj/LYfls/snzq+JNsxnfl+mVWFzpZCWbg3X
05eR+M3n64/On1RA7vmCd6rz8mlF2KqoWZJy8NvTMn7nluwooonte/S0G8/x
3f6xg8uiS4uZiJjZsyYsKSE1KSZg8N1LG4Whg7cKaaal/SyFPSUs/70buFnB
zrmc0fw85t3wTmUUubJlfrRzORmP33CzTSeO/86WfzVmzqZyGujl5aDnWklh
04wHfY2poNSC9eE6V6pYf2LZLVJJOa+KlDU8F9lOqSSTLh4pjSE17Pk6UTy8
cdgfdczb77sMZAyrSG/Vow7K2rW0wnSEw/JrYjK59CrR/o86qjW71zd5bhXJ
CldHqWY05b8mJ8t1xknWy8CzNdesMpry4QPjpmrva59Co/w+Bqs6X2vCj0el
9Lh3rQ2XH4n6931/1mf9V/aqn/u7yd9jxPOB0v3bJL/Aa2mMzI3GbLouXT9N
8gtQHmcWbCgOzGLPS5zfDyJkNbd/y6Ng6foi/n0J5ThvV5lnervVFZCmb2CZ
4FsOe196lF7Uyq8Hx+fhL5+M0F8yvY7j9+vjVOMsqzh+n/+u8/Q2kvWmK11v
LN8PlfoPlu+D/4d62DuoVHH8f6vekm+6FaUs/68Ya7Q1xVpIjoG36n33lLD3
Afn85I52l0vZ+wDuB2/ahjwoKS8ltw9xgUYu3H0Y94W9PucGKgi5+1f89i/J
ISUVpNrQMlb1QTV7/oIPqHg/+XBhWyV9cflxyfFKFfHvY5utVR1mSMo3dFXt
Uf+utgnfu73tepptpZg81rxy8nxRQ/z7WqH8Rk9dSbmp1D8w8A8bpP6AgT/Q
ixm2VtyYy3xfNMbXTrLflbJyWvudzJP4Y/vOj10LKFX/+y1hbhXTUN3G0lmy
f3oH9R7z6vdaRvvrD59Dkv2hklfqaRUWSOqrv8bOl/jHgM5yC8SJ7xnxjoSE
0VmZ5C3FBCxIPbk+aWAyYzptsdBlcC6lSzEBf1ks/1nVP5uJmjd504E8gcTP
X7tv5Z9N1U+2TV8qwSJrYYngdB4lj+vd7935Asr8o81KscQvnX69uN1UiT8+
XJy1SDy+lPqO3m7eQeKPW60/Gxy3UUTHJ5kWyEj8cXA7Yab9czGzVnzijYKr
iGZmBMzyeS6mPQMGBtSfE9H3fQpblsjVMBfrHNq2qawk1QGe033kaujVyic5
maJKargS6BvXr445vc47dO2wKjp5t1eS/cA66vvbrrbPh1eRo1JiyJPXtdR7
pnq6V62YVM/sNLF5X8vef+RKhB1dK7h8cQ8DnU+Nb6Oo2+Sx9l3NMig9/YqD
59hoOid3N2itQwYtCBpzz2ofd7+/+CGlq7JrJeOW1c+w71sun1ethdeib4qJ
1FPaPnu/KZe2x6A9fG/3oXf3A2FMGRVcfCCIDi5n7zO432xfMtBxuG8ZfU8v
z7XfIWIG9vox6t6ucgqdWfrdQKaSEdxRfPmsZwVZr3rrELKPiy+EvDEXme+U
8OCF12VddpfTnJ6BljYyldSh4xT3M5L6tuK0niZb3rP3Edy3xikGhzkdyaCl
EQaTFR5J7k1yc/64KOkf7k+B7V8mFm4sJ4uGTdeMJOPGfap/4adzVs/LWT6F
+1VMv+Njsx6UUaLzoc/um0Qsv6qdKD/f5XUt066LU8VTyfzEOM89LzuNuz/t
an0v2X4ad396003jsONXhhkqEzp6W1QqfU88l9M4Lp7ZLze7l2ZvybqUYgIO
VpDxN0r+TBk7to35sTuH2vr06muyI5UpUB5zrXdyLk2qnRrfuCOVOu5Zv6s2
KZciM49V+nbOoqkHVj2rGCWgu2sK2/ol5zC7jiz+WnQmn8qT2l1yHCRgfJ1n
j88tL6Bb0nJC+fYww2c6r4uYrufHvPjkU0xffM6lCMzKmL3X+tEbs1JqGHzG
Q1ZDTIETdJb564no7OnkLwbzqpjxCt06TBGKSM38hrnNvCoymvTwq5YET7r6
WDPTtpqEU4Zevnupkj61+uakfrWGsVZSmDd+ppjMkiOqDa7WkOO0W+MHSfCI
OZqDTWwLmOxTk/emzS6iwFFbDRSUhcxMd62G962FtEKoIeva5h7zsiY+4ECH
ZFKRYgK+KbUvwb4OTHILv6TPzCPFySYD9uRQrNQ+DOxTIrUHwR6n1+Wednxd
RJO+rXe7Lxm/stEgf501ZXSrtbHKNcn4sx1+RDwZJGaOJ7U8mCIZ/6OY4rAn
ttVMouJZ31DJ+Maq+YsMyuoodp/OevmbVTSnipHxsy0g+dptix9LxpOQ1krd
RFlI22VMk2625uKxzfkczfkczfkczfkczfkczfkc/875HM3vfzfnezTnezTn
ewBjfPx47b9rPgjGx9eL/1XzRdB/vl7935VPwv69Hp4e/u+ab4L2gdH+P5qP
gvaB8fyv8lXw/N06R+8VetVsOfDf+30BnEf/2fwW+Ou/ynf52+9pC9h4K+Kz
iJci3gqMeCviMVjPwIin/ip/BesNGOWIj/LzWYBRzn7f8s94KOKpwIifIj6P
+QNG/JQX32dU5pSn1qVz8wWM+cD5Az7Anw+UYz7gz3Fe8ueD//4e9i/sDQx7
Y3/BX/DtjXLYE/sF+5lvT5TDXlifWN98e6Ec+QXQh6H3Qw9GPgzid8ifgB4M
fXrb3IXtFEurWL0Z+in0WrQPfRjl0Gfxe8iXQX4L8mOAEe+E3or8GH6+Bj+/
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
sBvGxUNxX3LVynj5dUMBXR9+6JoRU0EfFC9seNqLu//kuq7+3UFyPnx6rtTe
LruCvQ99X93bKiS/nOVfuB/t/GY0qEFRRBYmcye/2iRi+dikEaeWi22CmH3f
jQ7HPE2j3us1Vex2BNHHqCejd0vwCsHWC44dXlPYqqWuA45nUsTCsttWyz4y
3qYehhbdJef1fGuzpGHpTPDKrUeKSwUUK1MQaHQwl7lT3TnPNayQYqSYgENL
Q8bpBwpIbVL+mQ1Diikw+VyIjrCAcTseOGmSawndjdhAGmrFTIekoxVdGoT0
SFpOKD/toTJNwbmM+bppyNyX8eUUfuhigruymKYut+zuIjknhw3U9REOq2KE
78e0OqEnppD635SVh1eRTIt40U4JDtyyZbGLQTWF3BoXZVYpJlWnvRuX7K9l
ejNbnecsl5xXdfunKuS8ZzS7vL122i+bSu3CV4gjkpipStcTOx/KI4+Hk8NV
FwuZw33/uCpcV0Z9lToNzVxTw6zp3u7x6ltVVD6j3zh9hdeM1bmqnB0Se333
VF6isPwjxUbGDpoosVeU1F4Ee4VL7cHAHrek4yeM/77+/Z4mzmXU/9OKgZck
4x31MNbCRlnMDNf4oOkpGa+Gx81ic4NqNl/PZ/n0ZPv9tTRKLLdzrGQ8N+L9
u9dfrKOKC9sM+3WsoSGu728Y5b4n4z0/dllKxieQjo8wvqAlny9ZLRbSQ6fj
O19JxvcwP9VN1ryGds25cW3uLS5e1Zyf0pyf0pyf0pyf0pyf0pyf0pyf8r83
PwX2A4b9mvNX/u/5K7AfX8/735rfAvvw9cr/qfkv/275Lf9q+Sv/7t87+Xvz
S/j5IYiXIr6J+Cgw4qOIVyLe+avvjSD+CYx45r/q90j43x/hvw/Pfx+cr0fx
31/n6098PZuv1/L18n/174fwvycAvRl6/N/7PRHotYg38b8nAr0R7f+//r4I
9Fh+PgX6z3+fH3okxoP9B70R+4+PsV6QXwH9Fxj7FfFK6Bn8fAisN35+BDDW
GzDWG+yJ/qI/yAdBf4DRH6x/lGP9A/Pzw4DBn5Avge8T8PPHgFEf+RL874HA
X/HzmaCHI/+Gn4/Gz4dCPhDyc/j5UNCz+d8DgT/k50ch3wf5Pfz8Nn5+FfKP
oK/z86uQL4Ry/vcWcB4AQ9/HesR88f0XzgvkM/H19F99v4Gfz4f8B9ibn7+H
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
+hd2+BfxBP4Fhn+x3xG/hP4Vvi8Z6x/7Teg/2MGP4/fS4KfB34LPF+opoDeA
fmJiebs1I7uVcfwv+Fjw6fh+Id8L/hbXw/Nl8P/gm4GhF8B4oM+APgJ6DGDo
LzBe6C3w/gjoK4Chp8B8sN+xnqCXqGvJTAwK5DHiAdYz+AzEV2DoP6C/wHpV
q8NGd2/DxyNg6Dm6nFdkbnAp/67/AvyN9Yr9hesh3gNDnwJ9CDDGg/HBjv2F
8SB+AkOPcn/sXr/052UcxngxftgRT+FP6FPgT2D4E9eHHf4Cxn7F+sH6gj+w
voTnA6wfrCfsx392v4h/tZ4D8QXxHfUbMPQ30CshPgnzAeoz6K2gZ8L3ww69
FOxYn6gfoMeC/gj7B3booWBH/EK+QHwDxn7G+2KwfpDPoe86pbJp0bwhv55g
hz4K9j/Sr6Aehn+gh+Let/0tHmN8yGfAiEcYr1D/gvsBfRnmJ/SX8H1PyAfw
n/B9I8gHwFw++DZ/7Ne/VU8j1FsK9YVYD5iP8H1TwLj/iMeY774RN32dory/
61cRP7J7zweO6bR28PNP0X0efaf3hz30clFd17KXXL4vr71bV5Ka/J0+Z+/J
2kN6RuWS0ZDjR53C0rh8j/3a5/kF962sfU7tz0MsJmZy+T4gMXWSLpNNwvPS
sKL0MV6dSmi7Wb1Iw558vsf+KzTaeFzB2vVtmri7ecm5fJ8QotvJVYevzxHP
NxrN6rLHQsXrLUM7T7rBYoPIRnUCH5Ry9fO8xKaFsnUqrh64mt7iuWEvvt5F
PJ8WE91rmIrPP10djk93ZPGWyi2zpSn3mfWRI87fH5NB+s5elUfGvWSST95Z
0HOUjOrOVve0b5DJDPVNnjrxPpuPP/u5u42RM+Q7t9+4U6X06fyXtC3mKmZV
7+UBb6ay1zftKa1q+ZQx7rlZq+JpJh3TYAJGfbx9r+MsLwMZ7f+1H0I8E17U
58oXnWwy752zShoaT3mTF25NYnG5VsZ8ZVgi2Z4NLzkckU2H2h+Mrxr3hquP
l/1k0MlVK53xHHZW2ZTY+mHgT/vc5KkUsqzX7ZoP82i8786JJlrptPDN4hZD
ia+XB6UNX6y3jj0/bzlpIDmWztXPW8+4LZdezGKaSWxmjsyW0yCr2Y9ML2aR
85ww3TKZnLY/MZuvbCGjCP+09zcGF5FZj9oy2dpcrn5eddRhunJIAbPRxH65
YaqCbqer14T1yqNDw0wSG7Vi72Nx3FbvIQW0qCxiZ/dU/vy67oTH4AdOpRQ7
puFV67wCrr52r7NX4jS1mGk+uzJ30QwlHYtf4er9czEzIW6aOmiOktw0doJ9
DdPQQCJTcPGn68kGMzzMlMzZTUlf7h9Tk72nUdKpfqX0NKr/OG+pijpr7AQ7
4tcU80/D17UsowexTT5Fn+Hr80ifgnkrLNXM+FzdORX67Pqa5tr13XE143rR
0UpqVU4RGjvB7nIg8KibLl+/j70ea+2RX/5d/k9QO/Tp/r6C5gRHOttMKaev
1qMf9zzCx+8rB3rbTmPtvvXXZ8su3/5OD7ql+sklKcMyaY/Gzp3PFmjiBQnP
B/h8pSY+fKc/cms0YIKjgj+vASM/95u6Yr2lVz7t0axH7nxmoIknJDw/4PML
NeuNi5/KdjW0AplsLt/ifGG2oJFtykT+/AaM/Lwu6bLF2y0KKk9/39dibS53
XtusiT8kPG/g8zhvrLdb3eeSjZI7b2D9RWnWH5dv9DTxiss3OI9YlZvbxrL/
b6iJR9z5H/l/s2zED8491LRKsx5JeB6ctLnxWAlrR/6cop050K52OZfvsf7C
NeuPy2dzNPGOy2fIJ529AufsZP/fKrdluKkufz4cc7hfY9dX95hDhu0npBhm
0NXd6waZFKUymcnzD759kEcRdh41JNveMgUPRlZvV5FHb3bvsdLtncf4rHzI
fG2poPVZQXUk2vnMnZwJT71+Zut8zf5hsH/madYrg/U6UxNPCfG0o+b6hOtr
aeIrIb6ucn5gbP9KyvRd0rnrRfNc6trm5NqwJCnp1P4w6RmLBz0Yetl661sa
5uF7M648j3LuzJmh2yCT9Edc2riWjcfD1vuNMDHOYc5tGtPq0d1iapVosETa
MYdWNW9uUcDifkfZrFsrnzLHb/Vax45fronfhPgt2dd74tWeCqa4yemTOw1U
5KnBBJwy++Qqm5xSRnZ3drsnNmoyzh7c6102ew6d3CV3D4s/aOI/If5L/FNy
HazKmA5nfBvpJ5WTpwYTcLUX013NpOX0vlF0x2hlBYVKtbId8su585VL0eYx
Jk6JXD029CedJpL7icyuGqVRP7Px31e/qq1rbf75ho9z3CALQxk7fr27e9h4
PN2huXPY9GKu3pi0Y1xMlWMxreu397k7Gy8jzPz9TWeWUEXbrWOr3VVSzTfN
31ZNUXPnsb5vW+Y7HFdTqFlf/dNsPJv3YONSm2dq6nr14KODq8rppaY++a4f
ybkN97cq2qWR9Q/Uzl7lyxy522ydzvH3VF+DCfic1sPBJn2eMXm/bHvaaXcW
TW9/O7GqSfR3+upjH1pMuto1i3aeOdHL/pd45kTLe53nsvXXQo1/uPPERo2d
YPfbaTbMQieDmfTI686oygLuvD1+vMreYH8BWXoajDXRz2K0ur4x3LpRTgsj
pcuk2vzzoBEaO8Fup/End77Myxq2y21mCaM7uUV/eYiSjLddv2k9Vc2dF9VH
RqVueaZmzFNNAjew/jrk3T7bQcqeL0fMa3yLvd+froxL2bKBP+85Jm1zttnA
n/cOaPxD8A/Of87TXi4LZuuFFLPw4047Y7nz4CiN/77T68N/i20iZ0rVL7/T
37sY3nE8UTObrmr8RfAXzo8dfa9u6sDWBzpup+sEruDPk3he0T7nwa5hrD/9
9p/9FG2VKXh+n0kdXQ6t1nGQ05kLSjsPHf55LM7jJZdaDfR6zq6/c1EuNr34
55U4X8dY7aXpm9j90+Xh66ort5j97xpUv+WeTn1jrfUlNR4zgywtHYp1MmmZ
xk6wB92xHmkS/Yosd6k9Tu3IoeIEnRnK9NdMWXG30sTqedSh+IFz2Ic0xmf6
oim6W/MpR2Mn2NPPqyfrGmVT0NEmm+9+KqKN/nGzlF1ymTlV4zOU60qo2T2/
RdL++czuvhbtj21Q0DqNnWC3SnbY4D2xiOl3buOulx9L6cG6A09v3VQw2bVv
5+mwcbv75YiZHjcVFJfU6ksrFn+5HpS+hc0rPnvv+g/sz8Zxj+nTPJ6oGCfj
/V/tb5XRo1N956yIL2NaHnoy50SfCur9dLF6THwZac/qusqPxUFRe5aHWRQy
9vnvE4MGlZKd2+L4U4ySkSwvGWderqb2Gn8R/BWq8Q8D/7TS+IPgD5lm/gzm
31gzX8J8x2rmR5jfgS0bx1+9W8qEhU061ZEd/7G7Bwocnqhoqkqpt5Idf4Bm
fITxxQR5LVjBKGnL0Gmzp5Xzz79F/ZyonxP1c6J+TtTPifo5UT8n6udE/ZzY
D0bsByPq70T93X+X/k7U1/259XX/aP3c36qPE+rf/tH9dhD//l79mVBvJtQX
CPn039Ofwf5HerTf05/heaVQr/NHfL1QfwB+CvwD7p+QXxe8X557Hor7BSzU
lyG/CP39/6s3E+p3hf6EHf4Q6jeF/oAd/hDqM39PbwD9Cn4vLNSbQV8ifF8P
9BLQc0CvBX0G9C7QUwAL9WXQL+D6Qr0Z9BzQKwj1Z0J9BvQNGC+e1wr1ZRg/
9FGwQ/8E/QX0GJgf9GawC/v1YLxCfQ/Gg/HCjvHifov9dH6rv0L8QHxBfgOG
3hD9mhB/hPEI+Qz6SegT8f2wQ68Iu1Dfg3wGDL0e9I2Ib8J4h3wGvRX0QH+k
FxLqc7D/gaFHgn7wj/oBCfVsf6SvQn0Bf0LvCX8j32O+4E/gD8QvjBfxHBj6
K4z/j/oR4X5Dzwb/437BH/DfP7t/kbBfnbA/G9YTxivsVyfsz4b7j/kI+9UJ
+7MhnmG+k2uM3evW2P+7fkoPM0dGXLbi+yk5NctoVM7iTyq7UNOuUd/1U3oS
GuU52Cqbiw9Li+en72NxY+vto032JXHnn4BHHfRcq/P6LIfxZkMs7vF6LOf+
C5XRZfzvVYL6G55y6s7Xp1hfi3UXLxzjw9evzCqv6gUsDms/YqLSsYSE9aWz
6/UJ+sa8vleyPrBhGosfzb7o6xTP6xdjSt3mK0tUXP6E3kX4+4Rl95fWWH25
nGKy1i0PG5/KTFk3r+HNvDyyXB8XYTo8kxlUuKe4waVC2p9q7RqWmsOUV2xU
e84uplZMq7hTG1WMy4fUWVEVKgovsev8LrqMial8Ncd9ahllGnmlVz1+SMEf
RndOXJ5Fh6pfUch+iuP7LW3/EGYalMyUL3esX+qeSx8SrGfoNk8gl1pmPW26
5dDQvvG6kl+SKbZevz4t9uVy+zXac9zc+Al55CP9ZKuMTOHqQasjRq9kue+Z
d7IDheNHFVBkefwa75z3tMeg88Czo/h6MHbxix6LJrDntWlXMqvO8vqqAl+9
tq4HZMyx0u2lcdWLyO3W1BNuHjJqxhQuGKPF14dx5j9VfhlfTPVfmdgpW+Yx
Da432bG9dQld+PwhU6aXR/ILFX1rGZRQTLPk8bom+RT/7L3T8/sl9KV5Ry3J
hCIuXuitm1Zd8qiIRsnzQ66aldL2bVdm6kbwemlf50Jbj+6ldEmZdW/xKT5+
uGTL+76/rCKdtWa3rTP4+tBZarbJ7KKaOf15+uxrPmo6dWvcvBUX1NTzi+0D
3St8fbjsp+6tfDuWUUCTBXmySv73Dno6m6RbFOXMx+qT5znVLKehOfvCbpWU
k4fW1McvWdyzzidzk1bf148jlA2aHPApp2VtdppaGPL1pNp/fAv7lQwXjxt0
+7QmrHvUd/2YTuRNSTjxIoviBjf2snZhvuvHBPsZedxlp/1J3+mhTj+QenV/
kUM6C6Z7elvHfdePaaR6RfHmF7ye+fwJ26URz/n6tvWnbV+WW+VRm8F+XwKe
pHD1rs/e3ZOVlW+/00upqg7VXfCCr38vLksbYvtcztW/z2p5GUy3KqTpodN3
hp3h9VTvAoveVd3l+XjUxxfqBRqPeyGnNe0PXbHuyZ9nUS9fsZxTXxHLnz8u
Z/UqS39eQtt1Q+2ki0u4/Ip8P+3Q8iLzhSzuFqgOGFf03e81fCuu7Mli7aO+
lOoEJvB6aORrmy9BSbo5SqqWPf1r9CP+9wOI11u/3j6WnMOfV2wd1fdSFvD1
+YkcRfkVHxW5vSmy0U3n63XLqQNqBRaruHqdi+8/f9jkvZCv322TTC9ezObr
dxd5Vc3TxmVUN257kPVX/vc3fhcH7vGux9fzqO9tl9beL8kpI7Um/jCIP+bt
1ukENk9gTji51OnBxheJ/uXZ0sdFzJkQK6fp7P6Thzau26NHKfMp3NLFkN1v
n7aUXLH+FMMMWrBKe8lLGS3O8hqj+zGG9KqGdzvK4lEm3Z4ZWiYzl659kix2
yqUBI0JSqoYk06T67UzyHHNp+9GfHhmOT6XOjXv2S2XjqWxn06EWwzLZ9V06
bzcbT01yjiqj3+TQqifZjvXmFJMiy6GWZE0hs+RW/M9rPRTkPLrZFevVhWSQ
73znKYuh13h275nzwMJSmj7lmX9hbQWtLlkYupfFsT5f2n+cqmSozN4u15KN
B3eODHm8V8n8tLdHx7uLVPRpZz2dHlOVlFg25/64MSqSFMTIHbaxeaNVrtHh
+Soae7bLrbgNKtL6mBbe9YOK5M+dGupHl5F9lfRhMRvPlV0/j9dtwp+Hu9c/
nFhlks9MqlxTMYWNb8c1+fe7/lFH9RJq1HiZTm/ChpbIWv/CTFNO6NRIn/WD
BhOw2eOesYa3splIdZXylxtFtK7p6RqBKbLv9O0v9t9wb+5RRO9Uy4zttfKY
Dp8/lq1sUEJdzXeRSSP+PL6+8tZ5p+p5dClq3mI5a09+vnqkSXA2jXrkuKjz
L/z5JNR376fqVsUkGV9jQ1g2//uDhPiQ54ZS2Xe/T3jRaftKnQNF1M8o1FpX
nfPd7w0udTu87bNuCc3dQtOVk0KZnWUxJspHmTREgwnYeLvRUTf7SMr8HNEl
2EhGwzKW2kklL5nFjqW1rTZnU8CIdpVHjrykoVpM9zUsPlPj8E1rhyQ6o3O3
14C3OeSsf/dZ1ck0ZueG93qS4/l0ylOxXLooi3EsrqUomSQnwx7lHwOsCmjr
ooB+Nv0UZP5lZ5DpWTlTq/+hglwZW1/M7jdFeVpOgYu7DBiQrSD7Q2sCTPOL
6d2SqwNbSErpUcD2Pu9OK5h5Q9yLrpkraeucmTvNTiuo/vKOgz+xOG7dhl7v
HpaS2aoLZqmlShr1zM+nsKGaqbn+1LsBE9WU91lercescmb+VknGJ78yMrk5
oLlrVQpjvDpbN2FgHn2Ye6O5xDCDqZdXr6hbWQGpg/Z/HJOvZJLXtE6z8VLR
sazYyR79ypjem5qnt6hUU0ibparo2ZGM7ryKmvtZf8l+CpmndEhiolwK6+qx
/mgfebiV/ck0mt7Uv38Y649+Z00LZQuzKO+ei4PjZDl5PRsxXTmxgEnu0yRf
m/WHrOuT+q4FxUzfQbryqCOlpP/0QvqWR6WM57DaJe7sfFZdu7evXUM2j64/
Q2fZ+ei/+ZztYFdOH7YeM5/tX0YLlS2PaO+ooE47m4wYxv493aGRo7QyhT41
uNn3Ezs/iXPZIe8WGbTv1qq5Puz82h8+/W5LnpKc1rYdGsbOL+Jh6oDHpmX0
dFOL4ZsrRb2NqLcR9Tai3kbU24h6G1FvI+ptRL2NqLf51+pt4D9g+E/U4/x1
PQ78Bwz//LfqdeAfYPgHGP4R8s3/qXof+AcY/gHG/IV8+r+rXkjYrwvzB8b8
/l37eWF+wJgfMOYn/L39n1WvhPkBY37AGL+wH9CfpZ8Yxg+M8f2r+o1hfMC4
/j+rHxmuD4zrA+P6wv5M/6h+Zrg+ML7/7+13hu8Hxv//UT808D/A4HPAJ8EO
DDv4JPA14I+AwR/heTDiNzD4IWDwQ7/lr2UcHwN+h+P7vu03YPA9wOB3wKdg
vQPDDn4EfA/swLCD7wFfB34HGPwOfq+O+wsMO/wPPgd2YNhRTwrvD+oT1JfC
+wM7/I94jnwp9D/s8C/2L+KX0L+ww3/Yb4gfQv8J+wlg/cJ/wvUPf0C/BH0J
9GfgG6A3gx4Eeh3otaA/w++RoW/C90G/Aj0Y9CPA0G/getCzoL8N+AtcH3oT
2KHnwHigX0G/IuhPgKHPwHiBsR4wn9+uHxnH3yB/AoNPAj8MjPp/5K//f4nT
Y1XXYE6vgv2I70O+BoY+D3oV6PGA4S+sB9wf6OfgH2CsZ+59Y9/ul7C+hz/h
b3w/vk+YL+BPxCfEL9TTwNzvzb/pCxHfhPEO9S/0bNAf4vthh14Iduw3xEfs
R2CsP+gV4X/UK9Bb/lbvIxPUP5mcHgj7FfET+xkY/Bz0V9iPiHfIf8DQT0Hf
iP0sjI/If9CvQf+I74cd+iXYcd6Bv7n+Cd/uB+IZ/IV8Aoz9DP8hnmG+yBfA
4Ecxf+R/zAf6NMwX60OoVxW+DxH+h7+wvoX9OoF/W59ncvtHqO8Gxn7A+hL2
k/s9/THiGcYr1GML+1kivgn1jcL+L9hvuJ+Yr6zw63XrgBAuXy2/t/xjwMkY
Ep5v8+fn909uVMDtR+ppVbCLxduHrXhh6JLEnbesFx+YL92fyuWzqL7P6gTa
8OcFxKekCLdVqcf580Tnw4XG+1jcPedKkHWejKufE/waWOmuzePy3QD7wvKA
2nIunxn6Nas8crKEhPVh+4y5Hy2Ky2hY4y6rpUf4fMbVy65d7C8WldEJ/4Ir
hTP5eG0pW2lhIr3NKBuEKJT3c6hN1eQeFqffMDfKx9qeb1FMrVIffY12S6d+
j8OGGPVQ0JrUnybqPshljMKmlt0NVdL6az9PVRYVMn6tV9Zd00dNQ49NWmHT
U8V4HDaj8RkV9PHGJD/rzScYR/9Tqf1GZtNyDSbgxd0vNJPcfMjYje8S2Pd1
Lr2pcaCX/Z2H9KaF5Ad/FhscyO9m//QxbV72qlZgvzzKGeayRvo2jttfbXqZ
/Wi/JJnpcLTbyCwvOVn/Mi7BcFgCPTppXqeqUyFN2zI/pWoJG78+z25zj7Vj
fz5ds+FQpFcRda39+mfpFynfz/a5k6lJ9Dtm8HTHpTM9S8i25RFZdPQ7Whh+
yrIPi9uc2Gyj2zaL269xWmUvDY9k0StVDZ+Hw/n9POLFS6/Js5Vk/rnPT7qB
fD245tGshKrkfCbHWVbVfK2KEu4YzFBK88lY+8aT1DV8PXhTavD8mbGaUnb1
nC2tVUxBi56/OV6ipjV376+RBiq4ei/8QmzPdx2UTGS6f9/iDhW0+euSc9qG
pTTly4635FhOXxSq91s6KqmVf+Pcsx34+u94gW/HsFsVFDdl07XCtXw9iPqu
zk8277O357D7qGiUyftLXL23UIO5/b9Ns3/450Hf6sG1tl717Mfy9fpz41rh
uizWufTDMqlzEve8BPnLZklvB6vXhWSXFpZk+C6OhPV7De0vUf4phVy87b81
ImyoYwmXr1Y0HFnWkb2fly52ijKslPLvv7vYxcj+YCoXzxB/sgwOtDu3qISC
xsyYopsr487HyG/uY667H99QSmf6Pr9lbZRFwvq//kbzZm038PX/l0nq2w0t
VFw+i6y2qGuqvZLCj28PtL7B16vWY2b5Wa/L4+pVxLeNu/aZHzdXkd1DL0XA
8RIuX6GedbYbkrW7bhlf/5dpW+bW4fPd2wVuDasllFNSwLqv0TcUXP1/rnbO
52gJX88iPgY5bJ/QP76cHrTWOqPtyte3hvM7/OBKCcyJPno9O5kU0irdQWNM
PLMYie2A9K/s+h4WOKrEoUUpU9WjbedD7Po65Lc68takUqb4nFub94fKyVgT
TwjxpGvnFoNMfohl6iUoDZ0C86mVBhPwmvc+x90UScwgR6vEUkM5KYI9g6zV
STSohlFYZks5TZuw4Z3s9Bt6Y7epz1o2Hi0z7h5puiGDeX7t2qvzuxQUsGrq
aumGDPrQ8G3AWhavUo+MNbyWzcyo97RgZiWbPw8drRZ4IIfR2zH/U7uJSorL
rzZZ1zebTl3yvNGWtZ8LvhpjeCSHZHe06g5m696EuPrJVQ9yae7Udvc2sfEt
+VyHt7LiQiq6PTRuIBvfwu898C/UVTCDthxq29uvjL7UybPzaKCgg+PK4jOu
s+fi2jXPaU8rpS4uZbd2epbTZplru489VZQ1y7v0c3oF7Vmz9JT2LL5+HlSm
rR3o+pirLzpr4h2DeOesndHCvu17Lh923/ayj/2ydDp2R3LNspOCYhtGqgJe
FnH1wfpDq1NkNYuZFS+qN01i4wXq6+OjG9xcck9GVlsvTlT2Zpi7zKjP1utz
yURzfS4/d9bYCXb1z573DNu8599fPrnysPeOdKbeo5ANNt0VpOx9dWfY0nTG
6ad5ccvY8Xy4ldXENbOAGfukS63Rr1RU3uvmbVPi623U31ndJ4dkBauo2uoH
o3RPyZlqjVbvr7aMrW/OlBxz+ihnGq4JbXj5sJos/fQnKeOKuHqvzYEDx53O
y+mIn2Xy1OVqmubp29r+k5wmNnR75ch+fuuZg/GnfJXMjwPLBrbeUcGdbx4P
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
ehn4Dxj+A4b/gOE/YPhP2K/jP1WPI+wfBP8Bw3/A8A8w/PPf0n8I/uHe3/LN
P8DwDzD885/avwj+AYZ/gDF/YMz//7r/EfhF8KXA4EvB/4D/FPZjwOfxfVh/
iB/C74cdehHoF6AHAcb1wF9i/QCDbwO/ivHCjvXHva/sm/6H6y/zTe8DjP/H
+oC+CHoejAd26IOE70uCf3B/gaG/Ab8Gvhh2rA9g6Hfwefy/cDzwLzD8i/Fh
fhgf/AGM+UD/ge9/F9Wxi8XH/bx+o1estdI9nLu/d5NatLG/F0vC/S7PNWjh
K+PvF/DCqJy93gavuPW3dGvkx4CfQxl/95VLx4xn18vVVuN1D0fTztft91ut
LCfPGp57vS2fMH6p2c/a6pbTVg0mYOfXruNN7sVz/irucqKLffNX3P7C/Rxq
OHFA1qsKsm1yfmtYSAI9uTF/ecgB3n+wYz23b72++hytMpqy2mCmbtNfvlvf
Z25lflym4tc3Pt9b83nufozS+Iu7H1j/+P95mvFz62OeZnwMxjdO4x+Cfwoi
hx1zsnvO+HWdblL+vJxSNJiA/dgl61Qtkru/Ljf1yGRyNN0566TYuqSciqN/
vZ9cfsf+SSiwyDRupKYV246PNtlyiTmh7Wi8e5+aOvyqv7jMDFgbHr/EU03d
NXaCXTZw7C/WAZep/YiO2dtYe7jm+tx+u1DvRVH0wWjmZP2wdYPY+7lZMx4G
49njpnQJC43l9TOTmyQZDn3IXGox50q4Xxk533vf0fVmHBNSnDbepjvrHw0m
YL3W/bva30+iULK+1q2kggw0mAE+YhR9wHtKEHMhqmhsXqGalmswAXtqrke4
nsjHinysyMeKfKzIx4p8rMjHinysyMeKfKzIx4p8rMjHinysyMeKfKzIx4p8
rMjHinysyMf+e/Cx8J+QjxL52v8dXwv/AcN/Ip/71/lc+E/4/hRg+I/jX7/5
78/CB4v8h8h/iPyHyH+I/IfIf4j8h8h/iPyHyH+I/IfIf4j8h8h/iPyHyH+I
/IfIf4j8h8h/iPyHyH+I/IfIf4j8h8h/iPyHyH+I/IfIf4j8h8h/iPyHyH+I
/IfIf4j8h8h/iPyHyH+I/IfIf4j8h8h/iPyHyH+I/IfIf4j8x5+b//h/PN1Y
tA==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{13, 10, 9}, {8, 7, 4}, {12, 9, 1}, {34, 14, 6}, {11, 6, 
          2}, {32, 28, 8}, {7, 11, 2}, {5, 12, 1}, {12, 13, 9}, {9, 10, 3}, {
          22, 34, 6}, {18, 29, 10}, {23, 25, 3}, {30, 23, 3}, {28, 27, 8}, {
          16, 24, 4}, {29, 31, 10}, {35, 21, 5}, {20, 35, 5}, {24, 15, 4}}], 
         PolygonBox[{{27, 26, 7, 8}, {19, 22, 6, 11}, {21, 17, 12, 5}, {17, 
          33, 13, 12}, {15, 32, 8, 4}, {26, 19, 11, 7}, {33, 18, 10, 13}, {31,
           30, 3, 10}}]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{57, 73, 43}, {71, 72, 47}, {134, 131, 76}, {68, 67, 
          51}, {40, 53, 39}, {38, 52, 37}, {59, 53, 44}, {60, 57, 52}, {76, 
          75, 54}, {55, 80, 49}, {79, 78, 47}, {82, 83, 44}, {41, 82, 40}, {
          78, 79, 54}, {108, 97, 56}, {124, 123, 68}, {80, 81, 48}, {71, 78, 
          46}, {78, 54, 46}, {52, 57, 43}, {56, 60, 52}, {72, 71, 43}, {66, 
          55, 49}, {71, 46, 42}, {61, 58, 53}, {36, 43, 42}, {69, 45, 49}, {
          52, 43, 37}, {82, 41, 45}, {137, 98, 57}, {56, 52, 38}, {74, 59, 
          44}, {53, 58, 39}, {81, 80, 55}, {59, 61, 53}, {70, 69, 48}, {116, 
          95, 62}, {53, 40, 44}, {82, 44, 40}, {117, 99, 63}, {127, 129, 
          72}, {130, 112, 47}, {43, 71, 42}, {118, 119, 64}, {78, 71, 47}, {
          84, 83, 69}, {142, 101, 58}, {76, 77, 50}, {112, 87, 47}, {141, 102,
           59}, {106, 133, 54}, {101, 110, 58}, {104, 132, 77}, {88, 113, 
          48}, {70, 74, 44}, {54, 75, 46}, {73, 72, 43}, {126, 125, 70}, {80, 
          69, 49}, {86, 90, 48}, {67, 66, 51}, {84, 70, 44}, {140, 96, 56}, {
          69, 83, 45}, {100, 142, 58}, {85, 137, 57}, {103, 141, 59}, {83, 84,
           44}, {66, 67, 55}, {97, 140, 56}, {83, 82, 45}, {135, 94, 55}, {70,
           84, 69}, {120, 121, 65}, {93, 106, 54}, {113, 86, 48}, {128, 130, 
          47}, {94, 105, 55}, {75, 76, 50}, {69, 80, 48}, {122, 136, 67}, {43,
           36, 37}}], 
         PolygonBox[{{125, 92, 74, 70}, {136, 135, 55, 67}, {91, 127, 72, 
          73}, {111, 100, 58, 61}, {105, 139, 81, 55}, {110, 109, 39, 58}, {
          87, 138, 79, 47}, {109, 117, 63, 39}, {96, 89, 60, 56}, {102, 111, 
          61, 59}, {107, 108, 56, 38}, {89, 85, 57, 60}, {92, 103, 59, 74}, {
          133, 134, 76, 54}, {131, 104, 77, 76}, {98, 91, 73, 57}, {129, 128, 
          47, 72}, {90, 126, 70, 48}, {121, 115, 51, 65}, {119, 107, 38, 
          64}, {115, 124, 68, 51}, {139, 88, 48, 81}, {138, 93, 54, 79}, {114,
           116, 62, 50}, {132, 114, 50, 77}, {123, 122, 67, 68}}]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl3mwj3UUxt9jiZDcUiGUJFtKUZFEJNFFlsgu7Rsz/dE0U01NyzRNi33f
912Wa7mRa99v1mtJyJbtItlVdJ45n9/445nzvt/l7Od5f79y3Xu26pEnSZLP
LEnyuuzospNjmz9PdPRx9HWk+dq9DnOM9/dejt6OmY4hjqGOCazpziTu9XNM
dwxyDHZMZq2/Y6pjgGOgYxpS56awr71fuKO1GeiQvcXY0F6GY5RjtGO2Y7hj
hGMOcqRjlmMYez/hr97ncW+MYxExS+981sY6MpOIWfH9jNS5hY5x7M3FjvxY
gr+K73bl1ZHlzyvIl+zXsMjLUscTFrEtc6xkX/7Wsji/3LGKNcW3Hr/l4xri
lP115EJ7vzs2ODY6VnNP57Lwaxp7C4jjV+JUfPksfFUPbCYvyvcWpGqyibPa
y0aH7qt/FMN2x27HWvzqYhFDjmMnPsn3XUid20Gc2vuNe4p1L75mk98M4r3J
deZ3bPXn/cQgv/5AyvcTjj3ko72fTbeIo7PLpo4CjqP4IX+bWPh4yHEEn+Tv
n0idO0wc2rvFzxdxnPLnY+iQ7y19LdflRUdhizunkzi3D39L+HpBC39ziVN7
J/FX72ewJ18uEI/2/2JNfv2dRAyyf95xnHNn2ddeUQtdlxxtLO5fTmLeptMP
7Xy9mMV6Y5d1LWxewZ701bd4v+64yprsJ6xfJYZs6nGbxV4exz0WPPJvEvyh
udH8iDMm8K69c8QhHpnInrhkEu/igBn4LY5QP2veUjyi9/6siR/EFzO5o5nX
HGnGRtJHmot+nJWNtayrz4ZyVvdTnJLimNnoKuUxFbLomdFJzF8GsWkuFhBb
Ju8pHsmktmfoDcW2iD3Z0wwux6fF7Ckm8YtmULyxlDzkZQ60J95YRryTObuY
vGRxRjGtxEYmtcombsW/hhjW8a6Y1vOueDSPG4h/FbrmcG81MWxCr/zezHuK
Rzbj11beF2Jfeqta5FRzUwPunEa+V2NPfmjOduOH5kVznprVI/itfc1sB4v5
F1+keGcnNtWve5Mb3LEfG5rvHGzu5H0jZ2Wvkuu6w4IvO/LNXIE+zXkud45Q
Z9k8in/iw+3kLYd99c9TFrxws4Xvx7gje5p7zbV4Szx1MAn+OIXPe7F5klzo
7HF8KQIfyRfNsnruAb7paXCg5vgsdzR/59BxgfeW8IH012WOtf68BV/casEt
l9AvO+KEy+i9yrv06u4/+HURv6v5cxkLrhIXiWuu+fqd5Fj5TeM3iO4+7LKc
BceoRzQD6u3yLovz3b3fURKelW1x0XX6Lj/fgooW3xKtdeKbsI1e0L391FU+
aB6bUR/tv+iyBfOvGhaGBxS/4tBc300v67mCy9J8M8oSq/JVxeJbolq1IpfK
9X3El4d8pxF7wvp1+uks+W7ray/B449Z/P5I5aY4MeajbxWLYr2LeBuSr1T/
lbAbOSiJb5Ut6qHzjVw+y6w+aBHnaXJQijzInuZ8CbUuTb2LUmudH5PEbxlx
TD2+E4o1nZk9kESs5YhXcVQkFvleGX/kYxX8rOOyNjFKPmnBiYq7DuvdXHZl
llog5fMLFjN2kNpVpX7dWN9OT1aiL1XHatTycUdNC14W/4qjxc/ic/HyDGRt
/NH8PURPlyGPyol6oQJ9ohqWp59LUKOC5EkznIa+WsSlWdRM/kevppPDQsSp
GBVTI+rUwPEMuS1FTQuR7wasi5caYv9zx2DOpNMj4vPl/vwKcdVH5zX4Sjkt
wFp9dF6AR85T62boas7zAfxvTj9u4ZxsaT4UZ0pHY+LV89P0j2Q9npXX5+jR
K/gnXlrjchH6VTfNTBZzJ35R32muxGtnmM3WFvb1LE5UP2vm2qBTUu+XsNOO
9WKs6/ll1q/BQ+2Jrwk9mYPOtuhpjb2L8HArYhdfdSa3kp3oT8mOPOtbpu+N
vjWC1lew1pUzst+BnDdFl9a13wV/5K/8Vhw1yFcWZ7px/oTLXhZzpl4TP2qO
drv8wWJ2m3K+CbWqS+1Sc6jzmhnZ0He/JvY0U4+6rG7Bh5qbRyxmZ59jqAW/
7HEMsuCD0Y6v8XmxRe+qb/V/dw11/0i5seCIg45xFnOZS671vfvE5ccW34mT
jgEW3DPQ8Sn5z3CMtOCD9Y61xLdLubGYyQ2ObIs5yHUMt5h7/U7Sd0a/Hd7H
D/lw1DECnW85ZpKfSS6PW/RpjmMeOeyPf/JtvOOUxRx/6ThkwStjHccs+ONH
i5qpXsPwSf70dUynH+T7Dvyf5XjHog+lYwx6lONR5HmGhR/yYYtjiMXcycce
+Kk4Xk/V2uWb2Opu0Svqk3cdcy36/w3qqpq+Tb1V6+8dhy04ciT5KksvzObM
ascqCw5TDadQx68cUy1mebKjn8Us9nEcseB46f4O/Tq7k/OKYx2xKK9fkNuN
jp4Wcz3f5Xs8q1YTqdcHjk0WPFudtTzUagL1WuZ41aLnt7rcZsFfr1nw7DJf
/8blAos5yHR8iz753hv/5ct8fFji8kOLb1QWNqT/fyeYjtQ=
          "]], PolygonBox[CompressedData["
1:eJwt01lLVlEUh/GzwwwFKcgUqcwpU5s0tCjDUDMCISJBoru0ySZttESLBrLB
bJAGqWiwLAkpK2iwQbEizbIBLaJIu+gj1JXRs9j/ix9r85737LP2WmvHl5Qv
2zwiCIIChKDFBcEtjEQozmEP0hCDJ3iMdMzCRgxhOf7x/mHiW+QiD/fxALH4
y/MdxDqMRRYe4TriMRPbsQlxSMZxVGIKInEMFUjUHu+xBUnIx35sw2RE4Kr2
tL0m4QhuIkFnOInbSEEULuEepitn+3a1amE5dOCFRc4yh3gGVUhFNGrQqvUo
XMQ+TMNEtOM15iMMjbiDqRiPQ7imXBfobGtUeztjKZ5jtnLoIu7CPMzFSuVo
uXXy/DPxo/ZepFw+aW05/cZp6yH/XUE8gd3IxjgMYoN6V6xeX8EY9XwA/Rjm
+WLiM+d7bL3NxFp8xxJ944bzM5Knnr9SD/NVk3fodX6WclWbDyhQjd6oRlab
HDzEUWRgBl5ilc5uNelGj/5rOTbozHZWm/Ev+Op87qPxEwe1LnJ+lsowwfmZ
stkrcX4WE1WrLtU+W7NwyvlZsplYrz1trz98v414V2vb87JqXKya7lQNM9Xj
bzjr/CwVOj+bF5yfJZtRm9169cpmuNn5O2V3yWbc7u4B5+9Cmnqx1/nZs578
wDr8Ip+lxPP6zdbhqv1WLFQPViunQr3TRKxV7e3O9uGp3rV3/gOCzH2/
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHuc12MWx2fOk8vKpbIiW7rSiEq6blJTqUl3GaToJjVSM4qVLlINEyKX
tSG2NrlTdl12WVnj0m7ut72EUFtaYZVqym6J83md9/f19cd5ne/3PM/vPOdz
znk+5zvTdFzFsHIrKCjYXFhQkFy/6i+fulzgkly+cfs2lxJ/vt2lr0stC9t2
lwP9+VvXO1wOsLDp/SAL206XZv58mMvhLgdb2Ha5HOrPe1x/Vxjr0v8rjH3S
/3c5wkLvdTnEn2tc73apY2Hb51LbwiZfdS1s37sc6c/7Xf/g8nMLXeD6KAtd
6HK0i4H1GLTwNUAL07FoYf0FWvgaooWpEfpnLsehFW9jtGJsghbupmjhrmcR
r2LV75Qb4Vztzx1c+rk0J3/KR0t+I3wnWGDWexE2YT3JpT74TsQm3CdjE9YW
+FMuW2MT7nZgE6ZT0cLUHt2YuBqDqS05Um46YhO+TmjVvzNaOLqgdf4v0ce7
nAYe4TsdPIq9G7Yi9tUBc1fe9ZsSYlWMPVxakYOeYBa+Xug2Lr3Riv0M9Cku
fdDKQV+0/BbjT77OBL+wrnJZ6rLI5SqXiS5lLgPBLKxngUGYBmET7iFgEO7B
2PSu+/cbizt4tkt3MJ1DHMJ0LlqYzkML03C0MJ2PFqZ14BnhMpQzFdN9Fvda
+fs12Ea6fOzSnxhGg0exj3IZwPsYbIp9HHjkeyw2vV+ETTkoBYcwXOwyDHzv
uFQT74WcO4BcloK7DC3cl6CFexJauCfgr5Qaqh8b4qsT9agAgzBdhhaOK4lJ
PqZiE47LwSYc07DpvZxY5Ws6v1O8G4hvhsuDLouJ8U5+M9NlE3HMcpnNs2K5
Gq3zf+UynpjmYNP516AV1zyXK9j7vstaix6sBI/i2uJyN2fV4Ot6lx2ct8Dl
Buzy/Sq4prgsdJnLOY+73IttPmfqjEddlnDmLpetLve4fME5uhe38Kxztrt8
hQ/dP/GNuGMZ+26j/h2p2Q5mSTZnpMXFmiHiW63th+vFgbvgUK1tZyaJx2uY
H1oTd4gzxB17mSXiwX3MD72Lj+uxN5tP4uvdzBv5yuaKzs7mit41T8Sx9S3n
+iaWz49jLZ8Z2QxpaDl/Cr/u4afUY7LlM0kcnc3Fwy2fTw0snzfiaMXbjLO1
rznv+l0L3uuQA71n86mx5TOsETUYQEzZbM5mVkvyKKzixWzmSLci1tasCZvu
ZFtibcOa8iWOLwJHW9aymdGJuJSXDuSpHb6yGdPR8lmlNc1N8Vl7y+dNZ+pU
RNzZ7Oli+Tzoxbp4uhvnqQ79wCPu6g5m8ae4OvtuOJpcdsXvHr5vanNeN36j
XIi3iy2fPb0tnz1nWD57+oCphPdshvUkx8XE9GeLOaQ7JL4R94iDxCvil1nE
JE7O5o/0QOIdwppiFE9n82Eoa8IsXhVfixvEY1M4u5S1bPacZ/ns0fs6noVF
c2YEWLIZJk5/xuV+i/mjuTOSvPfnPM0g9eAo3hX3aN4Vtzh5DPGKp7NZNI41
favWolaD2Dva8tl5LtjEtePBJC6fYPnsmWj57CmzfPbovZpn4X3XYp7dQV4m
4FecP5PcFeO31PI5VMHZ4tUriF0cP43fX/mTNfHxXHxPZ20se6cS61Ws6Tfz
+U02Y2azbw7v2VzR+59cHraYVxvwU8YZlfjqTA1Uk28tOF0zQNwv3r/ZYu68
4XKdxayp4lzNoAWcq/M0E66nJlOJ8QOLeXYXNa4gb8Ks+XOjxQxZCC79XrND
s0Yz6lb26G8X1Vx8/LbFDPuty7Muj1nMqbXgmk68s4n19y4rLHo2+95tz543
wfVHlwcs+vVli3mvPsi+lXV3v+bMhTwr7ps4/y3OGuV/eI1J4fe/7NOejm5r
kGJ+L3d53mI+vmDBceKl+4hVca50eQ78mstPUpcnLDhiGThWE5/u3Iv4WY3f
EmwvYJf+C/bRHktKgf1rYhW249zWPcV38EWuS1PYD3Nd7vIPfz7L9dAUuR/s
uhA/6pkvqYV65j8WePe47LbopxLfu9diDg7x5wNT5GeY61op+m286wkp7p/q
/BS9oPx1IIf9XP9gwY/D/fkol1c44xsLP+PcNjZFvyzFvgi9jT1fgX8h8W6h
H+azpp4c5D7M5Vp/buv6TJeH6KmnLXhQvSPuE+89YnH3dO8+tOAP8eYnLust
/h5Qb4nfxTmT3V9ZirvyAD7Uh3+wOEf7NlrcId3hcnxPoQ9WgWsb2JaSs5Xk
7Rb2LaKnfkdfycfD+FnMWTPovxXgep3+0736p0X9V+F3JX5Ub90B9f/fOTu7
n4+T2yeIQT1/sWPt63Ipa/J1I2csIfevcbZsuse6q5p9b/Kss9ayrxKtd9VI
ffCShX/lXZw+HFs19mreJ5FT/Va8sRM8VeTmb+RHs0rfb5pfbxFHFbVWHjUP
PnfZbNGfz4NZeB+klovxscai/3X+y8SwhrUpnLmGZ+m/sl+1/YI6tvD8XZOC
M05wPTcFB8jWHHsT1wenqPd1rpul4B7NtHfJw2Vu65Ei1oNS3MObycf75PMO
fnM+2DZTi+kp7oP6Rn3+EXsvdNvIFDWZ7fr0FL3yEfvUV+ek4Br16jrs8i9u
U5+t4vwPiEHfD/qe0LeEsLYE713sUw0Huq19ipq8B0bFc7nbjk/R0+IC9aj6
UndPc1EzUXdyPfXtkoKbxEvzXbdOUcP9FvylWnR23SnF3fjM4vt+Mvoz/FX6
+qnEo3/IDUjRJzpHXDCS5485V3ndRG7/bXHndR8rsJcT70bwbuI3M/GxHp89
dbdS5GYjvrLnDfis7eu9UswVzYHBcPg810UpeEizQn1UQn3WUbt6vl6cIrfi
/D305W6es28CfSvo7uqbQt8Wymc1vaTeuyQFt6q+J7s+MkXeJrpulaKG4sVJ
cOMSfGXcvB2fTVP093LO30oMB6ToP/Xel9jV2yemwCmMbVLUWPVV71RSr1Nc
V6XggK6uF6TgOPWf+FnzdKrbprn8y5/ruO6dYh5kudC3TA3PC6jV59RLPKO/
scU14rMt1F19L47VvWiUYgaLR3X+acTQl1roO1w8o/N1fzWjLiCfW/Gvc+cQ
x9XYdmIXvnZg/M7inqygbtpTRew1YNlncecfYn0HfsTl31PTY1L0n/pN9TyJ
mtZ3PSIFl/VxXTfFN5dyeT/5/BFGv5mH
          "]], PolygonBox[CompressedData["
1:eJwtlFmIjmEYhn/vM8i+ZMuSfV9C9j1LMRzYlxnrZAljBiEz4miccUZZIvua
7HsIIUJkKzUppSk1yRljve7u/+Dqvd7v/+f73/d57mfaFxRPL0qZTCYXcqBH
ZDJL4RUPX0MxXg/e4e8hH28Jz/Cn0ByfB4/wJ1Af7wRH8LvQCl8Iz/EX0BGv
BReSv1MXrw7n8MswCt8G3/CDkINvga/4TmiKz4H7+ENogM+GO/g9qIFvhUp8
B7TG28Eh/Cb0xDdCOb4bfsIG9h9Z86AR3h2O49dgJl4AL/EDyXcfDGeSazAG
XxGu1S7ojdeGi/gJGI93gWP41eS7/2A9mlwDffc368nkv6nGvhQq8O2Qi/eF
U/h1qIIJ4bPlw1R8GJzFb8Av2MT+E2shjMWHwj78EgzC64Rdd+gWPqPOpjuP
C9dEtbgCndk3DLvOvCbcM/XqbfK7y+B78m8MwEvgC74X/sFm9p9ZS+APzA33
bnVy75QZZUU9nIxPgdN4KfQP10B317MOeFu4jR+G0fgMuIWfh67hTCgLqvnI
cAbUe2VM2WkCD5IztBxfFj6LMj8fXxDOdhn0C2dc2VYPlPVm8Dg583n432yt
9Wwx+0Xh3inzw8MzoOyrR6vwleF3v0nOes1wtpV5ZbdNOGuV2V72CmdVPVV2
q7K9L89mt3E4e8rwenxtuBYfku/aJ5xF3Vm1Wxf+TDVU7TTjmm3VcDVeGD7b
HlgS7rl6rRlQr4eEZ0s912yOgP3JMyqfFs6ininLA8NZqMhmoUX43cpEET4r
POv6H6PsZMK9V4Ym4RPD2dGM/AcRL5om
          "]]}]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNl3v819Mdx7/1Pb/QVUWXWSOFTJIyEtNoIrmN3e1iNhtmbGtzbWjLdNU9
uRSK3DJRKrJKN12UblISpbVKjUooLbyfj/P8PL798Xq8P+d8zznv9+t93pfz
bX7VjZfdUL1UKm2rViqVQ45IpdLwQM/A6JjoE+gbGBXo7fhh5/oFHg30DwwI
POIc4zHO3RsYH7gvMDIw1rmBgScCQwJDA08qhwWeUg4PPK0cEXg8MCgwOPCM
c5z7rGffH5jufvZN0Q50Phd4IPBg4PnAQ3J6QQnXiUr4TVLC6UUlXMepH7v/
pU7OnaqexwIvKbH3ZSX7pinh/YoS3v9WYvdk9YzxjIFy/k7cR6fAcYEZ8sMH
s7UDfnMDE+Q3Twm/15TwW6ZudM7Sd+xfoe84e75r8cECJT5YLE/4LVHC7w0l
/JYq0bFIPtzDcnWi46aU92wMzJQHMfJeYKH7VgVe1ca3lHBdE5gj17eV81w7
Xj5vei5z6+QDj7WuxR/vKPnt3LDnpMDu+F6v/tcD3VPmvCHwu5Q5vx941/Ow
daU+m+meKfroP/oFf9wae6sC9QNb9DX7PpQPPLY6h+3b5A/vD5xjXCP2fxZy
T+Aj98Fpp3zgukuJjR8r8es5sbd1yvy+G7JNyv6HN7bC/X+B1dr0iRw2BT5V
/rec9SM3Bz7XbmzcW87cGO9zDh5feC5c9we2O/7SOXjskAccSqkyN1i++G6P
OtFRPWXOcD05vtumzLVdynaXQ96bst0pZLWUz2PPQZ6FvQenLOFxSMoS22vF
9/+1t3bKEh51UpbYXjdlib19Aj3Uc0qgfco2Nk15P/v6BXqlvG9YynfZINDQ
b+w6TIldhyuxq3GgZsp2NVFy7qDAbYFvpXwn5DZ5NiDGfw+cFjgj0CzQQlno
/IYSnUcq0dk80EidRyvReUGgg5w2q4c47umZXw+0VAdnH6M80pp1lGd/O3Cm
Z5/lnlaB4/1m34WBjp5JjlF7qCO/ifHZrt1kbsGZPkO9LHoRknpNnxnrb9Rp
6hz1gZr6mL/1cy21njr7uL9R059zD32GGkXNpd+MdzzS8xgXPYyaTn8Y51n0
GerwBNdRk2aWK73hpXKlH0wrV3rPxHKl90yS02TH8JnieJn5iD+KHkatL3rn
U/Kc6p6iP00tV3rPK66b7ph9Mxw/o70zypUeht1F74Rb0bM5b4h8xumbWXIu
etLccqUnzdPe+Y6LfjNf3SuMswnum1Ou9INV2rTSdfhlofuLnrREPsvLlb6H
XKovqNeL9MVix5Od46yiLpCH+OBN9XW3jr4uB2oXtZhYma2NRY9ZK591jvt6
x6PlQ61drY9WqaPobWu0g/pNHacHbdBWeuj7coQrtXqj3DY5hsd69y/wjHX6
gxwmbmqa442sKU3Nd+yghm/Vrm2OsZX6vV37PnRc9IZP9RH7tghq7B45feQe
/LLDcWvrN3b+KOX+VPQl6vnucqUPfVKu9Lmd8tij7qLn8Rv1u5Z1k15Qtjdg
935/x+4vHGPTl46xqWR97+NdjZL/PuOirTV+lzyo/SX7UnV7Af0r2Yewjzpf
9LKDrPtFH2L808B5KfexrerZ613ij43G0E51Fv0Jnn3tQ+3tCbw5DrXX1Fdv
DWv+gT2Aek3vqqv9jazTRx3Qkxoe0JMY9zJO6Gv9U+5tp9pz6AdHqKOZNbzo
W40P6DfoXmF8bC5X+mttc4uYIB5+bj8o+hg9osUBPaalttJjjk2V3sxZHewz
TVx3vL3mTNfD88rAJfaiywKdU9b9l8CJ2nJLyJtTfjP1Nhao6zfG+IaU3+VF
v+TM4n1MnhZvYnJ0MWdWlUpdQ04lx1Luc9Vj7vOQpwe+Ft+ztAN7z9bmUszf
l3LOPx1yjvYcHPOHBK7ljkPu0e4U3+XANSnnRFtj9Rp58h78Zcr/K/AFb2By
jzi7KGW/43PeV5envB+/Xex63gPf18fY+kP1wO2KlPONWP5xyvnbJeRPUs6N
81OOdeKc98APPPss74L7rRW21w5c5/p2nkkukc/k8meMA79NeW6ga3YFXg1c
lXIeDEk5/u9M+W3Eu6h+nN0gcH181w1ZJ/D7lHOIXKrnvsHuvTrwZ++DXB6s
LdtCPsq9BfYTfynXaOT9fteIs/d6X8RVd+cHajc1YpD28z0psFw7twceTjmn
bnNdci3fvP1+FbjUOMG+7/l9jnfdWn+18y64A+pENe/kFO9lX8px2dH7PNk7
HagefNvUOyen/pZy3tf1Di9OlbcdsrmxdIZ3+jPvm9+JM+r8RnO9s7paGges
P1EO5CBxdK72c0/E3gXa1VXbiNEucoHrea6/whhizenug0czbaNG9Q7cI/e7
Xcca8ps8/2bgT353Uv7R+U6uo/78IvAHeWPzddrdTf5wv8R1LdR/oTaQc9c7
Jhev1Uf4lVwl76grvAMWW1+IJd4hd6Uc36fpm27eUwe/0VuvKt9xR/VfpA28
q4lvYoc4utI7II6IrVb+zroTUs63q/2+1LWseRYfVOW4oUfQF8gL3irUT2rX
AynXMr7X4+OqnFcbA8tSjqcNcEo5RiewL+UYJd7ucA319Cb90cPfiMM26iKu
6Ef/0CetQ898Y+JmbWJNs5ifZ9wMTTnnqRlHx/xKfTc75dpKPE7U1lM95xZ5
UdeXpByLHY0l7pR8/2vKe/HN+JT9c0x8v+Xd3q2/8NU/HfM9OvBByn38nUDj
qhxzS1OuO6wZ4L3Xlyucj1Anuqkz2NJTe8akXFNY0zDOW2UccMZd6uqlDcR/
q1izIOX82ZpyD+uqr1lXx7Pv8cxbPetQz4APuTQ9sCnlflMzzpybcl6M0Gbs
PyHm3zamdgTeTTkGFwW2pFyT71QH6583PorY6OEaeuCT+py5PqlSz7njpF8f
0s7DQu/hVTlvV6Rcf4mZNwIvpFxjuutPahG9+kV5DfZczlwrB+x/LeWYI96m
BY6ryrXvkZRjq5sx1E9fIvt7pwv1+/n6ZoB8VwfaVOX6gW9Oqsr+oT8Tv9Q/
+gzvA/JgbMpxRow9mHKsd/HMEd4bZ7ynn7Hx5ZTt5D57e6d36N966l+Tsg23
p9yT8OEM75j7rabfS/5+uz4c6hhffRzYHfi1c0O91ykpv4fwbXvvjvOaxNy6
lGsw71jetfTlkSm/mTobI6O0c7hrGvg9Qh8Oc8w39ZTafay+GO76rwBSVREl

          "]], PolygonBox[CompressedData["
1:eJwt1FdoF0EQx/HT7No1sVfUoC9GFMSGgmjsNcbERBONMRFb7IIgCEEQRCTv
9t6xoaJiQ7E37L2gBgs+WLG8qPgd5vfw+c/t/+729mZnLr10Xs7cqkmSZCHg
Jj8dYpKsJHbFP/zFm5QkmU68iwzOVxB7YBPSGS8jtsRRVGE8nNgLB3EdQzEB
e7AfXZCPi2jF9YuJnVFpz9Kzu+EADum4AGfwHNkoQXXurRb93oHYgDaMy4mp
OI2z6IdiHMMp9MFE3ENbrl9K7IntWI0ByMEfBM7PIPbHO7xFX825xt6b84uU
ox3EdRiMXOwL/l+u3jkl+jNsbpvzA65gCAqVu3qYFTyHn/EEozEZu7ANWcjD
TmzGCIzFerTm/iXENJxXzvP1TpfwHuMwCFexF+O1hrrR57S5bA2/8BNTMQ1b
0I5rlhNb4KTWlKecXtM7FWrPL2sPC5QTy10z7l+gHKZxnIreHI/EQ7RnvCL4
f7dUQ1Y7w/AF31GKDPzAN3TEFB3/1lrtv3P4ijHIxCvVUIn+e6YcW26zlYva
PL9MOXkcvIaKlfNH+IQijEIdrq0VPZdlym0NxjOVY3uXrcF7w96pZvSatVq1
a3YHrzGrrU54ihOYpD1fFbwHrfcqqa+XxCbcPy94Dm0vjgfvNdsT68072psK
7d1rLNQeWq+t1VzWc1a7F/Rsq+Hm0XOWqXsO46Ny3x1No++B5X5+8F47Evxb
UK61vdA5W2OD6Htsezs7+LflRvDetG+M9d7G4LVqPWjfkvvBe9G+KVbLt/Vs
q+nGjBtGz/0c7UX96HMXKXeNop+zHD4I3vPW69Yj/wE9YpVc
          "]]}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
PyPlu/G8ftJn6d11nCdWzJ3m/dzouw3ibZrKPtbSt1PtOfRqeuw5Kfcf9NnW
zzv6sUN9lutruGaHd/YM7+1p+saa/d5hcsT5fNNM0c8W+g+HNBBXLf1kzT7f
bTQ+55lfclHPmNN7G5pH+ks988Z3EWcNMb+NXfOR/aDUN36Yso+sw06lupH1
3NjnyZ7V2DrBl7rmizPP158m+s/65mIkF/ArHLzS+QvEjmaMPy183qLPzcwT
OaxvfOB9OHuVMWxlfTR1/WTrva73hVpm/VZz3dLnlu7dor2WPvM/wLcm39Oj
Y66X/nenZlPuWdNCthu7PdyPlHtGz9A3pMxJfUM/lHK/vit0H+uqS+jp1vxW
cptyj3ghZHzKPf6l0Lem3FdWhV6Rcs+4gvil3B/oAXem3AewsVk7m0IWuqY1
NZgyt/QOfb/1uTb03JR715zQF6V8N7cRv5R7yeshd6TcL2eHnpXyd+s9xDXl
voPtIdq/KfRM6/Pl0INT5sNLUj4D+wNC90+ZDzuHvjdlXnww5b4GlhHUkbl+
IPTF1tUroYelXL9tQ89LuYfsDT015Tt2c8p7WP9a6LEp8yH+TtTnSaGfTplv
HgmZ4t4OoRekfGc7hl6U8t0nZluMG3lbb+7I833mekbokSnf16HGjrj18h5y
t+62VqiTheaSHPGNsy5lLiEnbcwLHDgo5R4I1kvFe7m1Qp0sDr0kZa55MmW/
8Rkc7cRC3Y2x9ipTzg15WR16TcocCdbL3FsVulvKvH1lyKMpf1csC7005e+p
cSnHl9gOTzk35IVY7jWe5LC9eVxpz4FzB6Zc39T2/wBtDiXG
          "]], PolygonBox[CompressedData["
1:eJwtlGdrFEAQhle9GSMqBkUkKogSBCEEQcQ/YI8FghUrUWJP7F3sHRVF9IP6
wYb17Fiw94YFQbCCDey9V3yGmQ8P8+7d3uzuvDPXsKS8uKxiSqkIMrBBU5oH
nySlvzAc3QW+ol/CdHR/+I1+DxPQfeAn+g10Q3eGj+jvUIy+Bs3gNuslxCHw
D/0FJqPXwC/0O9iK3gIJKsBg2Ac1oRaMg67wjb2vYbb6mXbWB/Hv2qrfxfYU
oS9BE7jIug3xAjSGXayHETep3+UFbEZvi7Pvit9tIrwVv+MOdC/IgcqWA9pH
rmrEA7AfborfeQ/shRpwg8+yxL7qe6vCMiiHe+I1noTuB9XjzE7Eq9A0cu4m
lkJu5Fyg7pl59RlWoUfCK/QPaIk+Cw1gnXjtF6rvNQ/mogfBH3HPzNsp6l6Y
x3b2LHgmfodz0BMesG5EPKNeQ6td/fBuqbpOcfZouC9+h/PQOu6ST1wJp6Ee
POezacRb0AIesR5F7AESbzLvxsJDcQ9PwiKoC3nx26nmsXiOyzAQnrIuiF6Y
AU/Ee+IYHA1v6hAPwxGoHW88RdwId8TPOA4n1PdazivEjtFbhcT16j1vvW41
td4fGm+zGbBZKYHH4jPTHT1CfbYy8dbtUCnevDjemBc16q3eg9Z7VaJXstFL
1jOtwiPzZq147Ver94J5YL12HZpHz7Uj7oxcWdYDzBv12bYadYgaFkRNrffH
q89eTuQqi7Ms55jwOD88WkFcHl7amw+hD8ZZVuP56jNus23/OTPVa1oYPWe9
Pkd9tnOjNlazTNToP9R8rBw=
          "]]}]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHd8l9UVxsO8V0URkCFWFJQpUnYURDYhIjIEQUFQREiUJUv2ErBSG5kS
UWptrUpbodVKW63W1lIr1U4rJWwIQyIjQMJISDzP53zfz69/nJz3rnPPc865
97m/NBwzefCkimlpaa3tTyXTh0NaWr7JMyYnq6al7TTJMzltsstkt8lZk70m
+0wK6dtjcgatsRO2/vsmi01OYUPry0y+Njlucg4b+00umBwyyTe5ZHLY5IjJ
ZZNjrCli7gGTUpOjjBXTd9CkhHUaK2efApOawW1p/2vs+yL7VLTvE1UdayUw
y9/K+C3cVYJrYa0aXAtrCK4VjxhcC9N5fBGetOD7f2NyVXBfNV4tuBbuq4Nr
+XRFcBvCWj24j8J0bXAt3DWCa+G5MvjcYtbnE7sXrH+5ybMmtYLjVjzqBccp
fPWDYxOmusFjobEbg+ORL98JjlPtpsHjKHs3sE5jLUxqm9QxuR7bstsAG/Kx
UXCciv2twbEJUzPsXWdyE3MVpybBcWq/m+lTzBqzTmNd2fs21pcT73T2u8Xk
9uCY5dd3wSzfW4JZY+3wVfu3BX8D8FQgLq1Zp3h0wg/52ArbstseG/L3TnBq
XmfmNsXXOuzdgbkNTe42aQ6ejvQJw12sa0ZfNeLYDVvCMctkvEmWSU98EtZe
aPnex6QN+MrZO9NkG/gzTHoztw32hpgMNbmH+fLrXuJ7h0l/tLDeh1ZsSolF
X5OB4BeOwSZdwHo/Wjnsh+109uwKvqHo7iYPoHsoH9F9GmkyHMzC+jC+yt45
kx1gKjP5r8kGky/BPcLkFyYvEZsB+C5fR2FDWMfhq/wawzxhegT8wj2auWo/
Sp/mDcNf+fc4+GVrrMkg2lngFL5stNYVm+wD3yWTPSavmOwG9wSTiXwL9yS0
fJ+Mll9T0PL3KbR8nMN6rZuL1roZ+Cd/Z6IVg6fRqoup2FA8NptsxPdfmryK
bz/C/myT6SaPYVc5VM3qXM5jT/korlgUnC8W4OtU+qZhYzFaPi5By8d8/BNn
/djkteBn4ifgXEoetKfOxnz21B7P4of6vofW/itMFrL/UWK0zORCcG7T/iUm
BSY/NTke/L7NMakS3abauoN05+m+W8l+2kdnTHeJ7prPg9/X60xe5Ftzd8JL
4qf3rP2WyWqTTczLNTlj8ib76r7RGdSZzIcPLsC9p7C1F746A5cWwVmHmHse
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

          "]], PolygonBox[CompressedData["
1:eJwlk1mIT3EYhk9Sv882dhf2LWuyJWTfDWMbW+SCcSM0Yx9b1hExQyE1Q5Qs
ZRlj33chsqWUlJJSSk2TJHeet/fiqafz/59zvvN+769DQVF+Ya0sy3KhNrSK
LGsIV1KW3YFZ+BJ4it+CwHfAJ3w+FODj4Cr+CCaEr8mvQTt8AVzEK2AG3gee
4DdgGt4a7uLXoSVeHy7ht5P/2x/OJd/TGF8Mj/ESmIzvg5/4aViNr4LD+BuY
gu+HGvws1MN3wVd8GTTFy6AaL4UheFt4mTxzI3wv/MB3Qm98enjW17AcXwvv
8EoowlfAK/wQNMcPwO/kmTqG79F/jydnmw83kzNWFi3C2SiTJngp/MLLoDA8
g96tdwzXt8Jf/CgMwPvBM/y8vhFvAy/w57AmnLGy1cyD8YPwBy+Hbfh2+Iif
0Tfj7cPP/py8+6HhXaoDyqYnnErOSLvQjrQb7USzzA53RzMp617hZyvzErxu
uEtfknczEo4l72grviWcpWbajXcOZ/cNNuMb4TL+Abrgm8L+ABbi6+E9fj85
q2GwNDkzZZsX7o4y3oPnhLvxHTbgxVCV/Iy5+JxwVhegL74y3LW30AOfGO6+
OjomPIPerRlH4Z3gXnLHx4dn1qw6Q2Px7vAw+QwuCndQ3dM1dVM71S7V0Un4
EfiXvAN5brjLutY1fKZ1lk/C6PA36ttOQJ3wjrXbecldnRo+K+qsujEo/Js6
oizWhe9VJg3CO9EulKm6NjCcjTo3M5yRslHHR4R3rl1rx8qiW3g2ZaKz2izc
dZ3Z/1U0ob0=
          "]]}]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
       None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxVmHW819UZxy/mPceaHdPZgRt2dyKKidhYmBPFjunAxG5nbXZgEAZiYCAW
KggqopSiKAoWIAqooHvePu/f625/fO75nnrqPPW7K3c+uUPXuZqamq6NP3PH
OLY0NY0LHBd4qrmp6e7APYF+gbuc93ft3sBzgQcCDwaeDdzv/InAHYE7A097
9r7AM46ce9J96H4SeCvwdmCA9HoGBgV6B/oEBgYeDfQKvOzI3hvyg97z3nso
8Gqgb+CxwOuBxz33gvsPB16RNudedO2RwGDpofeHyvGK8vVXp/ekxb2h6oYN
3nHENsMc0WmI9zj3rrJyf7j7zN+X3kuBEY7o/YEjen+kLOg3OvCa+o10H1nf
VHbecIz72Olj994ST6nPWPfRe5zjm/J/RLv/KXxiToy/BcZrC3SaqD7Y4wv1
Yf6la+j0tfJhy8nqw3yC9sJOX3kWvSc5cu5z96H7qTyx9zfSwx7Tm9OHkGua
OqDrD47szZQf9L4LjNJ+P0n3s8DjJc/MCHzvPvb7UdqcmyUNdP3ZERs0l5SD
s3PUAV3nLklrSuBX7YKusx0nadPJ2qlVnP9WGX937RvlG6q95iq5D92FS9KF
3jwl+UwNzFfSFtjgqvg+raSup5e0RYlx/pL7yD1vyXvc+bGknjXGhQK/KPsv
6ooOC3gGGyxYcmR/0ZL6IDvxTRwRd/+M9V0D+waWKKkneixdUm74L1XSXsyX
cQ09Zpbkt0JgSe9xrj95qqTt+5SUd/nA9oENAhsG/uJdZFxJfbDZKoFFSvr1
qo7IvrL77C0rf+y0emCxwOKBtZQDeVeUNnTXcB/91nTkXGvPouvajug3KTBE
PhsHVpPPm+raBturwzqBTdyHz7quw399dUP29VxbSf1XUb8N3Gf+QeCcwOaB
TaWHvNtIFxrvynMrz62lHl8HRqjHZt5jb1rgvcDZgamBtwJnBraWDnS3lTby
bueIXFOMM/IQ9msq6R87qzMytnWE567KBe1/+N0usJtr6LFXYIfAjoFdvIce
uysH/PdwxF928g3gt7f3WOugHPDvKG/47OfYPnBe4Fz5tJc/PPZ3Ds+DlQna
+0gbuge4jywHBfb03CH/c7Z7oJuynK8cnQJzAocFjnbcT56HO0L7GPdYOzJw
oHwuDFwgn86uIePFgUMDRwVeDPQM3KY9NtJG9AdHSO/TQJfAyYHvA5+7/0Ng
dOCSwChlPCHwbck+A55NNeXrIs+O6jA98Fng0sCjgculf4e55HFz3FhzPT1E
P3MNcTvbHEyfQS1u9B2M1GB6lOfco+ZTcxt9ASO1+F7PUh/pRwZ4p6f7A8zD
xDdxPtxaQG2gZr4kXeSltlKD6TOo26+oA2uvyYN6Sk2m1g70PjpRh6nHT7nP
vNEDDVTnwfJA3iHSesZ6McQ7H2sr9KMuU6PpFaihI9UHHYap37vO0eF97zR6
kUZvMsK9Rq/zjnKN9Fxvebyszh/J73XjfbQ6faJ8yD3e+Ru+7xhtxNlR6vOp
54Zp7wnNLb3XUPGZ595xn/k5xih5oI8yDWpu6XvGKje1eJKyUnu/Vk/q9Zee
w/+mKBd1+Dv1/tr7Y9z/XrnZ/7a5pb/5qrmlD/i1uaVfmabc1Oof5deoveNd
m+5Z6hL1CRtQi2dqu8Y+/cxP6j5O2lO1B2dnKMsc5YAHdaxRzxmpnehBTabm
ogd+T35GN9aYozc1n9pPr0FN/lGeyEgtRy7Wkfs9dZuoTOzD413XvtBe8KEe
3BW4pmT/grzUa2Id21CvFzLuWWM+WVk4Sz9Dv4PO0KLGLKYOSzjHfuhKD8E9
egF4DA8MK1nX0HUpY35Pcyb5tG/J/uPPJfuRZdWRvmV5aSIT9bfRgzCuqF3o
BZbW1tT0FXyDFZ3PJ03ObaYPt1X/VaTb6C1aKx81eU3lbe2cXqKN9Bt9D/cn
l+xFzihZt+k//qaN6DfoS4ZIfxllop6vo4zrlZa+gbq3jXeoFdSMEcZca2Wl
5q8v7w2dw2cT76ypno3eZFP3+N1JriQXriXNzXy/NaTxTcke5Szlox/YqrT0
HNvKb3vn6yov5+hf6Hu2VG5q3g6lpf/Y2XdbX12RdSfPbeI+c+o3tRT/aPSC
aygH/UM77+xdWvoUxj29v497nKUm0jPfF7ixZB+NDvQM7eXZwTvn+t22tPQ3
u6vbbuX/exfoPhi4uWRPAb9DlLub39DEv6nzR8hvf+8D+opDS0vPcZj8DnCt
o/udtEVnaV3gN7z+Hbi6ZM6AB73DsSX7iBP9ps85SlrwoGegnxjreWjSa9Bn
/D3wXck+4yLftr1602+c4F1yDTFDfEwp2bv0CLwcGBi4rGS+IN+QJ68t+U0e
+ckcR36jT6EH6hp4rWQMEat366fU8IdK9lD0VoMDb5TsjYeW9FPiaqL5t/Gb
8mdz+tUh81WB5+PMR4EPS/a8rWrq00Xdf1d/aJOLyDuPlcxN5KXz42z3mmu3
Kws2fbtkzBPv58T+EjV12SjGw2r2YJfHeEVgALxj3CTwcHxvGmPnmv3ZBOsN
tWaGfLHVEyXXseEjMfYOnBq4Rf87X3keUib6vV4lafZyzvkrS94/VVv21K8u
DP4H13xrfPn+kvFyQ+DekvGADE/6bv2cz1DeJ1xH5p+0XW95w+tfgQdKxsOg
knqfos2mamfyBr9/yK2nhCy1Zg5ZM8bda74X+ZMc+1d9Ex89Xt/5Uv9h/Mpv
zk72/BnO8as9gt6pgetL5jny3RYlY+FbaV7kNzE2wnOcOTHuzVPTH7rEOG9g
ufg+KcbmmrxWi3HXmvWOGCQuTgpcGmuXBZ6L77NjXLLm+jB1P1vfwyb4NnFB
H3+CNKZIh7fmtwG/C84KGovWjNmTY1ygppxdY5y/pk+uEuPONWn2kBYxf2as
LVZT39HSxJ/PUl9iin6hn29NbFKbl9PGX+pjN5XMqfv6tlf4vi+V9Mnb9Z2r
9BP8ifxIbrxD/+imr3XX36jP5GLy8G8lYxPZ7i75W5H9/5T0Uc7tqgzUBWIA
/+4kT/Ljaep3u3TO8/658kYG/JP+9jrp31PSR9p57gZlg8+Nrp+ujbDPdcrH
3WdL5jvilzi7RXmQg1zd7P5d0uC35J0l83p37dLN+a0l/ZA4v1k7N/sW9Egd
3WN9nG/M+75SMheTh4lJfAu/Hej6KcrytPQuc4+aMdXzyzsOLi29WX99gPh+
VR+A3iBpvl7SV5bzPN/LOrJ3hjz7y5e8/JJvw9oz3u2rHYs2uEg7PO/ZS7Tr
+dr2C3VA/vGBT0rmXmrexZ45RJserL1vdU4M0rORf8hVz/km7A+QN778Qknf
wufpJxq+gK+08+6F8jk+YuvQmu/xc2CWPC6JtWtr6tkrxjY137xHjOvXvE++
o07R77xTss6RWw6vWVculRZyE+P9Yu2AmvYgVogZahkxSn7kt/8TNXMfPn1Q
zfg/3nPYihzyZKx1qKnfUTHeWvONhyoHuWGafNs4DlcG6ulc9gcr1tQTHXer
mRPPls4QdWlbMzc1ch13P3Vs5XeT39B8Nsb9a8bAPTG2rxlzQ6RLvrot1rap
6deHxLhBTT+h1lCnz9Qeraz7y3qfnrxTzbxMjj06xp2qvkotqlk/e8e4Vc28
gi9SM/7ox2rW0Yu0P/mUPDNfzZpB7IzzPDbfpWa+Jld/7F4jD4/Rt/vG/vY1
88SONWsMdts8xqVr5tkx3uHtNqzpcz2kB12+J2hfauJSNXuUrtqZdWy7UM26
u6W+MF6ax8Rau5rv/pm08L3Fa9YezlDjiD3i7rhYW9B3mS6tExxH+b0x92rG
aqlZq/Cf46R1rPT45i0mOuf7vji7V81cTHzQz20pbXyevnSR2L+/Zk7ndys9
CTlk35r+jW8fWDNmiJef9Q9y3Rzp8Ha3xP6RNfPoNTXr/XKe5Q7xx+84fhPy
e/Cm2L+x5v/8WPvVGPlNushGnzO75G+kLWr6Fn51mGcO1VbTtfPasf9ozXq1
Ts18Qa7YuqYv4ofbxtinZh3aoabf4DPXY6eaOWuWv+Hpx39VBmQjF5BryF37
1Ywx4mtvYrdmbtuzZu64Xrm5v452hSa/zYmzK4011mdo8z7Oq+/FfXLaqjV9
C7+iv+L/6X/8Fo21c2v2qWu7x29eZNlHeT5wndjBNq21D2/e0XdfPcZja9bz
2coM7/d9A3xmpLS2cGR+juc+9Ay9MP5CbcXG22nn96RFTuurvug6d80cRP5Z
uKa/4quz9Bl8jPi4xxjh/xUztc9s6bbx/Ez96k3nfBMHxAOxs3LNPHWG+v3i
u1CPyfvkfH7nkUOPlt4sZfgvTM9l9Q==
          "]], PolygonBox[CompressedData["
1:eJwllPdLlmEUhl/SsudEe1A2JSrLJtHee1Jpe1oGLciobG/LlTnLLE3NhhlF
ey8aRBBEEEQQRBBERET/QtfN+eGCi4/v+97nfc59n4S0LSnpDaIoSoVY2GRR
NA4KQhRVwzm8O+zEP8AofDhcxY9DIj4HivHzMBm/Cb/xDJiO34I/wf9jK94L
9gT/TTd8IhTij6AvPh9O4hehM54Jt/G7sAy/B3/xTJiBV8FHfBf0xPvAPrwG
muA18BkfCQ3xs/AWj4dO+BjIx+9AF/wo3McfwBq8DF7ir2EgvgRO43XQ2PyO
dDdJMAWvgHf4DpiN18KX4O+chPeHg3gtrNSz4B+eBf3weP1n8O90xFtAOV4F
rfDL8A3fAKvwOviOZ0OaZgO/8FwYio+APLxeM8NPwFP8GMThlfBedw9Funt4
jp+B9niMfoNXQCx+SDPW2XRG/ADcCP5ZW7wefuKbYbVmbf7sV9ABbwYleCVs
w+dBKX4h+Ls3h1PB78Dwavik7EFL/BJ8xTfCaPMz6mya4Tp8PRThu6ENfgV+
4OmwX9mAa/h12Gv+mVyZ7m1+Rp1NGdLdTDWfpe5Is8iFJ8FnsgAfoDMFP/Ni
fLtmFDwjpeaZUVZ0p7PMM6ps6owTzDunrqkDc80zomzojhaZd0JdKNM7K3vm
WczRM/EMvSP+Inh2u8LD4BnOwbPgCP4Yxpt3Sl1Sx9UtdUDZV8dSzGeiWaiD
erds89/qHQvxAvPu6Bl5+GHzLupOxpp3SN1RZpQNdVzdVkaSzXeGdoVmrqy2
M5+NMqtZpZpnWTNTVxPMd4k6W44PM8/2m+DvXgzPgt9BiXmGlV19pu41Nc+O
OqhdEcyzrp2h3dDDPCvaEepuI/Nsq8PK3kzz3aIMDjLvpLqoO1WW1pqfRZnK
N5+JZqGOafdNM9892oHajZPMd4V2pLoyxHyW6ox2jTqjrmjnqNutzbOujmtX
rDDvlnaGduFS812gnahuLDfvtjqiXTHYfLdoZyibC82zpIz+B6Lpyqg=
          "]]}]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
       0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
aY7pOR0c87vs8Jr992Z9tTNXb4ceULMez6nZi6+1trgD4IpvxLt9avbHyaEv
rXnOyB81RA5fj+dda57zme4Be3RHzd7NWZ6nZi++Vtu/Ws/8fxrPYDkgnjeo
2WcnhD6o5nk6hPqqWe8r1rxvempjlt/eH+/2qNnLiOuXknU12Hioh57WyVXu
xVzu6RXUSM1aHR/6sppnt517xd6tV5NXkbcrPQNXaHt28YJvHvt/W/EO1G8P
bY0NOatmb9uzJld4yG/bmp9fxIDNt+LdUTXPHzyE88U9PzL00TXP55jQW9U8
/5yLRTxT9KTF7HttjeUKzykcAp5wYM1ck+c+oV+s2Wsvr5kL8vAE/mveJeSt
izkkP12tSc7oY55TzsrD5vbRmvc0fXIo8db8+yU9vItr+hFjzR50Ws0zyXm8
pGbNUW/H1axXarV/zbyQE/6eABb6yr4165Va5XcZv8F++/1Vs0apz81Dv1aT
g29dM3fkjbv1C+M6o2YPov8cE3piTe74CLZrrj3bvRxpzdNT+P20fujRNfs9
75byPdyK3tLLvtHVuuJeYo+4C8jBkeZhVOiTa/Yr9uR09+XHkncA+dw73t1a
885jz2d4Hj9wDee4ufPogTuybzXvEjAdKy7i4r7paX0tYY1tH/rKmvcNOdvM
vP1gHLwH68XipT6/L9lnBtbMNevpi/RA+iJ4u7kv3RyDnd48Srzvm5c93UPy
CC5y1s68rVyzP9IbV6l5HjgLB9c8z5xl7jBwcKdtq79tjHG68+A7QYzL6Gum
eZjufv0fwRha3A==
          "]], PolygonBox[CompressedData["
1:eJwtlFdoVUEURS8PA+I9ggTBb3/0w97QxIINsYuxY49oYiGxxYa9V1DUKIqF
2AuWJEbTNLHElmKLRqOiYi8gCCKC4Nqc+7G4a17y5t2Z2XsaJ6cnpcWCIBgP
dWCJBcE9iMHpMAhe8lwH+/BGPI9AV9jPuBZS8WpoAIcYrzf/jv43h/EanrXQ
EC4wPsBzWDR3KSzAayAeTjA+o79BE/wdJOEj4Sz+BDrgdyCA+Yz78UyHIvwR
DNbncA3/BMfxY/AGfwuj8VVwE6+B6Xgp/MIPQzK+TXuAv4aeeCe4jlfAcHyp
+btXQ1v8FvzBU6AvPkC/iT+Agfg5eI9/gIV4GfzFT0IfvDvcx7PgIL4cbuDP
oI32xfzdU6EAvwrf8TKYjE+BKzqr0OdqBQWhz5mJ74ZEvBD24LPM/SFcwi/D
VzwbmuMl8DP0M2iptcPv0OfYgFdCPchlPI7nJMjDX0BnvALq6ncZ9+bZTWeG
V0EvPEF7hlfCUXwz3MVfQXv8NvzDM0LPWhXUjzKnLGaZ/5YymYiXQxxkMu7B
szUU4+WwF5+jPcMfwxZ8gnl29Zv9zb+j/9WZaa0zzLOgNe/Ed5mfTQJMNF+T
1qI1jzDPiLKhjI4xX6PWdh6W4aPgaegZmmmeEWVDZzTP/B31bspsmvkZ6WyU
6RXmmVPWlImV5hlRNpThZuadUVeaag71EJ7jP2Cr+R5rb5XpTeaZUVZ0JovN
O6ZulUCxeUfUDWVM2R0EH0PP8FTzjqgb+aF3S51T19SxfGXRvAv6znZ8h/nc
p2CueWfVVZ2J9uYifA59j5S9aeZ3iTKobrYwX5s6qu4PNZ9Ld4Duqo7mWYlF
2Vlk3i1lKM98T7QXyri6OsT8rlFn1cV25t1SJ5XNHPgSeka1l4XwLfQ9LTLv
oLqnz5TNjVEXlFHdhSnmWdGdmKt3Mb/7NGe23DwbWrO61CXKrjqlu3J11B3d
mbobM8zvuvgo62vNuxoXdW2s+V2rzs02v3N016gD/wG+Cu2g
          "]]}]}, 
      {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[0.3],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
6QuenwCSEpIh
          "]], PolygonBox[CompressedData["
1:eJwtlOVrl2EUhl+cCILPAUEEQWSK/4Hds0UU3ezGlb3ZsxucHwwUFXOCYvds
N7FAEAuxu7uZjXHdnOfDxXMf9tsT97nPWzMzPyOvXJIk6VAe0ixJSqAaHA5J
0p61BdxFP4HF6HFwG/0W5qJPQA24Qt2StRSqwyHqBqzFUAkKqBex5sEN9Cvo
ix4AF9HvoS26GVxHP4L66P1QESZRD2U9AKZzqTuxpsNZ9DNojW4MV9EPIQPd
A86hX8IS7QP30B+gJ7oPnEe/gXbo5nAL/RjqovdCCmRTN2I9CJVhAXUT+QRV
oJB6BOsRqAqnqJeyzoAH6E+wBr0aytBfIQt9GlLhOPVoc4/kzU3YbP4mveUH
dDX3SN7ozaPM36i3ybPu5m/Q3fXmfHQXeBHc8+HmnskreaReDYTLwXumXraK
vVdPN5rfQWd/h5HohfAcfQ16m2dE2ZCH/dEd4Gnwnhaid8O/4GcUmPdcvVam
ppj3RL24D8vRK+Ez+ijMRPeDj8E9XIFea+7dMaiD3gDf0DkwGd0L3gXv8Xh0
N3gdPLPyOjNmUZ6PNc+Aeq+erzI/Q3t/gQnmmVfW7wSfjVlwKfiMnIHc2Pta
yhlMi9mvzToHdsKf4B7sQ9czv2uFmK3Bsfcpce9l5lnRGdPjntrrAvU61k3m
vTgZ/G1jzLOiN+rtE83vKg+UtXmQxMwNiXfWXUups83vpLuUBPd6qnkv5Lm8
LYrZl8eaxZz4W82kZrGh+WxazNp2+B08c3r7bPgb3APNSmfzu2tmdsA28yzp
f5StrfAreMZ2mWdCWdAe+lsb+Bn8N5rFYebfAs2kvjUd49v0zdkDg8y/TfJg
C6w3n03toVltaj7Lmtn55p7La2X4P4h/0TM=
          "]]}]}, 
      {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[0.3], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHnc11MWxx+lTel7IyntIcqaLCO7sTYKIXuURLayTrJGDNmVZMgaKoNC
WWZhjDAIJUmJNkWbSkpROe/XfX9fz/PHec733nPuuedz7vb5Pa179et2WbWK
ioqB8ad66OlFRcWPIe+FzK1fUfFJyOSQPtG+NmRAyKJoTw35ImSe9k9D5qs/
C/k55NuQ70K+D/k8ZErIAu20F9pHrB+MNy1kZcg3IbNDloZ8FTIjZEnIdNs/
6vtlyDLtX4csV88MWaydMStCZhn3J+206waeNaHXhqxyTvLeIvp/qZ9tv4pt
gX7zbG80D+ZZpx2s69ULHT/XMb/Xz7UD62/aaTPPHP02GQ+sdSKH1dqrFxkb
uVcrMmbaFUX2pU6bF9kO1hpF1tRysyLbGVOryDhZn5pFttPeYF7gqVdknODe
Lb4bhzQJKYqMjdzrFxkz7W2KnAfzpCLbwdqgyJrYjbST+9ZFrh1YtyqynXbD
IvcRa1t9wd2yyOtR1zzACb7mIbWLXKemRcYDvhb2MWZEyJ0hQ8RR3fGtjAfW
1uotlV9dzza2wbqD+MG3sxjId6ciY6C9u/ltF9JOO7Vpr6YGOxqD2uwqTvLa
RTvt7Z2T+fYwHvg6Ob5tyD5iIPe9rRHtDiHNrM2+2sGxn5rYe2mnTvuLjbh/
0k77AOcB34FqcB+kBt8hYiP3o43bMeQwsbF3DldTmz+rwXSo4/A7yrwZf2TI
nra7Od/BISepmbOz+MH3FzX4jrUW2LqIB3xd1dTveDX4jjFfxpwoTuY7QTvt
44xNrJOdn9yrpRzrvJDuYgZrD/Mgx9NDjhDTGWqwnqmmZqc6jtqcbU6MP0s7
7b7OfYpyqPNtEmfPkNXi7BVyrnUh9+Yp4+kdcr7YwNpHTY3PMV/GXGitme8C
7WXt27neF5kHuC8NOU2s/cQJvsvso900cqgZ8s/47q8dfJerwX2L47FfaR3J
6wrttLeNGLVTxlcjZUzXhNxsHsw50LzBca04abdKGf9fQ67TTl2vV4NpgDVi
zE0hlxj3Bu0XhwxyHnK91Xwv19bd9WwSc6WUcdztfMyzZcrz/y3kDnNhzjvV
5NssfOqH/Du+7xIP44dopz3YOanNPcYmx/vNm3rcF3Kj7QfsI/cH1dSbe4V7
lHtzqH1g2ibmf9s8N4T84pwPmzf5rvN7uDUbIJ5HzJXcHxU/OY4Mude8njbW
COduai5PiIF8n1ST7+OOw/Zfxz4V8nnIO+Y+LuT5kNEhzxibXJ4N+bu5/C/k
XWOPMS5zvmdOY4vMLZb6/r4Y7VHGGGU8Yr2gP/P8Qz3K+R8T6/shk5xnim89
nOBVxxD7E9983v7/R/tDcXwU8krIxJDX/WbchJCXQl4OmaztTeKEfKz9A/Mb
77gXnO8z+cl8udf3tkveNk8etshcv5APLJJn/Wh7sr5z5VVLqvCsxfrVcD2b
uB4jrTV5P2edZss7Vsq3frY9X95R8qy1VTjUGrnQcvlQyYPQcIs52lfLS3g/
eUdnyYl+EvM651gol1lv3hvlKkvkICUX26RtqVwK2zfmvkLeBVbe8ZL/MccM
OddS58aPvIkFX4A3rJNLwTNWy/ngNOCAv9AGN1yF9lr5Ge2VcjjqPdM5louN
ePXEAA9hvlXyP8aAGx5CjUqulsQGV2loTRvZLrl1We9ttZVcE2wb5HMNxNlY
v/L97iY2uAccpXwLzxAbHKaF4+EeOxaV/KyVNWpjm5ptb7uu9pZiYFzJ13bQ
jznhFx2co6NtcPKu7VxUcrV21ou+ncQAT9lFTLvZZs13t72Vvm3Fxjx7eg72
0K+RMdqb697mUfKkw8QGn9mnqORbB4oBDrKfmPa3DdZOtkuet29RydtKHneA
fswJvzjGmu1jH3nBKw4R22G229t3cFHJ4Q4XG3zmCLEeZbudvgeJjXlKbni0
fszZ2TxKDtfZ3I+zXfK2ksd10UZOcI+Ti0o+11V8J9gm9+76kQf7ruR3J+p3
iDFOEs+pjiEPeEePopK3nS4OeEjJy9BniqGHNs4qe6u5dWHcaeI517ib/AYL
nK2n2OCTvcQCZztPLCVXO994cI9LzRsOc4E4+toG80W2u2nvYx6Mu0ScF+t3
grF7i7Wfc5T8rORr/bWB8wpt4L7SNnuMc8s5qC33AS+8D652dXw3TpnDvVVk
PnaN8/KmwhfgCh2tYUtzh+/Aew4P/6EhvxWVvA1e1CD6tgr5jznBU24V2w36
gRkeBB+CB8Er7hcPnKfkdIO09zcGNnjcYDEyHh4Cjyl5W8nj0PCl7VLmf/8y
7yH6DRQjbfgdXPB287unqOSJd+vHm8nb+by53+/cj9nHO7qxyPwM7HC0oeZN
jEetK1wOrvaQOcKdhosN/wfNCW5T/lYeoV/JFx8Q80jnJ27JieBfT1bx4/sJ
c33cMQtDphaV3A3u9JSYntDvEeOV3O0Z/e5yvkf0G2NdsL1nHL7hOfA3/nf1
pbalITOKzIlKrvaC87xYpQ1PGm9d4V8lT0HDtybZP9oxrzqmwr3MeYa7TXAM
XOyNkNf0g6fB5VaFfFtk7rYgZLa+LzkW/80jZnV/K9VxH3GW3hU79aoX/XX9
jdAw9Nby9YetMes7J2SK6zPdelCfL/R5yrV615hD9WUdvy8yV8Y+N2Safg08
Z4PNZZI1+abInBWMX1vv8db2A+edF/JVlVp+aK3mh8y0/UORefMY6/aRcZYU
mR+Ps04fWyvuM84r52N5kXkw9jVFPg/DQr6z3m+KYZrxV4Z86jqtLfJviaHW
6UvrQ52mWs93rCc1WWQd8Vlsfcea12xjgnuG/eCYJZYPxUueK6zdROs91xwn
Watx5v6tPj+LByzLrPV4c59jju9b6zLGEuOQ70IxTXGNnxTrIrFMcw3GGHtp
FRyLxUKNF4iVe5c9cZs5rjDPwdafu4j3jHeui1h/qlKPZeY/2/V4Q3yrxD3T
dZ3g+s+3fp9ZizedZ41r18Df3bfZt9b+9UW+A1nHO/zmrmYvbzDfdfpxT/7u
N/4tI14L37Cp2oZr/03/X4wzTL3R76aeZd7yzVK+L3jv4QAV/h+ji+3j7NvM
O4W3H07Q1X58etpXXa6ArmZ8vje3v6758r7+ai2GiaWm/jW8Q3iXyYM3m/e6
jv9jucq+Or7ljKtV5V7awrtpC33wr2V8YjYzPjm0Cd3aN4++evpsbR9rUfh/
j9vdI7PcJ23sJw55sL68xfQV3oGvu18mam/gm72ldyMxu4d+NeW9Q19D+5Pv
NXsGbtJYLOBoaR2fpS/l/QiOVv4f52n+p5TyeXrL8dSSN7eRdzLcqpX/q6ot
/7nK/baN2KljE+vMOPrZV71CH2ycZ0JflPIZHRW6X8rn+yFyT3l93xYbMe8L
vb374YHQh6a8F4aFHp7yHl3k/+n5LXhW9HVyfaltG9dmRMpjNoqjtWvRWp9r
rHNra3Ju6ANdFzBtZ213S7leU9yrTZ2rhueL+rxOvJTX/qDQN6d8RseE7pLy
HbBz6FvcP7uwzq7ji+zrlO/CA0Lf5P6cGPrylO+w10JfkPI5Pi30jSmv2/Oh
j0z5Dh4d+tiU79EJoS9J+Y7cg3lcl5dCX5jynXp26FvFWFNc51nDZtYHjg2n
P17dQh90c7HX1Z+6PRf62pTvxR1TXkvW8Y3Q16V8144NfWLK9zH7+lT39imh
9075bTs99CD3Wwv3M/PumfJ+Yi+9HPrSlN+wG0K/kvIdfG/oHVK+c+5Ouc03
a/Kw69It5TzIgVqeYT27prxmrFfvlNeGddkr5bPEOToq5bpT844pYwZv55TX
gPqT+07m3yHlfc+eJ8frzZP1b+ce4Kz0TPkcsFa7ul6cj91TPiPszXOsM+vW
3rVj75/pnmR/tXWP9U15vVnrcaGvSPltHJjyerAW49n7Kb9vV6bshw97sIf7
8LKUa02dL055b7Gv+qS8L9mTA1KORZz+Ke9d9u0P/l+Ks8pvPH4n8Hvi6pTP
DOflD8QJEZE=
          "]], PolygonBox[CompressedData["
1:eJwtlMdrVkEUR58SEES4FwkSshN7iw0bIvYWe1TsJZ+9JZbE7tKuYO91rX+B
dSEIgth77xp7Q0VFPD/uLA5zJnnvm7nt1c2Vl5RVz7KsGPJgoGfZIrhrWfYB
yvEB8A6/Dc3xo1AHdrIfwloCF/GPMA9fB1X4LViJb4Sv+GNYhg+HL/hDaIe3
gKv4E1iBD4XP+COLZ0fCJYt3FuD94C1+B5rih6E2rGZf4XEn3eUeLME3wCf8
AazFp8M1/BU0wQ+BwRr221h7wB/8N0zCD0ItOM2+EesBqAkVFrHOgZsWMffF
i+E8/gam4d3hpUWMMz3uoLOvw1y8F7y2+A3lejBcsMj5LuUZduD/YAbeE/5a
xFCEb4VfFs9sx1um2iiGUvwI5MNZ9gtZ18N7ixrP9riz7noDuuJT4Qr+0+Lu
feCcRQzj8H2QByfZN2TdDzWgkv1ijx5S79yHUfgI+IZfhikeNVetdYZyPznl
VjXoAK09eu0Z9Mbbw1OLO/RPz+h/ynE9fDN8x3MWtekMpyxqpNo1TndTDY/D
hNQrhamXyjx6VT2lWMan2BTTIOgIzy1qolrN8qidaqZaqGfUK6rJMXxM6o2C
lKsGHndTzrrBFvhhUbNheCd4YTFDqlWz1Iv56VnVRLXQO8rlKo9ZUk4nppgK
U8zKxSYotchJfXwvVEt/02wt9ZgFzZjObusxi7qDct3KoxeUc81OpUctNUOa
tS5wxmLm9Nuj4YTFGfo25FKv6RuxG/Z49K7e0bdgucds65ug3LbxmFXlWL05
32O21aNjPXJakM74DyHItuA=
          "]]}]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
eXxp8eCGFx/rHhvqK+e2kefU31jAD08qLb5LHw57sj7sXZPXPlqS//b1tyP8
grOd7t7wrm+7P/zxTP37ln38OMM1R7vuNOPK/ieK47vaanjt90qL136/tHgt
/Sdsn6wt7tZZpcWzm/3gkOfYP9d+w3fP1b/z7IMB3ginbHh249P5PqN/gf2G
79L/NGR+SW7L9+PF+tRwUPgf/Pci/W/46JX6R724pLT47mWlxXcv1yf45M/1
4wr7DVdm/Vhjh+9wvav0jz3gcX90D2rS1a6DM/5Gu3BF+CWcF378q2jvW5M7
/ks/fueaht9j/znts1+Jue01+WnDfRsufI17NL/jUPs3q3nPueNfjvZC6xp+
wDNvdM1N9uGkN2uXfDzEb6drHGfeSjH2Tkk+y3r4JrwTXg23vU5bE3z2rnN5
1i6vxA6cFm4Lx4WTwgsbDouGI8JDJ2qHdxS89q6SnBeuCmdteDZj+9fkr7Oi
3aUmh/57SQ4Mz4XvwmGnh77HPabYxtZk54zXHr6tWZNr3hftDUL3CJkd7Q9C
3ihZY+aV/JbjjnBvyEXycLjPqT9LQt7y2eslv/NHaIMaQG3aqubd495tE+2t
a9qlNj3m/KUlv+exPbqmf2D7pOR3IPuvKPmNQd4sKHlvuDMDY+6Amt9b/wl5
rWR+nO0c/P8wZJG5gL/kJrn4dsl1f/KMZ9q+1rnkzBb8LlQT2w41c5e8fVP/
qdE7eT7kwb/1G59Xrvl9Mskz4PuEsx5ivDmz/4YsNl/edw7Y94w5e/hNwj5z
jdUMMRKrnjXfGfiyS7QHyXn4/eFNfVvuWZ4lvnfESGzmO96rZj0iruBbaAye
Ml4XeeZveKZ85y4w/k+IGbzdat6NW8QDrinGkvhz39pqxh0flpk3I8T9nvFZ
v2Yspop1qXgXmgfXigNb2HnFOLIn+3OfZ5ovH7r/XPcbIe7lYgfHp8aDmH1s
vPHro5LnPknbE/VxFe8suXqQd4nvx86e1yh+g/KuktcfGL/OznvQOV2sL2Bd
tWYMBrmOOrKHtvkeXMP53H3uxBLPZzX3xSa1bYy8YS3vEXcczre2v6VS53ew
1nMe1C9qV61ZixnbyZr8N58X24ucxxxqDt/P95Z83uGcdR3n3KnVva3Xi33G
OH6t7x3HJzgo/JM6RD16INob2p5t3DYytrOdN93cwg9qHXM/71r2X0/f8GFT
eef/95Hvcuab1MwFznzjmjlCjLt5Lr2dz1rubHdtcgfgPXCeMb5TeLdQ6xg/
pfh7su+mL/mMccZ4Nsjc6mMbvsT/2x7XZj/PcWttn+bcLbS5o+f4S33BPjX2
sJrvY+5mX+stHOxJbZ3mnLE139mswz/u8Xau5T3eRwybu24b7bDn9u47QBtw
g4vMLd7v2MDWs+b1e97vkd4LYsu7b4R5jp2B7ku+kX8TzMOda9bW553HXjs7
h3zjrgzyXnAneZ9Sa0c4jv3dau53l/4TO+rcEY7fYR4NMa/gsHt7Xoztbh5y
F/fwTqH3tL27a+/V5uE1/ZjjvPvFix8vGad9jCHvItrE71H3bvJrL30Axy5i
ZO6+riVG8InbzZ9h5gwxJta3Gp8DbMMj4BOTnDPKs5jlswme3XDzZ5BnhM/j
PT/ek9TM4Z4vNXOYeUsuDPAcu2if/anfn6tZC+Et1EzuPnq07YlimeQ486ZZ
0/gWgrNNdv3d1hDWdvX5IQ32kv2R2huqza7ui0346/ViWhFjbR15/98KWVDz
vi8Jfb4Y54R+reZZvR/6vJo1+O3QPxDXemHj9prvqE7RvrVmbekR7Ttq1s5u
0f5zzffl4tBnGTfy5QjzcFfzB+42zjbj7bH22prvw3PIqZp39lVys2bubBRz
7qlZa68K/WLNdxXfC3xjwIlWjjkrdeT/WODlNxiLr9b0D9/+Hu3NO/I9fUu0
N+tIDvFJtH9fszavGmOrdCQHObqmf/i2VuhZ3oWHuHM186trjD9X886CaZwY
14jxLh3JQZaFrN2Rtbtz6NU6skYvDVmzI98x40N6deT7ebBxI2bUs8PM2y3j
+dSadec44lSzdnFHqK3UxTPJ65r3t2/Mn1bzPbxJtH9Zk1PcF/qbNXllvxj/
R03e8Yua2MD1CLGvyRV+G/rhmrUCH6+r6ef1nHPNu/xAzVgT554x59KaPOXU
0M/XvOPE++aaMZ8R+kTz6sLQD9asXduKt78C/ks857HGAX2o4zdy/ubbr401
cb4mZHnN9+vkkCtr3vfbyPGadeYkcr/mvb7NvKSekCN/q5knP/OcOKO/hlzg
3ekTc/5Zk5dNrNmnze9h/GbHd93qMfbjmpzshdBX1OTO7HmC+55eM7/J7UWc
Q82a8vWad4z79cOa94G7cHHoCTXfG+BeLHZiyV0lnsfgV01eC+67xQ6mZ8RF
zp5i3hKPrxmTn9asC9SEn9SsC9QEcC8R+/GhP6jJoTnbkz1faslfXEsOfsM8
5Fv2yJrv93nkSE0ed1nNXCFPyIsnzY0fkZs1vzeoW0fVrF3cvzNq3kFqww3G
5NzQN9XkAtNr5j05z/041jvyB9bVfHfdWTPvyfm5xKkmDyWXv2I+T6l537hr
v6p5f7g7/wMzJicS
          "]], PolygonBox[CompressedData["
1:eJwtlWeLUGcQhe+ua+zKnWtFTVwNwkJABEFUBBERwW/+ADuaqNmN0SSWKNYE
e8Neo1EjltjjWmNNsRt7wd5711ifw8yHw5m5b585Mze/c1G7wtwkSXqAPHDY
kmQYOJwmyU2wCrt+liRt4GP4o+Hx4DT2B/ADdndwC/s5WINdg/lN4JP4x+EN
4AF2DvwClGW8HnyHb1/B1fAbw9Pwv4avaQ5Yh/8lXJXxRvB0/MHwY3Ad+yDo
h90L3Md+Ab7FvgkqgN3438C1Wd8C3ox/Q2tB+ZgzAbwEKTBwFVwBZeIOfcBn
rG8J72L993BnzcN+lvpd8hjPjzu1h2+DiqAZfge4EuP14ab4hXBN/GbwWvwL
8HnwCSgFvgMdwWXGnoJd2HWY3wq+hD8Dfq2YKG5giuICLjCWqziDe+Bf/Erw
j+Z31l31bX282SJm++C/wF3sE2AP9l5wA/sQGGGeY+X2KCjGPmV+VjH+f/CY
yPU9cAZ7u3KEnQdvAbW4f3P4HN/6w73BI+yXoIvuwvgXcBH+z6ERaeM4GKB7
mr/lFf5muID5beGzqWtzZWhHGv3T/A46+0nq2hpl/jZpLMXvFLkpiNwsUAxS
z5G09rv52Y1Cyz1De9L0EeWKb3Xh93xbAZfGf4d9O/W3FoV29eZS+CUzH6sb
WtwasWgRWpgcb5EmppnHSLFRTqW92fgXU9egtDkJVA6NSht9Q+utIpZLzWtD
MU3w36umtBec4Q8xz22DiGVx5FIx/Rx/MVyI3xreZq65apGzA/AH873epK7d
+eDT0LBqa5biZl5j78C80K7mVGT/CpnXUnXtAeZII4pFaHum+Zg0Xp655TKv
lSz23hm5rRGx2AQeph6TRdK+9sG/AvZjLwR/p/6tROZv0N1Vs2Uyz6lyqZ6k
XjDR/Cz1hIHgV/O9/ge/mGtSWlSNVmF9t9BuQ/i0ec9RrykB52S+h9bWgefG
m/XW2ua94pZ5b1DP+A0MBW9Tr8ElkRPlYj/+Q3hQ2OpBO7Cnmp+lmnsG/2Te
q9WT/zDvwTkRo+HwcvPeLs3+o7PiLtLYWGnXvJYT+CkYaV77upNqZbd5b1LN
SFu5mb9NGusaGmsQGlLsVXMFkYNl5jFTrPSPWW3+T9G/RD1oo/kddLb+GePM
e7x6u/45HwEwFQKt
          "]]}]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXf8V1UZx3/iLLf3XJRypuWIFAeKgjhygFsQhFIgLGeiqeEEQcMBihtc
qIChhggoOFITd2rmTjLT1NQcufeq5/163vd1/ePze+4594zn85xznvO5399a
w4/oN6JTR0fH8/Fn0bCjS0fHqMAzVUfH9oGfBDYM/FS7UWAHbbfAroHNA1sE
drRu48DOgU0CmwZ2so5y38Bmge6BXbT0PzowJDA0sJvj9QjsEdgysFVgT23P
wF7aXoG9tVsH+ml7B/prtwnso902MDCwnfz21cJvkBZ+ffQdXwdbB7+faeH0
cy1chxkLfN/f/n3l1FeuQ7W0+4Vtdw/8Sj7wGG4dvA/QwvuXWtodaNt+tu1h
jA6yDt5H6t9+gcPkDNdfawf5bmd9PTQwwHaH+x7eI7Tw/o194HeUFn5H+J75
DnZ+4j0zMCkwOXCM/InTSPnD9QT5w+lY6+B9nBbex2tpd6Jt4TpGbnA6yTrm
Hx04RE4na2k31rbwO8e5Ge8U6+B6RpV7EX/HGUd4n6aF95m+/21gvBZOZ+s3
/v7OuNB/gu/hd5aWdhNtix/n6gs8Spy/7wS+G7jC+ZjnArnB6UItMbhIO9Z4
j5XTZO2pgYu1+HWJFn6XauF3mfb0wOXaM+Q3zDU7PzBKP67UL/hdpYXfVC3x
mC5P4n21Fq4zAuc53jVa+F2rhd91Wvj9QQu/Kfp1pj4e5ZpdL2e4vh/4V+Cl
wGx5wm+OFn5ztYx3q77i443WEft58oTfTdZRvlme0wK3aKc7318DjwX+GPi9
XO+QJ/zu1MLvT1r43aXl3CzQwulu7azAMbEnbgh7T+CIktzuDRxbktt9jFeS
2/2B+fqOrw/IGX4PauH0Z+08fb9N3x+2P1wf0cL1L9pbv8Xz9sBT8oHH49bB
+wktvJ/U0u5p2y6w7QxjdLF3ELz/qR/Mf31JDgsDf5cPPB7Sd3w9oSTvZwPP
+R5+/9DS9gXHgwd75FF5P+975rs6xjkxsEnJuLOnODc3aNlP/5YbnF7VEoPL
os+lJfn9Puypgc0C78iH+U8pyeM/gTflg79vfIvf2/qNX//V0v8V48vc7wVe
lMcHVe6/lwMfamn7kRZ/P9bi7+bhQ/fAa/G8RUlfPgl8ql/48pkWHz/XvhX4
Qvu29jl9/dI6/P1KC+9vAu/q75YxV4+SvnSUPKv4vkhJi++dSlp836qkT4uG
XbLk3MyzmPX4uHhJi49LlLS0W6pk26+Mx2PGjtz6tX6tULI//ZYt6RO+9Ar0
LOnL//QdX5exTLujAgcF+gd6l/RpucCKjoe/K2nxZbZzLR9YuuT8jEVu5v7h
zqjN/bwnr5BHyaE3lvT1e4EZgdMC25TMxeRMcug4x+4S+L7t8eXKwLmBzoFV
rcOv1QNVyTtnDS3zXxOYGNgu0DewYaBb4Gzn/0HgosDagfUDPwqs5njTAlMd
bwPbrBPoGvihbTe03wa++75+7RjYIbBuYCfb/CTQJ7CzY6BJ0WxoOPQLmgTt
0ehCdBI6FJ2GbkN77mR5E/tQRt/1sYzO62u50aaU0aa7WkaT7mYZzbW7ZbTX
HpavDf8mBX5aWq2Mpmx0Kv41OpVyo1MpNzq1v9zQYgOqVqcOrFqduq9jD7bc
aNPBVatNKTe6Gf9GuUe4d+cbc9am0ffb6x86q9Gb2APkyf0/TJ7DLcPhQPvA
4SDLcDjYMm3RPCONHWMMrVqNO1ye6LRDqlanHubaoruOlA/nY4T8jrTMeGiU
RmNij9a/kb4b6HjMMcT3jYY9yjkYC110atVq0GN9j844zfHQOeP1dbRxhT86
7nj5n2i50aCjnX+M5RHOgz5rvg2GyHus7Q73/VjjeJLj9tHv/YzBOP1udOq4
qtWaE4wHWqnRcuMtk4/JP1/rNznmbOdAo51jnM6Qf/M9s7/czrFPo9GJV6MV
Hq5anUpu4u7mTr6/ajXoxVWrWS+qWs06qWo16+Sq1amX6DcabErVatZLq1az
Xqa/UyzD9Ur7NLrngarVrLxrNOgM+aDjplWtZp1etdr0mqrVptfqH9psprGj
39Sq1azXyWemZTjNsk+jJ2bJYbblRqfO1u+b9B1f51lu9Oscecz3HXoTPXab
fqPR0GpTIv5neL9NdZ3mV61+vdmY3ei45xmPRr/e7riNfr2javXrnVWrX/9U
tfr1rqrVr5TRrnfLF+16j3zRrvfKF+16n7zmulb3G/c79KP5xoB38/1zYdVq
2QerVqc+YizQd4/K4THLjPW45UanPl61OvUJ+TxlGT5PWx6lvoPXJSU168Yl
+6CvXnE9HtIneKDpFurfc5YbbfqcbZ+3zPn5p2U4vGAZDmi9F+XwkmU4vGz5
ceenjIZFE/+tajXZl1WrWfH18pKaddOSPqHx3tCntyyjYdGsr+tfo/uYG03U
6FAseWW+HBpO/7UPHN6xvNB50Jro5VeNLRw+cNxGv35YtfqVMrr1YzkcEM+7
l1bDogk/qVr9+mnV6tfPqla/fq5PX1rurOZC3zUaGj/Ia5zts+SHXiNv9q8j
RiX1bKNZ0Y2Mt5Sa77fuC/Y9eRZdx7d9o3fRkGhh+sJrH7Udug6/0ZPo3gMD
e5XUwsy/jL42+nJFxy3quYNLq0nxlbbMPdp1Zu/2NB80fiwrdzQqGnYx+9SO
u4TzNHoZi9YkdkuWVncvUVo9vrjjMH9nx1pB7fE97TrqkNXUhmhEtG4Xx4fP
6r5fUZ1IP/QpenStknrmB47ZaFn6THVMnscGxpT8FkNXokHRlocHBpfUuWhq
NPQqgStK5s2tS+bOzsYHXzdwDLQeOni9wPSS2nf7wKGBgSU1LHq267e48fzj
knp2I5+vKqnRty35Pcb+Zm9v5bqzn4eV/GZ7zTPDfn/dfdfTdezquIz588Bu
pT0r7DP22B4l+zLm3iXnYI/tF9izZLv9A/0ct58xYH+sKx+4sFd7u1fO1Hdi
9KuS306dXPvejn9WYELJb4rzjBPrNCQwwHHXN2bE88LABSW19KfGAp+Hlzxz
cNrX9qzj0MAg+f86sIvxbTjg/yElvyWI089c827uhb6O0924MT7fdnvr/y9L
xu4TY7+78Ydff9v0MIZwn2GMltPf/Xx/WEm/mevokmd1H/0aqv9wGmgcdjA+
zdoOklcv1wl+I+TTTR6DHX9z9wGczjXenMEdjTtjHx84ruRvHfAjn8JvLznD
d5Ax3ch5DnceYkNu2soYHGQc9nQfdJLroXIaLH9821W/8Zk8ObJkruTuRxM0
egjdgGa4Wj/RB5zT00vmSeL3G+dnziONDWPSF51Bv2PtO9J39zg2z+TnAe6P
rq4H4/a2H/0bjYJ2wS9yCXcrunZmybuW8U/ymTuXcdEKC2zzB/uQh08umYtH
WSYnn+zzM97dJ7kucIUzeYmcM7nkueD3pTH6wNkid5E3byBmpb2zseSM35W8
y1/3Tqe8me1PdZy5rIFjHef+uNd6fFhODmPkiB3rM3mAXLlyyZxB/lxWe4X1
tBlfMl/MK5nHuxiHi+U+3nYrOx7PnfVpgnE4x75rWXeW9ddY7uJ72pFzyCXc
F9wT5B/Ow5olzxg5fH3rzy+ZmzrbhvPCWf+FcTvfdmv6nuc1HPsC/ZnsOq1n
3YXWX2sZH24J3OzcE/W7izG5yfE2NiZ3q5HQaeR/YnelPvL+EuP2qu1o87TP
aKpN7UvdufZd09hOMc68v9y+vL/KNrfIBZ/J+9yp3APkSHIxeZJ7b7r1a9hm
ddeeOZYxptO+9X6a7dnnnO3mXJM32WPsR/b3s55f2nAWxljPvuW3D76T+W5u
/l9FeZ3QZvfKa+94LnXmsG3DblNn3v0gsFqdcbsrnneuk9MfA5vWueffiedH
St4lE1wj9tKS8f5HdcYHvTRHnye5xsTq48AT+rxXtF2+zhzDubxBXgvC9qkz
Xw4N+17JvNg7nreu8/fFxerkA5elw65XZ9xWCTukznz8rv3pi75CP6GdXgr0
qDNP9gzbq85ceSfrU+eZPSBs5zpz84Cwb5a8i7rH8+Z15tMXAxvWeabvDmxR
5506yf1xkWA/r629xTjwPN968t9M1/oEy3zfERN+I1ho3qMN7/luut4219me
vhcYZ3LgXN/NMacR21PELMckHpypLs4zy/gz3nWOf7Zt0JBfBobVee6pm1fa
31Tn22aJOuNLbBd3HyzmXpht/OfLnzh8Hnjafcua/6/kuo+zz/LuwS9K7kPO
wlzffzfqX3HvzbGe/bZc1L9qHJ4JrFlnnpqoz3DqoK7O+7wKu3+dd3Jd59qz
7tStZP2DgXXrzFddwn5YMg89Ce86cwn7bmX33vu2o00/9lRJ3UHbT4vfG4HP
5E5cvyoZ2zXi+amS2pbvPb5D+L5hb95ecn8Oj+cV69RDG4T9c8m8St2PrWeP
/8u1YJ9u5F4lZt+pM24/DHtPyTuCs/tAyfO7WTy/UFIzvMwa15lficH9JeNA
/BYxhv8OrFpnPmOexZ1r/bCvl9RWrMmyda4LOeCjknmAfHNHyZyzTzy/Zvv7
9A/fnjWOxPAfJb8z0Y+MTR/aP1Qyp5BPHi6Z48hv3wQG1anjVqgzdsRnUda5
Tr2G7eQzbb8u2f6tkue/j3v+Rvd5t6jbpE69RF68tWRupO62kvXEbCnjRmyW
MT7/B8eZ0HM=
          "]], PolygonBox[CompressedData["
1:eJwtlOlLVlEQh29m+0qek30r60O2QZYZlqUtRmVaWb0tWpatlmkLBIEQQRBE
EEQQgUTQP9G+77RRZPtChO3Rvm/Pj5kPDzNzz3vPnXdmfpNVXV9el5YkSQrS
IT8mSRGsD0kyE9rhl8B2/DFwGY7DFKiA0zCZ823YTDgC44k3YW9lJMkx7ATi
LdjnxIex44gbsE3EnfDLYJeew1U4CeUwH07BJM63YnvAdygm3ozNhd74CUzD
XwYHlSfxBr3L/W/1HvE8bB28gXfKGWrhJtyGPFgIX6FnNL+Z989hS4l3YnvB
ZxhLvBE7BF5CBvFs7CoYgT8a1uHPgBfwGiZCDVyBEzAVKuEO3Id8qIYs3v2l
b8JiOKta82yHzqAjfiXsVx5wHS7BHKiCQZxFmIu/Gn6rD7DI7xzAWX/Ixk/B
BeVCvDvYs2twEWbBAjgAOZzXq9fUo9l/o7Ni1SRaj9VbfeOV51Tl/7nJZ6bC
a/zIe6zeFsA9r0ml1+Cn16TaZ6xLtBrWeE6jiB9ilwercVq0GVDvp0Mhfh9Y
EWyGW+DfxS4JNiP/4AEs9R5kc94v2n/pC5nRaqjaaWa64Q+ElcF6/Md7pN6U
QfdoM6Deq+bvg82cZq0EQrSZq/UepYg/BtPGHt0ZbeY0a43ei87RtKCeSCtf
fNYafPYOeS80g9LC0WBakiakvRvYocE0qN4NjqYF9fCT56Bv58A3z6HR32mL
XwH78IuCafdHMK1Jw6p9y2i1Vg9aSVuwV70JVuu/XhvVXLvhqd+lHSEtt4bC
YJqWVj94LtKs7kqPtkt0p7T3LNisS4Oa/Q7ReiUNaHecD6YN7RDl3iaaVvUf
huM/9ty0U7TLzgTbJdppT4LtPO065SSttY+266S5gmialpbXBputkdF8zVge
fm60WV7jszUsmq8Z0+x0jaY1zdB/sgO3rw==
          "]]}]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ZfPxnrFq3fKF+XrfvlrnfFY1Oudz+XMNnVBr0WeqRud8WTU656uq0TbfVI22
+bZqtM134vjBNmP/aBssP9mutc1PVaNtfq4abUO71ja04Uy9T7vWDNTW4KY+
RwPU2oY6u9Y2tOtvB9OrRufQBydqfPZerZGIBTf0A33woeZH19R6hnatZ2jX
eoY2Oohnv60aPbNKavQM7brW30Cs1OptUqNtknyo61dNjW5ZQ3xt7HskbGoq
ugQd9msx11oUfrW2aZcabUO71j9tzdEa4qi1FljROGvJt9Yz68pnfdvwaW+7
1jPtxU1tv5E5QoOsLe5N7Kv1En1finUZcWzm2XqU52VXMf7GPuoF3ge8Z9AK
1N3UqefH7yFhl6WiddA5v0tFB20hBsakDkcbUPP8HHZBaur7vcREf0exUv9v
Lz+0wjZy49p28kdT1PpmK8do771by+cPjlNrD+p79A0aZhfHo27f1eep86nh
l8hFF11pDuC7U2p0zp/My06OASY0we6p0TN7pEb/1HpoN8dYOpe6eWxqNA/P
UEdTI1PbPx52VyqaBv3SWZx/do54t6F7Ov0fPn7vIz76uxiX2v9g8VGnHSi+
g22Da//UaJ2ujlHrrnqeDjUWz1DzUaPzfbK7YzEm790jjMHZzZp6MRWdc3gq
Gqibcfez/0jH6OYY4DrBMRivh+0DHfNY8R7jGGgd9ElPx6ZGpe6n7qVuHu19
aII+xkAroBmoZanzzxRLn9RokrPtq7VQbzGd7vOMgc7pK74z7OttvH5iZRy0
yhNh96aiS2ijIdAS1PtoiAHGHejvp1LRQ+itCV4n/n3G6GsMnj0/NVqov+Oj
Naj/l81FV9zoeNw7ODU6h/vQC4PEPE4u5B3dw769wFjoBbTEzalojiG2yTU6
BV2CPhnlONxTa6Nh9hNjpM9MSeX84KzkLOds5VydbR/tZ8MeSEW3TTI+sTgr
OY95X3yYyn7lO8aXYQtT0b8Pht2Zyl5h/7CfdkmNHgPLH+1nH30ctiCVbyCP
pvJ9gf67fZZ9eKI5Ij/1twPW40Nh99g3TWyc6Z+nstdZ32i6n81ZL+exp/me
4PzyHuTdxnttbir6nP6ZrgXmaXoq88maeNI10df5m+jvp1PRh8O1SeZtTthk
2y254AHXj84rc3q/10Z432TzTg7uMofzU/kuWc/bFOfxrVTel+TgOefvdo05
HG1upjp3F3udsV4z153N4z1yv9p55Izj29o0c/tSKrlqZS7vNZ8TzNFAOc0y
B8/IbYTYZ4v9nVT220z5PSZHcD3g/ayFB8Uy3vmu5/oROd1qfskZ3w1mOl9v
GPsm8/Cssbn3efM7w7ns671POZcr5XKGdnaen5AruZlrfmY538PN3+POFc+u
mMv5O9ExiM/+4Fp3+T0jR/b79+J82fySW74pLfR+5oBzfB8937YOE+/bjjHV
51vJ/R05EY91w5p51Wc7OVf/TmVN32lfJ/P6pvE+d7zD5P16KnuDXP5XHpwD
H6VyFrCPqUmoRVr7PZY1834qv6lV5olpeZ/j+d96/yq5PM+a5tvsmsZb4LMf
eH8H/Qc++55j8O2XeXvNueP76gLx4D82Tva7K9fxn6Vy/nwh58O8Rt8uGjXM
ruaDezhbWPe8B3s5v5yDvHPbRPzVcul7wb7DfY4xOJu+SeU92lNPm/Pzp1TO
hX+4LlgfvAvYV7y3Bog/5YKJs4T3Bedb27i2Ri7ttn5DG2S8H4z5sHPPfqVW
pV7bwXsY+2bxg6m7z9E3xHx3cF74DjXKOnVdvmfnwhFc1KMdvZ/v7MxRJWZy
3i38Wbmc6/uG3zqXuTsg/Ha5zMX6fE8z5l/D98kF2yeO0VGfjcnaaZ2b/1+s
4u91HHtt71nZ3+/aXtv109q1t6LPr+BaWsm9PDb8dbnsjQnh++WyTh4Nf1Qu
5+Bu1Oa57OW9qGdzOZ+uCH95LvvyU9clmEeF/0sue2pW+F1yOeeux+dyrl8S
fnQue+/iXMZm3BvDT8xl/9/MmLl80x0RfmQu+7xj+Gty2f9/I6+5nFkXhr/I
+mSf8FfncjZ/6toix6xfas0jXF+sK+oRnqG2qdcjv1lXnDWt5E6tvbTzy3pB
w2zuWljU9bCYNT/v+svsY99TS1N/7+rab2WdxBz9yjllzfMeZV9w1nJ/F7Es
Kx7W7/LWygv9zf5aYP5ZYzuLAwycX+Dp4P6EQzfjtHEvk4PVzcOq7nHi72u7
i5jb5iZnbcW/unuT31+Z3yP0bYxzpvf1E8sSYkOnLGU+e9jmdzd/H2rOyAXn
3tnkz7XEtZW8/oJtcE4K3yuXM/zW8JNzOdNPD79tLrXYHMbJ5f29KbzN+cnh
N8nlHfhI+INzeYezJ9ZzfU4Pf4L3zAy/Qy7v82PJgXPUHX7Oy/G57B/WD2fA
/s4Ra3Nv1+dJxM5lfnqH75rLvD0U/uhc3tVjwl+ay7sNrdwll/XFej/ONX9t
+E65vOPOCd8+l3N4WPitcjmL4LqRfMG7sZjBe7iY2ff9c9n72+SCCTycW5yJ
nF3k7zxz2C780FzqttPCr5nL++j3uWh7cN4Wfo9c6oPdw/fIpS4cF37LXN7x
p7JX3EfT3BdgPjKX8wg8nXO5j3sOymWemCP23yKO1TOXOQbbjrnME3PE3E53
7tYJPy2XGuEe1mwuddBauXAA/wa59HF9dvhDcqmJOP/2zOUM3D78GbnUeZz3
w8R8AXnN5aw9NJfneXbnXOabuT4mlzlmfsFyoHhY47Nc5/8DQYHR9A==
          "]], PolygonBox[CompressedData["
1:eJwtlPtrjmEYx5+W1fIH3NdvGDnntM2InBdyNgxzHjnbCoVyLNQmcmZGc2yz
zRw2Z4uZOZ8l5HwsJaWllJLPt+v54dPzed73ed/nvu77e13JOXmZuQlRFGVB
I2hmUXQGfoQoSoHxeC0kwn7uS7iWwxe8Borx0foN/hJm4OfhN34YVuCT9Bl+
F5rj1fALz4AteDcoxKtgIV4DEVRwP4FrFfzED8B6fFj83TWYh9dDYyjlfhDX
OXAZfwAt8XPQgE+HfvhUuIC/hXR8M7zAX+kZvA6S4BD3Pbn2gWL8NmThy8x9
AAzHc83X8hj64tvgNf4GCvEi+ICXQXutDf7h+aoJHwmV+CPohDcx34vrsBU/
Bp/ws9AUPw3f8VTojLdQjXgdVODr4CH+FZaqDviI34Ip5meis9AepOJt4Qpe
D2vxWXAJvw+T8V5wJ/gZrsFXq+bgz/Q2X4PerT3KwFPgBn5UmK9B71YNi/El
cBUvh8Hma9C7S2AEngY3g++J/qsNXAz+n6PM90h7o8y101rhL14As81r0NqV
gQX4UPO91TvLzDOibCjDK/FV5mtdBDPxgXAv+DuVja7m2VZGuuAF8FxZh+Xm
mVaWtUc78O3mWVMGupufoc6uCDbiG+AJ/jR4rR3hWfCaxypLkBD3RLZ5ppQl
nbFqnW+eJdWcb55pZVlr0tp3wbvgNezFN8W98R524zvN91rP6Oz3mH+nDCg7
pfA5eIaOm/e8el2fZeJHzHulWj2OHzR3Zay1egv+BM/IPvNMKovqgZP4CajF
vwXfi0pz156o96aZn0VS3Lv9415UD6t3hphnRz2kWdPK/Cw0czRbJprPCs0Y
9co4871Xz2i29TCfZZpxefgp897VmjTr1OPq7cS4lhzzWaaadDZjzGejzkiz
Z655L2sGaXZ1MM+iZphmV7J5r2qG/QcqdePT
          "]]}]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
xnqgv7aUz9a2Sz3ZTnzb2FdqxVI74jsUlTbbp6g05/ZFpTnbF5Uu/adm62K9
2omp1J87ipXnabei0px8G7OXO9ku9eQeRaUJ9y0q7drRuODqXFQ6dqei0px7
ya+z7VKXEpdvHrQE+qL8LYkakwOd0tMcjOsmV3TZ/tamq21yorm6y62bfeBG
Q5VaEI/uaiq3LYpKfx5kLeg/pKg0ag9rie45Vm7dxQSHI8zRxf5jikqXHmVt
etoudeZxRaWl97MeRxqL7ym+CcdYr6PsK7Vor6LSoicUlV4lbkPfe7zzmIce
Qged6fuGd99xYQeG7ZoqLdqvqDTnqfLnXl9rdqrjSi16mjzRXmeKr7991OBs
+9AkfOffIeeB9pU685yi0odD5YTmOs99Mcg2uhDNNLiodOm5RaWB0YR97B9U
VJp2oNiHmQPcw233M2epQfFDXKcB1g4+I5wDv4ttwwG9cZk50UzXOB99dJ38
6b/U2NfbV2rXkWIcZZ1KzXlVUWnOq4tKo46SzxXmpn2X9YXHDeYo9eFt4kaL
3SR2tNItcrvEe6VevbGodOat1utG4zJ2tPNLzXl7UWnU0dZspGNHmOfmotLV
VxaVFgU3moPv+XeKSn/ea+3QWfcXleZ8oKg054PiQlehp7r7u91oc6K9HhXr
47bh94hzbnDeQ7bRNa/Kg+fuiaLSmWPk+rRtaj3WdslhrJyetV1q4Efkg5Z6
Tj7oshfk85Jt+LxsG0yv2C5175PifdU+4r4ubrQQugTd0Tnq0C5VmpJz5E1x
oz94JzdTe5U1esNYY+x/S3zorQlyGu86weE922OL/9cHb5uj/H3hbrm9byz6
0ERT5YHmmCSHybb3Vf+hKUuNWmpWPHqvuXru9aLSt++bf5o5wPWp7XHmRO+h
T6fI8R75PCu3z5xzRozpn7KmKbUl2qy3mgyc6Cc0xxLz019qXPx0sc9wfi81
53diQpeh085LWaNunCoNSR8adI550HZonwVFpfEWmgdNwDc8enG+udCXc50/
3f651mWW8TZXf6B3BqWsOVulSjeSo5+a8zdr85P4Sr06z7oSD12Kjp5pnUvN
udhxaLVltlfw3UTt0GsrpoyRfnRJ12jvpMZC/6Gz0JWbqPnmi6+e7znqUkc9
NlHOZQ2Ih57cLfq2TXnvlzpzZfXiWuoN1rO8N8d5S+VGjhJLA3Xfis5bQz1a
X61WR/3YwBy15qinFi3fzw0dB8b6rkX5exx782Lf1cQ5KOX/T3CWNVQXrm1u
dGYTNWUy12r2NxZjctw5KevPLY1FPTgH+DZAu67rucH5wRm4Z/iO8tvOc4Xz
ZPfw26f8LJ6W8tqwLtu7lyf7jLVw/GHhO6T828veKf8GxLlTat317W/h80kf
sXnG9wi/gzl29LlkP5wc/qSUfxs50f3L89bYeOu5X9q4Ll1S/u2Ae3uF3yXl
52AX61HrHmpr/Pr2sy77yB8uOztmVddmK6+bucfAvqv3G1mzdtbzgJR/LyD2
kSmP21re7Y1fYqqV8w7/4NHRuXy7dTLHYGtH3Sa49zk/eqZ8nnYQ707y2sq5
YOb3jJ29bu6asnb7W2vGDxEnXD4Ou831w3Z3HjG6mqeDeVtYs87WAB5d5AKP
A+QCrv3NBa9jxMee6Wk8sOzn2rOG7Ms21vA48VHXvVyz9q7Zm+7JQ1Pel7ta
O2rAPjxEHuA9ynnU/gj3BBgPNza5eS9wDnSydtSNbwa+P/j22Na47IEeKT+3
j/se4IzmfD4l5bP1N98LJ6T8XLCXeUdwhnKPPt4XrAfvHt477HOuv/W6T8r7
vvyfUx/H0kfOPl4z/iJjsk9GiIFcx5ubXPiTvea5BvOvvgvA3doa9LUOxBwq
bsYyh3Ogr+N+M9dw55zumF+NT5s9foEYZlo36vmEde1hDQ/2mvsjUz6zGunP
Svk54pzjHGzqPfo402q9v5Z+oGPYE7x/qfGW3q/13nnWjZpdJMfe9n3rep4v
F2rAt8XHjh9snTt43dJ6XyDHk7xu7Z4cIv5WxmTtLrS2U1yjocYfZx/nK2MH
iQHs58hrqJin+I4e5lzqQe0463m/XGINL7Hd2OuR3h9gu7F1pM25ynl2sGvB
Op/hWo90/AD5jnDdh7kHZro3uOa9Otwx3J/POqf8DD0S9pA14b3H+5vzdVHY
iymfJR+GTXINl4U9Ka4Xwu60tqvJq4E5h5n3mfC3uy5/hL2a8pn0HWub8rnC
e5N3PN8Df4U9KpZrncP48WFXWf9LU+YA/vfCrrQmv4Sfm/Lvx/eFLU35DHst
rF7TfP49FfZ3yudlnbj3cspn3iu2uX4zrG7TfNa+E3ZFyvvw3fCXp/zMwvt5
uT8rPrB9Gf7BlM+xj8Imp7zfR6U8n7lPG5eYYBkjHvDeK+arXQPq/5h1oSYT
wiamfEbD6fWUeV1jLajDE64Ta1T+X5wza3q0v0r5nP0i7POUz/6vw75J+Sxm
nce61j+GzUr5/0Xfh/2Q8tnNen7mmr4V9lzKz9O4sBtT/o5gT81IeV9NC/s0
5XcD9XjYmtzh/FbW+42Ua/5z2JyU309Twz5J+f3xP1Jjlpo=
          "]], PolygonBox[CompressedData["
1:eJwt01lLVlEUxvGD9CHebVcllSIUagOmFmppVmbYnE0YiCBYEIT0BWzWSs00
osmiUVOzSSvFvEmNaC4rhwazVCwloov6L/Zz8fPIe87Z+6xnrT0ld0d2YVgQ
BGmYhFuOP+FBsIfrdJxDBRYhGmfRgvlYjnv4jZ2Iwl2cwVLE4wYeIR1zdO+8
1rJnHmpNWysRF9CGJGThK6qxBJswhBFsxUKcRjtSEYnL+IvdmKVvL0WCariI
41iMmfiGDmRgs+4dwQI9cx1VSEMcmvEYy5TBVRxDMmJxEmVIwVR04YFqW4ET
eIZsrEY5DiurVNVar6ys5k5lHKU9a/Ae65GJ2/iFfMzASzzX3mvwVjVabevw
QxladlvwDw3oDwVBkbK7hHBlaLW/0FqWQTe+692Vzs9KE9exkJ+ZP7iCGOzC
azxBBNaiThlY7bPRi6fq1QZl/1H/Ww8qcU3ZrlKvPiNHPfuCT5in3/bilfaa
q6wr9a5lPuz8jNls2Qztx0/kKQOb5RL7LeRnegw3MQ3b0YcBbFSN+/SM3Rvg
nYNcx1GgNRqVcZEyOKqMLJvJ+IAe52fRenoIEyhUpvfVc+u1zXA/RrFN32Cz
V+z8bNoMlikDqz1FtZ1y/ixbjTYrB/St+drLzlCk9rRvv+P8LBVor2712va0
s1yr3tmZfoN3zs+WZdTq/MzbrCepN4POn13r0X/f2LIz
          "]]}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgm4T1UbxW8lCSEh9j5mGXKveZ5JxEWIDBFJkZIhkqKoSIoU0qBJJUkD
UqbMKk36Kl/jp1lSfalont717N9+9n0e77PO/p9z3r3Wu/fZ+6zjVh0xru/l
x+bk5LQ/LifH/uUs8Dk5syymWFRwOTmFLI63cGBhCw+eYJGBRSwqgidaVAKL
WsyxuM9iqUUVi2IWxS2qgidZVANLWFQHS1o0Iq/yNQYrW9S0ONmitEUt8BSL
2mAZizpgWYvTwXIWNchdyiLPorwLWuuB0loflNYGoLQ2BMXpNHKIR11yn2rR
BI7S2o12U4tmaJbW5qC0tgDFqyWo3K1AaW0NSmsbUFrbgtLaDpTW9qB4dbTI
RevZ5G0Npypw6oxmaT0TlNYuoMahK6hxOAuUtk7kVv26F9CaD0prD1Bae4LS
2gsUpzPIIR5zLSZbXGlxCzjFoi+apfUcUFr7W3RA67mgeA0AlXsgKK2DQGkd
DErreaC0DgGldSio8TwflNax5FW+y0HluwDN0joClNYLQY3DSLC3xUVgH4th
5Fb9RqFZWi+x6IfWMaC0XgpK62WgOA0nRw9ya8w1d8bBUVpvpD3eYgKapXUi
KK1XgOI1CRzO+AxH65XgCMZpBFqvAqV1KiitV4MXW1wDjkJ/G8Z4PBzF6To0
S+sMUFpnghqH60GNww2gtE23GE39ZhXQOhuU1ptAaZ0DSuvNoLReS44x8O3D
2NyKZmn9n8XLFnss5qNZWm8DpfV2i2nwugNU7oWgtC4CpXUxKK13gtK6BJTW
u0CN592gtK4gr/I9DirfUjTHtXkOWu8H9fw9AOr5exCU1nvIrfots5iH1odB
aX3UYgFal4PS+hgoTveSQzweIrdyrYSjtG6l/YTFKjRL65OgtD4FitfToHI/
A0rralBa14DSuhaU1mdBaV0HitdzoLTuJu9qON0Jp41oltZNoLRuBjUOL4Aa
hy2gtD1PbtVvWwGt20Fp3QFK605QWneB4rTB4hF45Nj+/Z3h/6mp5qbm4sto
ltY9oLS+Akrrq6B4vW6xntxvgNK6F5TWN0Fp/Q8orW+B0vo2qPF8B5TWL8il
HF+CyvEeOqXvfVC1/wB80eJD8CWLj0Dp20du1W8/OqXvY1D6PrV4DX2fgdL3
OShO71L3nfSjMdfcOQBH6XvW6rzW4qAL8Tb6rrXfLvOBy+U+5PpavHzQdsji
G3RK37eg9H0Hfsj4fYi+70GtMYdB6fsB/JgarGGMv4KjOB1Fp/T9DKr2v4Cq
/a+g9P0GKsdPFp9Qsw3Gf6XFOIvHfdDxp8VfBTT9DUrTP6A0HSGHeOiZ1/Oo
5/MYH3RK33E+aJMmvVfpnUfvQIV94KEcx9vxj/Aq4oM2aTrRB5Smoj6gNBXz
AaVpqR3fa/G7HS/ygXsJw5I+6SjlA0rHTs5VtqjCsc6f4sMzJu5lwGMtyoLS
capFIR/4lgel42Qfcqs2zo5P8EGHB6UjA6WjIigdE33gW8mitA85xKMCuZWr
KhzVT3OLmha1LKpzj7jXAMX9NLAs15WDe21Q3OuA6ud0UNzrguKeC4r78xbP
wX2jxWqLKywmW0yyyLOoBkdxakh9xb0RqPONQXFvAop7U1Dcn2F86lu0QIO4
twTFvRUo7q1BcW8DinuDAuNcinmnd/Ep5G5r0Z7rxLcDKL5DLHpa9LLoyG/i
3gkU9zNAcT/Tohnj0wUU966guJ8Fins3UNy7g+J+nkUP+r4Kjvm028G3Fyi+
/ehbfZ7Nb+J7jkVnzpVEtzzJneQfbHEu/MRrACheyywegtcL9Kt7+tOP7tG8
PMI6FD2e/E/0ivJTw+ya3hZ9LC6w6AuvEaC4Xwgq90hQvC4Cxetqi6kWAy2m
wf1ii1Ecq2ajQY3bJeBQohe1OR8UJ/lgeUN5xeiH1Y5+WO3oh9WOfljtMeRV
PvnhymiWD65CO/phtaMfVrsdc09z7lJyqE66pyg54rug3kXi+7fex6MHlj+M
Hlht+dS6tKVH3i3XJQ+c55IHrueSB67vkgdugL5GtKM/b4SeJrR1vzxXJ+7v
TDt64GYueeDmLnngFi554JYueeBW1KgpfUQP3MYlD9zWJQ/cDm3ygx3Q1ol2
VfpXruirW7vkgQv6w0EueeAuLnngrvDoRlu5utOOHri7Sx443yUP3MMlD9wT
bWfTFo/etMWrD23dL881zCV/fiba5Af7ueSB+7vkgc91yQMPcMkDD6Refekj
euDBLnng81zywENc8sBD0TaMdvTkyhW/y2jc4neZWi554BEueeALXfLAI+Fx
MW3lGkVb2uS/RrvkgS9xyQOPcckDX4q2sbSjPx+LtnG0db8813Tuv4529MAT
XPLAE13ywFe45IHVjh54MvUaTx/RA09xyQNf5ZIHnuqSB74abeIyjVpPIFcP
+hjukgcu6A8XueSBZ7rkga+Hx420lWsW7eiBZ7nkgWe75IFvcskDz0HbXNrx
u8xctN1KO37vuMAlfz7DJQ88H23ygwtc8sC3u+SB73DJAy+kXvPoI3rgxS75
3iVokO+7Gw330ta7mN4rD1Pr+eTqw96sPTl6ZuXawh6m/Sv63ge4Rx7tIXjL
Y8lrjbfrrvfhPSd6v40u+eFl8JWnW+mSD1+BhpW0ozeOXnk5fSzk2sfQuYpc
0Zeuc8nrygdGr6t29LdrXPLG0SsL5SejH17tkq9eBe/n6UM65fvWu+SNo1d+
lj7ie7DeKR+lBrpH3kke5120yvdtQcM22tHfbnfJG0evLNzskh/eRn/yeS/B
W95sNzpeoh29cfTKO+kjevJNLnngl13ypW+75HVfd8nrvuGSv32TWuj8ay55
5ldc8sN7XfLVe+C9jz52UI//uuSNo1d+iz6eQdMulzyw6igfpff9f+AtD/gR
feynLU7yWZ+45I3lIaP3O+qSH95Pn/J5B1zy4V/A4wDt6I2jV/6MPvZy7efo
OEiu6EsPw1t+8JBLXvcbl/ytNMkXf01d5tvxDB98c/TDukd++iA1lDb5vx/h
cYR29MbRK39PH/F7wQdwP8o98ZuCeMnH/wb/dT54+7E+8JYf/NMlbxy9slA+
U55YfvgP+pf/09qjvvVs5LAO6Te1ozeOXvlv+oie/Ge0yTPKQ0ZfKv8Zva68
YvS6asvXFkOD9BUp8N4tlD+Mflj3qF76TX2of3mxUswteTK1pVl9ynMu9sEz
n+SDp7vBBx+aw3Nf2icPXAYf0JO1VP3LJ1bwyd96n7yxfGb0fg198sMOHtU4
Ly7yZ5XhWpX2eNbgqK0ifeyEYwn4VSfXeh886gSfvG4tn7xubZ/8rbxiOc7X
9Mkz1/DJD9fxyVerD/ld+dJ6cNX7u97j5YlzC+jPpY/o03qipyH3RA/cyCff
28QnT9uS69pTb/GTl5S3LIS2cvSt823R0YLrogeWn5zEca5PPrmVT15a9xRG
c3k4yTvKQ2rPzCd/9LqdfPK30e8KO/vkn8X7Sh+8YxufPHNHnzxwV5/8f2Of
PHD0xN24Lvpn9ad3Be2R2q/kmeSd5MPy0JkLD/nKvvDqR1s55CX7w0XvCvKA
cy2u82Ed6sL5foyb/J08pOa6fOVgxnIIbfnjAQW4DqCPJT547EE+ec6hPnnU
UT753hE++V615XEvIlf0ydE3C4f75I1HomEYfUTfO5r+xtAeTJ/yy7db3OyD
h+7I/eK4j7VY63AHflMN7rGY6cO3wVU+PJN6HvV+pOesIue1rse1XsfaB2/h
Ot2juapvLnp2brW4kTETaq5onmjt0bcwPdtPWzxFW+OjNVv7xGzytKXPGfQ1
z/Aa6jeVY9VoOlqlfSDnVNs5Pnxbyac+0xivB33oQ+c2oE26lvuwh6l9GZzE
5w5qqn7i/7Xo/as39dVc+9Nijw9rrDTehq7J1GISfS5A20z6kj5995gH7/t8
+Nap75wTqY/WQK1La3z4Fqd6PkBN9b16Lnw1dk8yFo+iPx+ds6mnrtF+Uxxc
yrG03s0YqG+d03602XCTD/vHdOowjb5v8uF5Vvtmaqu95n4f9tMV6J2NvoWM
2ZPwKE7ep6ib+tFerL1rCRry6edh+tJcXU79dlhs5x6N6Qr6qpPZ+wS1Uq31
dxH14PIYbc0PPdsDqYP4FOO3ZfwufITj3Ra7fNgb1K/eGzRnxP1p+O9mnCox
Vqvptx731UeD+tB68gR5/uA9RO1xaF3GtVt9qEU+9dWaM5iaLWJu6PnU/pSB
2h/zqMsm8uudaB1jqzFWW3M7l3vyuG89x5rDG6nhBM5VpM9NjNFqrqnEb5vp
axvjovrE51/PvvYx7TdtwS3oWsy9i9Cn33uAW7nmcXIe4r1UfbzLPNnKfTq/
jWs0PzZQz5Uci892xk/HPxruR+N3Fu9x/ecWjbMw9mup1e+8P67l+CDHX/GM
LEb7VniLz12M3SDmwm7mwU7mUiXaOq4M7ub3otZ/sSyMVUnuKYGWHdSjmZ0/
5MP6+IlF3SysN10Nj/jw3HxgUSsLz2R5wwpZ2Ad2kVP9nmS/Fc+CBm940Id1
RbXRs6T6lDAsmYW58JoP653m/NfwEIffLZpnYV2rZFg5C2vKTxbHZuG5a2PY
NgvPYWHDN6mPdFQkj/pvmgUOP1t0z8Ja1tLwDx/WjbJ2XCYLNf7FomMW1iBx
/IE5K60OvTlZqJHq85fF3z6s0cp91If8x9vxAR/W41J2fHIW1rnWWdAwixp/
TB5x/IpaNbHjL7lXXH71gY/G8FsfxlH7wzvU7XT7/XsfnrPSdryX8Tps8Y8P
z+BexlK/tzcslIW1SHOzA/MzM3zRh/3xU8N6WVjvNZerZGE+/2axz4e9ulUW
9Et7/FsB7WeqQUPqrBq/Qp2r2W9Vs7DuVjesmYU947QsjIeuedWidhbeA6T7
BMbiI+aNxqKG4fs+7G8N7Lh+FtZscX8L/geoo2pYxLBTFvabXMO8LOx5xxi+
7sOa+i97wnNn
          "]], PolygonBox[CompressedData["
1:eJwtk0lI1VEUh/+ZZYZCaZa8e7NMUxGHcmNUlpRFbVvl1r1aiiItLBrIIaci
ysgUbRBEBEFwq5ukVBrUSAspjRDLNCTJoPoO5yy+d37nXt+7Z/iZWFR6riQs
CIJ8CId/jg8fBBXETHgLz+Ey1MFe7vbBA3QpzMMvqIEn8B6SuH9IbIMd6Fi4
h74Pf2EJyqAJtnMXAzfRlTALU3DLaQ0TEM39XYkQgd4MhehaOIbeCM3obghH
b4JL6PPwAgrIe4lRcAi9TmyEp/AF3kGD0++Ifg137OwVxHmtXd6MRG+BFvRt
eAO7yIdD1A1fbWYyq2o4wd2a1SrfmYHfUA8X4COk8zfXiOWQhv5AvAhXIYV8
v9faZab56ONee3ssPaGniY+czugU+ajNqs96n7G3ZAZnyZdtt4Nwkvy77bIH
zpAvEtfpZcB2n8BZq3lgD3orFDs9G4cM8nbiddut1NBnOw6hnddZTPKbOeg5
q70TUslHiH9C2oN4Zd68JJ5Zhc/Q5dQjiV53KLsTD/6Aw169JDPM9uoJ8UIH
jMFp8n5iltPekr16U3o8iP6ErjIPf7MZSO/F9rbU3Gk1yK53wlBId74b7b3u
/op5d9xmIR5esZkP2k7D0Bu81nLDqXePwjOnHs5DH/F6J2fyVrzX2cmbk5y9
NG+Ih0Zshz02wyz0Aa+9S0+56AWntYnnM8m3ef1fa7fZ/DTvyYz+A1BGno8=

          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
F3Y+vdzLfi5d5Xzkon8L2cP/Az4REiw=
          "]], PolygonBox[CompressedData["
1:eJwlk9lKlVEYhn/CLFKbNRvWJ9JsWWqTUkJFUtocpUaDsknLE/WwrqAuQC+j
iCyCDirLRocGpcgGECKCIAIRPOx5eQ8eeNh7/d/6plWe6znTPSfLsjrIgxWR
ZavgbsqyYSjFK+AJPgqFeCf8wW/BBrweXuG3YROeg5/4HViH74MX+AfYjO+H
keSYy/D58BR/DRvDOejux9CEN0I/PgTr8RJ4iz+CYnwxPMffwFy8HabwQ3Ag
nJNy0Z3l4W909iEcxLfCID4GR/G68F3vYWU4R+WmnizCu2A6Oadm/Bxcx7/A
tnBMxXoGp/FT4Vw+w97wHYqtntTia+Fdcg3n8ZZwbd+S/2sNu8704FVwE5+B
y+Eeq7c/oBffCX34LBzGj4Rr1W/L8ZPwCb8B1eGYinUP8sI5K9cG2IKvhsnk
Gan3S2AieQYn8DXwNTnmcfwYfMTHk3u1Bx4k9+wavjC8O//gKl4G9/G/UBT+
Ta4ad4e/0VnFWIrnh3dDO3cBbwvX/jI517PhWSjnBfgV+JU8oxq8A37jA1AZ
3nHttnZAZ1O4F/pGu74jfFY7r9ouwvfkGlX79vCs1YNL4ZyUi87oLcwL91Jv
QncXhHuvHLSrekN6O9rZXeEZanbqyX9jk4wq
          "]]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAnYjlUax7/ShlCKT5b3vJqpaVMpTXtKTJJp2mZq2qZpamqqad8XorRv
RCJRIZ9QiEghhWRJlDUkIdpEiSTN+V3P71xnruu7r/93nnOe89y/+3ne93nv
f9NLrzvr2u0rKipqVauoiH8Vh4eKirYxTonxaKmi4tYYt8V4TL09xsMxbo5x
S4xHVNY97vwdMZ6KcVeMu2N0Ve+J8YTzd8Z4UmVdN+c7xHha7Riju3pvjB5q
pxjPqJ1j9FTvi/Gsen+MXmqXGL3VB2I8pz4Y4/kYD8n0coy3YoyL0U82avCC
Sg1eVGF9SYVpoMxd3aerTP2dh3WAyrpBzsP6imwwDVFhqnKeGgxWWTfUeViH
qbC+qsL6mgrriBh9ZB2p9o3xugrrKBXW0Sqsb6iwjlFhGqvC9KZKDdbFWBzj
U+s40Hq8LTNM78gJx3iPwTdBpR4TVdZNci2sU+WB412Pwf2eCveUGMNd975r
Yf3evJbEmOYxuD+UgXxnyAzrTBXW2c7zfHykwvSxeZPvdGvH+XOch2+uyrpP
XPuOe7xsXeZ5DNYFsr1nvlPlWKKS+6IYk2VdrLJuqfMfxFguDxyfq7NiLHOe
fD9TWbfCeerxhQr3ShXuVSp8q1X4vlSpxxoV1rUqfF+p82N8rcL6bYyFMn2n
LnZ+krVYLz98f4/fTa1jtAnF91UpRoixUWZYf1Jh+kFmWH9UWbfJeVi3yAbT
LypMm52nBj+rrNvqPKy/qrBuU2H9TYV1u5jfN7JuHwqFtVoolM/NDqFQntMd
Q6Fw7xQK3RBj51AoTLuEQmGqHgqlBjWsBTWoGQqFdddQKEx1QsEM626hUJhq
hWIe1tqhUNbtHop5WOvF/ytCwVRfhaluKOapwR6hUGpQ6TysDVRY91JhbajC
2kiFtbEKaxO1uvccreG9R2Etq7A2VWHaW4Xpdyo1+L1KDfZRYd1XhekPKkz7
x9gzFDU4QKUGzc2VHA/0GNzNZIb1II8xPkRmWA9VG3tvl/q8HuZ+sLaQE74j
VPj+qMJ3pArfUSp8R6vwHaPCd6wK3/Ex9pPvBBW+g82dXFt6DL4TVZhOUmH9
k7Ug95M9H9bWKqxtVNad4lo+x6fJA0dbj8F9qgp3O5V17V0LK99bfE/zPf5n
j8H9N/NrFePMGMfJepZ6gnPNzPUv1ojanO083OeocJ/rOfCdp8L3V+e53ule
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
ftN4f0+0Khf7sid1aifL/wA43wn8
          "]], PolygonBox[CompressedData["
1:eJwt0FkOAUEQxvHGiAkykUjm0czYCSGIxL4llldHcABOyGE4As/4d+Z7+KV6
raru6HI7X5PGGB8OuqExVTgw6KGOHBLYo4lvYIxH3GGLJ/MscYQDCvixtiau
8GCcVO5AuWyNMfphvJdGBUcU8eFOjThFBi/mC+JSvd2DuLdNGNe2PZ7Qwps9
X72Uddf2NEEDeeW04yFSWptjptyueunoLbanks64elNbNX39SaQ/8vQnA70x
rRp/Ko4jMg==
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
         "]]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
/k4xf70zPFoCz2a4nHf72c1n8/8BYQ7v6w==
         "]]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxNmnecldURhldNr4oJdiz7GYjRBCGJIYZEiUjsaIRYogbESmjSBESaCNJX
QHpnqSILuPQOwtIFl16WBZYiC0iHRULO87vP+V3+mAxz5pw57zvft/feec3t
tRs8U//KjIyMDeF/rgq+ODMj44ok/CPYR+HfTYI1DdY+WL1g9YPtD7kLwUqC
dQ5xY/d1MN8gWBfPNQvWMVjDYI2CfWCe+EPX3gnW1b3Ng30crHWw94N1D/Zu
sBbBupkn7hmsZbBWwXqYJ+7l2nvBsvTU6m29NsE+DdYvWP9gnbwfDn3Mtw32
SbB28h4oB/AOkAPxcHGDa5B56g3Wd/aODp4ZmpnqKb0ZYp54hDXgOko+8Jso
DrCOdg1+2fosc+29Y5L3gXGk9ag11p7SgzGeI54QrK93jDNPD4aJEW6fWY8e
rA02K9jsYFPkCY8c+RPP8G54TDUP72l6as80D6dc+0gPPjdPPN21kd45Wt6L
fH5wnSMf+C2QDz2bH2y88ULXOPOFWKfIIdvzi60H1yX6ycGW6jmzzHNwuj+8
978KVjbYCnHDI0+exOu8A4wrzcNplZ4+fWl+brA19gWuq80Tbwg2T05f6eG6
VXxw2iwHsOebh/dG/SJ5DPQ5bXKNM8vlBO4t1qDuNmvDe7t+uVjpN+/LDtfg
vSsz1Qu4HhIH9xfKB3675U98UD7s22Oe9+trz4Fxn32kT3vNE+8Ptt7eHHYv
PTgRbKdYjsiHPhWbJz4mNzgdNU/8jWtwOq6n1knrFQT7cXjeZ4I/G+yA98Ph
lHn4ndbDuyRYkXjPyQFOfLYeFtcF89T7Vn/QO/Z45n/2lN5cNE/M53SxXK9K
Unzg96MkhQOs30lSa/D7bpLyx80VekeBz41nc2WSqket7yepntKD7yWpc8Q/
TFKcueMHSSp/yn7l+R78JElxgPdvw79vCHZjsOuTFFZwXZOkOMPp6iTVC+Lr
khQO9pVKUnl6cIPn4PGLYJfs5bVJKk/8S7+7rvA+9oL9jmA/DfazYDcnKW5g
v8k8cZkkxY3+3WKe+FbXeP636eGXab2f68/7zEt7PxwS8/C7Uw/vX8sBvOXk
QPw7cYPrLvPU+43+Oj93SnnmHntKb+42T1zeGnCtIB/4/VkcfH5VdA1+v9ff
Zu4a7wB7ie/pvdaj1n32lB78MdjtxpXkzB1/Mk/M7wV+NxwI9hc5wPuv9gKu
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
Nc7z/8tghkdLWC+PIjmhcfDfXv4P8bP4lg==
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{5, 1, 9, 3, 25, 23, 30, 31, 29, 18, 33, 17, 21, 35, 20, 5}], 
       LineBox[{7, 2, 6, 14, 34, 22, 19, 26, 27, 28, 32, 15, 24, 16, 4, 
        7}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[{37, 36, 42, 46, 75, 50, 62, 95, 116, 114, 132, 104, 131, 134, 
        133, 106, 93, 138, 87, 112, 130, 128, 129, 127, 91, 98, 137, 85, 89, 
        96, 140, 97, 108, 107, 119, 118, 64, 38, 37}], 
       LineBox[{40, 39, 63, 99, 117, 109, 110, 101, 142, 100, 111, 102, 141, 
        103, 92, 125, 126, 90, 86, 113, 88, 139, 105, 94, 135, 136, 122, 123, 
        124, 115, 121, 120, 65, 51, 66, 49, 45, 41, 40}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwt0sk21wEABeDf35t4hHqU3iAVZUiGUqY0Z8jfPM9UKI2iUKQM0USpTFEo
ig07bfqcY/Gdu7nn3M2NjEo8dDIUBEE3RYRppZdJ5tlgh3+ElA+QRy/XaOUn
CaTSzDotXGWcCd6wN/aEGb7wmW98pZPLLBHLAx5Sw3dOkMJFVrhENpXME00S
7xlhlH7GOM8CMdylhF+U0k4HGWSSxg1mieIU+axSwGmec4YXHOElgwxxmGGO
8pqzvOIcYf5QyB2KWKOYdMr5SxldZFHBHMe4x3EWqSKHAT6QzEfuU80Un5jm
AnVsUssj6vlNA908Jo5lGrlCEz+Ip4dE3vKOSa5zky3aeMotNrhNLs/o4yAR
ob0TBcGu2GadOSbooYVmmmikgXrqqKWGaqqopIJyyiilhOL9L/8HiJt22g==

        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0mlTDVAcwOFzb5uKbJU9shdliawtlspO174U2ixRtFlKpcjoDb5BPofv
JEJa7/XMePHM78x/zpw5Z+bkN7TH2iIhhG+MW3wnGg0hl0LKidFEF4OM8pkx
FiSFsIG1lNFHCgt5yn0auEIj63hDKhc5yDsOcZxMSjnAam5Txx2inOcRj3nI
E1o5xkpeknCvU3qaXbxgzixDixiimGyuk8MN5u2p1mZaaKKQB1SyjC6m7Tuh
S9hCJ1Nm6bqJATaTxTUWs41BtnKS7bylgKVUMeOMbt3BcnbSw6x5jcb1luZy
kxXsYYTdnGEvw5RwjrMEXrGPVeznNREukMRd7lHPGo7wgcNcopaj9JJMjDT6
KSePq7SxiHYuU8EzOnjOejbynny+etMXPvGRATpppJYyCsghQiDhj8aZZ45Z
Zphmir9M8off/GKCn/yI/P/n/wCfkkqm
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl03dbjWEAx/E7p1BmCNllRNZ78RLi77wN2VltKyORskVmIVtGZacyS/bO
+NyXPz7X9/4951znes71nJOVt3RRflIIoZmCRAjLKKeOJtrppZ+05BDGMo1Z
5JNLHuf4yDvGpYTwKL5XH+t47dbnnOYMDbQx02uVupsT5Ngn9Sh3yba36i6G
OQ8niSP2TwY4H9Ppuk17uBXvy27RLg4x1a7QV1xljn1Nn9FJHQfYz0Ume71M
d7Ivfl+7Rvdwngl2se4g4ZxMv3MV30mxG3WiluhffvOHIoLrpTpJm7SaHwy0
B5HKYF64doE056EMYa/dzDznS/qSy8y2r2gtN5hvX9fXHOQmU1wr1zdsjs/S
vq2HuUOWvUV72c4M+54e5xcj7JGMIp23rrUy2jmDMdTb91ng3K59PGCu/VBP
8ZSF9hN9z1ky7Q79wle+8YHPfGJx/AyWxOcXfzvxuZJBarw/v9Ee2mikljJK
KaGYIjaxkQ2sZx2FrGUNq1nFSlawPPH/v/EPXFd1Gg==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl01dbzwEABeCfi3yGbn0DhMwokR0ZJbuEhjIrRMNIyUiRkYaULaIyU39k
VLQon4bX4+J9zsW5PWdSSk5C9oQgCEJMCQuCycSSRBZFVNNCByH6GSV8YhCM
/+tkE92U855z9FBNBgMk0MhuTtNPPBs4yQin2EUrz3jKaup5w1te08U7qtjJ
V1ZQSwHDHKeSy+wghS3k8ZklrOcwg+SyiYds5hFLuU4HnbTzipdcYiMfWcQV
svlODhdZRxZ7SeQBSeznB/u4Sg0H+EAs11jMJw6SzCF6ieMGy3jCVh6zjSP8
JJ+bHGWIY2ynkF+c4BapFPGF5dSxkm8Uk0YJfayigTU85wVt7KGUMc5wm7OM
UkY65xmngjtkEuICd7nHfZpZy2+7+sMYI/TRQzvNVFFIJoksJIZoFjCfKOYx
lznMZhYziWQG05lGBFPD/n/gL259bTE=
        "]]}, 
      {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0+daDmAAgOG3P8kORaTILKOMMhqKUFbblvGFzKKsjDIbZkmDzoDDcBTJ
yEzGObivy4/7DJ4nJVJfURcVQnjLu+gQBvlL1JgQ4kkjj3JqaKSFDrro4zUz
Y0JYzQrK6WQ6symljzIyqOMC9czgJM20cIs73OYAy3nCNI6zjV62s5+lPCSW
Y6SxmQ4mk8hiukhlPhtpZQKzuMRlzjGP05xnAW1M5DB5vGAD+5jLPcZykHU8
Zz172Msa1pLEWZLJoZtsDjGHXO4SQzXjuE8+KRTwgPEcYRLtbGIhZ7jCVZq4
xlEKuc5NbrCIrbxiCxGK6KGYJdQwhUfsYBk7ecxUThDHU3aRTgnPiKeWBBpo
5CIrqWSACk5RRT+7WUUWL8nkjab66aWTdpppIEIZuaQSR+CPbn/zi1F+MsIP
vvONr3zhM8N84iMfeM9Q9P8P/gHlF1Rp
        "]]}, 
      {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl08VWVgEAhdHrsgAT7BbBbsFOsANUDDBBFAyQsFtssTvp5idtZw70HfQd
1GfQ7XKwx2dyvujM/JS8DkEQ/KY0LAhKaOcbP/hFEB4EUcQSTyLJpJFBNrl8
oYBiBkQEwVxmcZoMnrKHZxxkJg304yQ7+cAuDhBHLVEcZxvv2c4liijmJr0Z
wnSucYPrTGUz1fRiMJNpYgoTWU8VPRnEeEJMYAxrqaA7+8lmNOV0I5+VtLOK
LGIoIYzDLKWNZewjmpd0Joe73OMqI7jCcBbxgo4MZAHNLGQolxnGElpYzCES
aCWRkZznAhfpRC5deMVyRrGC13Qlj3BKWU0saygjggJ6UMk6xlJIEm9IZhwb
+cQGjpDCWzYxia18ZgtHSeUdaUzjEY+5z0MecIwn3OYOt5jBDmqI5AR9qGM3
8aRTT19O0Z9GMpnNc/ZylnOcYQ7z+ci8f1u+XUiIfHLIIp1Ukkggjhgi+aOh
n3znK2200kIzTYRopIF66qilhmqqqKSCcsrC/vf6F+a/axo=
        "]]}, 
      {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl00VaUAEAhdHnTNEl6MCxBXYH2C3YCdgFdoAtmGCAAQrY3U13h90JbsCJ
zj1+Ds4K7v07xsZHxrUKguAX+SFBkEcTLfyhTdsg6EAYEUQRQzyJJJNKOplk
k8uQdkGwkBgO8pLBDGcBb4lmLhdJ5iv7SGMOTQzgPHv4wl5ucJ3HPKIfEczi
Pg95wAy200BfwpnGG6YTyVbq6M1xjjGFWnpxlo18ZBNHmUQV3ckklzzuMYG7
jGcNlYQyjLG8ZhyjWUkF3RjKSF4xihOks5R3LOMISyilM7e5yS06cYculLGc
EaygnK6c5BSr+cEqThPHe+IZwzqaWUsG6/nABiZyhatcI4wz9KCazUxmCzX0
JIs+1JNAFNkk8oltTGUnLewgh118ZjczKaKYfAop4BwlPOUZT5hNEo305wID
ec5+5nGAFwziEvM5zE8OcZkUvpFKLIv5zqJ/e/t4DllkkEYKSSQQRzSRhBNK
e1rzW1fNNNJAPXXUUkM1VVRSQTlllFJCMUUUUhDyv9u/MDSOvQ==
        "]]}, 
      {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl01dXDnAAwOF/t8RHyPEVZGRmFtmhKDN7va+9o4zKrOxRVpTRMEoDmZnn
+BI2GRW5ceE5x8XzDX6/nlnR1EhMCOEN72JDeMsfunYLoQfxJJNJlFyKKaWC
Gur4SyNtzO0ewgmOUUUuleykmgJmc59hFLON52STz2hmMosMNnKXRJKZziNm
kMYamhhCElN5yDRSWUkjgxnFJB4wmXEs4w4DGEE5ZVyilMuMp56B7GcRT1hM
Hincph97yeIx89nDPG7Qmwuc4zzxXKQPN1nAGBZyi77sI4FaljCWpdTRnwMM
ooHlTOAsFYzkCgdZwVWuc42JRHlBhEOs4imrmcI6XrKWQtbTwgbS2cwrNlHE
Fp6xlUx28JrtHOYIOdxjKEcZTjO7mEMNuznNGUo4zilO0q6zJjpooJZqyimh
iBwiZJBEL+LoQqfGf/OLDtpp4yc/+M43WvnKFz7ziY984H3s/2f+AXbFffg=

        "]]}, 
      {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl09daCGAAgOG/oxylc048mRlFRrKVPSKjMkIyS4myyyajZEXKijLLKMo1
oGSU7HvQBXifx8F7B983ILsgLT8ihPCW91EhvOMPvfTpG0J/4kkhgzxKqaCW
BppooY12xkaHsIJl7KeBBCaylMekkUoR9YwhkUU8YjELKOA+o5nAPB4ynzls
5x7xjGcWD5jNDDZRx0jGsZFGcphGJdO5yChOcpUqrnCdaxxhCreJ5ThreUoW
h5lELUM4SiZPWEUpGVQzkArOU04MFxjEDVaTxBpqGMwxhnKTdUxmPbcYxgmG
c4cNTCWbu4zgFHFcZiaXSGYLLWzmNFtpYhsp5PGKXMrYwTPymUshr9nJGXbx
nN0sZA+tFHOWvbxgH0s4SBsHOMchXlLCctJpZiUd2npDK800Uk8N5ZSQSzrJ
xNGPSP7q+Te/+MkPvvONHr7STRdf+MwnPtLJBzpoj/r/yT9do3Ee
        "]]}, 
      {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1EVbVAEUgOGLimIDNnbnQv+D/gEXujOwExPs7sQusDvAREFQwAAJu7u7
xc6Xx8U73zmHmc08c2kYHdNxcEgQBJW8pIUHQSqFPOAzZSOCoC7t6EBn+hDH
dBaRyDaSOUwGWURFBsEpraMJ/CSRX5xhDfWrBMFwvUlFcyV+mFfxnZVkUM99
qI5mOY3sK3QJ10ilpVua5rKY2vbBeoXy5gp8M8fzlYUcJMp9oI5iPg3tC3QO
e6lp7685nGY2Ndz66QX20MyepA+4zwyK6EMc0/jIdD4xme1U9blexd8TJ5lE
FbeeWsgWmti36j3uMp53RBPLOF7zljeMYQPhPtdNR3KC9VR266ovec4LuvCK
7kT4+0bNJ49NNHbbrGMJMZfgjznQv1pASXMpPpgn8J6JbCPSvYeepTfV7Dt0
CufYSVO3XTqVMPNuDdUylOa8vayW44t5Jp+ZRTLV3fvqRQZQy75P53KJ/TR3
O6DzSKG1/ZBe5jAt7Ed0EQ95xGMGcZUY6njPUV1KOnXtQ/Q6yzhOG7djeoNM
WtmzdDVPeMozhnGLETTwnmxdy2/WcZs7lCn+3XmOQot/I5pJOikksZUE4plG
LL3pRHvaFj+DhFHkmb5PAfnkcYZccjjNKU5ygmyyyOQ4x8ggnaPh//9n/AO2
mqvl
        "]]}, 
      {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl09VSVWEYgOGFCSaywcQAbGTvTXeZ2IpgJ57oid6A3oPeg94D2J1gd4CF
LdiN+qzx4Jn3++Zfs2fNmn9nNO2s35EQBEEn0UgQ5FBLI9vZzV7200IbHXTT
Q1JqEEQYyySyibGAi3TxltS0IFjOBfMVXtNof6MvGWpexnnzZZ7TYH+h03Qq
A1nPINJ55myxntHJ2p91JDKGJ+F76EmdqH1YS19iROlwVqzH9RLtFNiLKOSB
/S915mPaxj1W2O/rHX4yz35UW7lFvf22Xme8+auu0m86Wq/pbD0Ufjv9qCv1
k47SD1qrLZqncXJptufrAZ2pn/UqX5hlP6jj9LDO0e96gx/MtR/RCXpTf7PZ
/EsztEdX6x+9S4J5CwGZ9GINvXnovFKrKKOCcrKopoZSHnmuRB9rP53PifCu
6CldqEk8NQ/QRZw2T9GzukQH02keoks5Z56u2QyjiWRmkMIGIrzy3HDdSho5
jGAjI3nn/D2bzN3huxAnGv5+eGdIJ4XE8Hu5712000oz+9jDLrbRQA3VVFFJ
BeWUUUoJxRRRSAH55JFLnFjk///xH78ZeiM=
        "]]}, 
      {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl08VSlQEAgNHf0VdAXKnYYHeA3YKFCTYCl77EJQwwwSAMyga7RQS7E9a6
1EdwRh/BM+PivMH3xaSFkwv6BEHwm4yoIEingjra6aaXX/ylX/8gGEAcCSSR
ShYRqqihgSaa6eAH46KDYAqruMRqLpNILm8YQwnFrOA1ozlMFl/Jpo5aztFK
LJNZRhMtNLOE3bxkFJNYxHsWU8l+dvCZnRSxgGcMZy+3OEsjZ5hHKk8ZygTm
8I65xFPORj6yiUJm8YTBlLKOD6znOMeYTgMDGc8arrCWNqZSzzSuk0w717hK
hBvc5DQzOMVMNtDJIMqIoYvNJJBCN0OoYDZb6WELe9jGJ7YznxOcZCLD2McI
nrOLhaTxgpFUcYAMeknnIJl8IcRS7nGf29zlDod4wAUucp7l5PCKOI4wlrfk
kcRR8vlGASt5TJiHdPCIamr4rtdOWmilkXqqqaSEECkkEk8s0fTlj1d+0kMX
bdRSThmlRCihmCIKCVNAPnnkkkM2WYTIjPr/6j+4i4Oe
        "]]}, 
      {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl0klXDXAYBvB/1Jade2/JOfb5DvkKDl/Aig1fgHWRqMwyRIMpQ4YGNJm7
t3nu3kKSoUSJqEg/x+J3nvNs3/fZvHPvtj1pIYQm4pEQ2hhjjoxoCDG2sJUd
7GY/xVTSQIIU0yySEQthPRGixMjkKstco5ce3vCaYk5ymVFeMUYlTfyiiBOU
s0QFF3nAAoc5zlPK+EEhbdQSMkOok084zzcO8oK7/OUe3XQxzBD5HOMs/Qwy
wBluMkseR6nmNzc4RR+nuc0fbvGMGla4Qykf+Mg73jPJcz6RJMUI57jPHAd4
SQHz1HOBBr5ziDhH+MlD2knwiDT3aJSXaGGt3iw7aGWN/lhWMcMXpvjMNJ18
5S0TjHOF6yxSQhYbyWYTG1hH+r+f2soUSeLUU0ER+9jFdnLJIUo6s7Y5Sook
IwwzxCAD9NNHLz1000UnHbSTiPzf/CoKEZRl
        "]]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl01dSFFEUgOFLzpkZcEiigAFEzAEVzOEN9F3FAGqVLgBdg5YuQfegKzCB
qKgYSQbMAUyY0K/Lh6/+c89MP3RXd23Xic7jSSGEAdISIaRSThPt7KGHk5zh
ApfoZ4yp6JqKEOI0sJItdLKP/XRxgIMcopdz3OY+L1heGcKEpmkqbbSzjGf2
S/WpfmG7+aYWaxGFLKKJAfshRml0HtOgf/UTO82TWqD5PDHP1z69xw8eR/dg
d11/scZcTwNzeWhXp291h77THM2mhmqu2N3hJSucX2mFJphFOXHKGPTbZSrN
VbyJnqO+1lX6U1drLXOYzQO792w2X9V5+khzNY+75mv8pp+tdh90hj+sdf6o
C3VYF+iITrHNfEOTNJnP5lZdzzpS2MBiWmhm3H+W6Ffdpd/0OSXmUmLcck7X
DKbNG/W7btJMsjjrfIrDdNPDEY5yjL10RPcdPVfqiZHCpHdxlD4ucp7T9NLN
btpopIw4MUopoZgiCikgnzxyySGbLDLJID3x/5v5ByCYbU8=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0jdSFGAAgNGfGcWAShQMCwIqSbIBBZVgJO3CknM0S76ANthJD60KKiOV
lWMDR9DRO8gdgDdj8U7wfXmTc/HZhBDCd9oiIbQyxhLvWGOLHf6yyz7p2SEU
UkeMCRZ4ywprfOQT62zwg9+k5oSQyWX6GKCfi9zkJSmcJo/X5POYR1xjnuvU
c4FnnOQBlcxRxV2ymeY49xikh166Oc8VpjhKOmd5xTmyKGSCRNK4QwHjHCZO
B50coosjTFJEIw0UM0MJZyhjkVKaKGeWCiJEiZHBMe6TxBOqyeEqTznBQ07x
nBvkUsMLkmmmhVqWuEUrdSxwm0uMMsYQIwzTRju/NPzJZ77wlU0+sMp73jDP
OFFqKSCNPf/84w/bfGOVZRYZZYRhhhhkgH766KWHbrqI00kHMaK0R/7/fAAS
bVOJ
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0UcuBWAAhdHfGhg/vfdent5bQiwBYybK03tJ2AEJOyBhByTsQNmC3tuA
kxic+Zd7kwdHB0biQggxxiMhjLHJLoeccsktITGEBLKopZ9hYmyzzzHnXHPL
Hfc88MgTz7yQnRRCFzmUk0U7yVTSSjMtNJFBIW0kkkY+3RRQTx1RaonQQCPF
9FBEBSX0Ukom1dSQThJVpNBBGbnk0Ukqr/rfeOeDT7745ocbrjjjiD22mGSI
PqJkEs+vfW+44IQDdthgnTVWWWGZJRZZYJ45ZplhmiliTDIR+f/2DxV+SE4=

        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0MtNAmEAhdF/etD9sNMesARwAFERnwS2uJEEO5AEO9AEOtBEOpAEXwiK
yiglaA+cxMXJt725mdppsRmFEHLkY+WEFh2uuWVIyh9RJoRV1tmgQINzLukz
4IFHnnjmhTGvTJjyxjszPvjkizkp3/ywYMQdPbq0qZOQZY0VAr92zrnnhisu
OOOYIw45YJ8qe1TYZYdtymxRokiBhM34/68lkV01Lg==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0EsugwEYheGviSbsgITBr1NNdAckDDsRkpZetKhWRTfAHtgDe6g9sAS0
LtXWPWHeJzF4xm/OSeqdjZNUROS5TyLu+CG9GDFHllW2aHHGBVdcc0ufP2Yy
EQvkWKfINjuUKFOhyi416uyxzwENDmnS4og2xxRYY5l5pvnV7XFDl0vOOaXJ
JissMcsU3/Z98ckH77wxZsSQVwa88MwTj/Tp8ZD8/zUBr9o19g==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0EEygnEAxuF/e+7QN3WE3CELG2s27VVfUoRiJjdghhswUzdgRjfIjG7A
jCKFpLDwNBbP9jfvvFGusJ5PhBDWyKdC2OKYM6644Y5H5iynQ4hYYZVNYk64
oE2HHn0GPPPCkFdGjHnjnQ8mfDLlixlzvvnhlyfuuaXFOU2KbJAlQ5KlRcPe
B7pcc8kpRzSoc8gB+9TYY5cqFXYos02JmCKF1P9ff4R7Pbc=
        "]]}}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> N\
one, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-1.5, 1.5}, {0.01, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463387954047*^9, 3.8924759629526978`*^9, 
  3.8925197462001867`*^9, 3.892519795967085*^9, 3.8925198688145437`*^9, 
  3.892519981952046*^9, 3.892520100236122*^9, 3.8925307423402243`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"2453f586-f51d-4413-90f8-75743b3afe7e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 30 DataRegions", "Subsection",
 CellChangeTimes->{{3.889464459399866*^9, 3.889464465717945*^9}, {
  3.892398287610817*^9, 3.892398288654376*^9}, {3.892518221713511*^9, 
  3.89251825006358*^9}, {3.892520256259694*^9, 
  3.892520258588079*^9}},ExpressionUUID->"7530264e-c265-4629-8d6b-\
082850e2e168"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RCndsM30", "[", 
    RowBox[{"baseMean_", ",", "baseSigma_", ",", 
     RowBox[{"{", 
      RowBox[{
      "pS_", ",", " ", "pShip_", ",", " ", "pKsi_", ",", " ", "other___"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"GIndex", "[", 
       RowBox[{"mean", ",", 
        RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], "]"}], " ", "<=",
       "  ", 
      RowBox[{"GIndex", "[", 
       RowBox[{"baseMean", ",", 
        RowBox[{"pS", " ", "*", " ", "baseSigma"}], ",", "pKsi"}], "]"}]}], "||",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GIndex", "[", 
        RowBox[{"mean", ",", 
         RowBox[{"pS", " ", "*", " ", "sigma"}], ",", "pKsi"}], "]"}], " ", 
       "*", "pShip"}], " ", "<=", " ", "mean"}]}], "\[IndentingNewLine]", 
    ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.889464153103773*^9, {3.889464410569189*^9, 3.889464416202147*^9}, {
   3.8894644937114677`*^9, 3.8894646816167107`*^9}, {3.889464760426255*^9, 
   3.889464772136879*^9}, {3.889464880513568*^9, 3.8894648873248577`*^9}, {
   3.8894660149971447`*^9, 3.889466034389081*^9}, {3.889466079119557*^9, 
   3.889466122745878*^9}, {3.892272545429102*^9, 3.8922725471422977`*^9}, {
   3.892273223463456*^9, 3.8922732309410152`*^9}, {3.892398294861374*^9, 
   3.892398295397246*^9}, {3.892445245717305*^9, 3.892445246150037*^9}, {
   3.892445298742341*^9, 3.892445301988332*^9}, {3.892518313632586*^9, 
   3.892518395140731*^9}, {3.8925184828429537`*^9, 3.892518523178035*^9}, {
   3.8925187262656717`*^9, 3.892518737999489*^9}, {3.8925187818267527`*^9, 
   3.892518788541203*^9}, {3.892519065759919*^9, 3.8925190678841677`*^9}, {
   3.892519188845799*^9, 3.892519189550868*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"b3765f0e-452f-4f59-8b19-4d72aa3b2ca8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs30", ",", " ", "rs30"}], "}"}], "=", 
   RowBox[{"DataRegions", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<m\>\"", "]"}], "==", "30"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "==", "32"}]}], "&"}], ",", 
     " ", "RCndsM30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889464780615033*^9, 3.889464825681293*^9}, {
   3.889464907447905*^9, 3.8894649076139107`*^9}, {3.8894649446025343`*^9, 
   3.889464944851894*^9}, {3.889466005796596*^9, 3.889466040027307*^9}, {
   3.88946616391148*^9, 3.889466164107535*^9}, {3.892272528480652*^9, 
   3.892272550242362*^9}, 3.8922726172323093`*^9, {3.892273235202058*^9, 
   3.892273240616933*^9}, {3.892398299177061*^9, 3.892398304482367*^9}, {
   3.8925190794247026`*^9, 3.892519093229929*^9}, {3.8925191381577253`*^9, 
   3.892519167931078*^9}, {3.8925201136324873`*^9, 3.892520113882827*^9}, {
   3.892520149409751*^9, 3.892520149604624*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"1b0025ef-0b6c-4620-b41e-dedfa5e54765"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs30", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "&"}], ")"}], "/@", 
     "rs30"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889464812070797*^9, 3.88946481288135*^9}, {
  3.889466046376144*^9, 3.889466051914548*^9}, {3.8922726329812117`*^9, 
  3.892272663105475*^9}, {3.892398306862587*^9, 3.89239831013693*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"6c26f93b-a35c-474d-ac78-ccf2e673d3f6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
h82YK3tbms9h9iBoTu+KyCrq++7ANZPYIjZ/HCZ5XjbZJM1/sPxbhmZ+RWgt
BVhqCGSvlrP8glfg9LM2PSXrF5tT3pcX+lJrs7sDLeKz6dAAw1PpE72pl/e4
srDc5xydrfV52iSeVtb1vqt/PoLSlts1XjY9nqI7ZE0S9IjmPLjPs/dJ/Fzi
BYWYhlOpnM/CqswXPTPJvLYqSJ0Tcmo5N2VDluXQsz4abVROVnJ2NkrKp8Py
Kcq0W/SV/9jsv/o2oGVmIa1M9rO3uZRPuo7jc595VpGdx4u+RlqS+G7LgONZ
S2upbkubI84bC8mkycXSjTUepNV3x17nlDKK0Vku2JXnRqF9+u8ycKyiHd1m
jQy45kr31GfWz1Ctoc8Wui5tUlxo9vJbfT5OqCGZWy9XHYlxoSjPpRpBN+vo
Y9xWH/Xd98nr4HwLzdQ6Mu8o1+LqsvsUavhpiexTyfoof0K/WU/9aEpp/Ff3
XqGc/IGXBQbv/GmKsWu5aMdrzvxTSVPVspe0S35aYsONS9zeCMET38jXtKP7
gZ3+Sldor/yrs7MCQmlXyy7e6noRbP66uFRVhY0JoRrLxt6nckIpfep4PeUs
Z67H3WkxwfIxbH60i1U8xinEUZvKumM2sY9Y/sP9TL93CrODuRXLei885JPI
5tcoGjJAKzyZ5P11bphoh7J8SPGsXakNkxK4mG+LWxo+TyPzr8Zags6xdOnb
FwMZlTQ6OVqni32rOBrn/CnDLU6aD/HKHf/6yckM8jVo66m/OpHlRxb32/L1
wscszj38mo762GzaXqKb2rAkgaw+T+kxcIk0X8Jpbop+X5pNXZYFbRB/yGbx
jPyMI+762gXMv/rQvgViM8nvzlfo87RnPhXmah+1WVbBVTZWLf4yJJ82bXtQ
ZtxUzNnpdMubnlBARot3DhZUlLH1tUj2nLt6aiZdHpwTniwjzZ+o7GhOWpaF
pCc2zGrYK82nGBXeWiHuL82nfFth6WLSKpeGCerd2wSVUV3y2fECLREFiHrP
7OJWQao3I/b578yjRQ8S9NaFV5JO2PJuFsWFpD/norz70WrSKhkfrCBXROYF
O49r3a+mZ42cfNVnFpPDkdLjpldrSKz5sLH9+TIKN1BoM1C1nnQLl65IKiuj
DmcqzD/trmf+44C6w1W/t9L8380B069/HP6czf/WQTvaTjntyeb3zLtDVfbV
PGL+Xq5rYZMHpx4y/x7tZuLf2eUBpS6+M0Fwq5rlb5psKz/nbOf5Q/4k893A
YW+UgqitqHCGssphtt+Lcn0lq5ZWKlEsnjKc7TDbTjGR5VfcLXYnfNZMI0vV
3o/U3d7/wEcfZXunId4/i5Z6dFsjHiHNr6C/GsvMjYdHSvMtFQG3q/zFOdTl
wZ0gBbtiFs8iHu7ZIcNhcpGU3yDqFbqp5GQuWdaHBSu8Sf6Bj67oN2tF0OUC
2jzUIkW0I4P4+Zjdx7w67pSU972u8Vp9Zg2Lh5Gfu9zvUVeHZUWkqnV9lnJX
ab4mKtg9UN08l8ULiDdo070Rh50qyKsge47stgIWL4xX7tHGfnwhixcQb7R7
utf/4TvJOH2Z5miiUcrihcQPymdtRoSRoXCEx+yoQJpSJN/NomMYJVrK3d5e
FUgaHZd9dV9dyB1687rA+0KuRI9WrDGVqeEMxTK3W08ootK3A3clOcTQIr/T
unN2S+LLjhvOOH+KoUIDxU6POvqR3LZ3BaKFF7lEJf15lcuiSW91y/linUjK
UN37eerHePKMqXyuHxpN1jsztY6XJZNM2bvdSV2j6brGol1ynkkkFKnPl7XL
4yb3HxA/dK+QHHRrVonjRFyjufut144UUnLxLjWBdxI91ZztMklHSEs7Tjtn
Y5dMYyfHDfepE1K0hrWdzaQSrmfw/tbKD0R0xLXJU/VOqWQq1yu5ZqSI7qQt
bqryrYbbVLZ+0VZREen57x1tdDObDCLaDnatLKIN9QNHG0Vnk9zEc25+msXU
rGB9V/v4HLrk/L5T09QSOtnumr3Ng3xa1fnJSvdXVfQmISmhIbOAFup+Ptba
W0yx0W0TGwIKKLK6YP/oq2Ia1bXxff2DJeSruPbEvTO15D7U+JLJ01JKfJVx
IvVwHWnVjeposaGUTFffmHFoah0lnz3wSj3+IsvHyEXM3iAef45KPWbmhux4
x9Yjjdo1az49wYXmrV56QnGDpN7rmk6pii4sfmt99mp4scl9qpv/cqqLbS31
9d42JkTWhdxq5DYZpNaTyosXBjfS7pGJepuDzj2vkFdGzpWun4JZfLheObE4
upsL2w+o3hyyvF34PXJ50+quvpMdfbCd8vrB7jfUWKzbx2KLPYuvoP/Nc7Sb
TZzmI80f3w/T7HX2MdNPm2aTAu6aeDB71a9a0+ubmxuLZ+0+lzYqP+FKFjKD
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
Bhbc3mX3b3Zr9J6+iD862qjG0zbvPQOvBWVSp2UbYhuii7gXKyoOfOotIjdr
8WDB/QzStzVumd6xgPQdKN1aq4ZTeutYemNVEVles9mRdDuX6jq3+XrmKeML
/bpf5df9Kr/4+b/uV/l1v8q/2P0q/+78ff79Kf9ufH7I4/8qn/9/O3//X42v
j/b+q/D1/9l8fPze38XH/2fz7/+r/Pr/Kn/+r/Lj/yr//Wd89p/x1fn8c/59
NXw+IZ9fzb+PCPmgP7t/iM8/5POt+fxq2Ks/3jckIj7+R/nVyB8CI7/Nx9jf
4fOvMb+AkQ9Hfhj5cOz3ACPfgv0A5H+Bsd+D/QDkW4AxPnw+J59Pxr8vic+X
4fPZ+fxmyJ9/Poovb769hvwgb/75Hb58UQ6M+Q95Yv5Bfvz5wZcfX98hPz6f
Gfw55G/4fGbw35B/QT4I/Gn+fU/gZ4KPB74Y+HbgG+H3wOcC/wj8MfDtkN9B
e2Bvwa9Efgf8WfCHwG9+/b0/NKdO0Xzq8FrGFwK/CPwg8OeAoV+QP/KNsMfA
GA/sb8A+AjO+2ecnKrc2VrH7SLAfxD9/weff8/ne4LMCQ56QL/i3kBfkB3mC
Hwf5oX3go2F8+esDtA/8WYw3xp8fD2J80T7+/ED7GJ+H116+f4V94fNtgTFf
YJ9QjvHnzweMN//8DTDWY42/8yEZn++v3mfFv48J9ggYfFjw+392Hxr//jP+
/XSQPzD4lJjvf5UfC3sE/4HxYnyT3+cv8rn88z388x7gg2O+Y34hPsF8Br8Q
8wvxA+Y3+Lawd/AnsIfA4HOCbwv/Af8CfQCGfcB5CP55K/BjYf9+dn8a//wL
+O+QF8Yf+oLxwvyGfDEe6A/4lGgv+MKQJ98f8/nZmP+QL99fw99A3rAP0Gf+
+QnoP+wB+sO/f+1n96tB36CfwNBP2AfIA+OP+AIY/hHzH/LC+MNfAsM+wP5D
ngPrq5xMtkv5lsgfHd+2qucJj2imH/6+t+LCMxJIo+OWl+rbE4mfL3BcdHtD
n6up5Gqqds3GUMjiC9hXDb3tq5VaZtHiccPbWMRksfVhQJzvF3eu8If13saZ
dw5OP5VHI1Kbbk+ykvJ5zXZGW/sPr2bxBvSvTdbV5oWbCyh4oXdx2NySH873
jo7feX5ETTkFpHAhDSkVP5yXLZzc69gaHTFdydbqb6Eqjcc1hre2dd5Zw+Ln
vrsnZDd8yeEGbz81VdM/hwK9dh51vl7A1fkVWp6vzaUPK2UPaLap5jT3PjK/
ObeI7Z9vPKPXvse6EtJU7GXqX1FM+s4TOp1rUk46tsN2JCXGke39CWt3tU6i
YuuxVv5d4snmxqyKfrpJ9KHPsfMme6T3f3U6d7eLfVws81fKSxQjGyLT6WZy
hJHTpGwav2htftjrDGrb5OZJ9bfZtHmtk6zFtkyub2BQWucr2RR6VFDrXp/O
nT8YteLDzGw6vc56W1KYiBvr1aGtc6qQxd+j4+v76Trl0ux19o/1j+Qxe7pH
tsrUf3cx1+61Z95K2TzaM0TvQ5jkuymdtbZfrMojy96z+hjJljJ7EH7s0R2T
kXl0TTOzRSu3Alo6NPNuyZEazn+zOic0LCbd1cdJsFUan4d/OxWisLCQzM72
+/hMsYTF3yOvj8kNaiHxfyqVtWE1NcxfWsrLainnF1Hdi+B5temlzJ9OuTxv
8ZjgUmoXNkEg61hOhdFm+++2qCKN1N5nFS9U0dXTiz8lnKqmvoFJ2dZ3qkju
4Qvbts7VdGD14gzrG9VENlw3y7haajnQJ936SzU1LlWL9xhfR05rIgqN39RQ
qdqt2U7y9bSq5cFWHgedmb2Y0EdnqvL7uz/cl+V77rjfx0VxLJ4vOFc0aPra
WPJMq9ZQLolkf7+tfed+RvvCpXzm3/1v6eNht1dOT2bxf+J1o7G2JlJ/u2r3
pos7nqbTm9VNBxrFJDN7hPj/tZlNTti1HOoX0t3exD7zh/WA87L8i2o3hcze
HTMbMtKsk3R9sNvCbsfnSyI6ffyAk0176fpg8geVTf6bK5j/g79d83hXeYxV
PrOH2tu4CzMu5bP1Qr8C66YzBhZTu1P6EQq389h6oab5NnuZoLof4p1Dvt2e
9i0soU29TXf5t5WuH2A/J3iqGH9WLiWzqvl39c1KpefPtCI91R3KmL1n5/PC
3iwYnF1JDheubRTvr2T21Ubf7Hl0O+n6A/5CVNGhRbmb1P9SdO87Dp1rye56
150Gr39cnyzttmrfvr11JCOY3VSlmXR9sq+y4yH//HP0tGhERKegWLp2LH+d
WCaQS1jwarDFmyS65fVwR9LpOK6sTfsCy3PpdP79mpVJBmXcvGUaW9T65ZNL
xfJGKu51XIc0qyGUWUKxPUzaWvTy4NZnPFEYODOBXMv2hai/iibv1gZrvcvi
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
8w38F+RvwccBxvihPsx31Af+B/gPfD4aMOIN8BXAJ+C/nweM7/H+Fv/9NcxP
xAvAuF8N+TI+Hw4Y/h38BuwH8++fRL4P5X/1/j58D31Hvg76wufT8fle2J+H
PvL5X3w+zl/lT+B7zDfsd/P5ErAn8C/A4Pcg/8fn9wHDn4CPAX4Q6mf5wd/5
AiiHPYK+wb8Ag08E/cP30G/kE6HPsA+wJ7AfwOA7YH4jPoX+gG8B/YL/RX/B
t4A8oI/QX/59fxhf6AOffwH5YjzQX8gH7UX/fvY+IfQZ7fnP3u/Ff6/yj/Gm
kPXnr/IroA/QV2DoJ/QD8sB4Q/7A0CeMP+SF8f/jfa81TF9gjyHPqtvfults
uU/89d3pD3YZb26msvWdL1d3/hCXSofXR0c3PA1n8uvt0lNP9lwK83fQp2/P
4+zdVLKY/TJc1eXp5ZtZVHr20Kaka9L7rxILmn4Kuytk/hH2Zrvrla2jZgpJ
03ZuiHpiNpPnh3cjtJUfF/5wf30fJ8WXU+JENGzMqZqwl3k/3Ge/6mGjZ5c2
F1Coect+RgeLiR9fyi3NHPV6eDGb/0db5/o4KRRT7OerN/X7VjD5KSyzmydb
Wsv8M/xF4aNB2RsHlbL5OzIg2c8yu5T65vZ/ph9ZxY/nuGbduvu1bFRJ9/qd
/uy+PoWzarK4JDslhzQuxqsa9RVyd83GDJQfLlmP1C30U79RwB1pe8heY3c+
ba5NvF3iWsspDWs6xmtiOfkGybf0mBVIbR42z339NJ3updW0tXifyem/nPXw
QTNJ/CVyvGyTGMfik2+pjzvbL4+j675hfdYnSe9Tcv304OvCr7nUe8ugm/qr
s1g8tzR70l2TDBG3IFBovWB+HnWaH93Yfn8GuY37FHh+sZQ/XV2Y4tRXIZ9u
XX5aE3Y3j8V3pTkLS8OMi7lnfa2SNC4XUMTybRMEAbkks6rnitrsPBbfzV1+
4cirwYXUKfKsrU2oNN4L9DnkZOJRSC6r495uNy2k8jaN3UzaSOM9N4FbT6OT
ZXQ2pTKrVraEoj9W7tecWMOtPr1j4xGlMgpPtBue+Vni711vvx5aU0ryqxIu
yCjUc5tWLb1vPr+ClIxWH9ZUriKTj+0/x3uX0ZWVLff4X5TGg04r+zvKuNaQ
80WXxHtZlSSO7W+hWVtHhU3TErZoSfn1LU8bP3qWLSYNn5g9/v2l8aFow/Vg
dc3XzL5eaHV1gXh1hDQf8Hv84FjXSsmvOJ2mDXzxQn9RAPHj9dPc2U0Thmew
+HLMxaCjV4uElLr92wH/Q7HEj9fzne5utWorjT/718yI1ZPNIzNVQVP7h+k/
3C89s3z8myWnpPH67ruv5A72LyBfjbQPYbNyf7jv8HJZ0T1Br3xS81of1lBU
zvwf4veRU6rHDh4umV/OVW76Awp/4Gf3366y8GZAIak2+9jEPqH0B36d3d4e
Sef3StdjOwalB37sVk5GFv3rw3RqfoiX/d4uPlrXtoLi3fd8DfOs/IFPPLC9
r6ebnjSe9hstvyH2VQUVTso1kM2XxtcdBvRv7vGpmsXXsJ+fHBoqza9K4+18
K/Uz1ksl8bXq7ks2baTxdxdfmVfq3aXxN+LxD9c7vR7VU0znZ1gf8A8P5MZ5
Nsr2dkyn8VUbCsJGlHGCdxM+N3teSNPPdFmTFFPCtbuoaRE5rJCuma14WLKu
ihsnf7Wmf3UxVbo+OW6zLpLrszkkUvGzJO5y/9DB4kQEWbzMSpUZlUW6TkfN
/bcn05e65Spq3YRkt1D9sP+kHLKR39z44VURTZ/sMNhofD6N6NwmfYdyARWP
iB8o+FLB3Uvpb9Y9STJ+T9SumPQpIbM5u3qKXxXROrmnH2fEiDnzBa2rrsmW
0rdnC2eLKyoo8UrnMXdWlNL4uFFPoxeKSfmM9zzP1pL1yZymqpkOYrL/qjJP
dWEFpQtVrsgcrKZR9iM/iEdK5s8ewVSX6FqKdhyYfOx0FYtXV9v0d0vzzab6
AVc3JHm6sHga8f+Qhj7Xq5Yk084Y+fPOZp7cov5vx+wcnUqdPYsNZWU96fLG
m3fnaKdS4KYT6oJuSZyxudGwiMU5NP1em2POvolcUiWXHiLIoWGPZ1n5t4zn
ZDL7t813y2brhYN9FHPC+5bRZN2BV2SOVXPDFpsW6F2Rrg98zn7dPzI2h1yO
patm9hBz8r1aPLp2oIQ2V6foutyT5gewXpAZpH0y/UEJiw/9m59wCxxaQgGx
Wz/PSK5i64lwuYklYU39uOuHPb0mrEsj7SqLmAaDFxSnWTzn7D5JHC0eGKaw
NYTK9fyDBDUZdGTCiqiG7umcZfYCtwfbhBR9r/lhf8MYzudr7xBbuWwyW6/1
NSwmmpJV3/eRHZtNzbwS3ykUJlDb7Su2dNwt0YPS3AkCq1xOaY7yTZsAEbUr
zwtU+JBK9o/rte4/FZLrulvd7Rtl05Qza/3qPuaS+Y49Z20aF3GG+9UqTVsW
UHijfF/9g0KqumXeSlkrj3R7u64SfxXRDpsPc9YcyafgsNEXbHYV0KQWC5oq
RhaQZtPDM2ULi8h44In+q+SLyLOl+dcZXpWcZ9aF8qVri8kr/NJJm4WllJJ9
ybP/Osn6ra+pvvhlOd0Yd8B1g28J7Z1UlWe8uo7zuXDxkEtoObkurTU3OFtJ
q9dkGB1oVUbRlGlmwFWR81mdJWKjcpoy+oCbSVA2dyciQ33k5Vxy316+OWli
Pjcsat2bg3l5FJAxU8moWyiXNMl6wITwDKosbO2hfrGc092832jM9CJqN0Dh
bkl1DSdf32K3wKuMuq5IHh8kV0MncuaFux+vJN01wkYqa+rom0L+c8P8KioM
aeEebVNPF+c3G+Yn0fuaksG+0SViGrXsREC+r8S+dJ6m4zKxloz3X1at0Kj6
tf/H2//7td/36328v3N/79d+3l/bz/u1f/f/3r/7d9uvgzz+Xfbv0H9+PuL/
yv4e+guM/v2rvgf4s/1A9A8Y/fmfek/wr+4noj/AaC///cC/6z4E/n4k2guM
9vDfG/y73jNEe7D+xu/z3yP8u947xO/x78f/u94/RP389wv/We8hon7+e4b/
rPcRUT//fYB/1nuJqB/n4VA//z3E/+x7iqgP5yP+q+8r8t/7+p9+L5F/Hpv/
/iP/PSH+/Rx8/gB/f5LPD/gz/gDyjWgfMNqP/CL6h3wh+o/8IOTLx8j3Qb7A
KEd+D+MBDHv3x/11Ee/8q4h3v4aInb9CPhPnrYChD//d7xny3yvkn78H5q+P
+OPJvz8f8Rcw4hPIl+/f+OMB+47vgTEefPvLlz/sGTDf/kD+2N/H/ib4DOAf
YL8P79dgv5B//wLyc+APgM+A+Qr+AvYDcT8G9vtw3gIY+oD7D/AeFDDO4wDj
PST+fQnAGM//6fcDf/Y+Fv+9If57QrAXsE/A/Pc22fuEv2OU/7PfL8T3GI8f
7iP6/Xtg/nusbP/yd4z9cPAR8D3sG74HxvhhPwHzARjjh/Ne0P8/3r+Qx+5b
+Nl7hdgPBgYfBxh8HGDwb3C/MfgCwPz36PjvAQLz7/9g9z38no8Axv0QuP8A
fw/M568Ag5+C9mD/HRj765jv2A/n88lY/p6X38f34Dfw7QHuRwDGfRkYH9yH
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
of1Q0NgOOxGl+qzWedazNpg5S72y61glqQ/gvujuYI8lNZTr0CxOcVMrcEpv
JNJmNFJsU413Wfo82H30s9nN4VzqnnZQRdlVPjhFtauXPeZTK6vsbqxOEYDS
Yx8qclYbdZnuoXJepg0yG+Lkgj/GQwAjTM+07jNMlN2QRqtJpZz7WQ+4fKwG
NGp8w+h1eZRp0pntn3Ul/DN14bzMxtMOZP0jxvWOGNc3YlzPiHH9Isb1ihjX
J2Jcj4jR/0eM522I0d9CjP4NYlzPiNEfQIz+H2L0/xCj/4cY/T/EaE9K4X+a
/BiUn3S8AjHKDzHKrye/pie/pie/pie/pie/pie/5v8vvwbl15Nv89fybVBe
Pfk3/zj/BuVF6i39lFdPfs4/zs9B+fTk6/x9PcJ/l/wd7D9i7P+/an4P9h8x
9vdfJf8H+4sY+4sY+/u/NV8I+4sY+yvNH/9nzS/C/iDG/iDG7/9nyUfC70eM
348Yvx8xfv//q3wm/H7E+P2I8fsR4/f+38qHwu/F80r8XsT4vYjx+xDj90nn
Q/135Vfh9yEfAr8PMX4fYvwexP/d+VnS+U6k/pVU/fQ/ymdCewcxtmP8BuNR
2I5YOt8J4zWoL6XznZB/gHwGaYzxG4z3Isb9CzE+j/EajBdjvBTjycg/wPlM
+C0/48EYv0GM8kT/SzqfDO15lK90PhDaZyg/tFdQXtIY9TnKD/Ud9g/3T5QH
7kfYLl1f9I/yc5C/i/EG5PtK5+dg/g3ykTF+gHxq5I9jfBHfh/kyyO8n+Tg/
4xWYL4P5LshPlVtBrQsLFhOM8sfvl+bnkPy8n/Y44km/fR/hw+PzON/xecTS
+Xio7xEjXxflQ+rt/ozX4/OIcf7g/MP9CDHyyTF/CZ/H+YjPI/6z/ETpfCbE
2H+UB7YjRv4zjieuZ5wfyPfH/iN/GNcv9hftJcSYP4X8acSY74Xvw3acHzhf
cP3iekZ9iRjzr5CfjBjzB1C+yM9Gfgmub9yPEWN+FuabIMb5iOsd5YfrHTHO
fxKv+9kfXK/S+YGYr4byx/mJ+wW+D9cXyhvtQeTvY/4Zzkdsx/+Xvp8C5Yfz
CzHKC+WH8kd7AfMNUJ74vr/Xl1UkX0c63xX3f8SYb4H3MeF+hvs/7u+IyX00
P/cP3N9wPeF+jhj3F1xf2D+cLyhvHA+UN44HyhP3X5Qnzlfs/9/bX1UgLZ+/
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
iyFQoXSOwTsWqEeOYl3tL4aox2pb+JksKLRcYJ8wSgzW/tovbPpI4l94flVh
FRJT9F4S33IMnHHOe0QkWC16q20wlQNe8331/SyiyPm3yOeQ74jR0eCy4dfH
Nl31cP6Y50z36HByHnKo+owyf2g4fNM+5W5zqRVG345/414XCoeC/Aepr5Cc
j/UdLHtrggYfXK9+eFP2KgSarhf0Vz/ebfcK+xbI3AyBCDtrQ7/7Qvj+elZU
pnEwLN12abmfchvciJKdwOUFEf270X9gwzHHBjA5vTKvi3Ii/vEm2qCDzMx3
xB7A86nZcxac57ZIzs/WGsuq58k3AbNxokzw6/fgw3OsfzMiBYbNvdvCORdK
Ka/5Nnd0OAuUZR+maSqHQMrs0tT02lrYAC9mGkxgwlOG/PjRAbUwfqdeDD3u
EqyclmLbf3YD+GwtNlE4W015bhWN4jZ12w2d1e81X1ZS2TOq/X1Uu/2y5Ypp
mtZZoFKxhaq4mwDt0za9sBG+pzT6+97ptZ0LyZbWs8yHJANnyCvaRiYPnDZY
hdHl86m4m9VnHSv4UBf+NJbmV07d9LhbIdjQU7+1p35rT/3WnvqtPfk1Pfk1
Pfk1Pfk1Pfk1Pfk1Pfk1Pfk1Pfk1iFF+Pfk2/7V8G5RfT/7NX8u/Qfn15OP0
5OP8V/JxUD49+Tk9+Tn/KD8H5dGTr/Pvma+D/e/J3/nnyN+Rzk+Rzjf5o3wU
jEchxvi/dL4JtmO8HzHG66XzTbAd4/OIMX6E8UxpLN0faUzsmZ/9QX0pnb8h
na9B4pM/90tsl8a4f2B/cD1huzTG+Yb5HcgHRn448n2Rr458XuS3k/qcP+ND
mB+CGN+HGOtnYvwJ45eIpfNd/ig/CeNPyA9FLP3/OF/+LD9JOv8EMea34Puw
HbF0O+HP/8Qovz/Ld0J+NfKHEWO+x5/lPyHfGvnDiDGfA78H5x9inG+Icb4h
lp5f0vlkOF74PI6HdL4Szi8cf+n8JOl8BOn8JJx/yJ+WzlfC+Shd3/WP6hFL
1/+V5jf/Wf1X9OfCFimajLzWRObnUJXrKm4rWsE86zaXsz3+d/b6zaofp06t
5MO3uuvvNQuzf2efya6omLuwWAidS4bsYeeV/E5fq7puss/cKIbcvDEq5m+Z
VPOH4qbemlzwiDshFyzOouJnBj5/nsAHT+d5E8w7iimVK1suzzFsg/PL1rky
HlRRokdGL9+/F4P+pJtTzK84UU8brPcqf2+CyWPX7Of7P6dGi/ufMghrhgEl
N+84Lokm++3qHy27+AXJVNiSTw0bh/Dg9Pyy08zO99Q3w3bqqCYPBtxXYnM+
ZpL9Vkl4UdvAMI8a+NzD9MEDAVhO8z7HtMqjfigJrg31EkCGHZ/DuhMHq9UV
86+tEYDt/rf7mUEUuB7RdNaoFMB0Udh31q14uGFm/6nDq9sePO2eRxPFw6G9
pYmPFNvAdnHBe9raIrJfP28sYXO2lVGNfE1hprIIgpp22zOOlVGdqTGbdk4U
gZVVygl2RgLsalVaUi5uA8VP8l9ZQxKh/aaK0SZ9EUzu15JFk00Cu7F2p51W
i0Grod6CPzUJttJni+YfEQN95LZ9/ORKst87nS+KoPsnSfjOa56E0Vsifpdf
mXJ95HmNTkk+nvrcD5PgrgCOVCs8d5wd/7v92sLphIEsTQTeXUcDbMwSyH5d
+OqRrsHVRLJfT7oXVM5pfkM9uVqn5NaPC4OdZsjbL/5ENdjSj57Zz4fHGWW3
HE2LqHTlKov75UKQd4fVaqXd9k7Q0ku3rcWQ0L6mhjMrCiqW73j5dl0LDNJ/
dJb5IwKWL3tx2VC7GeY0nI+lxQZTPiU7fJUjWkBLvXoP2+wDRY+hppbX8WC4
1sglak/Y1C9K9mtZR4TgOUt2rnlVBXVr12Bvb54I0tpYjRylaqIPcX3uHvyu
/BBXDC+mZr2m+0ST9bh4XfAahdcxcCHti5LuJi6knr9pxq+Khhrf2+/9Glqh
+eC4pWqnomD6KeWrpe4tcMW+YZ7B0WiY3W9XQNlZiT7xokWqbbjTBPKGCc2c
tttEX6iLbvrauIVDkoanqEzUCBurTz2ysXKGEPZz5pAJTXC+wngvv8GLUpiT
8SCksBl07mVfZ0x+T/SD/umHDozRaZT1ytnKs8/yIITWf4S9biyxPx5zpoCa
4Rtw7/dpxY/nXOiwfzzHoPINTD65Ts6wqdu/tmky4Su9hciW8SP2XuHBwWc1
jawXsXA067nQZjUPNPz7LVSjmMR+0Q7+tJvd/hbc5ulZPhHzwKKxd18PYIKy
TNzyABofRnWULlDb9w42B//ybEwYH/qsOb+TveIdFP1QCPXx4oOdxzAxa10e
0S85hpOHePDyqb4+zZbL+nX7L0dpdoyZFLGHUj/SgjVd4uDcL9/kHhsJ4LYN
K1CzlAK2e8CXje0CuM6jpti/jyf2ktJ/1BONh+sO+cqf7YTg/H2PFX92Ali7
2LvbrmmDvsbZbM6uMqKf3K1rTrH7V1DTxE7la66JQEdLa6RHawKxr3QEopEe
VxJAb9jKs4f82mBFrtolpnUibNoQyDP0EkHLsmEr1UYlEfuL4z+xvOtRIoQP
EIzQKRSBzIJwVXtGEtznGPRhicSQ+CTUhx4UQPQP2gdLHNjjRS3NUDCydr7B
+iiyvx9IPh9AF8UQfWi+WXGAh4BF9BPaA5/p28KHveAB/8fGfh4X3hJ9aXN0
8WmG8B3Rl6gPe3/dFqs7XQAFckvTaRkFRJ+hfre4QWVZagmh8PD1Z472FUSf
of6WK1rbZ0SMCL71O6Vi/yUCdJjtTXUTm0FoM6R3sFEU5Wlsuk/rVisUb1bf
qvAggVqUt+gCeHEh5M0oc7Z3JnWMUhYbb+rej28YH2c/zaHWz+2vGDpLAMOH
nb/MWFlE3RqV9VWxezxLm3Z+7HpVSnGvBWUOC2uDYr01TxzfVVITNVIW524T
/z/nR/TwDXr4Bj18gx6+QQ/foIdv0MM36OEb9PANevgGPXyDHr7B/xTfAOXX
wz/4a/wDlFcPH+Gv8RFQXj38hH/MT0B5IUZ59fAXevgL/4i/gPLo4TP08Bn+
GfgM0vVHsV5CVvqp+Akar0i9BMRYLwEx1ktAjO9HjPFXfD/2/4/qnf6z1zPF
/V26XZr/IV1PVJrP8Uf8Dmk+B37fX+V34Pr6q3wPHH/p828cP5xPiHE+SY+v
dD7gP0v9UsTS4yNdfxT1AY6v9Phg+3+WnyLNP8H4vHR9Uaw3hxj5FBhfQb4A
vg/HD/8P+R6IsX/S9YMRS9fz+fv6opL6tH9W3/TP6otK86NQvn/Ej8L2P+JL
YTtizFfHfHOr3+pdEoz8CWl5Y/3Bf/f6nchn+av1PHF8pflN0nwZHB9cn4gx
PinNn8H9D9c3YvxeUs/z5/hJY+R7IUZ+EWJpfhGpT/gTS/PDcH1hvVecT6if
/76e5xeCUV8jxnqRZD7+fL90/rI0/wz3G8S43yDG/Uaab4fjifwsaX4dzgeU
z5/VJ/6rfDTkl/1V/heOh3Q9c+n6uihPbEd5Y/uf1eeU5itK8+Ok+YvS/Dis
54njJ13v9M/qb/4RX1Sa34brR7oe9J/VF5Wut4rvw/+XrieN9ZDx92iPZe/L
qxyfHUP098WpE3SL3SX1IxGj/kaM+hsx6m/EOP7T224eH+shqR9pXaCdXseQ
1I8UjluREyNMJetBrf3VgKB5kvqRFjefnfp0PgUGTpkeS2sIJvL7wBhV1NU/
iug7nQ+pKZqTQ8l4C9siXtmYhpHxDVT1cmG4hIO0/965qzNm5AABLH89UNW+
d97v/NfDA1wV7p9vA4/1/E6WikT/zlR5cIqZxwYLV5GZRXo4nOSOKO46FUkt
bdkX8eYQF4Isb11hDg6FLXprpwXs4IKNzsbHjivDIK5trUKwPw9+WRV1lO0U
DoNOR8mmtvHhsVXYgGBRJcX0Ph+v0yKGKr/essFnq0k9lA23Db8F/aiDOMHW
RTzjAPg28kZ619IWMIV7mbJ5ftD0aux6/vYWGJo+Z+x3lh+Efbgbk+XCgyqG
x7INir6g8/1yxYU8HuQID/7qXeEDdedU+6l/E8DLoPebGx+/hB8jW+Mjjwth
c0SAUeC2l/C8370Dmw+LQOHM9qdxe73hyMLzNpsHi0FluVvU6fHe4GX17Bi7
bxJUnL+Uf+wcBfdnPL7C8Euj/J4L/Mymp8HakqDbjJB4yu9yrffa52mgMl5L
Jpixl3KbOup9nXM6fDfTz+fkBxN7Wstr2CWmrRc1OGDYlcvjWmF3wcO3mnap
lKbhXX7cVD7EL/QcGHwym9jTnf3shCxWPqmHKHdubgKtpYTsN7LLnrgzfqmg
br5s73AYL7GPVy5J5G3LFIPZu975tOgKYi+n75+iZ7Agh6wXtI+Xvz42kXUu
kuxXeaP1jop0Q8j+VFCv7BXjE0j2IxXfq+kb6l+B7AajnWzLZmIvr9T0vc7Q
uUrs006t53vZO/2JfRpCW5+gqZMsyQf6aa+Wsc+3Kf1/+NUyR7/+mGwksVe1
wguKrvsI4MaNvg8cp0vs16AZG9icV2XE30Z90HCb28fLXwRRKyvaWN/zSD2g
2StUo+k7c6jjKeqpQwoEkCK3X9X+Qy5lNGp7+RR1IUw/GVjMSSqlPso9qz+1
TgTmafZz1ao/wU4jxXOWGjFg/Nv8Bw9jS7ZSwHvIi29N7xqUScW10LYc6OLD
HPUZFnz3cKhtVRmr2UvyveMGZo/c1/29tapnnBnJEfDlnYlZywIhDFYf6Oao
X0S91Pa2au7WX65uu5coDCunVA+Oz6gpEEHyzZdXHSdSRB9dPuj21FE2geLL
aF0UrOIRfWaeS59hkOUHade/zS0z4ULfsvz9z7/4kv1x66pLi860+0DYCfP8
h5e5oH7ea92VVF9wKQhXL0viw/ew5WPvrvYh/m9e1aqHcmdeguehr0Z+kwUg
nnUnfscIHxhueL7NSLMNvjAdIj52eBP/WC+4uuKzgTfUTfQoupDQBsum3F4o
H+UNh5TY7rL+YrgQ9HjRm5IX8NrzWzXnXDTFnKR6O8OdC1oqJ8VBb95Sme8X
lD3+zAXHjkhNtWdBlOoMtdtjf7QS/TBmNrP0doEv8dfsuU0HO+f4EH8tjjo1
a3aRt4QfNDzK8F7MC+IPtB0YuWf0jVBJfc+KKUHeu4KIvf/Uuf9QV/UAYv9N
lst4ZvgwHSoOtdxmuIQQe/7wsl1r1XxDoOFoiyClrhXuPyg5wY4PJfb8RJci
PYPsUIg4uKfNdCYPNiSnbVZoCyP2PHtQayPnexhcy7farm3BB3mndS6OZiWw
+v480eNTYdD5VPEIc3QptA/cdWOCdhisfjJvhMflKhgY42GzMDEY5kVk2zEn
1cL1VhkP+72BRD+K80rPP70YB+NubHjiGJtA9KndnSWv6NrpkPI9t54eFgtR
qwxG2XekwVTPwXILzN+C0+REa7ZdNDjYDlV7dyMZbpw1O8w8zwSR0pncOotE
cl6B+i7jVr+u2UfFVAH/auv1brxc/sH2Y6sk2OHGt8HDB4gIlhuyPyRrlgTj
eQe+b4Vrxq5jDULSnii3Mz4yWYJ7OScd3XxJQLCjwpxhw30lGP0TxHhegu9P
drmTHLmHT9r1Bk6b1KErwWednPMednIJlpEXn9ysyiMYz1vwfRdHRq7lv2kl
7SeGlA6yPyTBXIUXh5i1TQR/G342VHNuM8F4XoPvsx1mMNw+sEHSH3nr7K6d
Elwj9+s8g+JagvlD5U4xp9QRjPYovu+QYnZR19MvpH33wHZPR2MJ/hG0IZv2
sYqavpXpPP1OKqTv67uXP6qaYNw/J+/KG1l+r/v/jyguNnCroNTcdpjJ302F
diMrd4ZhBXVWfFcc2I2DmgcfZTqVUCpWTV53HqeCTtaUI0z5UurEgwsHNjyS
1PNbnj5t8RJmt/1UHGnDbimgBoyWneMVkApHZiQG010KqL5rX/V2eN09Hhcc
LzO9s6nMq/t3q+V2zx9O3HvN2GzqtMrc1Gs5kvp+fqKxcRYWaRAfE27JTmZR
g13DnbLGpYFWpOEcg6GxlDZ/n+W9xjTwzmuwYWfZwvNc3SLP2HQwES9apXbY
ncQXcb0L+i854fWuGXZt/5u+fkYZp6+f4NDcAqO2JbozhoeAyYuI9a9CWoB+
/0w+7VgIaLvLnLU80QrpVk9SNHVCYaPx6wXmblyQ13zxq3lAKHjOfaQ4qR8P
btFmj7LvxyL+4YlTvVeoGSRTbgoMz8RYHjjO7HWG4fSR8jzsPi+mhQ8F0zQ6
gt6lU+p1VP22O3w4Fzwimm4ZBsOcxoQbp/Hgg0G//sH1YcCJlpFbROdDoe6t
L5wHBcSfdFa9GKOpXUTp9uvTfvhsGyQHp88zuMKm1LQ2P380vA3Sv49S9NgX
Sc7jGj9siNfMiAD1+41T+y8WgsG5jZSmWSRsG+Qjm58rhKdKH0Lookj4csP1
ie/hNlgjz6jlHIwEmCa7wLdGCI4P4QD7eRQ5zwu+6vKBphQFi65c27rNpQ06
D3l/4dyMgq1Fnw1dB4nApO9Ydte0aOBsSSnb6SuCoSnFfFZ4FKxR8rL++qsI
lr5iLFYrjybnf8chpaBrczSsPDTJNZgtgvAHt9NoidFwuDjo5FwDMQxRHxCr
aRYD37fek5ctF0NBTGis5rdoMEz3Dt1zTgzuThefOg6ppDr1BvYdeE1M/LMX
T8VFe3XFMHF437UK52J+d15dUe8XztYKh84TYz93JeSCvlx40lVmJDnfsrPL
NIlujwLF5ZPnmetXwNTr/Qr38EIgqCHHlv2iApL1+m2eS4WAa+GbOk4mBzr7
b0hs572Gljn0u44GNfBWZJt1RRgI55fJxmheqIePcTeNXysEdOuZQB96aCPs
cNKYoCp+BS/eedVwvkf+zp92yxC8+bqZC6rzlN0YHqHEv8bzip2Djas7dFsh
vkQwX63xI/Gf0R7Zpnvo/djHAog9NvgI2y6CnMfVbRltqJYaQfzztUvvXGbo
SeI5Puqfd/Blooi/vqeflx1TL5r46xb3hHPNt4VQs6tunOZbs+DkLwX6BqEh
YPHo/SjDiywIzNo/2iM0i6ra6qPPtRbAser68fbD8qiH9+rfe+kL4aGm/GZ+
rxLKVaf1U3FNG7Sol4TTtZOpd4W9r73qtg+/LRqa3nW9jLItXO0VEi2C/wPr
06gt
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHmYj1UUx+/VqoQWKUuMorKMfYsiSyNrQ4wxQ2MMxjpEssyUpWQo7ZSk
RAtFu0qqUdEqpUhpI6WSpX19njrf53ze5+eP73Pe9733nnO+5977Pb/nl5Zf
1Hd8uRBCWQzhKLOnG+wx6Nt2wxJDtqEq3zTnDOzRhjOxxxiqYY81nG2oaKhk
OAdb2VDTcLyhvOEs7AmG6qw7zlDbcKKhgqGO4SR81WBc62uxTvPq4vtkQ1Pm
Kc65hlMMpxrOw55mqG+oAtcGWPFriBW/FsRQLvXwLV+N4al8m2AVrxHrVI9m
xBe/5lj5Smdc67MMnQydDS2Jk2ZoDWfVrw1W9WuLFdcLsMqrHVZc22PF9RJq
oVwuMpwP745wbkj8RuTVgfEG5JQO167wlK8ufNN7K/JVrhnEEdfL8aU43eGm
uT2w4tcTK369sOLXGyt+3fCnfbgUK199DRfCqR9W8fqwTvXoT/yLDQOw4noZ
4+351hD+A+EsfnMNVxumGp6FW47hY3LKNQzmWXkNwYrrFVhxLSQ/1WMUVnnl
w1lch2GVex7rVJsRhky4jsTK11DGtb6AdeI0Gt/iehUx5Hts8HMmfu8Z1gW/
y58a7oHLevgUGfbDZ4JhGnko/hh8y9ckclUuk7GKdxD+Ew1TiF9AHYfj60rm
5JGH6q3z9VHw8zrIUEy9xKkEq/gPG5bC6YDhc8O9hs+Iea1hJs+KU2qYbphh
+N7wNb7nkLfqdB1W+c5infjdQN6qwTysfM1mfDLvI9nn+wzLyPcxwwrDQsNu
w3LyeokYNxrK8HUT82aT1+vkdDN5F1KL1Yb74Xg7+Smv9w1vwvVWw/XBz+8i
wy18+9Zwm2Exdi7r1xhW4m+b4R3W6U5Ld6W5ib6fwV5pz3SWkh4grUx0X/Ok
39V5T3Rf+iVtrsu7NFtaKE2UdtfmXbpeg/WKXYdcKuJD70nPqEmOaayXNtcj
hsakRdKrRPelidJ76Zt0MNH9+iGl+w3g1Ih3+ZXeSHdOwUe9kNL9xuTblHfx
T2d9ovvN4NaC92qs07zO1DILHq2Il+h+a3zrXnQNqR7QJqR6QNuQ0v2kD7Rj
rAnrusBZOindTDSxP7l24ptq0YF5SX6dQBZrVKOOzDueWtfArzQqkzFpXb+Q
0u5ucOvOe9IPuodUP+gRUv2gJ7XLgH9zfGTAT5rXJ6R6QN+Q6h+9yLE/edQh
Rivq0od5ugM6+7oT0p9s6jWVsbkhpe/SR+l/Djko17zgWpboe2FI9YAh1Eu6
NZrc5SMXbkNZn+j7CPIdjS9xyGde0ify4VrIGvEoYEzv0qNpzJOmSaOk89L3
8cG1X9qpMyetnkCe+k2nO6A7If0vIlf5nYKvrcH7xxL4SSels8Opl/plFv7H
wG0S85I+MQme01iTybt8qM8OYq/FbwZ8pPcl+HzasCq45kv7pfvXkMfM4Nqo
eLN4l96X4uuH4D1gWUjp/hzy1j5fT36zWZ/o/g3kUcr7ZNZp3jPBdXk5e1ZM
LGlqorXS84WsKQuu/bOIqXHpc9LnislD324hhtaqR6iPqH8sCK73t5OPtH0R
ayJ7KJ37IHhveCC4rt9luBO/i3j+MLjuP2iob4sLo/euTww7g/8+GMsejME+
Qq4/sg86K4/zfSl1X85eKPcV5L/F8BB57CUv1fQ5w/PEKWF/VIcnDWup5T5y
XATvldTuK8OXwfviU8F7cAn+Hsanvj2B30eYV0KOq8lTOT5KnpuD10C56w7o
7ujOriPXsVi9j6MGq6jDGvJWfi8wT3OkFzrfOtvZrNUdfBH/RezpW/CTfZtn
7fnL7PsrPOsMbWB9EfE38Lye7+OZ+xLzdZbKgp+9jYZX+T7O9nxU9LOgGrxG
HTYy/ya+beS5jOcbyXENec4i1kzDpuDnXr9h3uD9ZvZPZ1FnrxTO8+Cr5zuY
u5n6X4efOax7N/j5eZf3uxnfxHzp01Zqvo53PS/hOZu1W/CjPqzeqD6n86Jz
vJRc3icf7Zl6Q/IbdTt+tvMuzdLZ3AY/2Q/JTXsh/dX52cEazde92sn3XcwZ
z/gO8lW/UL/JYK7uZA5zd+FD+raXWkof9gQ/17oT0kad7S+Ca6V08jDPE7Aa
S34/f8mcncTNZf4hxvcQYwH7vJu9vp+1ilVMTjPIS8/zGf8K/x8TI4c93Eat
vmGN5uuufo8/9Sf1JN1F9Z2DfJMmSPsWY/dR/+94XgzHA/CV/ZHnB9jfUuL8
QFx9k27ewdz9zN/Pu+6X7vZa/H/N+vmMHziinqrbROzhI2p+mPHbyFu6PcTu
36DoZ3cfHB6E6yHWXmzjp0bXqkOMyX8N+3Zc9POwlzqK3wj7lh+dT0ezFaPv
1USztaJroX7j6ndfR0Mr+9Yyeo+9IvoazW9sdnD0Myl/BfgcbbZD9L0bZrZ9
9LrVM5sXXVulK2PQlrZmh0bvmeKaC9+zzE6Nfv/OM1scXYeamR0bvQ61zc6I
rnONzE6PrjvNzf4e/I6PjF4j1aep2eHR63BB9NiKe5LZCtF7wgCzl0fXnilm
06Pva7XonMVXMdOIe6b+G4vew6pGz0+5lTM7kDqoAfenDm3M/sPZaG3Pf3L+
/yOeYp1s9rLoWize58O9UnQOyv8XQ9fo90X7XJ29zjabFV3PtA/lyEH7EMjh
QrMx+lkVv4uI+6+hXfS7/IehRXT9+Ytclaf2pCb7cmn0eZpzdnRu4vUb50ln
qZ/ZKtH1XmetLufnGLNNovdg8fgpOJdO9twluh42iP77Q303J/q+ak+1zw3Z
a+X4Kzl0s+fu0fucePwdnEtm9DOkGvY2Wzl6z1Scn4PH6hmdv+Zn2HP56L26
h9le0Xvm/5hcUn0=
            "]], 
           PolygonBox[CompressedData["
1:eJwtktmLz1EYh88rZA2DsS9jDAnlhgvFBWVfx5jB2NfJMqMZkht/AMqNEsIg
+zZjCREhIzJJSklJSsmdNUuW59PnXDyd5/z6fc973vd8ilbWlFa3SClNgJYw
MXBYhF+DPngNvMIPQju8IxzBL8MfmMX+Lutu+AVb2L9j3QUr8CFwFr8KbfD+
cAq/Ad9hMvubrJtgQLiGzj6tO+Hfsl+C0ewHwhn8CgzGt8NH/DC0xv+xXoRG
GBH+TX4BPkM1+5fJPf6AWvZvWHdAv3BN1dIdv8Jm9q/1HYwK11StBuiAtwq7
ZjIeHwf78h3mhGek2dyHbuyHw3m8CZbjy6A+eUbT8KnhWrdgUnhmmtV1WIxX
hmf1LM96KBxNnvlWvBMcw99DEd4ebifPTL0OgkPJPdfhP3Pvb3OvfcNvrZ4/
5UwoC5VQhhfCE/wxtA3fUXfTG87EZ4Tf/g4MwwvgAX4OSsMzUO8PoQLvCc34
U1iALwz7fpiPl4dr7YWu+NzwWceTexkTzoJ62ob3gBP4h+Tsfsl3V4ZVqxec
TK4Z4W/0X71ZSXgmmoXepHv4zrrrI+iMTw/3psxrFiPD2dJM1OtsuJfcs95m
bDj7eiNltRh2Jmf2L8wLn70n+dsu4azojI16a3iR3NNqfFV4Fs9hCb40nIUD
Odu9w66Mr8HXhv+rTPzOGVE2dIcqfF14lsrkBnx9ePaqqexMCWdRGfoPCS2H
0Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxVmgnYz1UWx9//Pb9IpEQpSzJCiVAppXVqTNOUStK+703LlLapibSQiMoW
EUJelaUkIrTYQpFdSmTPWrJvcz7O9/+85nne85y733PuPfd8z/m9/6p3Ptr0
kVRQUFDGCgr8r6BbrqDgWC90d77XO/Y4dXX62Okup/OcPnO6x+lCp2FOdzqd
6/Sp091OFziNdrrX6SKnL5zud7rYaafTDqc3nXY77XLq7DTPaa5TQ6cxTvc5
/dVposvxsdMnTvu9vs+pewoZX86FnBW8fJzTOm/v6fU2Tm2dejm96tTOqYfT
K+rrrbbXnN4Vb+/UR7yD00Zfa4NTRy9vd77NqZNTD6c3vK2/U1+Nfd1pQC7a
33QaKP6W0/vinZ0GiXdx+iAXZ438Hzm9LRmH5kKHd5wGO3XVuCHqp2+Y+tHv
Hy7PpU79dE69pVOvFDKO1Nm9K/2Gax7jRqitr9Zrq/P6TPqh01eSiT0/lz7o
MdapUDKOUVuhqIvkLu538oHLUQMb0Fj0Hu/0ofT+Wmsj1yjtyfl9ozZ0mqCx
nMGX4sh0va97Hfbk5X86vyyFTpOlN3pMEWftOdqPtaeqbbTTdOmATtOkJ/UZ
akP2mZIbWWaJI8sP4pzTbHH2+N5pnOZ8q31Y911s3flypyu93EQ2Pl9yI+8V
3jbJ+VynBWpD3h8lH/IuFkfGn52+055LxJG3hMWa7He1r3lVijP4Rf3osTCF
3MuclqoNnVZo3nydwQzt94SPv5a34eU/nFY6rXJazVpOi5zWStbF6lugvnVO
P0ne9eLIu0Ecua5JcTabnNZoPdbarDNDrs0+ZnEKeX9XG3JcnuLeJ6k+X3tv
1VrI9adkpb5DMiFLsxR77nTa7vSb+kpZ7L3LabfkYM894pzBPqctWnvLQeex
X23sv1dj6f/D91qSYp9Fsg/utV+KfUw+hrfAOyzj9cOcSjoVT7EWe96UYmwJ
p2IpZKLv0BT97H+YxmROpZwO0dibNe8IyGLckU6Hq7+49ss0B/99SQp/d5T6
WK+c5pR2Kqs26uW1HrIfl2IO/QPUfoxTBbWxxiC1VXKqrDJrVMHXa43Skgv9
TlAbaxyvsYy7RWtUZU+Ltf7iVE3rMvZEcdZerv6aTicdNLaWxlV3+tNphdOt
Tiern77Bmlfb6Wjfq47z+k6nai3Gnpainba6aqultvyet2mNetKhjM7r9IPm
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
DfHM/wDLYOGp
            "]], 
           PolygonBox[CompressedData["
1:eJwllnmwj1UYx3+/87w1bdO+TEmopuzElX1kdy2JJJSlS7biYkhE1hIqaqTS
okuMQYlKaBNtCCEppbilRUXSvn++8/3jO/M55z3ve855znO+z1uhqLjz0JTL
5UpQhj6KXO5jNJvO8flcbhu8FS2gvRB1gFejm+D6qA28By2Fq6C34DfRPPgx
NAgegrrBM9H38CHUBH4+eWxX9FryO7Xh1ixkH3yY+U+Hz0TraXdB3/J8P3oW
XoX2wp+gB+E7Gd8a3o2W0C6DNsF90evwfLQGvho1SN7DKvgR1Bu+HzVkrpVh
3oWuh7ujQvgu7Znny2nfC+9EveBT6VMQO6BHaV+nPcDj0Lk8u5J2D3gD6giv
RQ2T17A5vEat7Sl0AP4cNUre4wr4IdQTvg8dhY+gq+AX0UXwQfQcXIS+gr9E
jZP7psLNWMMeuD3qQftG1A6+G/XUWaKO8DR0KWObhGOpHKhNewntGfB2dBLt
irRn5X1mx9EO1AJ+FV0IF2sOeAwqhN9Ac+BlOiP4WjQVHozOYvyA8Nnehp6E
b0f14CnoAcWTMcd0Fuh92udljmV3rZd2lnnugcm5eovmTM7ZKeE9am9D0ORw
DLT3W9Hl8BPhuXRmA+Gz+d5IuKu+EY6hYnePziCc08rlUcoJuAhNh4tRDd4t
CY/dhk6j3TucG8NQW3gDmgsvR+3gjcpB+BnUD26BJsKdtEa4FZqcfIcK+F5L
2pMUi+S5bw6P1RrKwd+F71Zf1AdujiYkn3FT+F3tGX6BMzyF752MFuTd15ln
J2Y+m5boBuWP8iE5Z3bAw3TH4UWoOmMnKObJZzpD50vfUX0LTdLaaB+BW6Gy
cF36zpFXoA/g4WHWne2m3Ebjk+/c4+Ec0NkrBhfzfqPMd/MOrUntsPd8jf6A
/0Hr4Ga6Y3BbxhyEL9Oe4P7hte1FNeEt4btXmnesqofPUjF7Gl6IDvBsePJd
qhaOne5UHbgNffvhfPLZ1QiP1Rnq2dBwrmqMvG1wOLfkcYpt1XBuKsaKzS60
ODlGH8Ij0dvJHls+8560F/UpV+tkzgXlbC14Js9HJN/ZQtr1w15YmuxVNTPn
pjxrMc8Whfeud5bBS1GCRyfnZlXGb03O0cZw2XBt2K37Q3uMcgp+Jzm3K9O3
JTnH12utmZ/JoyvBY+nbDG9CF2T2VHnpxuRcmcjzkrxzRt5RMfNYeYhya3q4
NijHRoVzQrnQB1UR0/de8hp09g/T7pWcA+1pjw6PPZTs5XXp25Hs6fXk15n3
rj55z+zw2cqDzsjsifJC1aS5PGuQ2ZvHomrwON3XvGNWAG8P107FVHe3Vtg7
dIeV65XDXqScl3d/g1Yme7i8/hhanez5I+BymefSnlRLDysfk2vqb4oH6g+v
QX/Dl6AByXfiJ7iCPCP5m6o1X6AVyTXnZ/j38LtN0b/KBeZ7BW6uOxb2GHmL
1ngCzzqFvWIQ+gEuj/olr6k0XKNUmzSHvF05pNyRx+cze7i8W3Po7D4Le6HO
cB3cJewd8hh9+8dw7dMc+mnRGrW2l5NjPz78b6Iz+CvsCfKCtejX8B61t5cU
43BOKBcKkmvbvHDtVo1TLs4P137lpGL7Z/hbirFi+Uv4W4ppJd3V8L+PPPWK
sOfIa+Qh+teQZ8mr9M+hu/NpuDbqDulu7AvXBt0Ree2ccC2V5+pfZlq4luif
Rmf7X3jvOmPVvlnhWqoaeD5zlcl8t1STd4Y9XN4tj9G/hTxC3qB/jGtoH5/5
LFXT/wfXT0nK
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHnc1mMWh1/13D8a25CQnWxj38c6g+zr2AbZUmQXKZWlRFpkS4RCiUpp
IUlKasgy9jF2WcqeMci+z7nmXM/n8cd5z+/eznaf+3zP867dofOhZzdramq6
Of40Dz6oNDWNDXqx1tR0VtBRQUcHnS1vF7RRrO8W9E58nxl0pPs6u35MUJeg
44KODzpPfkLQOa4fG3SunH2XBJ2hvEvVjc7zg04M6hDUM+ikoJODLpB3Curu
esegruppH3Sh66cE9Qo6Lej0oG6uI/ci108NuljOvh7KQ99l2oJ/17kPef31
E/8GyNF/uX7iXz85+wa6jv4rtRs9V8nx7wrX8XuQnH3DlIu8vtqCjmv1Ez+u
D+ptLG+Q9wka7Dp2X60e4jfUdeJ9s3LRcY3ryL3RdWJwk5x9zwU9FDQraLh2
EY9eJf28NWikPuDr7XJ8Pbmkn7cFjdBn9o1yHRtH6xu2j5ET+ztcx8Y75eyb
qg5k3BU0xHiMNxb4Okk/ieXdzuHfBDn+jfMcZya7F//u0x90jAz7+wTdEt9r
l/ThXqjknim1XOtvXtyvXdj+uLYyN1NbxxnLcdo7Xf/xe0bQWPfNch3b5wRN
1KdRobd/SXsfdh2fZsvZN039xOwBOTrmai/+PaFd7H1Szt7HXMfuMaHn8qB1
gv7pOvY+qz/40bekzEeDng56UD+ekc/Uppu8j+f1Dds7xNllgpYPekn70P+y
nPitV1I2NWpqyT3/DnrFdfx4I+gp9b8pR/+rruPfa3L8+Cjodc99LOfc27XM
dWy8oqSed4PmqxMb/xLzGwS9EN/z1EM8FriO7R+oG51vuY7c91zH9vfl7KMG
U4vXD/pEW5D9fdBnQf8l9iXt+I9z89X5p5jfsKTt1Grs/dQzC9S5KOhD/f5K
jt+fu44tX8ix/beg79R/VUkfFgZdW1L/t0E/qAMZP8q/8Fzdxjtj/xB9+jno
S235VRnsvSvWBwdtHNQ2aNOSNm5ecs8vtYw1+UKOnxPznUq+ia2Cb1lSdikp
F9urkrwp+BYlZTQPfrd7asEXL7m+WNCSJc9zbik56+1L7m0R9Ae/2TcsaMWg
1kGr+L1S0LLuQ15Lc5u5FeR/lJZUz9bKXjpoG99Bq6BxQcODtg2apExkzVBu
XV9LZePH997Jdtq1aknMA1PAmO1jvEbQmiUxHOwFg8fH+LagPwfdGrSa+8D4
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
IeRslT0jOfh8yTz8H+S9Lf4=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlfdL1lEUxr/Je2+DdhRBSGUW2aI0s7Rs0LDhyJYNFTXL1LJtaYVhAyMI
goigkpB+708o24P2oqJJNCmCBg2qz8O5P3w4z3m/695znnve/qU1+Wvioiiq
gBik+ii67aIoHgphJvlsqEQPhfdwH/IgGe7AeZgI2fAcXkISzIPpPFsG69ET
4AJkka8i3uKDi9HxMJe8Bn7BPvIW4gC9F50Jx7i3nHwDejQsQ2+D79BEfoLY
D57CP8iECtjLtZ6Qhm6Gv2HN2eGeu3AJJkEOXIQd3L+f+IxvJqIHeNOT+S0F
nQy90bPgCuwkP0j8xj3r0T28XdMab8Ee8qPOnvkM88lnElPhhupCvpzYDTLQ
n4hroAwWkm/0ttfZ2hP6HjEXNkEReTGsQyc665323Bx6OArdVTVDL4XIW4/m
hZ69CDXICT0b7G1P2stCZ9+6ClPDN9ty/Q1xUfitUL3w1kutIQ79SnsMNV1J
PggWoDfCQPRl+Shm95SSJ0C+M4+cU1/Jm4hnYnZvA/mB8Ew++h16JMxQncjb
Qx16q0B/DV5ocPbtctjgbA190B2gPnhYvW6jNTrreS16E8xBb4cx6M3edBE0
ot8SR8AhmOOtJ+pFFexCXye2g8PyNPkQiHO2Ru3lNXGYsz3N8lYj1aYy7P1x
6KVqkEe+GmrR1bAbfTN45QjUk/8mJshnzs7Oz1C7luC97t68Jg/uR8dUI66f
1HvQa715Q57UWfpGPBWzM1VH/sjZWWzUvsirvXljms6I+qA9ODvTSZoVqhm6
AHqht3ibJapplc6+t2c3h7Pjvc0WnSHVaigsdlYz7V3v1LtUgyfOZopmiXrW
GtbYGNastWgG6OxrTSXkf4jjnXnsAaTzW0no0UP5mDwj1DDNW8/V62LojB4O
S9BZMBad7a3X8oDOahdv13Rm5S15Ul6Uxz5CR29eXQ3OWw9OBg+MQHeCFGff
OBM8LO9q5k1BT4bj6HR+++JsJmgWaKat0OzwNpvkcZ11eUTe0JnXu+VJeVHf
GO9txmi2aOYUoH84e7dmcK5msTev6YxdC56X1+UZ1WqJt1mtmmkWfHD2X6CZ
0I9rfaE1ZjU/7WyGa3ZrD2eDZ+VV3TPOW41UG/XkP/bNvgo=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
n/BA
            "]], 
           PolygonBox[CompressedData["
1:eJwtlPdL1lEUxr+IvPdQkbZ3apsm9WPQjiJtGu2yNA2D0HaZo0mDIBACESSI
IAIhgggi+kfaey/KKNp9Hs754cN97nvf945znuctqaovr8vLsqwU8qHMsuxz
yrIDcAbuwDw+O874J5dl3xh/wiZohIewivU2xgL4Ak+gHg7CY1jDegdjcfK9
H0BdnNGbtXJoRa+F+7CS+XnGwjh7LvzO+R0SehGcRJ+Gr/AedsMhGM7adriN
roI56IVwAr0eeqCnwH70MeiOngB70UegF7oWbunecBdWMD+X/A7PtA/zi4yT
4Z3OYX6dcTF8gFLzu5WBobvpTugWyKFHwS70KShCV8AVdDW8gS3Mr+rtMAZd
DTfQtdAPvRra0RtgGnqq+Vu3wi/4qz2gCV7DZtY7GedDFzyHndAAn6CG9Zt6
J7xUb5lfZpwO/yDPfO9mGIheBxfQFTAEvREuoSthtPmbW6Inuuuj6GV79LaP
ea/V45HmPVTvVJMB5m9oCg/1NfdcY3hmJvMZ5nfdE3cfa14bvWEWepz52uHk
tfsYvVENZzOfCPvQR+XpqElD1KynuUfkjR3qsflv9F15ZpK5Z+QV7THe/Eyd
JQ8NNq9Zc9T4R2RCWVBmKll/G724Fr3Oh5rkPZeXRsC25J6S1+UZeUWeV1bu
Jc9ia3hxkHkv5En15mnyrKlHyl5/c690hJcLzL0tTy8wz7yyrowsRS8x9+5Z
WIZebq51R2Wj0DzryoiyNszcq8qc/gu+J89aW3iv2NzbneGtoeZekcfknRfJ
syQPKQuvwnvKRIl5zVQr1eQ/iByQjA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
bvD1CuX4TsEPKaTXocEPK6TT8cEfz9qjw6N8RCGbDg7esVC+vyh4/ywM0o89
L5Rbb4jyK1lx957gexfCczWDX5R1d6wV5UuycOf1+H0hXJiCn591x51IvM+6
A60f9Z2z7rUvcl6y8tGdnM1CWGFplJdkxaGrom5E1j3w5Sz90O3MqD+10DnY
J/iqLMzDGxuYl3eso6Lu9Kx7JbKnW/604FOyzg96zbZu+MT+hfzigOD3ZWGf
74J/k3V/OyXqTy50V2Zd3/LaVo+6s7NwzLlZdmLjCcFPLOQn5Pw3svL+sVE+
ptBbyElRNy/rjWRW8G+z7pCfssZZWOvrLDlk+MbPuaOXYowzsvDZ0+hizFAt
+FlZ+OywrPPH2Xs+yjcWuiftF+WTs+4oR2StNet8B2eh0F15ZZRXZMXsF4hL
hXDEyCifXejePj3K5xS6P7NOM71W3wefm3X/WIc7Rxbmeyz421n+uFfUj8rC
dztGuY/Pw+HEt0J7xDwvZc21UZR3zXrLGI/uWfdz9L09S+ciyjtnva3cwpxZ
cWiTqN8t6+3jZtYsK+8vD/53Vi4qh8xOWW8uG0Z5l6z3kU2jvHvWe0qn4Kdk
4b1Dg092+dng72fhCs7UHJ+rhznvheLIjviKz+p5UTc6K17tSVzMihsNon4P
++Og4O9m3SOeDD4pC5PsVGg/2Av2c1jWnuK7d9tHPgj+YdZbBucCTMnZ6Iwt
he48Q6LuvSwMwxp/4nX+KviJWe8T52X5M77M+tUrtIbg/aeyMD9xYqBjBf46
1T6Lnx1uX9s8+jUu9L9pF2fFDuLGNVFuVCinoNce1o117eS1ZQ/PKLSP7E8u
tEf40/72qeOC71cIK7JvtQvtHes6wGvL2hMvWP9Ls3IPeYczVafQueLsbFDo
/FwQ5RqFfrs+P/gFhXIM+3yI9/rCrJhIPGwSvGmheyBx/Yms2M4ad/Q6X56V
58hxu3GeC917OF/1C50x9vxA7zvYYd9C+AH71mTZuCj4b1nvGZyLg3w2pmXF
PuLex8HvCro76Q7xTBZO/i/4v1n3ub+CL8t6w2jI3mbdFd/MihHEB3xlqP2F
M/uZzy3nlPzBWb0yK8eT3/HvA+zjxHh8G79eHOU/st4//gcXPIMO
            "]], 
           PolygonBox[CompressedData["
1:eJwtlndwVkUUxT8jkezu4Mjo6NgF7L23EZShCggm0kRIIHQCSeihSJOqCCLI
ICoiIoijKONYQAS7YBTpCBmaQxFRFMWO4u/M+f44887ZfWXf3XvP3VrFZQWl
OZlM5gVQDcyMmczJKZNZETKZbaAeejmYDH8Q3MDcI+ju8DHgCXiGsXfgG0BD
dAn6CLwyL5O5HX4nWIcuAUOZr4X+CP4xWIteDLrBHwWL4COYr8G1GL2V6zYw
A94BzICfxPy78E3gCPpHsAT+igCfAB6DjwYN4H24/zB8OetpD/+QsSnoveBJ
eA5jy+FbwGH092ARfDHozNya6LXtB+/BV4Ih+n/eVwjfB+YGx6A+97dG92du
Nvpv+F/gLfjb4Av4l2AqvDbYDt8M2mktYCd8VzTXN9rB7wazFGutB34AzAte
8yb4RjANPh3U4Pu90AXwcu0Z/Ch4Fb6CNTVgvg16AHwOY0Xw/eDZ4Jh2gP8O
lsFPAZ3gf4I34VeC4/B/o/+tnHf8Bz8R/S79c1fe/zX6cfQBMAD+HVgAXwnO
Zr4c3RY+CJyJLkW3gQ8Ep6H7oB/Q+0B1dFd0K3g+KEYvRY8L/sYG+HrQAD4B
nJ+cs8rVVaAA/k907HVPPnwQ9+RwrYuO8O7w++Fl4HR0X3RrrT049jvAzOA9
mAzvCCbBe4NLuP8y8KliBV5m7iEwET5KMYdPBy2Da0h7vSV6L7XnVdE5rtzW
NxbCh/O+xLUL+ib4zaASXlMxYvwQWAh/Pzi3h+mbwTmu2huOLgyuwX7o0dl3
HQve+4bJtaoc6I8+Bz04eE/K0Gcl74325CL4Pco/7v0guNaGRHPV3KzoPdbe
6h19uf9hdGf4UXAhui56LM+vRpeix2Zr+4/g3O3B2MHgHC6HN4/OveOgAv28
apLng76NnhvtLblZr3iJa26wZyh2Lypn8xzDMvQ4rl1Vi+CO5BxVbsqT3pD3
KGfh40FP5UNyLmlNveC3ROf6IfRQ9HPoKnT1rFcMjv43eUZBssfJ23brH+Ud
4KvgGrqY+fryPJ7/RPWJvhx8Bv8W3JXsmfJKrelG+Hh5RnAOTITfmuy9PZWf
yTmtXF4f7DXTork8Zyq8XvK/9QU/oyuivy1P6Ac/I7n2lPNXJOe0cllrug3e
invqBP9DCbxmcm2oRruh85JrRzXaA52SvUc11Rt9anIty5MaReeIckMxrAOv
nezN6gnXwJvIM9Fr0L/Bx0RzedIv8FHgc/hSMAJ+Fc+MgBeB+dE5E7I5OBD+
WnSsTgR7UXPGvgn2pHXam2hvk6co1kuia1cx7wI/COYH90St7Rh4PXiNqvUW
0b1GNa9Y6Zv6lmI2R96C3hlcA/KOlqqHYA+pjO4J6gUak1co55Rr8gzV3g/R
vUg1eB5zFyR7W/vgXjcl2ovU857J1khu1hPmReds9awnXA0fGR2rkaBpdE2q
FlUziu2C6DnFuFm2hlQ7qrHd8ubk3K4I7t2qWdWqenjjaM+R16hmr4VfD9YG
nxnkvcuic1Ee/BQ4N9nLtgfvZYfkWtCeqjc1QW8O7lFNk3u2erXGGiefCXQW
2BjcG+9lbGtwj2yV3LPVq6uCvfM+xnYEe2iz5DOPzjp6pkXymrQW5UhL9Ozo
Z/WMen2j5G+p5+9F74mOhc4o2uun0buC97wTumOyd+8LzqVqWlNwTskLfoo+
u8gTVsNXRffqYYz9Gp3zynXlnM4ubXl+T/AZpp36efK9Grsu+cyis4piXggv
Sv62PPDS5DOQzj7qWfny+uhc0ppz0cXKoTyv8X+YO3Hh
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
5dLy1WiTnZH8zQ880jk5Jrklet4kZ/4PBrj8VA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmwV2Mcxo+6Kt3zfTNZrp3s22DGvo4lZBvtmyQhSe5tvTe5QrqVSptL
SimizWiVikIlWxPSJAkRyU2WYqisn2ee3x+fOc9z3nPe33ve97v8GnUua15a
K8uyaiiCFyLLpsOIPMveglNTlj2E74muhlXoZ+AN9FTIGS+GGvR22MrYz7AK
vRIuZuxS+BtdBZsZ+xrGo/vAO+jJ8Cb6RWiFruT5hpqjOMvK0V+gVzDWoPDs
VBiW+52ejG/EL9NauK6Ep2Epfgqcwvjp8Hvub2iATrAD/ZN+k2c/gBnof+A7
9KPhtY2DAegtUIYuhRnoWfA4ejm8F94z7dV0GK5vgYno3fAL+lutKfeerA7P
oXdnwvWs5UbYh3uj8aehW6B7517z1fhr4T/0qNxjH8OruZ8Zit6lM0FXwPPo
cngl9x6tRX8CT6BHsJ+T0H1hAX4IjEb3gDnoSj2jb4XZ6P4wDV0BC3PHxGL0
QFiMfgq6sLbuOg/m3oS/E38v/jH8RnxnfDf8UPwGfCf8Pfgh+PX4bvjS8No2
45uh18Gi3Gv+Cv19OJb66p5iEebqbKAx718FTbTXWpP2DuahH1YMo0fCEvQk
nTn6x/DZvg1defc+/HB+/8vc37YjPKZvXIF+El5HT9ac6O26h+4Fg9E7YQK6
HBahP4SXcz/TnPm74Acw/7v4c/HnwB78Ns3BWP1kXQ/GK/ZgPnoQdGSsK34w
z6/Dd8Dfja/Cr8WvR38aPqsN3LuS8dvxl+P/hTbofbm3BV1T7Nx9Nnz2yuE6
jI3C71Hsw9nJ7+hZ3audHNOK5W/gIvx5MBD9F5yFPjM5V//AH4o+LHltg7jX
C31h8rNRyO1hXPvlzvFrknNcua0YvwFdAfuHc+KS5Dn0rmpID8ULPIcuDud+
WbJWDajiekbyWv5UzKB7wyx0Yuxw9BHJe6k9HIleGt67knCt6ZP8rGrO0ehj
kmNXMXsk+qjk2NWZNEIfmxzrivHrknNWuZoxRzv0PK77Qb3wtzVJHtM3tkHP
5VoX6ugcoG3ys2uYYy/X9vj6XD/KXbtmhs9WNawZ/mYYi67F/fOTa6Jq4V7u
3YKer5wt9hyt8HMUE1AEJ+FPTs495cBx6OOTc1k5fAL6xOTcUI5PUWzhp+l7
c8d2C3ztQozv5to6+VtW6wy4tkz+rfdz166myWtVDVvCtXvyWaknHIA+MDlX
HmS+fow3TM7tprlj74Lkb1MMKjfHhXNdOboGfVf4Xe1J//CatJadMBt9EO//
mnvN6hUTwrmmnqG9OTj5We3RA4Uz0Vnsyl3LHwnnvmr6WHR1uBa9BkXJOaNc
Uc5tYuzz8NoVg3WTc065thVuQr8Urv1j4ArFdnhv1ZMuw08M907t+f3hPdVe
6htU28aEa7dqXI1qb7gXqAepFi0M927VJMVaSfK3KOaWhXOgpJCT7RSnyWtT
jVJvaKuakbtHqNerZ6pXqucrthaEe6NiTLW7Zbg3qIard3QK9zr1EPWW1uFa
rB6j3DiEOX/LnSPbdBbhWq+aqloWyf8tVNMqwzmhXNA7P6iWhWuveqBq563h
/yaqoZ8pt8O1VTVDvaFD+L+BeoR6SftwbVdPuUN5mfzfQD1FvfS2cG9XT1Xv
7Bj+r6IeujwcAzp77dH/6eRgJg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHnc11MWxx9hxpLnfqOFrCFCdiJMtsLUWKbsYuwMUkO2xsxgrLMx2fe9
CCWEopWyZE+bdrtkNwaD5rxf5/19/fxxnvO927nnc+6593x+T4dj+/c+vUVT
U1O/+LNs6I6lqemxkA1DHmpuaroh5MaQ+0KuDrkmZPcYOyBk/5D77bs25IGQ
60KuD3lQzfphjjM2NGSwtp4KGWLfcPe5KWSE+uaQx0JuD7kjZJT6zpDH1XeF
PKG+O2R0yD0h94aMDLkl5NaQJx1n7Gn3BNPrtseGvOge2B7XnNjwfXLIw9qb
IE7wTVQTp0lqcIx3HfOeFQ/rn3Gc9iP6dZt73+d+z4c8Ku4X1Pj0nGsYm6qP
4H5JDb6X1cRgiv6y5jVjDc5XQ8bYftT9ie8RnulvQ97QJ2Iw173xa6Y4wTFL
Db7ZauL0lpr9pxsv4vRhyLSQN0PmOI7dxc6boUx0j3nuSQzmqzmfd0JeEce7
avC9p+Y831eD4yP3ZI8F2iB+HziOT0v142Pb4zzDb92Pfb7SD2x8KmawfqYG
0+dqYvaFGhxLjN0sfRlvXL50HLvfuQ84PnEue3ztngtD/qNeFPK9c8H6PzWY
flAT7x/VH4lthn78N+Rtsf3k+GJtExtyqqnkGnz/VXx3Dtk8ZNmS+MG9cnx/
o73lSvYRg+VLamLwy5I4id8KJTWYflFynDFsrxHSPqRlSXvEvrlkXMBaSmqw
rlJynLFWJTGDddWSGkx3lzzX1UKvWHJP4jckvpcJaRNyQ0mcrUPeDGkR0jak
nd9gXV0NvrVK4llBX8EJjjXVjK3tOHt2EA/+rq8G03olY8fYuiEr2a5K4gPP
Bs4F92b6QYxeCHmwJNaOrmnl2HL69HrIsJBTeZ/F1Mk3vbhmU3Fid6bfm3jG
7cW0hRrcW6rBt3XIOvr+RsgjIf1CthUbuLdTg3t7NZi2cR3zppasNeDo4jg+
dtcWNnqosbGzfhOPXdTkzlv27xTSTQz4vqsa36lZW+n7SLF2DdlTn9hvD8dp
kyNLvIsvx/fT+nhgyK9DeoaMds99Sr6be2ivl/5xb36jxq991btqYycxHaB/
rKem7mabHPzE92ZafI8J6R9yUcgZ7numtvqEXBAywJgdpI/4crAaXw5R40tv
/SXeh7s3vhwWsp/tRb4H1Jazoj3QddQz6jP19YRoHxXyu5BjQg7VxkL3ZuxY
+9hnQcikkPNCJjp+vOsP1sf5vhm8D/AC6ib19dUYm+I+fwwZpG34BDWUug4f
ud82vGOYbfjHA7Zv0B71+4pYf74+1NyFeTUXqWs2Ne4ZbVEjxoqfOks84BfU
X+oxdZX6Sv2lvj5mu+YxtG91nPU1j6l5zePO+1PJ+J5cMt4P6ws4qedPiXOs
7SH2jRHneH0FzwTbNXehDR8ard/DxVdzmUnOG+x+Q9x/srE4N3w6pyR3wFdq
a81Z0M+LY6pj+EWNrjkI+hXjwtznmhucZmpzg9PQhi9QW99y3lzbdd39TGzU
12nNDS4yWwzUvunNDb5S8xf0TGP3uv4RyzdsT3Kc9dRq8vELbXAvP3GMWrlY
nNTr+WJYaBuc1Nu3mxsc5b3mBo95R5yLXPOIOKc0N/jNu8Zpnvjx8QNtgZs6
/qE4F9uu+dM8cSzR11n6vqS5wWM+NXYfanek+09ubnAaYj3Gt2/vktiordzV
dXw/eWfBSR3/Rj+oyT+Kgbr9rZi+t13zmO+Nxbeur3lMzWt+cB57UmOptdRO
6sm6vtm83U2+nS18y8FM31KxUiup6zVfoQ0+6jht4rdUv2vuUnMZNPOI17K+
0+DEj5W0RT2mtoKNOk7tr3kMbXBQt6nF8JDV9K3mMYyBk3HWzPNNP7Ikt2HO
T8aopTGA27QWOz5R09uWBo+hTVzxpaU42+trzWPai3Mt2/CiNsZwJWO8jnFf
23m7WSv2024HzwOc1PT1xbChbXyhdlOz4TIdxftiSX5zSkn+AnfZ2Bh1dH07
11G/4S2dxAiP6OKcl0pyi9NKg8dsXho8Zgtx0tdZTNuYu/i9re2ax2xrjDrr
9wbuVfOa7Z1X8zzWwYngGTuWrPPU6H30fWf72IP6u4e24Qm76Fc32zWP6VYa
vGdnfWVdzWt29xzq3wncD3hRV2MFf+mhr6+U5DSnlwbH6q7dnvrKPr1s1zym
l7Hort81p2Hs7JLcqG/JejPN96mndrE3oIq8qbJuwFN6a4u8gRvAG6aHzCiZ
c1eW5Dpn6sdB7lFzmoP0lT74D5wCPnFcyXw8XLtwFmoUHG1wyCX6e4D9zIOr
HKlNbMNFjtInuMbRpcGfGKfuHfuzPY513rUhl5fkNqyndsMrLnVP4nNnyB0h
fw65riT/oM4/GfJESY53T8l7wD2/L2RoST4P9zlRfx4OGVGSez9UMt+5J/Pc
50DPdoBxPlAf+hg34kpOTggZX5JT/j3kQtf81Tl9PKuBxnBsyB+0/a+SvJDx
f4Rc7Lw7xPl7Y3yOsfp3yfOnb75xwtcb3RsOe01JbkdMJ4c8W5KfnWCcjnds
kDF/zlgSl785B750W8itP4vvFa69OeSm0siti4zDALHXWC/WT2J2iXG42rPs
awwuMA7nee59xXqZPo4qec94L67Xv5Pd8yZjfpaxG6iNq7VzofHt7Vlcqb/4
cpX+EMt/uid+Ddbfi431EY5f5pwLjDNY/6JP+EPNoA5Rg/DxOmN2pfG6yD1v
0ZcrjO352r5GvNi7vTRs3Obcq1zXx7O6w/O6q2Se0EddI+9XNV68WbxX5Di5
Ti3gHnAfWjv33pL3hPo0RBz3OkZN5S3hTaGWPFCyrmxse4Tfwxw71fm02zjO
vE76RK1qpea+ddSfIc6nb3jJezjc9kaOD9XnN7TbyfEHncO95/5TL6hlo4zB
oyVryY7OoaZ0tY+xfs59vGSezXask/3Y2qHk/wSG6udTJTnc3mra9Ztzt3Gb
5n5d3fMJfZgbMqck/2OvWY7P1VZXfRnlvuOdy/3i7eL320meLe9ID/tes5++
cSXv1jjbe4U8U/J9P0574/X/DL+xTx684Fm9HbKoZD1gfILzn7XveOdgk3ef
N+T5knnInMnudb7t452LH9z1Y8RztGun6P9E5x+nvefsn+L3iWIF8yDPH583
EuvT4oW/vGQMT7NNvg3zLNs492Xnn+53F898qmsHudcxjr/ifPZ80X2HarP+
fxH3pa1nTh7092ynlUbukcfkGDwTjriM69507Qjn9LNvuj7zvpBjcFewzHDP
Cf5u4XcMOQW3g7esGnxhqyrPdu/Qq1R5JnuFblHl+U/0rI9SL/Qb/jNHn+fY
hneNts33SWFj3SrfWvadLa5Nnb+JeOknz0+JuetX+b6eGnrjKt+/HqGXlszb
I+N7yyrftkNCb1Hle3hE6D2rrIl9Qh9Y5Xt6eOi+Vb6DM/UDH+B31Ft4SvsY
/8F4gpHcJW83i/7dq8yxSfYTj7bR971nuk58/+Q5jtT+JsZpkXaIx1xj9b+Q
ravMuxJ6+yrvRe/QHap8xz8L2bnKOzUwdMcq689qobtUmVfLhN63ypicE3rD
KmvXuaE3qbLW/RiyTZX52z/0clXWw7NDt6qyRrUMvXKVnODQ0IdVWWPeC+lV
5bv6YcgOVb7nnarc43JjskCM8/3m/sLz4ElwooONBX3tYt2OVd6dBa6p187z
e80Y36nKezTGuJFTHxO/Kt/Jea6hjrfzXLkX5HJr8/mrkN2qfCvI683N7W84
8yr5AfY+KmmT82xT5ZmSR93NJXz5tKQ/8PLe5s3yVcaUeG5Q5RkQ/+/AWmX9
BuvikniJ5Tsl4/mF+U1uf+I94Y7sH3q/Kvka92897yC5uUaV+fm594Q7wvn3
MAeqKs+VM901dLcq+fI+oXtWWXc45+086xWr/M0AxyHHvy6Z59vGd+cq3zby
eu0qc3ujKnPxUuP6ZcnYksurm8/k7JKSeUu+vF8yZ9j/3ZI+kL8flMxhcnMt
8/P/8ig5JQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdrUEEQha8aK+KMJvYaS+z6oKIPFvDBKIgl9q6xlySoBGxYsGKJib1G
FISAIAFBAoIIIogE8T/Ye2+I6HeYffjYM9x79+7uObP5xWVFpQ2zLJsMOfDC
smypZ9kNxr7wFCZRn2PMgz7oMXACfQBew3LqW4yj4B2sor7DWAj/YDL1bsaN
Ft/2gv0Wc3yBDdT3NQ80QTeHLegqrQHdAk6hD8I3KKV+yLga+qObwkn0IRiM
LoEH6B0wHD0MtqG3Q2t0KziL3gVD0OPhDPqwxb9aeryrf3ZEF0MtugR6oNfC
PfQmeAMrqG8zjoSXsIz6JmMB/ILPae3HYCzP+nms9TR8h/ewB47AT/gE++Ao
PIPFvH+dMRe6oldCHboMMnRjKEdXwAdYQ32XcUI6+6lw3sKDtuglUINerz2g
23usvR56oxtBpYVH2vurlIXatLc/8sxij8pKO4+5lBnN/TxlpSatvQ2ss9hD
OXqgh3dPlAl0rsdZPYKF6AU6Y/RV6ILeDI/lu4V3c+GKhYcz0UWwF33J4mze
pizWpWx28vBOGZXXs6HawvNZ6EKPrFy2ePY76erk7d/0b3k8j3qOR1a0Bp3V
DI9/V6bsd/PwRj3QweOM69OZyZsGHr0gj7p7eFiRMqC9dvbwTnsegV4E19A7
YYpHZpQVeZrjkRllRRmYpm89snkB8tGj4bjFGTXzyKSyqB4b5OGJvFCP6N3p
cNHim6Ho+R5eaA26CyZ6ZFF3gnrRPNamnszz8FReyvOeHj1dlTKt3vlocTeo
h9S7BR53iXp4AHqcR29stejlrxZ3g3pad4Xe0TPdGVrrj7RXrfk/Mx2e7g==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHncl1Maxl9CluR3nsmYRNGIGJWdZIuSGJNljGUMhkGjmdKMmaGNNltI
WcpSKrSgSFHWbFmGkb1MltRYikpKJZT7+znf5/PMH9d7P+c557nPfd3nPudc
v3fnc3uc1H3jurq6TvGnXthxqa7ub4HTAkNrdXW9Ar0DGwJFvEuBm+P58sAV
gRsClznupkA/+4YF+gT6Bm7UB+3hvmPcLfroHxgVuDpwTWBEYEBgYGB64K7A
mMCtjqXvtsCgwODAHYErA1cF7tTi63b76Rut72v1hx2iX+x1gbvlA+97tMR+
rxZO47XwmKCF90QtuZmkhd+4wPX6vc938HhAniMDD8mB2KfIjdgf1NI31X7y
dL8+yu8Hmotp8oTfw46l/UngtcB/Ao8GxhrXTDnD9TEtXB/XwvUJLVyf1ML1
KS1cn9bCb5aWGF91vhmBZ3wH7+cCk+X6mv3EMttcwPVZxzLuRd/B6WV5Uhf/
DjziHC/ZP02eM+W0X9Rri8Cugf86B/7myBN+b2jh96YWfm9p4fe2Fn7vaOH0
rpZ439PCb672+cA87QuB97XE8boxEsd844LHB1q4fhR4Ra4zXDfWbIH5JX8f
2/+q85BXamehuWCeJsF/88AWgc/lBqdP5Q/vr4ybeD/zHeO+lBt9i+UP7y/0
QXuJ7xi3VB9wXV3L9Ucsy2t5DeDaIOJYE3ZtYJlj6fsm8KG8V8kNrt9q8bXS
fvrW6HuRvrD/C3ynhd89cv4+8EMtPxP7j1o4rdfCY4MW3nUpW3KzUcoWfuv0
TZ42TvkdPDZJmefXtZzvlfLYLJ5XyK9+ypY+1mOV/Oql7KP8fr61sFXKeYTr
limPXS1X1naOXOe4lr9PmWdDz+v1ctrG9/D+ecrzEW8t5XeM2zZlPvT9LGX+
8Obs32A+GvmOcb8IbJoyv7NSnqNZYPuUeZKDvwfOSDlnjR1L3w7WI5yapsyT
uvhD4MzA1oEd7advJ/0T785a+DXXEuMuxt3IfY/d1v2PhXfLwHbGvruWuPbQ
EvuvtOybX+obv3v6jtjPCZxt7HsZE7H80VhbB9r4TN/e9uOvlT52lOdaa3Zf
ORD7Po6l/YJ7mvPxgGjvJg/OR+4A7oy2ciD2g7XEe5hz4688uznjDjVu+v5k
rO0C5wXONcZDfM+4w/VBjMek/D2+j0o5pgNTvue5K7k7j3AsZ3DHwEEpx3ih
fo8OTNVPp8AFgfONvbO+mfNYLf5+HWgfODLwG+fuEPhzoKvzTA9cpM+JxnpC
4ESf8X2SFt+/DRyn7+P1jd9T/u/dlYG/6uPiQA/7u+vrdylrppP1h4bq6bu/
BLoZbwfzRC56madSQ2HRCuVdy52EZhpmTtFMaAw0B5oGXYA+GGgNlLoJiz4Y
ZF3Qh85Ce5Ta7WZ99XfsLbVK39xbq/QN7cHOg69SM5UaCovGKLXXHfLgjhpX
q/QT2gJNNspx19s/1u+5tx+uVVpqgv3ceY8aH7pikvHebxuuD9iG52TbxDrF
dqmlphjfQ7aJY6rtUc4/VU7TjWms8z9Sq7TdRPnNNL5SJ3GP9zV35JI62t+9
UeqqUmc95vflvcK5Wmop9id3Guf9armhMWbJ7VnbcHvONtyetw23F2zDbbZt
uL1ou9Q3b8r7JfvgiZZ4xX7uys+MFS3xmnl52W/g8bp9pZbiHiq11BvynuO4
Uku9Vau01Nv2LZJ3qZ/eq1WaaV6t0ljv1iqdVOomLPqBfbW75+Bs371fq3TY
3Fql296RJ1riQ7mhLxbIZ6Ht8n5dZG4+9hu4fWofNfJqrdJhCxz3pvlj3Azn
oL/UymU+vjDX8ENvLDHWr2wT+1Lb8FlmG37LbZODr23DB42xwlhX2iamVbZL
XbVKnqttk5fFxlTqqjW1Sletlc8626WWKrUVFq2F7lonf7QFdzR3dqm3+GZ4
tP+RsmaBA7oDXUHc6AS0BTx5xz4hVjRDqa2waIl3zdniWqWx+J5coHHwW+q5
DfJEV+ALPtzBaA90Cs/fyQO9gY4iN2iQLT2/W1pnpV5cb47wwTi4wZXvy9+T
nBkDvP+4+wYH7vNuwi9aoNRE2Cb6amofHNAv6JhJ3m0nmCM0zHbmjv5G5ggf
6Bi0CzoCPVFqJjQJ9zz3LTrhlsClKeu4wrGMO9MYGsgHPdMsVTqMdqk52pr3
xsZU3/kbp0qT7ZIq7dXSGPfUB/7QGm1Spcl2Nx+tHLeT/a1TpdX2MF70yd62
iaU8Dw5y3Uot2MJ8Mf9ugnN6f+PbV1+M28/2HYF+KWul5s6zlz4O9PuzjXNH
+9A2aB30AloAbYDG6Wh8+EXXoG9GB/qnXB/4PszviYm7pL08+LaD8R3uOOY+
ynFoqqOdl3fojuMdh+YptRsWjdQ1VdqEd2icE5wP/XOcfo+3XWqyzvLu4Dzo
LmqyS6o0Fr6uCVyS8t4am7KWQjexv9j3nBX4PcX8nGyuTk35/OA79mM3xxDH
P1P+lr05JNArVVr8bPNPnaDFqdVrA/9K1e8KbAO5lXMOS/m3B/1TApNT1nCX
pbwn8LONzw3lOkm+IwO9na+NuW+nvdDn21PWuAe7hl3N3YiUNTd1Q21cYT9+
qDXq/LpA35T36/WOOd8cdzfPd6WsNVnLGwIDnWNa4OGUNXErfbCPRqWsmzv6
TTdzOzQwKFX57mGOLjeednJgfmr4KmNAA49P+fdeuW6XmE++6yeXm1y/hq5z
T9d6TMra+hTXlnuB2iDflzr+TuNoJ4++xgJ/9Dl1e6tr1sz16O3zjYGr5UON
9DIf1MXNKdfOmbZ5vi3Qx5jpP8f3Xc0tOeM8H+0an+c6nevYIc5zgWtGvh4I
3J+q3xODjbm7704074PMA/V4rXHBiTP6LPM33Dz1kWdr13+oPi411w1d5xuM
/WJz0cP1GeYawaG/ue1hrk5zPdnDZ5jLW81nP3PU2u/u9FvqYaycWJ/bXSNq
lprrKL8xcmQ9OVupkc/VDWgGziL2WCdrYULK9cC6jXDt4D5S/vTf6xjsPanS
IbSpSdbtLtcOfuPkSP94x6ARuC+5A/mfMb9P+H0wDx5FXufHA/sUmdMTgX2L
7LtT2O/N0xuBg4q8hjMDexU59scCexc5N7uFbVDkOtgh7FMpnyfogknWxtOB
A4qcsxmBNkWu0UfJfZHXsFXYIvBQPNcP27HItcldwN7nPlhnfMT2Le+KXCPw
qCeXFHbPwIPx/EzgwCLnqW3Yt1Ou66Pi+Qdzv00871HkNX/HcYzZEDimyDXy
SMp3Qxd5r7cuiJVztqeWOU+X03Jr81A5cI5Odtzp1hd76Ur5TbVOejruVPvY
a+yz5uHzM5+PiOcV1lSzInO4Sq41+bJuc1JeO/xPM4es4XcpryPrsCrltWhS
5LwPsBY2tx7I8eqU87xlPH+S8jk83bzwPNF2J9d5K9d6k7Cdi7y3LjIOxqCD
G1mj9G/qmHZh56d83hwez0tT3rusT0M5UhebGSfrU+catQ/7TcrnCvV4rDX5
ZGD7InN/NtC0yOf8K4GWRc4vnLYocoyHhl2Y8jmEj631c1jYz1M+e74MLEn5
fyQ7x/uvwt6d8t6am/L+OiSeP0r53JqV8t7o4neNivztSuMm5hZFHseYj/2e
b79wbub92rVn3T8wX+RqmfkiV7uE3bXIe2+RfOCycdgORT6rjgy7JuXz+MeU
9wN7Ya19vGfsRo7/Ceii3+I=
            "]], 
           PolygonBox[CompressedData["
1:eJwt1Ndvj3EUx/FHlRghvl+bGKVogzv+BRduJC4kLiRCIiF2qV21YnRZNUqV
SokSJKK1I/aovbfYIrba6/3JORevfM+T3+95fuc545c2bNzAsSlJkvRHKh6H
JHmK0ShDi5gkzTGBeCIicU/sJN6NhsR9sId4FI6hCpOwGK/xxu8txykcQC4K
cAL7MB15uIHbGI7VaMOz/3HmYB1O4yDmoRCH0Zfv7OUcgCu4jqFYiTM4gvko
Qiu+W8s5FcVoy3Uq5hBvQEviD5yTsRwnsR+zkI/jqMYULMEd3McIlKA19//k
nIE1eIBHGIlSvPUaqTZZOIejWISluIjPyMYKPPF3KPKeJDz/Judar8lfz6HE
c6wTrWaq1Ww89JoVeg73vAcFnvNLz0G/PR6X/B31bkNwzXuU5zXtzLPTsJl4
MDoSd8JC4kHoSnyecwsqUD9ajVXbuWgQbcbKvIeNuX7GudF7VDdazUp9Rtpx
3T7avf1Qj/gu5/pgPfuIGmz1njWLNnPlXtOmXHfApmA53vKe5vuMabZ7R5tl
zfh7XMCyYDP823uqXs4MNuuHPBfNvGavUbTZ1wxmEHfBGOLtwXJNidYL5XwV
3zENq4L18o8/Wz1V7d75bKiGz5HO/ds4Kz23y94b5fgCPfh8QbDfrPEeVHhN
MonPei470CtaD9W7XfgWbCeKPadfnqNy0wz/CLaT2kXt6JdgO6bd0g50595u
0XZPOX4KtkPaHc2w/itCtN/Sf0aTaO+kd1HOX4PNvGZdO6leKWflqp5pNl75
bGpG/gMjTrg4
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgm4ztUTx2/2Xd5zftaufb+0qKT8VdpXWrRKZalEiGzZ60pE2mwlWdqs
RcgSUdpIkRQplUjJllB2//k03/d5e547z5wzZ5s5Z87M9/zuW6VNl5s658nK
ynoqb1aW/WVdE7KyysSsrKuNrzDqaXSt0ZdGfY1uNPrYqJfRdUarjB41am70
mVFvo2ZGq436GN1gtNaon9FNRsVs7qJG061cyHhBozes/I3RbUa3Gl3Fmqms
rHuMSlh7caOZJitivLDRVCufaryk0VtWPs34EOv7klE1K1c1OmbyB63ewugW
o85GdxjdadRBsluNHjK6zeh2o46SUe+ivi2Nath81Y1O2Jzdpde9Ru2NbtYa
5az9buPdjCpYubzRbOv/SMrljOmhca2Neoq3Meqk9dGvl2RtjR41amd0n1Ff
o/uNHjAaKBvQd5A4dgxIuc209VNfdOwvTttj6suaTxg9bNTVKFd7hN1Pyg50
f1x9aRuivrQNVl/GD1Vf9maYOLY+JY6tI2Rbb6PhklF/WjJsfVZ2ovszRn1U
f04y7HheHFtfEGc/RmsvsG+UZNTHSIYde4LrPc5orGS5Wr+t9po9u0nn+ovR
V0brjMbLfvbmFdmJfa9JV3SfKBn2TZbN2DdJMuqvGo3UmNc1Dvumywb0nSrb
sOMNtWP3m+K0zVBf7Jimvox/J/g9mGX0svTlfN5KuRw75hhNkB0LpBN2vCMZ
dsyT3tgxVzLqC9UX3ReJo+NS6YEds7U2a7wnvbFpsfpSXyIZY+40ne8IbtNd
wXV/32iZ7ED35eJvG30gzjofimPTp0bzjd41+kwc+z6WDdi0Qn2xdaXasalV
8DXXGH0hvZfIhqE6789lM3as0jjqqyVjTJbd+33B9+MjrcPaW4zWptyf1v7H
vnWyDZvWyx50/Foy6t9IxnwbjT6Rrd9Khn3fSYbdm8Sx73tx9N0sG9D3B8mo
5zWd80S3u1J0/X42ujv4fvwkvZdJ163SGx2JVdxj7vMF1v9so3OMtktvdPxV
tlH/3WiD7PhDeqPvDsmo79ca24x2qh07dktv7Ghta9xr9KOVd6mdtj+lO/u9
T5x7/Jc483a2cZ2Mso0OaB10/MfoN+l4WDqh4yHJqB+RDL3a2vg2wfU6Khm6
LDDZXuPHjU6kvIxeJ8XR65TgOmFrVnAZ9TzBZeiV38p/S6+80vWg0bzgNjJv
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
/zidxcPyD3yDu/uSzn9/cN/9MuV8n8r7JMef/wx+b8epD2Pwdb6zcX/uVTv9
2Pv3guePWjqH8TqLpZoXHMgdGi0fiWZjiJ5viB8ndKbttS/syQOykzu1S/ZS
5wx4LxBLKkZ/P/D+4X9Ab1v5hpS/43hj8j6bE7x8V8r/FzNHPlPFypWjYyPu
KpiEu/tB8Hmap/wsSkVvezc4ltqjsZSJn6U0x17Fuj3aN3TLjq7rm8Hf+dy7
jvKJ9B0dKX/gGxTxJepch0mvixLLDUa/Bc8BzMN7mu8k3EPuIHeR+9lQ/PXg
d5X4SjzlHhAnuM+nyyeeUXm3+jOOuMr9yZUd2DNWcWyX9h8/2hI8jkwz2mp0
fcr5NpVnGP/VqFnK+XaV8ZGfgmMS7vfXwe90Il8g3xJ7yO/kXOLBmuAxoHT0
3I+PET++CB4zfjF63+i6lPdhLsazlz/Kj/CRb+Un0fYySfyMllnf5cqp5xtv
rrd0WWsvZ7QheN8LovfnXv4gH+Aecv+5+8Snr4LHLXx/g/a+qY29xGhH8Di0
MXgOw3e+l/8QezYFj0989+CbD/GJO7JYe8X+Ldceku+Py8/hx1RmDGX+Pwj+
AIeAN44GxyXIcmzOutHbcvSdDf/5OzheZC2+c3D2fB84ovF8i/tZvoKfcHfB
lv9+e7JyLdU5/2Xygdr6php1npwrMZP4+mnwnABGAauQK8gDnwfPD78Hv4fc
QfLGyuC54qB05TstueWj4DH7N42hfzethf/MUhtyZIekA/d7h/aNeEAuISYg
f0v9uWN8o+M7Fv41TT5GPOMNS8ysIfxDbKmkeMKZ0n6K+rRUf2Ih95V7y34S
Z3lbrhbnvQlmIc7m1f9fNqsNObbn1xtjhModdLYFhH0Zl0/9+d5ITMRG4k8h
/W8dm/jOiF18U+TbIn41XXLODluLxEzfIpIznm+X7A3jimks+1xC3yjZP75d
NlccKKZvmjMlT/s4+uGzyEqo/3Tp00a+XFL6cy6n6nvoIvkfvndAZfyWOEy8
3qN7AT4GJ9OfmEDc4FslOaCV7nJKsZ17FhWDlqg/sWiB5iW2IyuteVgzal1i
UmnFnKnaH/ykfnQcXE55oKJiC/Ly0mG2dErnqQr6NopPga3xK77R8Y2P73v4
F37GNwDGMHc3tWdr/nnSmX1ARhvfvdbKR9cof2ZLTmysqDx1qsWqkon//gI7
CsmWp4wPk98SP3Lkb+heXzYeUUwhtpST7eB/3gH1ZG899afc0NYZHj2PHNa8
vJPAAnwjJodvNL4iuv/Olpw9oW8d9ectRpncx7nzm49jktWVnuuD7y9j8eVp
ilGt5XP4WyGtc538f6rK+PB09ec7MPqhGz47S7FiuWINd4H10QPfa6M7hs9z
D2aEzH2ZqTLxcobm5+wq63z53Uo1+TB215DtjW3f/pd4vr3N+LToGKKJlS9M
PN8OZP8Tz7W3yJ/AV7eY7M3o+ON2K0+PjgPe505Hzy3kJvANunxgfEx0TFfE
+reNPt9U430VfwqYvHX0PM6+ozc5qIXJX4+O5x42Xj3x3EkcIzcc0P0ldyTi
tRXf0Bd72Wu+k/BtBRx4o80xKTrWpn9NjQ2J53Vy9E3GJ0fPzbTX0pw3m3xK
dKzNHmMjsfp+7nXi+AD7XpCNfAPl/9V8kxtismuiv4W4B2cnfhe+s3LL6Pnh
e/w6ui9s4qyiny0+Pkt+/qTxMxLHa99Y+fTE40d941cqtow1fnni33nviX42
//7+yvj5ifvoh9HPhnM5y2RnJp6fzwWzRMeZ51m5UeJY7VXmSBxTLsaWxPH0
RCu3S/x7QHnjFRLHKFdF9w9844rofoaPrSZmRM9p4Hj2kjfLPJNdkfibZ7CV
Wyf+/uhv5XsSf8f0Jh4k/l7pwV4l/iboxl4l/r7pzNyJvzPWW/nr6G+Lx/DP
xN83M63cIPFcutDKTaPjZN5kV0fP759H1xU9y1jf9tHxGOv3iq5DXSv3kQ8z
96Do83c0Pjt6Hq6CvtHfiJzJuOjn8qLx+dHz+4LoeqMzundSebTxt6K/j1YZ
XxmFQ6OfPefO3vSLvj/sR/foe/KV8bXRc1RVk4+PjhM5q1ein9cP6BUdJz0X
3Vfwkwusz4jouPhHfDw6xkL3udKf88mNfkbFrNwueozkHLpGP4vCVm4Y/b3d
zMrnRX9vvx3d//A9fOq16H7FnRga/V6sYW+iv5loX6Q+LyOLjk+2G/81+u8H
O0Tfa/aZ82yhM91PnIiOC7G7mnz1bysfjP67wvwmy5f4/wnzGM+bOBavZbxm
4m+XrdZ3W3S8WNBkhRJ/e2wx2c/Rf9tYyWSVE8fie0y2NzruXMJZRX8jsR9F
E9+TqxIfQ/9dJt8Z/TeP+OCd8sOK1p6d+LsKf2kin9ln/M/ov5fcYfyP6Jg4
y/qejP4bydpWrpP4G6ZN9PhLXOIcSiR+Ftcl3o8+xGN8Gn++OHocJAbeZ+Xi
iefhy6LnAOL/JdFjIncYf58gnz9u/ET0d1eOtb8RHW++E/07CO/vo8aPRP8d
6CHjh6O/x0ZF9xV0Oyfxu8o9vTB67CZuXx89ThGjLjP+QPQ306XRcwb54v9T
Jgwo
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnf0j1Ucx7+kddq/+3lKy2l3Og3RJCtE2WRFFCWRjMxk78rIHhGStORI
U0MDkbLL3iurlJLSer3P+/fH63zfn3uf53vv/az7XN68XZ22BXO53AwoBMWz
XG5w5HIdUy43En5EH4Il6BpwFvPnwvfo+rCTub2wCF0NtqB3wFfoqtAVXR/G
oVtBR3RnaIF+Cdqhn4JH0FMgj/8+Dwbk5XIDoQ1zU2Egc5vgMPoX+AZdE/qj
H4CJ6PbQCV0Pxiav8SS6DoxGN4O30XOgD7oh9EL3hbbol+FxdG0YhW4EfdAN
YULyMx3Q98OY5D3fiZ4Lk9ANoAu6W/isU+FqznItbEG3hCvRrZlvmnymp9E9
oQ16OlRm/l3syeiDsBz9HbyHfh+qMD8D+1n0NPgI/SH8neexRugf4FN0UViH
Xg+zFI88+6IMDEr2iWJTAZ5PjpHOWgmGJ5/5Jta7UWdI/s/KzK2Fj5PHaikW
MA/9Fv9fgmdrYFfL85pl0SvCe/+JsbroVdpz8p7vUX7wzjHsIlAauxb2UZ2d
+QbYFWEY9nh4GL0AqqDvS45FORicHJPp4RxTbmlsVjjGiq3+43V0P5iRfMY3
lFvwCnqE9oTOsf5KdB0ogD4ZVmst6BHek/aimP2BPgHL0bXhV/Qx+Fa+Sc7N
e8P/rRxVbpaHIck5Oi1cA8p9xaQqa80Px/aQfI5+UzWCnqkcQH8QzuWt+Gdm
OIeUO4phdd7/JPzsYeV0OCeVi1pzimqNZwrx+5BqKFxzqrWJcDa6Rbi2eyfH
5jXs1skxUmyeyH9XMbom8561V+V4TfTYcG0dgX3orfAlejEURx9XTqO7QzH0
UVimWoB/wzGQ71fAn2Efy7d651XlFmtsRQ+FmzOfWWfdLn9rP+HcP55cm3cw
tiO5Rodg35q5t3WC1di9YRt6vuqZuduhc/I7Lyp+2BvRA1Rf6OfC755I9uXk
cCzk0+bYE8O5W0B9DnsUvw9iF+b3FvgnfLZn4IbMNaDc1x5Owz4F6qLXwG/h
nFIuyUcXM7cMuzF6PaxEt4fNyTWlXqGeqV6pnnFV5hpU7emZlujCjK3T2WAp
9mPqGck1fD5zJcK5oDH14gQT8tyTL0RfkLk36j9a8ewVmX2jnlYK+6LMe+sL
l6EvgSbJPtwdvjN0VyxUf0HvCusucF3mnqleqRgfCN9Bunu+hqLo/WHdVfHX
2WApuhs0Q5/O+72SfXgb9qmZfdkTfg7fIbo79M5JmWtctb0Kzsnc09XLdcep
l5VkbGdyT1uIfRf2LvUS+D2c08pl1fxf+TFWbNUT/lO+QY/knlIo8560F/WU
I+EaUO7rTpuHfifcS/sl586ZvLM2OYd0N8nH8q3uqErMjQ8/qzujqXwDc9Bf
wKPoJTA3+T+aoBfDbPTnMDo/R5Wb9bDPQDfP1/JhBewx4V5wIDmWRWBDckzX
hGtItaM7YVJ+DRTIz9HGYZ/JV5/pDOhF6mnoBcm9eED47lZPLhnuIeodyrnu
2NdnrnX1oIPhmCvW+ibZHs4h5Y6+OUrx7DDs3ckx0lqlGduTvGYZ9HDG9iaP
yRdlGduX7JPy6BdUb6y9P9l38oHOLh/Kt3dnnpOPx2FXzFxL+qa4NPMdrrtb
PiqHHqEcTl5jW/gbSd9G6olD0RvCvlGOFeX5Ypl7mb7BdDcNgg7Jd5TuAvU4
9TbdCdXCPUm9qHzy3keG70adQWfdFI61zjwbXT38LaAeJ19tDMdCPtNeN4dz
R3veE6451Zq+8ZTLBTPXinL6f1pekf0=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgnYjlUTx19LyS4859xlyRqyZEsS+uRLq76UktL61UfJFm0SSZayL2UJ
SQqRJfuWCFFSUbRI2deytZDwzc/8n+vput655r7PnDNn5pw5M/9zP2/phzvc
3j57VlZWuxxZWfaXtShkZVWKWVmPp7KyvrXnQUZtjPYajTL6ztq/MP6q0X+N
vjLqb/SI0ddGA4z+Z1TOdJQ1mm3Pm40GGrU2ehC56ehqtNWehxg9bvS90WCj
x4x+Nhpm9ITRDqPhRu2Mdhp1NOpgtM1oqFFbo0ttnvJGc+y5n+ntbNTFqIq1
VY7u02XR/Vpgzw2NNzAKRr2sX3ujDkYvGbXTe0WTVTCaZ/1flryjUR+jTkZP
GvUVZ77ekiN7RfM/ZfSq+NNG/cWfMRog/qzRQPHnjAaJsz5DjJ436mY0wqiH
0YtGrxv1lL3DjbpLNlR9XzAaJo5spPri6xvyAdtHp9w3bB+X8rXD9lHqi2ys
+iIbo76MHywbsW+8xuHrBPmJf+/KJmx5S234OlEcX98WR98kcfx+R5zxk6UD
X9/UPMzxntFrWo8pkrNO09SG3+/LH3ydrjbeZ6gNn3432mm0y2im2lin2fKf
tflAHF/nyx/8WCCOH2eDt88zmqO+2Lsr+LrMNVqovvi6VL5h+2L5zJotl2/4
sUh9kX1oNFWyJerL+C+Nlkn+kcbh60r5j68fi+Nf5+A2fmK0Sm2zjNbIZ3xd
rTbeV0gfutbKP9bgc9mNLZ/JN+xdJzlr86k4sg3qi9/r1ZfxG+Uztv+hfdht
tEltzP+1OD4ldi6zR7e3S3A/yEtb5A+2f6O++L1ZHFnt6D58b7RNdmPLVtmN
vT/LN+z9QT4j+0l9kf2ovozfYfSF9mGn+Ffy4yv5t0f+fC3fNup9r9qwt5jZ
dnF0P/apDduXBLf3oNEh2Y5dv4hj+2HZhE+/qo33o7Ibn36Trdh43Gi73tln
4p1Yf83m6hQ8fv+Urdj+qPI9+fEZ408b7bfnM7KDOf/+h425gu8lOj4M3n7K
6ILgbSeMTsp/fD0rHfiRw/ock42npY85zgvuA+f1/OCcOXIG74ssK7iOI0bP
2fOzwecpHFwvffMGtxXdeYLbxXu+4G34dLU9VzeqYZQ/eBs2FpEObOmqsbmN
Fww+dzajopJjY4Hg45C9YNQt+BpcaJRdNqXUN5fGH9G+PR9cdzC6Mrqt0ahU
cH+w5eLgdmNjMXHmLC6OXSWNCmnOi+Q/Yy5RG7oqShc6DhodkF2lNQ8+ldf8
CTVXHH0VxBlfSTqYv4rmZp4rqcFGlY1KmC+5o+uuJV0VtNblNA+688jWj9XO
flSVPtagpvoyvrZ04McV4thSV3Niy4vSUQ8dNn+B6PrO2SRb68sOdFPfqEfU
pwZqw94RwTEINfu64LHCuGtkB/M3Mqojv0vbPBdGt6Wn5m9sdKtRE6PraYuu
599GTYPrTcuYu6He6+t9glEvzbNa4242ukXPjL9B47DrP9JFW1+ju4zuNbpD
Y5jz9n/oaK42bOxj1Exj7lQb+taqP7IW4uhoKb3ouEeccXdLjqyV9DHuPnHk
94uj4wFxdIA3wZjtlTv2KHeAAcGJYCywJxgTHAbeBLeCx8Cw4EqwGhgTvAlm
qyA8CE4Ch4IlwW3lhfvAUmDP9sGxGpgUHAqGA4eCZcFqsxUr4NqywqHgokrC
nmCwysKb4LQ0FgTHgCvBWWkcCger4UNvycDXYGr64k8fydqpL1gwjUeR4Vs/
vacxKPgsjTuZO40109hzoGRd1JfxDRXvxDR1DHxBnca3ITob5CpqDjUGP8Fg
w2QXWOt1+TRK7z3VBm5jLUZoTDp/kUPwebTGYAe4a6x8o06NkU9gq/FaizEa
84raxsn/salMbQPLzJL/EzQ+jUffSmXw6ETZBC6bnMpgU2TgUXBXGp++I9kA
6Zgg38BoU2UX+GqG/AFDTdcaTFO/kWqbJltnacxojXtfPlGTwWbgGrABuAFs
OUe+MD+4a57sAlstkr1L9D5JbQtTGfw6X74t1Ds+L9UY7AJ3fSRblysO0phy
pfykbZlsXakx0zRuufxZpTH4t1rv7MkavWM3WAs8BwZZI3+xb51k2AjmSuPK
TyXDp/WS4efneseHDXrHRuI4jZfhX8i+jZKlsWYae26SbJjWhbXMpzil5qXv
BvgB/p+rGMAu8NdW2cH54JyAP7+Tj/gDfvtedm/TmHUah+yi6Hj3yeC2kPd2
y26w23bZR9uuVAaD7khlMOhO+f+z7AB/gUHAG+g7oTb83qs5ikfHo08FtwVs
BgZbGhyPHkhlMGgak8LBecTmPunCn8MaD7alfbN8PSIZtoLdjsu+o5JhO/ju
d/mJ/Jj0npTd4NCTmg8sBZYB0zAfuOuMdIGrwGDLg+PRv2QruO+U7EB+Vj4x
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
77dFryXUEc5WTc07IXpuxcf/A1sj/68=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlndwV0UUhX/BiCWi0Zh3NxoxBMvYwDIWdCwgCiLNUERRB4IEJCGJICIi
IChIkSaiWFABUSkBhYyjqIM6igMWigKhFwHpUkQgYPnO3P3jzH77dt97+3bv
PffVKSwrKK2RSqWmo3R0p6VSB9GyJJUaidbBa9E38LeoTkilLkG/w2VoEWMV
6Hl4DmrP2PfmfBJ9DU9Hz8IV6BB8AD2e+DtehG/gnj3wXrSP/h7UBf4FXc/Y
YPr94cloGPyROe9HR+C95nNXoBPwf2gV3A2luD8dVcHdE3/3X2h54mvYBN/G
+CGtBTWEx3PtJXg4yqF/EdoK99Q9jLVGb8DvowaMjaQ/GH438bX/iZYm/g1/
w9XoN7gIvQx/Yj73IJoCf4VmwruyU6lW8Gpdo7+bfkP4JFqpe9GpvO8MtBZ+
Ap0Jn43Wwz3Q+XBAm+ESdA6chTbCxagNvND8LE7oHngbWgy31jfpLNFs+E1U
pbNDO+GF6FF4K/oBboaGwN3QB/AArQnuiKbAHyY+1ha9nficJvAFrGEL/Aq6
l342/U3weHRh8D3XXmvOg8GfqWf9gwbCRYopuB/6Qs9GveEZWrNiB02DJ+qd
5jGm2NIa7uJ5D6F/4anoUvhytB2ez363Y+5681ivi/qbn7nOui9Kgu+x9lZr
1loKzPdKa7ofvozxbXAlz1tJvy/6g/6X6ArG+tDvBb+GtsM70Dw9i/l3MH57
8L3VmXRnbCP6Dq6PlsDz0TD4Y30PfBT9Co/SHpnngGJfMTMPHo3mJn4m0+AB
aFbiMdwVXmN+ttW8/5h5zCpW9cxecB7reRUuRRfDT5rzBMUA/LlyEi5HBYwv
MD+LanQPnMm1DfA41AFebL52nUE5/BMqhDtrPuOFWn+270lJ8BxRbuTS3kT/
FnQg8ZyrD1+HdiXuEY/Bbcy/pSZtJ/rDaQcydrreo/M338ta0dvkKfISedx9
jE+UR8CHdUZ6t9aoXFa8Mt4ELUl8jUsZaxp8bqW+AR7BtUFwhvmzdqIfE3/m
fnOPlbfKI3SWRdyTHc+0HdwW5cP7UGN4AmMjEt/jDfImeUziMVEJdzaPHc15
Hd6NfoaPoUnyKvO9LWbOYfOYUazIA7vw/FH0h8CZtMtQM64dof+p4jn4Hujb
da2U/gz69eDatOX059A2op9PO848x5Rb8tCrgseEYmEHuja4B8l7dGZl8Czu
aQDn0fagP5m2irXm0HalP8bcm7PiXnUy9yrt2WZzT5WXLkI3Bs9h5a72aAXc
kmvH4QWoI/wM1/rA6bTLUXOuHaX/GXokvjMrflOL4HuqvdScm4PXONU2xWCr
4HusvdU7Hqbfwjz302hvDe5h8i7VmOPmni4vV004hbG76Y9JvEapFg41P3vV
xLrBc0y5pZp7Jf2rg+/lU9pzuLd5LVaOygu1hrToiavMPUjeo5pybvCaoFqg
nJRXyQPlffIsecMgc2+VRzzA2FvmXiqPVG14wdzrVSNU25VzyjXV+NnmZ5oX
c6B9zEHlnmJ6boyZ/BhzpeZnpLNRzDaGMxhfB4/VfprHaGaMkbOC1zzVOs2p
iDmtXNY/SAfzHMyIMSrvfQ9NStyD34kxlhM9+Br4afO91Jwawf8Z9K+wWp4R
fE1ai2puLv2m5t6nf4JGcFrwuaPlaebXxPoHqRXcA+V9qtGqTc3NvV816rTg
NV21fA2y4DVStVE1/LzgNVK1UTVcXj4WDU3c04vNPUjeI08qiTms3JXn9Iwx
rtiWh00199TcmAP9aJ8zr236B5lpnuO1o2e2NM+Z9JiTitWawdeqmN0Sc1C5
p3+CesH/YfTvon+G/wHGsZ+m
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgnYlkMXx1+yL5WonplJKe2l0oZKm1baVym7xIeKlBZkC2Xfo4UihEIp
krJHUUq0aqNECyFZUr7zc/739XRd77nOzJl7Zs45c+bMf+Z5y14yoEv/gwsK
CuYVKiiwv4JGsaDgTKMbcwUFpxivbrQ8FBSMM3rL6FKjmiarYfS1lesYr220
2sqnGq9ltNLK9YzXNVpr5dOM1zdaZ+UzjJ9utMHKHxlNMRph1NBkDYw2WflP
o+eNRhrdSLvp8oDRX1a+zejW4Dqi63dWftba7tc3TUzW2GiLyc8y3tzoRyu3
NN7CaLuVn7LvRhndadTZZJ2MyhqNtfrtRncYPWF0m+rjje4yutvoU6OZRm8Y
TZBstNFE8TFGT4vfY/SM+L1Gk8TvM5osjt7NbO6mRltNtyc1P/o9J5seNHor
53Yie9HoEaNHjV4welj1qZI9ZvSKbMCml40eV32aZMwzXRx/vCo+zmiGbMOm
12X/BNk9UfbNkm2T5IunVZ8tGfZNke4PGT0vjq5zZAftc9WGHW9LRv0dybD1
XaOXZMc8ybD1Pcmw9X1x7PtAHPs+km2vGX0oGfWPJcO+T2Qz9i2QjPqbsuNZ
+eVOxUEFW6viRv9aeaHsxx+LtU7Y97n6U18iGfYtlc3Y94Vk1JdJhn3LjebL
7q/EsXWF7MS+ryWjvlIy7Fstm7FvlWTU10iGfTvUxrdrJcMHL1r83R7cpjuM
LzK+zuhb2YC+55ndnxlfb7RRdmL3hpzLqW+Wndi0SL4hLr43+lL2bRXHvh/E
selHcWzdJo5928XR+2TToUj0vbhTdmDfT+LYNNr0vzu4rH10fXcZ/S57vjP6
RXag+2+yZ5PRr5JR36NvselPoy2y4x/puk12z9Z6/y3bsOkvfUt9r2T02ad+
2LRbc6LTfslYn46mcwejUcHjbIdsLRbdjoNMfnDwMnYUCs7R/ZDgHJsODc6Z
57DgHB8UCa4Hcx4eXIatxwbXFfuq2FzHG91lsqOD24N9RwX3BfVjgsvoUzh4
P8Y90sp/yGc7g+tbLPj+Z1+zx6+3en+jAUYlguuNvsWD20O9pGToXk5jHG+U
kwzdT5Av6BONjgg+fxJH3xNlA/qWCW4n+t6rMcsaVTJbc9F9U0r96HOy5mSe
0hqD/uUlQ99u0fWrxTjSGx0ryjbqVYyCdKwm/ZinqmTUq0uGvjU0H/qea9Te
qAPnrHyBXrXF0aWOeAWjuuLMf5/sqylZcelUT+3oe5pRZel4ujh6NZROpxg1
kN7UHzJ6UDqm6HafSR8rlzJ6wMqN5Q/0bSKOvk3F0be5dEWXZpJRb2FUX3q1
kk5nGLWUjHpryRqIV5V+jxg9LN3Pll7o0k56NJUvm2rODuLo0snoLM3/s/q2
NTpHYzSRL07U2nTWt+j1mNGj0qub+jH/4yp3NeouGeP1lE7o0kMy6l00HnZv
Un4l/xKD2b5/0misvr1A8zF2z+jl840ulIyxrzS6yOhi8R6a/wnp1UdtyIg1
cF4vo/PwqY1ZxugpK1+usZnzCs3BeP0koz4+OF7sbTTRaILGKx29b1+jX8Sv
NrrB6Fqj64Lngn4au7/moz5Qsiv1Hf2uMXpGZfoPkox+gzXWQOnRSWs1VP35
dpg4eWi4OP3Au2C/64wmaewhGruvdKou/As+rCHMC26rJSwMfqsvnAtGrCv8
C344XTgXvAj+BeeCEcG/YGGwI/j3luB48YXgmBe8CP4FE4MbGwnngrHAwWBF
sHJjYUnwVnNhXvBhU2FhcnALYV7wYm3hdPANdoMTwYvYAz4EL9IGBgIjYsN4
1bFtguoZDqZ+u/ox1ij1YyziqaPWI8PK9MnwMRgS28BcGUaerDbse05tGabM
MOYUtWWYm3GJ2zcV25zh4BdwyWvSHZ3JGeQO8gm6giFflu7TVM/wcYaXp6tt
nMZ6VWO9rjr2z1AdPcCHGXaeqTZ0nKU27AM7ZNh5ttqw8y21QWCrz2QruHGO
zlJwIxgSXDxPdXQE+4ELwc5gyPm5PFbOsPN7akNv8CFY8c7guGmtbFigNvT+
RHXs+FR1bFioOnovUn229F2ktZorvTOM/r7sW3yAbeCu9bJhWS6Pl5dq/bAB
3PildAcrZhj5K7Ux7gq1Mc9K1fHHKtWxB6yY4eXValsgu2krHx1rgonBm2sz
+4NjZTAya7BENrwtHZfIno2yhzr4Lsvlm9TGt9+pDXvAiltk62a1ZVj5+1we
K2/N5bHyD7k8Ps7w8ja1Yc8OtWX4OMPLO9UGnl+nNXpVvsBPYE9w888531dz
tFboAe77U3qDG3dL1z2qb5IM3MlZBUbi7NqlOmcY+oEVwY1gTHBtgdr4FkyG
Hfv0HTbsVx29/1UdjP+v7NmoOcG+nM+c02CVLdIXPJphZfQoLqzHOGBYcB14
L8PK4E7sAWNSpz94EnyJ3mBA+vwUHOMeZ1Qx+v1wTPC12auxMywOpsUesCf9
sQcdqGfYHf22qt9f0re4/AjOBMeB58AfNWQnY4MxS8gG7C8lvXNqyzBxhpHh
QTaUVh90KqM6a1BOc22QX/Ff5ehY+Z7geLmM9P/UaFpwTM0anqz+R0mXJBvK
qw2bKqiO3hVVv192lZF+YNHK0req6oxVTfVSWudqmg+cWSvksexp8nsJzck8
4M268kslyTIMXVvz0Q8Mul52E78Ztq4T8vib+SYHxwpDpEeGSd8zmhkcF4KL
wcqNgmPnhlo7dAVbnhny+DjDy03UxnzN1Mb8zVVHP/DnWbIVzJhh5JZqQ4/W
atsVHNe2CY6RW0tX5gaXglPBlWAm8BJ4kvOza8jj5naajzO8Y8hj6Paar7Pa
sLnLATp1UdtiozdCHhd30/jM31115gCLZri4h9qY41y1dZKeGaaA95K/ztF4
jAUuBXeCMcBUYAowIzjwWo0Nhr1Q34Hv+mqODC+DZy89YA7Kl2jsfurDd+DT
K1QHh4IZwVKctZzDvwbHvlcFx8X/0zh99e3VGm+A+oO7wc2XadyBausufZl/
mdHbwbEwfcCxg/TdYNWxE5w9RHYPVT3DwUNDHgdTb6I1wI/PBselw03/dqbL
zVa+Nef6DtJ4YDZwKRjtY+PPBa/zfTmjm4Jjs5FaB7DfCMnApmAXsAxrc6vG
A0Nw9oIrvjQ+Nfh7CJyzl3PrZck4p/YZnx78vls0Oo5Zq7ON7xnvHeMvhTzG
4fzg7Pgk+JsRshLKbUU0HvmMHFhMZfL8PKNXgvd/TXPWlIzcz5kUoucy8tis
4PFOnC8Mfn8mx803ej3k8wF7kv24KPg9Ftm7RjNCfr+yr9hTnwW/cyKrrm/p
+6/m4273pjh7mP3H3mYPvm80W/W20q2NdEIX8tLnwe+Z9GOfsQeI/w+C/xZA
/UOjOSF/x4MTz18Ev/shI6aJTWJ+qdHTweN+ruTE5kHR65MUN8TPCMXL84oZ
4mWKYoZ9zL2IeDk6OibL4uJFrTVvaFMVJ0uC30t7a+1fOmD9X9F6HRP9DMti
aLrWnTV8Vb7hfeM1rTXvY8QfsUdcTFNsEL/c04jhB7W+DbVuM+XPY6PnwSwu
3pD/n5CMOOFuNlV7Y6zWq7fiYIbWnRxAXugn38+Rb2+28S9K7sMZipXW0mWR
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

            "]], 
           PolygonBox[CompressedData["
1:eJwtlXmwl1Mcxl8JLaS4+J1zLDdyXevYB2Ub66AyjTHGmHBblPbk3up2dZMs
5UqSRhLtaSGVUkMSlVZJmiYXaZJqaKhIGz7PPO8fz5znOed9z/ue7/l+n2/T
sh5tutfJsmw4qAvaxSzrl7KsCWNtIcsegveHV8BrQ5aNgm8Dn8CfBxWs/43+
Bt6I8RA4CjagD4GbWL8FHIXXgJdZq4/eCd8POqEHoM9gbIz+i3E/6AJfBIbB
67G+A74PvIR+CiyEfwFehPcCH8OXgnKe/SH6Xf3Tz/CtYDB8Gria9TL0s/CD
oDd8CHPFjO3R1RrB9OAz7oH/DprAZ4FePPsH+iv4iYyvgoPgGXQVaMN6BboP
8dqEfgDdF/00ejP6fnS5zoDeiH4dfm1yrIYopugeYC58CXgO3g3MgX8GBis2
4EP4YtAVXs37ZzG2QNcqFmB9cIz6sLYPvRZ+EmNP9Lros+gMW+DzwNfBMZwF
fwF8Dn8TvBf9T/qXUWBOdMwV67FgM/wDsA4+H3wHnwHWBJ9hfvSd6a7Gge3w
X/QO/BUwIfpMOssIfRM+CHyquwZTomOgs48EG+HTwOrgmKyHvwNWBu+5AT4J
rAqOkfbqAGYG76mz9Yz+V51xL/xPcDd8HugIryRGRYwZujt8N3w5vKHuDb0p
+lnFVLm0CywLzqkd8F/BRHh/7ngF/A2wIjin2sJ3gi+Dn6mBN9A3lPvBsXs/
OvaK4UWsXQb+gQ8Ej7J2MfoAfDK4JPkZrWnuEfgA1TDf3op+DX4Fc1OV26AZ
/HywHV7JM+fCzwPbgt8ZzfPXoWcoVsGxWBnNi/JaHcs4LLhmq9Djou8yMg5H
r2EsRpdqHr0qr+0Sxhr0stxbmuW5+63eC87hO5NzVrn6n2pCtaeaC74jeZM8
SN4jj2qZ7EHynmNU1+Bk9J7gmm2v2Oi/Cz5zW3RV9N3ozLqbG5g7HHxHLeBj
mBsanDM3JueEcuEIuD255lRr/4LG6MnRXP94CvojPQ/2omcz3sPcAvgY0Aj+
VvRe+kd5z/fRa/Kge5M9SV6kPSI6gS3BHjKUuVOT95ZHFsFPS/aS3qyfLi9N
9h55zNnwc8CPwR5eDG+anBt90c3h1yfXmmJQgIdkr5KHnSlvSfb+8oJzvQxd
J8/5dvDHwaTgOcW6A/rYPOaqzYnRta0alTctVM0Ge9RieEmyt+udn+Sl0bmp
Pe9jrVXy3Y5Hd85zLuY5toSxNLl2TpBPgAuSe8tx8jFwoXoUur7yETRE/xY8
tzbP2dI8p6+EX5PcGwaBq+Ajo7lqqDV6Uf4vE5ST6Jno0cF3fDl6RHStTQG3
ot+O7n2zweq8JkryHDsc3QPk/aq55XmNqDbUsw7IK6J7lzxoqbw0utdUF9xL
O4Hjo3vqE8kx0NnrRvfOjslcPbRLckwUi3p5LLqCBtEx6ZwcU8VSe96c3PPU
69TDj0R7orxQPf5S+GPRZ5VHycueTN5bnvYwvDI615SD8j55mLxLHigvnx7d
W+Tp8u6p0V4vD7+D9+9K9gLFWL1qQXQvUc/qlhwTxUJneBDdLzpXVTPqTXOj
e5V61Lvw25LvQp7zP69nb04=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Kk24nPO3lu8orys33jcsw4E7fjLutpYrzba687S2fVV31rap1lSVxlrPd586
rvCY5Fx+1qi1FmONlmrv+KChNpIL/tAaG6daR22Sah21aap11Gap1lGby20L
y3Db0jLc0BpbGTf6YutUa6dtUq2dtpXT9pYrrdLF2Fl36I1lc9FUO8lnB78h
bnTEzsa9i2Xi3tVypZc6GxN975lq7bSb3Dr7TaWjdk+1Xuqaar26gXXc1Q9L
tXbqlmrt1D3V2mnvVGsnyivkop320yfa4SA5oDvQIZUe/v+e47cd5XaA7Xb1
u0pjHei7Sp/8UW499AFnNMghqdZ+FTd4HGrdH+TWxbqe8jncd/A5wvJUn/dJ
tXY6KtVarkeqtdMxcuM9+oT7I/dZ1md2rDukWkehN16NcRoTNj2Vu1mnXO40
lV46yX7RC6elWl+dkGrN85dUa7A/p1pf9TIWNAiaBI3VW15H21+fVOu0E1Ot
neh3xVy0zTl+jyY4Vz/ojko/geiT6v7NvfN4605PteY5X85/1wf+zrKvSi/h
A913imOIXukrH2I82296WU+5uuvje7dc9OT0VOurC1KtnS5JtV66zHfcNa5N
tda6ONWap78cqEPzNNQuZxvvNc7vKrlorSvkea3vKp12qd+jUwb4nrvO7fq4
0zLa6KZm39wkv0rnDDLGGx3vSjdeaIw32HbPXLTWh/rju7tSrUWr2PHPGYL2
QvsMlA91tzoflMnjmY4zMXG/5p49we/QIPenWi9V+unBZu/QF9zjF4XNd27R
X/fpt9JUaBi0Ebro38aOpqr0Ezgk1XpssD6e0AdldMrwVOuZF/wGnYJuQQ+N
aNbvCN892Ow7+n7KvvbKRUd9Gs+/ykWTPJdqjYSPdmqse1Ktl16SM3pnZKq1
FuUxjt9453ao8VSaalSqNdLrqdZFYzX0yaRUayrmhLOcs7C1/l7TD9oIjfRW
qnUR84eWGqevSiNNTLUeo46/N82x362jfYdcflualwqyTrfMZR9nD9+M3zD9
+9QsuTC+X6byWydnc+tc9OGrqZzTU4ydc4A9l/3261R+6znFORslj69SWd/s
y99b5pufUvkNgj7Yp8hZ8prfO8i13taRl+QsvwWQ0+TzglR+FyAXZ8sZvt+k
8rcB8vOLVPZo5muXXPZqyqvmkhPkw07mCHO5OJXfHfDzQ9i3+lsvl35nyHu2
3Gfob6DtaM96+020/9nxnipfuO+vX9YIYz9X7ktFXVMu8U527to7lvOcL35/
WCDfJanodjT7FlH/i3Gsm8scnOL4sWb7mjPo8Lfj+cew75znWT6Ptr8frcPn
z+YKMe/n+vnYcYHrwbncgcgNfqdapM+5zuu+jn+TY077g7wzEesvzlN367hr
LGef3KkOyeU8g8u+gfu4X1P/O8+5aeYTY7xmLvlKPB28z3C2752LD8r0s4rn
I/Ur6Ou38hvpmDIG5P9KxkD7ffRJnm5nLORqJ9fFGMerg37Brb1Todf4bX3H
VNZdG58PyMV3K39zp35D54xzizML/+s6DqvbD20ZpzWre3PgGvY5x3bt7b+1
eU5//M54uXm6QS65yu9dG4YNS2Vsfi1f2ra1/TaeS/3MqZxLjNQ3bJPtv69r
gL2VfZV8b2/Osw7W8azH//rGwBpsZwztrB9mHq3tPDNXazlfo81p9petchnT
HY1nW2NlfpgnznfW7xbmHWO2ubnCmtjUddHGfjo6VvTVzxzdzrkmhzo4p7TF
N+t4W9tfbj6w17BP7pwLt2FypMxew3rirOSc2cS1Cadx8iKeHXM5Uxm3wwIP
9Zvv/Ga0cW0vx+3lS7zkUydjaGcMQ+2HPtlDQHzweya/LfFbCb+d8JsZv7nw
G8wr8f7lXNZlS3OVXOppPPSzg8/cF8CePrey/Uj57i8X2hzmt7fYF/sndx/u
QOy9xMp5/6jrkGfWJXnDXfEIkbsjZwXnwe5+29H+iYv7c2fb8H4P2/SzzJ3t
Q333009XfZ0RONF1dWHY+64H1iN7UAvjwAf3894+n+zaZL9jX+M+z/2YPfzz
wBMdwyvJBcd/fOAXuazVeWFf5XImzwmba46SN12dR/Y/+jzVvimzP6Cj2WPZ
E1pYf6rtD7HNQcZGm9X9ZjX3wAOMrbXPreTANxv77YE+E8tejhVj3s05ZQ9h
n2X9Ldc26szZiwI/yGV/WRJ2Wy57yeLAG3M5N64K/CyX/eJo5j+XtbZ09HNX
LvvWg4y77Y+Ek22GBg7L5dwa4Ngxbn8KeyKXNTIt8JxcztXRgaNy2VfeCeub
yz5zZuCkXPaax8LOz+V8+1fg4FzyZYWI5zzrzwp8IJd94M3AsbmMwQ1hQ3LZ
Z24m982NYwNPMx58cw6xr3C2dzMf2DNZLy0df86vnZxTzqHqPNrX55WtP9f1
yHpjrbX0mX1m5Yj5llzuB931S5+X4zOXM+DqsIfMtYcDr8/lrvO1fL50D+R7
zmvy9wpjXjH6vzaXe0SLeL40l/vC3bnkOm0m5JLr5Nf8sG9y2YufDHsqlzsB
sfxkPLfmEjcxvx3P43K5u/F7AToWzTo5ylNyOSeY52Md28tyiYMY+ucSH7GR
O4vNn8cDj8tl3z7JfCVXh8fzxbncB8nBI82xZwKvyeX+9Ujg4bmcO8eY0+Tz
8bnkK7n6Yzw/ncv+z/6xKJc9ZFDYTOec8b7XMf8+l5iIh7wjz8ixhfH8XS73
ym9z8Y1f5vM957RX4N9y2fP5fWJgLvvls4HP5XIP6x02wjYzAj/K5Wx8ntzM
5Q79buDUXM7pWcZKnHzXy29/H/hiLv+n7Y2w13O5K7FfLshlz2St3JHLerkE
zOW+zHic4Jicm8uaZD3+DwW0JVw=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGdsiFEUhr+aIUbEbr5bO3YaEUmJRNLEL//8QkLFjlJ7FrFHY4sRM3ZC
opUgYs/YQoyijdasWaqqKOV5c86PJ++54/vuPeeec1oNm9A/o0oURWlQDSaH
KLoHDeBqHEV30NtQD+pDBqRBCWs/4T32Ozgd2zfP4Ad0gS/MDUVvQG3IZFyM
ToVG0AmWwytoDW3gBOyEQvZWwn3sadAYGsJAuATVoSfrT3RPnYvdHK2A35DN
uC1aAC+gpZS50+h+3Rk7Qi/CBajm/zwDp4KtJcB8yIcYAmyAs/KR7z9AOvYA
qOJz19FrUMt93gSV0A3yWD+nuLjvHxmPQ69ATejH+HywPVrTPwfBH0iGFOa+
o6VuN/ZY3vfYKKYT4BbUgSz2jEcHQzF2OVzGngFN/Uz5Ph2aeAwU+4SkKOrh
bzBK84x7eUwXo8v0Zth/YZhixXp3dAXjuehW+IqdiO6Fuqz3Rd8w9xh9CE+x
m6EP/E31lrrTLHgUbK0itreqwfe9/c2WohPhV2x3WIf9AdpDB9gXbE52Geu7
PMeUW6Wx5dqKYLnR2n0vgc4eg+1wLJhvm2M7e2ywWujtvuxRjsTmU23Gm9F0
xn08VqvcV8WsCEZCDuN2epckO0P/TvW7r4eO7sPzYDWjWmmBbvMcVO6p5pSL
CyDJc1K5ppgnes4pNiPcV8UoC/stfMd+HVstrwx2F9X0N70VfIotBjdhYbCz
lUM/odzfVmd+1l64G9udq+LP7mD/TkG3eEwUC9VkHjoH8mPLiUnYY/xtfsO8
YD1FveQ55GAfDWYrpor1SfgXW8xH+pkpHtPRukuw3qQedAA9qHti58LsYDWg
3FfOvcReEqwXKCZl2EfgT2w9KztYzapWNfcL+3iwXtQVXRPMB929CAqD7dGa
esxhmAKPY4upaml4sFpUTalWFqEFsdXMalgb7F/ycYfnSKrvUe8YEqw3qIds
DFYjqg35qNrODdb7VOOZwXqweq9irt4xM1gskv1uh4L1Lt3xP32h+7o=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQncV1Max18KsxiE7N1zKQppQ5u0l5SUeEslZhSJUdlDlkxkyRqyZMs2
YcxYJrI1mKRJI8UMY5lmmMWIGTNmLGOZ5zvnez/3/Xze5/Pcsz6/33POPef+
/u/OR08bNXXDhoaGUc0aGuKvYUBqaDg0bFRY66KhYbOwzcPa6LcI2y2sRdiW
YTeF/TTswbC9wrYL2z5sV/vSr33YtrbtEdYybJuwPfW0tQvbKmzrsLbOTXl3
6xjTwbl3COshJuKMDRsYNiisc9hOYa3C9g4rwlJYp7AdbevoHJT3sb0M6xa2
S5F593RuuO6nB1d324m9r+N2DutlOzz214O9tx7efeVMPvrpyVl/PfwG6DvK
qaPYB+nhN1jfJewAPVyH6OF0oB6Mw8K6yq+PWMBxkHVwOticwnuknOF0iB5O
h8qHOUbYl36jbKftMNvhOty5mXe0nPuLt5VrM8Y6eDc6jn6HW0cO5oddEPaj
sHHmghwcIX94T9DD+6iwofL+vh6uP9CD62g9vCfq4TRJTw6O0ZODY/Vwnawn
H8fp4T3DuZhjinVwOkH+cP2hHn5n2pc4J1rHXp4eNl5+xzsH40+yDq6nyhN+
p+nhd7oefmfowXRK2JGOOcuYcNoy3vNvwjeEv0JMtM+UJ/zO0cPpXD24ztPD
b5bcTnSt8FNdM/y0sNl6+F2oh9OcsJPFeLEefpfo4XepHn6X6eF3tjzAerlr
AIcr5UH7XPvSdpV18LtaD79r9PC7Vm7nuw7sNfbZddbBdZ596Xe9dRfIb5zj
bpA/vP8W9puw34bdIk/43aqH3+1yA+8C80K/e8VHzNvsS7975EDbXXKG3916
2haaF9b2DuemfKd1jPmxc8P7ETERZ23YM2FLw+6XJ+/iT+R2Y9h95oW2Rc5B
mTuBu+HmsIfkA+9HnRuuP9eD62Hbif0zxzFmse3weEwP9sf18H5CzuTjST05
e0oPv6f1i+S0SOxL9fD7hf6BsGf1cH2+yPcbnH6pB+MyPfyWiAUcL1gHpxfN
Kbx/JWc4rdTDaXHK41eFrbAv/R5JmedLYb82BlyXOzfzrpbzU+Kd79q8Yh28
X3Yc/dZY94zrx9680HxfVOQ997qc4fo7ecLpTT3x35YbeN+wL/3eExPx37Iv
/d4VB22rU+bzh7A/yo2235sjcvOOc1M+K+XcrAv7k3PD4x/GAMtrrh/r9tew
V637oMjvHJz+UuQ9TdufnYPyetvh8ZGc4fqxc4PlzsCwMGWMf7ed2B86jjG/
ZB3DzmbdUub3Sdi/m3D91FyQp8/0cPpcD64v9OD9rx5OX4W9X+Sz5Gs9/L7R
w4NzfL24NkjZw2nDlD3Y/yMWcDRLuY5c3pwy3o3Dfytl3PT9dsoe7N9NGTd4
N0k1v++k3E7bpim3w6N5ynOTy83j+Ut5sAZLXbMtUq6D0/dSHgfvFinXwY87
hLuRs3WrlHnCj/OY+4e7594o35NyTL7j+Lbhu+fWlDltF7a9z2DfQQ/XHfVw
3UkPp1Z6eBd6+CU9eHcO2yxlfntb3kWjDn5tUubDfburHh772K912G7WbR22
RxO8rZ2D8XtaB/a9xA3eDnrwdtSDt5MevO0dx5h9nbeN3/r9U/72Py+sR9iQ
sG5iBdf9YfeFtQ07N2x3+/X0Gbz76cHYS0/M/fXg7a0Hbx89ePvqO4mlc1gX
MXUxrwP15GyQHh5d5QHWAyyD/cAmGAc36TvUOvAO04P3ID14DxYrGG93LeA5
wjrwDrcv/Q4J6yd2NAHf3Xx/t3U9W8qjTHl/HC4+sMwy36PDfuB6oMHG2g7G
MfZhzDjrwPt9YzNmmmXmOEJ88DgqbKT9xjuONjQWmgVt86MoX2D+jjb+YWEn
ONeEsLXiOCbsQvFOCjtOrOCabnzmmGIdMU8MO1IsE8RFLl8IWxbWGHa8fYk3
1b7wuThsTtjElDUkWgnthBbsYPm0aJsslmfFeHLYKT4fG3aGmIhzqnWMaWEO
Ks2KR9+BaZB7Bx2M7uNcqfQw5RnOR55ONz4x0K7tzC/6dXfLle5Fg70Y/Z4L
uyhlDdzeNrRpR7mhUTtZRrt2tox+6mK5pfMRg3XjnRno+g2UQ3I/Vpp4b8dX
3/cz5dPdc7P6Fp9jPtB6PYpaD/eUWy/Lle7tVdS6d39x9bEMt76WKw3ct6g1
cL+i1sD9i1oDD3AMeurQotbDA4taAw8uag1MGZ2Etphe1Hp4iPzQfQcVtZYe
JLeDbYMPum9EUWvgkfIZZbm3WEaZixGOh0+jWOEzuqj1G/fU8cZEH4yTG7pv
jHzGWq407RHiG2dbpVcr/YpH73G+cMdzn1e696ii1r2Uh1p3ZJMcjTfXY8RY
aeCJRa11jy1qrTtZblMsN8ppSlHr2xOKWj9Pks+JtlVamrZu4hsmt6n2G++6
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
xtkl
            "]], 
           PolygonBox[CompressedData["
1:eJwtk1lIlGEUhn+GsYikXaMwv2MLDRnZYmW7VBRiN022EGGR90qXWmHRQlhG
tFoUERYpbRbIgEQMdOGN0F0TEcS0WpGlthJZz+Gci4fzvv83/3z/d97zFe2u
S9bGoigqhzi8DVE0U6LoGjUBOegv1DY4AfPwcyEffRNK0QtgYrB3PsIsfCv1
OkxHf6W2w1UYgx8r9l/7YBR6NDSh62EAFuJvUW/DG5gh9q7u0Qtb8ClqA7yA
7fhHwb4pC2vwHdTTsBadgMPBnm1CL4O76AcwAv2N2gKnIIkvgAvo+zABnSe2
dgB+wTr8GeoR+AHv4Bwcgj9QwfpZ6lF4DdX4x9Q9MBtdDAOF1qNPsAv/hLoX
3sMruATnYRxr46EZvR/++m907RhUsjbk+iK8hB08S1PL4ClU4TupPew5B51B
D6JvUIvwn4Ppy7AN3+fZPITnMI1nV3QWYDm6DBqD9XCJWM+0V3f8LAGOBzvT
SrGea6/vQQy9QWw2mjzLzWLflvJvjcRmQb95J3ok1KC7/WyDnkXas+/33ugM
bMXHxXrZBVPFzqhn0zNMRk8Sm+2TsB7927PUzFbjf3qWLZ7dP89SM5wv1pMc
n2m9GyVid0HvyDPvofZOM16BXiV29oOwET1cbG+dsWFiM6+z3uyzlPXZ1ZnS
s08Ry1Z7kCvWE+2FzvRi9CKxrPXOlKO/+146o/n4D8HuimaS8R51+QxolkvF
stNM/wNW26MK
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
VdfESNu5L51S8v70wpJ3q2Md//HOxTDX3Q+uPeZprP2e6Bo8t+QeYo7PcoxG
+R3m+AzrU8WA/8wZWPB9A2MrWDiTOGPJCYl9Xzn++E4s5/xi753j91hHo/0G
+/lM68fpC/X3S57lqzpm65ufTAl9Ss219tvvODVzaca2y3OBXIO8hn37QugL
a+YIC/ke/fwY5bddc9+Hfss53iP0njXj4XaW4av9Iu7eWnMfkqdwzhMjFvA8
ZHxWiWceqBkv94jyIzVjzLOhn6uZfzBf3IlfUDLH4Txkn5NDkesRR5aKd4fW
zEvuI05GfdGaORd5H3GH+EKcIR69Hvr+mrF5tXj24ZrxbDyxv+b8XOiaYf1s
UfNMog5nHVCTp25rmZjMXSL5KXec2AZqJ28lf+XudxfLPEfeMEj7jj6/g23Y
uQPmzOUd+iZuwTGJXbtp511iD/8PxLPkj5zDxKzqWUdMwP8prm1yUs5J4t25
xC7yWueMueRe4VvvULg/wba79t19hrnexe/iAzlgq+ZeIg7i0+H6tqzlQfGd
G2rmyOyDBV2fXWHfu+bc4gfzxnn4EvPm86vGM5fVPHver5krMB4rh/3imufQ
kjXPV+6w2jXXGWtsxXjmAtczMa+tndxteeeB93rVzv0XZe7H8HEh/Rwe+sSa
62Jy6G8dU/JA/v+MnHCv0MdYHmTfR3pGLOZY9fJ75ABrhG9X1Ny3H9bM59j/
K+gb/fRqZ15ITsh4L2c/fOcOnzndtcI6IR9ZyrkbGfqumnOCfRkx3mG9ufdb
Wvvj7ImaeRo+MqbkKz31h/OOs5Z7EOLMOuHbuJq84V37Yvw+q5nHk59MDH2N
z8B1yDHJq+gPnJyj7O9Sc48fFXrTdvKIp6t5ecl1z3cXVa+kD5xD5HDET/Y/
5xZn1tWh145+5gm9XegB7czvuN/gvuO336rD9l3Nb5HXwUXJ1YglO7ezP/bl
gNq5q0Jzx0PceqVm7CJ+9G5nDNko9LCae+3I0APbuT8uqble73PNbOm8cO5x
/nEOTrbOGQpfOU9/phiDfjvDaq5p1vNFNfcDe4HYuXo74+flNfcM++UQxqqd
uc5yfpf1AwcaUzNPvaVmvCZWk2txFnJebxG222rGEmL/5u2M/5z/jGE/x39r
y4zxto4zNvIDcoM7PRuIh5wPxBDiDecez9DHM4xDO3M39j3xgr3PGfJUTd84
czZr57lDf8wXsejRmucH2MGzo3PV5Pfk9sT7l2vGfHzYznf7x3s/1MxVdojy
9u3kvgP0kTg/ouZzPHNlzX3Lnr00ymu28+z92rljHm8OvWE71zQYuzsOYz3P
LjBesu6JmZz7c7v34RBwELg23PR09wh17n+5+yUX+0vNuHqafZLPdPMZ4idz
OG/NeSTn6qFvrMcna67JLaO8VTtj4taht2lnzLs+ZP12vn9dyHrtfP+XkKk1
8wb2x90198jZNWMN6/nOmrwan5eOZ5Zpp6/4Nae+dbMMpt9s2lnfnLPkVIzf
Jo4hti3cU8Tdvu3cE+Rr5Kwj3DubiZe8kry2mf9NjQ+MA3uNZw8LvW477yfg
puSA+9rn5n6L/vrb51auaeYRDj26Jq8gDnH/SyzqGfZRNeMbPszjd8nzyLvI
K1h/O7nviIvEUGLjtTXj5qPOHd/FlxdrrjPWGOcXuTsc4P8BhEBFJQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnnQlmMUxp++0qJVJS3ivc9d+iLzEWNQ9pHGMkNlbUFGZOnDjKVEzCBk
jBJClrG0U6mUltEUJZVKKLKUaSwxliSk4nfN9fxxzbnOuZ/7vbdzrvOmwbV9
hlUVRTEa1APfRVFMAu3Bb6kohmEPyUVxIPZD/IWyYAt8HhgD3wp+hv8HnoRv
A7/AW2GXgiHMPwm7iFgP+MvwxfDPBPjzYAH8U/AI/GvwA3wfWAS/mjndsW/j
P4C9A3wC/xI8Cv8G7IDvBw/C7wSb4F+Bp+HHMb+NzgHeBevBt4z11JrwZ8F8
+EZwKt++ir8Evhm8D7+eWE+dBb++7gLUw5+O3xjeHNTHn4FfB34AqMKfit8B
fjhoij8Lvw28PWiMPxP/IPjBoBH+m/gnwl8s70pn1FssD+9Fb7ISDOWb0xQn
Nh77FJgCH1FhX4zdiD8teQ81+GOxc/HXgbPxp5VzPwe3w68iVoPdyfwt2C/A
huQ33gwfwHg19mP8u/Q24Hf4laARYzfhf5B8J83wb8auSr6TmaC37gBbAafD
X9c7JL/BTv0W+Ae+B7TOzjnlmu6kHX4tdnXynWX8W7Fr8Ztj54A94VwJ7IWM
z8auwN8KVsFHKYcqjs2F/xvOlU7KKXAtc07AXsc334drQLmvM1YY65S91mz8
X5XbYDf8L3AYY7fgr0l+4zfAaOWkcif5LVaH96I3mQJ/SDkOX5bMh4ffQrER
8J/ALngtWBuuAeX+NvBaOMeV27rDieGaUC0sBNXs5zb8j5RbsmBdeKwtuAf+
R/iuH0/e60i9efKe79bZw2cbBXbAf9Sc5D0tgA9ijW5lzm3CXoHfpcyZzvCu
2Wu/pTWwBf5K+GRQN7tGVBt1GHtOZw/XnjRgo2o7fHf3ggnhHFTuqUZvgFdl
z9VvSnv2aY2wBu3HPgaGVBwbB47h+/XJNfC3ck1vDB/MN7t1VrA9OUcehv8J
9uK/AM5j7rnZd6XYRfD7wnM1552w5knrtEZfxu+HX1PxGsrdQ4k1KXNYtdJE
GlHWTAt4A1AXvwFomq0p0hJ9o1pqid+wrKlW2ZohrVCsY7bGSFu0Rjf4kWAO
fstwLhyVzZUTytWE36zM2cjOceW2Yl2y31Bv1yJca0dkc9XcE9ijs7VEazTM
1kRpoc7QNlvjpG3qGd2zNUra1Dqs7RcTy2GNPyc755RrHXUnpWZUypyUlp/B
N+3Cmi4tf0brhDX9TPztYW3WN9KaWTpjWHMuwD8fTEyOSWtmhNeS5vRnbE24
tqrL2p6uNytr/KxszZPWdShrYXKYqyZ6ZdesalVzLs/uOeo1qolLsjVHWqMz
qzcem30X6pEvYU/O7n3qicfDFxPrWp5xYHYNq3YVU271y9Y65Zh636V6s3AP
vAw+T28Wjknb5odrTxqnXqweqN6nnqze9p5qOrnHbVCthbVJMfUG9Xz1+pqy
9oeGtVIaoN6sHqLeoR6t3rQiXLvqUa+AU7J7vXqq9rY3/F9Be/wf0FpcOw==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQnUV1MXxl8zGTNlVv7nUjLPZOYzkwyZ+3xkpsxkDBUVKQ00qJCkpEzJ
lKhXKWWqlISQeZ7H+vZvnd9d11rttd9zzzl7P88+557/fU5Nzmh/TLul6+rq
dlmmri7+1V2Z6uq6ht0WNrtWV/dl2BdhN4adH3ZBWEf9hWE36S8KuyWsXVj7
sNvCLgu7PKxL2CVhl4bdqqevk2MvDrvZGMx/Imxw2JCwrsa4Iqx72JVhV4Xd
rr867A59h7Ae+mvC7tRfG9bZPODoFXZd2PVhvcNukF8fPfz66uHXTw/GbmIB
x90+g/c9ejj115NzkJypx716OA0TX8+wgdaIcQ/6rJc16GrOofKH9316eN+v
h/cD+jutXTfn9LQGcH4o7C55jzU3GEfKGa6j9PAbLTc4PWyNGDfCGLQfcSzj
BsgbPo8ZG96P6+E0xnHkftTYtL8Nmxf2bth3+vlh4+QM16f1cB2vp5bP6Knf
c2HD5fqCWMH+snzIOVGeYH9JT98Ex1KP543B/KdcA3BMMgY86q0jXF/Rw3WK
nr08Vf9k2Kt64r1oHnBMlyf8XtPDb4Yefq+HPSu/N/RgnCwWcLzpM3i/pYfT
23pyzpEz9XhHD6cPwqaJZbY1YtyHPgPXXMdOdn3q5T1fD+8Fcobr+/ppru1k
51CDIdZ0obHh+pX4wLVInnD6VA+nz+UzK+wT68K4j8Nm2v7MseW4F+XztbHh
8Y0eXF/KmdxfOGe2uJ9ybb6X53th+8b52Dxsq7Af5QzXn/TU8mc99ftFD9ff
xQr2f+RDzr/kCfa/9fT94Vjq8VvYR85vGrnXCls7bLEx4FGXch3hulTKHq5L
p+x5z5ZJ2fOeLZuyh9+f5gHH8vH8h1rmt4I84bdiyh5+K6Xs4bdy/P2rGJeI
BRyrpPwM3qum7OG0WsqenA1T5kw91kzZw2n9lPEtF7ZGyjVi3AY+W94aLDbn
Oinzh/e6eng30sN7Pf2y1m6JNSMeNYDzhsaGd2FuMG4a1iBlro318NssZW5w
2jjlGlGbjYxBu4ljGbd6yrzhs7mx4b2FHk7JceSuGZv2skXgD2vp+rzn/msu
50buy0Zy3VpPLbfRU79t9XDdXqxg31U+5NxZnmDfRU/fjmGbWI/tjMH8LVNe
A3DsZgx47GEd4dpCD9c99ezlvcOaGWMfPZx2Mg849pMbnPbXw+kAPZwO1IPr
P3r47S4WcBwctoM8DtGT51A9vI+wFvA4Uk+M48THGXC4dWHc8T4D41GOhfdS
ReZ5NDWKv/cK3yrsmJT/hvexeuK2dF4L67G2NW1tbHifbm4wniRnuJ4SdpD8
TpMbnE60Row7wRi0T3Us4w6TN3z+Z2x4n6GH038dR+42xqY9y/OH8+oj+bUN
O1ue8DvPGsHjHJ9Ry3P19F0gPvBeIgfyXOgzuLYLO1mu7fXwuFjPnHfDpoVN
DzvfnMS92TmMvdTYcLo67CzxXiF/eDeL9Woa9nH8fY24wdsx7CKxXGYM1uQG
OYD3cp8R6zr5g+V6PeOuNR59t4gL3oPDbg+7I+yesM5hXfSXmrOLnjwrBcYV
i4x9Ucrf8XzDd/Xvq8K66eHaXd/BPB3kd4ceXD30YL9TD/YtilwrYnUSL5h6
W5ebwvroqXdfPfz66Zl3tx5OPY1N/T4Ve/+wAf/iMVAPj0F6eNyrh8ddYTeK
42v3wDz5ne363eS6sQ8eEh+4ng8bFfZI2IPygccI+8HbMLivUeQ1GS0msDwX
NtL5n4t9pLEGOO5Rx4J3mFjJMdw84HggrJd9T4uD/vF68D4eNjTsvrCnnEO8
r8KelfMzjgX7OPuJNcb8g8Va1nisz4aEfSF2Yr0gB7jOCpsUNjnszbCJYS+F
vRz2mLhelOcY+8cYuz7sSfG+5DPmTDcP9Vsn6rp2kbHDjT3HvpgiB+oxVU89
XjHeOHGzd3uI7wnzvWZs1vatf+F9PWyCeN/Qg3e28+vtHy2fGcagHu+YG1wz
fcbYOc6jb679U12rHvLht5pvZL6PSw3Dt36pGfiGXmA+Yr+vB+8HevB+qGcd
0OXoVnQsehrtiRZFT6NP0a7tfEa71PDMWWgMaoMGQ0egbdDKnY1V6nY0Hbr9
Ntvo8q620cTdbKONu9su7wjIV2p1tGup1WmXWp02OrWnbfRqL9uXmL+zPNGe
d9Uq3d67Vun2PrVKk99dqzT5PeJCcwyxFvT3q1W6eqg5BjgHnmjYgbVKww+S
52Db3Yw3WIwDnV/eU3SvVVr9PnOiN0fJDc06TD7ozeFyQIeOsBbDapW+f8BY
ve1/qFbdU/SV52hz9Hc9R9cqbV9q/ZHmmO97yLvynp79V+r2x+T2hG24Pmmb
ej1lG27jbJeafLx50F8TxIsmfd7cE2zDGT37bK3S+eOsNfnHin2iseCDbn1J
fpNss38n22ZOve1Sn9dbr+fNV+rzKbVKn0+VwzTb4Jhuu9Tn02vV3cHEWqXV
X5MDGnRmrdLqr9cqHf6WHGbZLvXzu7VKt78ppvfsI8ds55S6fY4859qG5zzb
9cabJ8Y5zh9oXcbIc4E5yIne/FRuaNUP5LPQNhzQoR9bC/pLff++sWba/5E1
flP+Wxb5O5DvBjh/br5S25daf5E5+C5GE/D9C3Z0JHpy3SL/TvAbUWr4r+X5
rW3qhY5D077iec3ZXN4rfSvnHxxX6vOf5fCjfXBAt6Jp0V5oGbQP/H63D7zo
uD9qlcZGc5Ya/i+5/mMbDujNxfL+y/nlfQG6+gv7/7EWf5iv1O3kKHU77VLn
l7ofv6RW3Uf8KE/0LXPghralDQc0KTqWnOjONZ2P7qANf/obmAMtQl+p/9G2
pZ5H28ITPYtuLfU8bXiiXxlX3gWQm2fJ+pa6fR370JuNxYpWRbuip9GaaM7y
bmJ5udG/Xqr0+aap0v/rinVj56/qejaRG2PRtOUdRxl3Q3OzVmukSpMX4kb7
oZUOT5WG39zaNbW9tnu5qdy2tF1q9eZiQqdulyp9vo35t7Nd6vmt5NPcWLTR
hvvKAT27gzVA0+2UKg2/s7x3tU3dd7MNn91tl/cFW6dKt++RKt3eQj572YbP
3rZLDb+3dd1JTM3FuE+qNDy40ZBoqDap0u0HygF9elCq9PkhqdL5pe4/wFil
nj9YrGjpo1Kl4Y+Q31G2d3HdSu17mDkaypk1Xsq7lhbiQG+eLAd067FyOt42
ONCarVOl7Uutj28l59bO4U7gaGsI7lPNAY/TbMMV7Vvq+BPNUchzd3G3cQ6c
Tremn6WsV7qYHx3EOVxqUXQd90ln/Ksu/I1u5dxuK+ZSq59jfjTuBfI7x7jU
BW11kTjQhhfbhwa72rHX2AYj+hUd+0nK+pXcaD50SX850H+pnC8QexufkQON
ji69UozXmuMsc16VqvuCdnK7wtytjVfeT5yXKk1+nbGYh4ZFO5batV+qtHGP
VGnsrqnS1d3F2Nl51OIWY6HXu/yLf6nv25mno9w6OQctgs54wfrSf2OqdHVf
22jHXtbpBte4vB9pb4575FDq8z6p0vx3OKen3Eo93ztVdwfdzN/bfOXdAZzL
O9ZGqdLq6F+0Gr/H9Y5Db97rvCG2yYf2G5oqbT9IXEMdBzc07/1iR+cOF8cw
+6jHCPswvhfQjGj3EXJnf6FtRzkHfE+a71HrTf4xtsmNZh0rn9HO72P+B+Uw
1jn9jT1SXOPMwbinbd9vzifk97g5ejtuWKr0P3O+lMsIMaFbJ5gTbTvRfGje
Z8XHfkG7oq2nGmuUz54z38vOB9MU1wlMaOFJqdLeU1Kl7V8Ue73jiIV2QEtw
zvKOnS4+dOtM56E30a7lnc4AMdI/w1jo8FlinGFc8L3lfHLOcdwkx74tZ/JP
S5W2f13caPJ3xHy/a8447grnpUr/zDfnAtul9n7f2POdU+rzBanS5Iyrizp/
n/KdIVgX2vejzzijOG+5xz8z/t60yGcf594qRR7HHV6tyOvNWq8Wf/+U8t3Y
L3r2119hP6d8xv/kPM5O8nMPy9ndpMj9nC9/hv2Qcr6/w35LOccfKd8fUY/f
U74Dopa/pnyfxZ7aJOJsXOS436V8v0bdinj2jfvjE+Nztm4Yz1cvMt7PxQ3m
ZtanrXl+Nf568Xyx2BdZryvl+pO8PpMv59cGMX5V67J++CXOWc7atpQbHHln
Wlr3o8yx2BqtUOQ1Y23+Cfs2ZT5fWxdqwjfA0sb8yhpRnz3ta+E6LuOaMnYp
f9e/MeZc8S1xH/CbtZW/W4xfzvicUTXPqSXi+9ia8ptxuWvK37f6bCX/pvYN
vAeueVf5sLVnLT61djznDGTeys5tYBzmss58l7RybEPjUPs1vf/k2Vo+p76c
L+PdD/z9qs/W8W/WifVa5Jqsq46jv5FjWIf13B+8C+v7PrD/N3Ct1xQPGPim
2sj/X9nI/VnWfK57kjXZ1O+bxv59pnVr4m8w8zZx7ke2W7mmjX0/4VJ4hibX
6GHrnHxXibeZ79tmxqe27Mflzbu5ceDL91Vzv7HKPcGe38r/d2jrXm1WVGcH
++UqxzR3/zC2meOJvbnv5BaO4TuoufutrX9v6fNjxAFffgv4neO3aI94dr64
z2Ke78k7am605o7RHlDk9Tw1/Hby3Z71KfJ+6Ri+t2t8JPUu8vlxV/g21mHb
8P2KvH9PDL9bkd/F48LfUuT3kP6Wjtk3/NXuv2PDbijyO9kz/Gmuy03hDyny
+wqWo8WzV/gL3fd3hvUo8lnVKuzaIp9HxO5lfMbeXr4nYae4jtTmNuvTKeyw
Ip8Z3YtcC+rA2G0cf7jjGAPGHcTZIfx+RT4jtw5/rvvwpPAnF/mcOjD8dUU+
L/cv8hzGH1zk+lLb6+UAfsYe4PibrRH1ObTIdaEmx4ffuci/CZ2LXGvqfEL4
XYv8+3B5+MuK/P5dHHZJkd/h9mHtivyOnhd2dpHPsCvYv0U+a1qH7VLk3yj2
yDHuE9b2dNeX9d/JPXAGdSrymfd/pOpqxQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwt02tLVFEUxvHDMBqmFimpM8KgcnbvTK1MmtIsMysjhwGvb7Sx0hiaseuA
YoLhLbWLJSJ9Aj9KXyPKS2USVFqm9V+s9eLHes6MZ89ee23LE+l4KuB5XhRB
jDjPu4h13/N+4Qx5AEFk4QbeIoIPfP+MehVfyL/xlHwJG+QdzJC7sU8uoU6i
FV953sJpcg1+kHcxTH6JUvzkuY56Etvkv7hO7sIeeRO15Cp8J//Bc3IC/8gh
ah968c3Xd3qsB9m77OkU+R2O4T3PTdRRp71LD3ecnoH0HsBxLKIM/Xz/hPoA
q+TD1EHctb+N8VmMeh4F1uMcdRZT5FxZAzdxwPY8Ld/Z2tnUNpzDQesxSa13
+m4OxtCCYhzFFYw7PXuZyQWnZypnKTOVXuUM5eyk5zdYsN5ljdd4hRWeC6kv
8NhpbzKTOC6jyGaSoTY6/dsjmMcQ8hHGfdzDJ18/u4YJp3dF7oD0lrRepMcG
dDi9C2u+vptGnq0hZ5mx3yqwvYxZ77KnZnQ6vSufcZbc7vRufPR1Vo9wyGZW
TV1Chc1E7nrU6dnLnZe7XmmzjNjsZU1Zq8zelT3LXmWNZduD/LZPveX0f0Du
vmezvm1ZZv7Qzixse0o5vcMh6/mErenbTP4DEe2I1Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmge4X1PWh6/oZUSJKDEkuGcfIphII2qi94mI6D1kEFFHZCKEEQQz4xuD
mQjRuwiGSPReRm9BoiSI3nvJt17rPc/1PHc9++y9dlm/tdv67f/tsv8RA4a1
a2lpuXzelpb4a1motLSsEvJI1dJyfKR/DukWsmHIN1H2dcinIeNbW1quCNk6
ypcL+TnKtox02ZCf4nvbSJcP+SW+/xLpyJA/hJwZckbIESHXR/tLQy4LOSHy
I0LWDukXskzI99F280g7hvwY35tE2iHku/g+PdKJ0e7akHtMrwu515S+p4Rc
rp3fVvl9R8idll0Z8m7IsyHPhbwT8oz5u0Ousd8dY6xOIS0hU213VcgDITeG
3BSyfehWCJkb49wf+RvUTbPu1SF3mV6jjRPF/6B9TAp5yPTmkP9pLzgeDbkl
5NaQx0xvC3nc9L8hp8b4p4Ssy/xFfrJtxpTs58mQF/QXfnpaX4DpKce5U/zT
tPc5U/zxvCntXwq5rzWxvqIvwPGW42D7q+J5OGSmdmPv661p36PqbtbW18yj
m25/tJ9hXdq/YR9PhLxpynhvOyY4ZouNuZxlGfmXtRdb3xPb89abKuY5luGn
DjGXcyNtifRDMdPHp2LD3o/Fj73fagdjfmRddN9Zhl0fhLxoX5/ZB/74Uh+B
7xP7Y4yvxYlfvzFljK+si+5z+8BP3zsOa3neKvvC3p/EDL4fW3Pdk/8l5H3t
WrjKfhlzrmXgnq/KPrD3B/um/TxV4sQH81ep//w3/kK3YHx/Ib52VdbFpgWq
rPuFMkP8C1VZFzsWqdIWcP+uSj+Cb6n4/lnb21dpE5hWqNIO+l68yrroOlmG
LYtVOU/0tXSVfYC1Y5V4sHGJKvvDZ8tV6Ud8sLwpYyxrXXQr2je2lyrto+8q
ZEnznUMWdfyVq8RGvotl4FvTfpdT941raqUq54Y2v3cc8qvYDqy1Y7Jm1whZ
pkpMq1tGfrUq/QW+VW3XXl2L+LvaDju6aQu4bw+5IuTKkHWq9Cm4e4gHfN21
D3s31CbG/4N10W1kGTauXeWc0VdP+8AffbQPe9e1P8boq0/x8QamjLF+SKu6
XvaBbzZ2HDBtZV/Y209sa4Vsqt/J97cMu44I2T1kj5DNLAP31vaBvZvYN+23
ECc+2EY9tmxuO3TbhfQW35bWxaZtrdtbWUX8O4SsJ74dTfHBrmLA3gH6Gr/u
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
S8TYOxhnvxpyV8jqIeuEHOAc8S5xtPz99UgfC5kv5LqQGSGfRfl+ke4fclHU
vyHSN+Qea5XUUX4za0w+MyfS90O6yjPxEf75MNI3S3KXY8QFt+Jd5ChteNH6
lM8TONqFbBT5W4i7Sv4291Ok14ZsEPJRyKyS/OlHuE5IXzEc5f6EM24mb4T7
bCr/uSnSt+VdLTHO3JK/AS4f3yuEbBXfS5ccn3FXjbLVQraL/OVVvpvwpjBf
lM3PmmZdRrpAnb/jnRSyfsg/qvRfX321cOgXqdMO6owu2deKITuV5BF16Fev
c/6WjbRjnb89rhhpp7rtN8lt5GDwsi3kZiuFfuU6dcSrWxmzwtG2k6d1CX3n
On/DPFBfsh7gg+CAE1ahb63zdz/W1jzaxj5o5144NNL5S76l8IbB3mCdTnKN
socmuz+a94wH1N2knjbze97QDz7l/YO3DN56eEvhbYW3Jd5keMeqo37nku86
zdvKXVXb+wv7b339ylwN1EberDjfed/iXetc+2PM5q1niuNNNX+lexWbmjed
adoyRd356hj/PNvTH29XvPdgY/MuRru/axP24EO+L7NsF7+5F7kvuSvxDe88
vPkcXvL74fhePNJ9SvLCVUP2Kvm+gn6wdQbZJ2M2b5e867HueKPEB827IW9w
Ex2Psf7jPN2o7npx8r52i3N7iXXJT7CMee7i/DCPF1nWvNVNsl9+h+cs54zn
7jzbuRnpXDXvuOeoYx/yPsIbw7iS7wnwbN5N2Me8cxT3Lbql3bvUR8f5xG/x
2MQd84jz+ph59F9Z5+RoO9wzcFfPMnByX/K+wx3TvO+QJ64hJiAeWMkzaJRr
awHX4WolddTrX3Kvsed4o/j1TGpNW3n/4e2kCn37knnePb6z7tmeweD+OL7f
LfmexBxgJ/vtFNcle4h457Sq7f2blPfioz0nsXW4ZbQjfuJtmDdiznn+T4L3
pyNds8RCx7mOqEf8NdYx+riu/lG1vU1jB3EPe/hc201wXZzk3kBHPHSe+THa
fl7V9pZ9oTaNd22eYR/jXTeXuDabd+rm3XqiunHqJ7j29nD9cb8e6xzvWVLH
Pjqn5Dsa72y8q43wnBwa5+LjJWOlXYll6rxTiRP4HwXehM4q+R7EOXmK5Xzz
fsIbEe8i61qHstZIf1cyXmMtM5+Xug6X0IZFrUPMNLPknYpudsl1sJR7rrPr
bV/PB84J7n7eNLlbWTvcmRNda6wx3hXXChwXlLyLiMmJ0TmHTiv5fZhl5Ind
8Q9r8XTP2tGeJ5y9J1nGWhhVcv5HW87a6G19vtGfWDKuxt9nivcI/c97Xh/r
0K57yf+5YU7eKhkHgIfYhvhzbXW8afJ22FObsZ8YfmzJMvrFdt4aT7McXMwd
58sYz4CTtWek416sbSP9XsI6nBU9xQuWNcOft5W8O1lnnImcPewn9hXxwGsl
Yy/24DchX5fEyly1uh6mhTznOuX841xozgj2Je+m9F07/++FfFLyLHuoZDyH
bfyOxhnE+bNj2Ha34/yp5N3BHXJnyDMl72TGX8M1R7s1S55f+0bbJ11n34V8
W3LO0XUVC/i6ua6a+4kYntiBM5rzebfoZ/eQg/Rrd/35S8mYj7P7q0i/LDlv
l4UMqLPPDazPfrwIH7iW8AXzD9fo65rAzyf4TX18+ZT+vMq9zTrp7rqhzgR0
JffR+EivcE6fZS2U3PuPu4fZv+u47hjr4LDxwpJYh8T3wyX31CjXHXuBWI/z
gphqaMmziHPnVMs5K3aJtoPqjLPHuoZ7ql/XtqxP9gvrkX2Or+GAxOOTS95p
TzhnzNcrIfvVuVaYw5edR+KKYfpkn9C/WDIOOSC+p5eMJa523bNv9nbdMK+H
lYxjqD9cW5hH2k207TDH4LtP9DmlZGzSPb7viHTnkvcsdTiHe9bpd3x+qGOw
JtkfvercI9sTI9d5xq0b6b9L7l/WS4861wxzxXm9suvlIG0bqM3cExc4T7/O
UZX3HHfcZ+KhPuf7ga4N1jW/u7DWbi25z9njXSNdo87/p0N/vOthbfN8c8/A
6ziH4bOHlNy754d0q/P3EO6goa6H50MG1rnnHwn5oOQ+xmd71+m320uuOdbb
XpHuGXJwyb3yfcn9ci8+rvOsv6fk/mfv3xfydMlyOOJOdd4V7NEhJWMozt0+
zsXf9A/x5Imuac5k7jHOTc7McX6zhjlrVtKvje4Oz13uDu4gzoJx1meOmSti
UPTcMZy9n5vnG2yr6QfOpK6OsbNlxGJN/Pfr72iRXl9yPuGvN5bsD/43qeR9
e7hrn7XH3HDuwkfZd71cV/hjI33CuidG4Ezb2zx7jxgNnkmcxr4crs2sD9YX
e/YMceGDLXlfqXPO4Wnwusm+ScDfbvbdAv7G28VW8L86z2vO3Q3qPHtZR7Vr
qTdldcb969W5n9mbcGC4Im8eP0T6aclzuh98tM712LfO85Sz9KWS5yBnIOfB
xSX7YR3d55rhfYE1C0fcDk5Zpz82qvPsYL8T28LDb/I9hrcJ3i2a/9sg1uvP
e1Kd5yDvT4NdA/8P3JszTA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtldWLllEQh1/XtdfutWO/M3av7drdvbZrr7JeCF76L9iKAWIHNgYGKnZg
oagoiKJYN7bY+vyYc/EwM6e+98yZ+X318haOLEhLkmQRpEM5S5Iy8CuVJL1D
klTGrwi/ifsSV8Ffia0K/aAG8SpsNRgAfyBhrCv2K3vq4q/Grw6DoDBxMeiO
/535xvhrdQ4Mg/LEK/Q70AdKES/Xd0BPuAiX4AN7N2UlSVHmlxFXCn5mFvEa
bCYMgXcwmbE52FpQHD/D/KwfnFEfP2W+9h/xMewnaAvDYbd+C1pCZ9gDH6E1
dIFW7G0J+ewdGTx3Fcy/XTm8hp1PvAibrjzh17SYK+YDfhPzuyf6Rvx65rn6
m/LcVzXPtd7gFnYB8WJsCbgKHYjHYpcxfwd7F+pAETgDu5QXyNCdWHs2+o1g
M+QzVoC9zP4p+FdirkbBQOLBMAW/JDyDfcoBa8vpjfRtMEm5hVPQlXg8NhdG
45/DloUUbIK5jC3AbuWME9j2xGOC36G73gYm4BeDF3BAb8La8thXcAg+E1fA
tmDtcWwajIBJxNuwDYO/+VK4F3/7G3vWYe9DiHtuwuOYiwfMP5SFbapd7HTO
uxHcN7igd4hvP1M1E39DZ6vm81j/KK6dC82Ij2ALxRo/r7qItZQHt5UH2Jjl
Oboec5gb3zCH/d3M30Y57W2eI+VmIuyFp8HfQj3xFvsk1loTOAyv4UvKc6Za
2AKNY00chJfBc6kcb8C+iXubwk74Dp1iTpTbDXFOOd6hu6sGYTnzXfi2zua+
9vyAn9A83nE/9nnwt1QNpbH2b3Ct6KY7ERcy92cH7+0SxD2C93gRcw2RduSo
Js17Wr2sNaXx083negXXkkoWtUvfbN7z6vXBwbWpgbkvjZK2VSfuH1zj2uK3
gfmszw6udbWJBwbXvDrmPate1VimeY+rt3WGtKusRS2F7XqL4GctYU0jcw1Q
7w+F9cE1RVqi3+yE39G8V9QjQ817Ur04Nbj2tDbvVWnQCGmZ+dw0OKrcS3Ni
DV4OrnHSNo0NMO9h9e5kmKW7m/v5qnH8Xua1Ni+4Nqrn1GvSyB7mNa9aV89K
66RJ0iJpXl/zM7RXGjHWvAdU+9ODa+s4xmYE11hpt5nnQho+3rzn1GtaI+3N
ZWxWcA2eYP6foP8Cjd2PNaTaUY8PMr+T7iINy8ZvZ5571ay073RwLZUGvocx
5t+mmpVWnQyupdIsaa80Q1ohDf4PzQ4EUw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt0lk3VlEcwOH3NWQeXlMUoRAqlaJMGRpIIQpRKNGEpELUZV1zYy2fwBfo
k5EGMvScVRfP+p2z1//sddY5u3h8tu9NOBQKfSOK4DqbCproZZJFvrLKGuts
EO2BPHIZZIiHRNHMa6Z4xQzTVHOURcI0cY0qFji07xE9yzLnyOEBA/SH/71o
I8+YYJznTHKRNOb5Y/SqnmKJEi4QSzIpJFLIHD/Mx2gBHzlBPLdIoJ2fZi7p
Ix4zzCgjnOcYwUfdMndD27jOpvub+l1n9Thx5POWbeuX9Zfe1k46SKKYTxRR
Qy0necdv81d0R99rKam0MMYTynhKHfWc5gO7nmnQPb2rXdwhnW72rd/TCD1k
UMFnyuklk1Ze8JJKzpBFH9nc58BeK3xhgYlgbxopJ4tMMoiQThqppJBMEokk
EE9ccFaIDf5bcB7/n+O/Qeo3tw==
          "]]}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0ktLlFEAx+Ez46Xca7lSJ9OFhJFly6HMzE3qqGFZQg0VGmnfoLwwoEKQ
u2CEFgUh7qpVMH4CBT+AYHlJs7S7qZX1vLR4+J3/mfPuJpG+1z4QCyFkScZD
yBiPmSbHHAtssB099Kab03khHMoP4TDzzqU6oM1ar1M84pI9oZM0cZd++ngY
3fm9Ts9zKvqWYnrtWUqc7+gFPanPGaPDHtcst6Pv7RP6lGeM0ujueFRu0mbf
0jQZztm1UblOq31DexjhrH1MG7hKi31NuxnmjF0TlctctK9oF08YJOVuSF/x
kk5eM0OOB9R606H3STpXa5G26wFN6UGt0kJt0zwtIJ+jdkzj7DsH/auV/OYP
u/xijyP8ZIfvbPODBF/5xie+8JkKNtlig498oJw11lnhHauUscQyi7zlDe95
Ef//P/sHWLhOKw==
          "]], 
         LineBox[CompressedData["
1:eJwl09tPz2EcwPGnuDCHFG6EFCLFiuiXDppuHNPW6JJNFy5sklM53TUuGJtT
2DJszDoQm2jahBDCkGPq3h/gWq9nXbz2/jzP8913v9/v+/1l7aqv2ZsUQuin
xdBMaXIIvRNC6KGax2zlCU/ppopHbOEEx1k+MYRlvDRvZpRj5NnL5YV5EyMc
Zam9HJ6bN/KHIyyxt5g+8zC/ybau0EX6TH/xk4XWa3Ue5eYmvU5rvA8V9rbr
Va6Rw2R7tdrPK17Hz8IU+1N5Yx5gXfzs3IjfjUpnzXqLm+RbF5DCDutpulOn
60mt0VNax1ve8Z4CbnOHM6xw3WldqXe1UNOYQSq77c3Us7pNz+kePvCRT6yi
jXbOU+S6YhJ0WK/RdOYwm3p7c/WC1upF3cdnvvCVRPxdnTXoEN9YTzGd8Z7x
uTm/pPe5R4n1ZZ2v+zVDD2hLfPbmEs3Ug/qdH2yglC7K4rvj/Io+5EE8sy5j
AYess/SwNsb3z1wev793djVFJCgkn1yyySSdWaQwif/e9X/8ZZhBemlLGv8v
jAH5a1i4
          "]]}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVbFVEYgNFRAQsbu7u7u7uTElQERFCxW7BbL/Q/6F/QO7u7sQu7W7DW
PF6s8357z1yceWafUz8le8K8IkEQRPmIiwiCWLLIZS/7OcgZ8njGRwpZHhkE
RYnnLS2jgqAF2ZRkHqWoyQ3XX/Ga5xS3t56z5utkmEcxmm6M4YX9DXpOm2oE
O4mkBvn21+ppbaxPwu+juZwyX+MRW60f68PI8EGDYA3HzVf5ww7rv3qfoeYH
OkxPaH2dShKJTCOZ6txxfbUe0zr6U7drgVbT27pSj2gt/arb9JtW1S+6Qg9r
P+1DXw5Z99cB/DDH6neN09rEk8AgbtkfqHlayCrzUa2r9fhtnq6/dIY2IIWZ
DOGu/cF6T4toDifNDbURxUglnTSaMIsRjGQ4T90fpes4Y26mz3SOlmA2WWTS
nLmMYzxjeeneCVqaXUTzxl537cFN83lamS/oRi1DG1pTlt2U453rPbUXvblo
3VYv6SYtT3vaMZ8KTOK96xP1g1bUzVw2d9COxLCASiykE4tYzBQ+uneyftLK
uoUr5s76WZdrFZawjKV0oWt4psJnDd9ZeI7Cs0KN8IwQQ3miw99M+I4o8Nv7
QD63OM0B9rGHHDKZTQazSCeNVGaSwgymM41kkphKIgnER/z/T/gHES1/CA==

          "]]}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dbjmEYwPEr8jzJyEx2kcoeIbuhqFApI9mZkfoo2bIqfAe+gkOfwCoj
I5us7N99ePE7/ud13ver636ejPrm6qaEEMJtTsZCaOEGt+ikmz7i8RDGk8MS
CiijigY+kJwUQhIzOMAbu89MNx8jkxhlxCnnrecrdRMVbKSKSnJJZB+93luu
k2lgCgtZRAID+OudCbqTHnMfvzni/Ed/Ms5cy2PzJ/o57PxDvzLGvIWH5o9s
MK9jPYWU8s1+q3bpYh3BUUaygBQ2c8/zYi1iLXedS/S+VusovphHaw0PorvV
bt2mY/luTtXtPDIv1Se6Q9P4FX0XreOpOU+f6S6dSGASu3luv0xf6B6dykDS
2ctL+xX6SvdrBoOYRj2v7VfpOz2oWQwmm0O8t1+ta5hJEznkM4vjzGYIc2lm
DgXMo5H5DGU4JxgW7aP7iO6cGiopJT+6f7JJIxZ9U7/VLu5wk+tco4N22rjK
FS5ziYu0coHznOMsZzjNqdj//8Y/tM5cuw==
          "]]}, {
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0slL1HEcx+Gvl9KxbFEr66T9Bxa5BR2yCDUjDQrUhEzLbSaLHG1BFAW3
YykUZtBCRURgpaBBZBFUR1vUTIUOefYf6Bk6PLw+7x/D7zAz2ediFdGkEMIL
TqaEEE8OYZAxXjLLHH9YJ8ln0sgih2GGIiF85TNfeM7l1BDKtZp+rtoD2scz
2uwyreIJN+yn2kuuez/7OG5/SrzHXUMVtZxlyvMeYu4S/cgjrtuPdZJuovYx
/cADrtkP9Q1dtNpHdZZxOuz7+pqbtNhH9D1jxO17+irxLprtYn3HHdrtuzpB
J032YX3LKXcOe8km7lmFVrLsXmGVM/zgO4sscIjTfGOOeX7ymyV+McoM05zw
zhEtT3yPrLmvsMd9W8u0lL+J34tbNNoHdbe26S69pFlapDs1ppka1R1aqBna
qtu1RdO1QLdps27RJt2q+ZqmjbpJL+pmzdNUbdAUrdeIHtBkPa8btE436oXI
///sP0SgV7A=
          "]], 
         LineBox[CompressedData["
1:eJwl09tPz2EcwPEnhy3MvZlDbRXJIRcSJcqhfsUoitpQP4dcxSaNZWazMYYc
brJ1w40Lo7jTBWPWdCGH/gM5bJJDDjmm1zMXr70/z/N99tt33+/3l57cX9WU
EkJ4xPTJIbSkhpDUiVNCmMBbcwPjzZe1XBO8MdczznxJy7SU1+adpJgv6jpd
yyvzDoL5gq7Ral2tA/qPUUqst2ixvtS//GGV9WZdwj5zm3ZzlyJm2pvFDJqt
K/WKbtJ2rWEFs60P6TsGeR9/mzT7LTrEBz7GeyDD/mH9xGdq4z1yj/t0UO3M
Vmp4YL1Ns5hDJtnMpZY6cmh1bp4e1fl6VY/oNT3GMF/4SikLXDuu3/hOHQl6
qOCA69e1l8fx3VgvIpeFnLC3WG9onp6Mz1JP6U0OmjfqUj2jI/xge3yGPKGP
zvg9OHNLk/pUd+kylpNPIQXspiu+Hz0bn7+e09s0myt1pZ7Xn/ziN1U84zl3
2ONMI3t5Yd1P26QQmkhQTgXr2UAZJRSSRy7ZpDONqQSGfesD9POQTjo4nfr/
vzAG2vVlcg==
          "]]}, {
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0t9PzWEAx/GnbtHmUihJZS5w49q/EMNaS+UI6dQ5mYoZKqn8KFMSZdjK
OLrugq221Fibi+bnnZXNXdma6Uro9ayL197n8+x8z6/vKUikD6eyQggZSjeF
cH1DCIO8ZII5vvOL7I0hbCaPPRzgIL0kXDtGhvfxdXJCqNYLPKfHfqHPmKXD
rtIWRrhtj+pT3nHNrtRmHnPLfqKPeEu7fVybGOKmPawPmaHNrtDzDHLDfqD3
mabVLtdz3KPbHtB+3nDVLtNG7tJl9+kdprhiH9N0/G502r36lS9MxOc6m9S5
+Pm5bB/VzzR4vI/97KXTWb2+1mVWWGCeb/H34ge/WeQnS/F34hWXXHtEP3GI
i/a4fuQDSTuldZrNbko4S4PzWs2imCLOUO/8tAZ2Ucgpks5r9L/u1AJOUmcn
9J/u0HxOxPewq/Wv5un2eO+ptSt1Vbfp1nhP43vbFfpHc3VLzvp/cw0x1l/v

          "]], 
         LineBox[CompressedData["
1:eJwl00lIlGEYwPFX2qxR02y7dOho1iFTs832zDZztEYThBZtxals36NoIcI6
dPNgh6AoWwwLEuoSRlHSrZVoofVQaNB28vfR4cf/ed75voGZ+Wb0qmS8ISWE
0ElpeghHYiEk00L4aX7PAd6xn5u0UZMRwgr+mfcx0nxDq7WKv+a9jDBf14Qu
5495D8PN13SZVvLbvJth5qtaofUa1186VLNZQp39Ca2U2ctZytPoPnLNY8nh
oH2MxqP313bt4jan7bf0G4cYZz+sH/jBWft3/Rh9FvMnfcNRPnOHbo4x3uvH
9Qsd9HCCPOcn9St3abLf01P0MfelHwn7BG3S/jqAVKrt+VrAQAaxNfr+ecZz
7tPgfDNJXti36ESKKGQyk6J7mco0ptDs2mJ9oDO0RafreZ2pD/WMPtILxMxp
pLPSPksvaYYOJpPV9tk6hyyGsMvZGl7yisc0Ot/ONl7bd+g8SphLKfPZyUIW
sYDLrl2sV6LfyHNaz1rWsZ4NbGQTddSSoIwSisknh1FkkkK35/4tXXRwkXOx
//+JXhiOZyo=
          "]]}, {
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dfjlEcwPGTEYW77FnKnpU9ohQqIyOjKFRIVsPsmfcgkpUivQdegSe8
B3snKzu+18eD7+f3v845D+77PtedXl1fUhcXQnhAcyyEi3Rxn0c8oZfEpBBS
yWINWyijkhraOcq65BDWUk4Fe8lkH0tIoo4vzubpXM4yj0UsZghDSWQmx/no
/HcGmxtIIJ4pHKPH3jcGmOsZSGAyR3hv72v0uc1b2cxfz+u1mDhq6ba2Uidy
mkks5I/1Q/pGl+tYTjGOBfyyXqUvdamOpJFRZDGC/Tyzv1GL2MBTz5v0uR7Q
0fw0j9FKXpiX6Sut1vH8Nk/Qg7w2r9C3elhT6IvuSmt4Z87WD9H9aBr9KGAb
vda36yrSKWEnO+jPNM4zldVM5wwzGMRsmphFDrnM4QSfondFP+tJnc8wCtnF
D+u7NZ8MStlDGTGGc45kLjhbG33H6HeilGJyySSFhOiOvauPecg97tLJHW7T
QTu3aOMmN7jONa7SyhVauMyl2P//xj/IhGBD
          "]]}, {
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09lTzXEcx+FvlH05Jbu0oAhZs2+FKHeZYdz6A7i2L9mX/4Fx7Q7JFgon
+75V9jWibFmSnt+4eOb1eZ9zZs7Mr07mytWlqxJCCHHWxkJYw34OcpQa6mkm
KTmE/uSQTwFLWMpyDrOCQ3wkMyWEDMaQzGhSGEsfUmnwuQ+8J2ZP5az7Mm+Z
Y7/TV3R3T+GMO84LZtsv9Rld3JM46b7EE2bZT7Weju6JnHBfpJaZdp0+oo0J
doVe4AEz7Id6j1+Mt49rNXeYbt/VW3xjnF2uVdxgmn1Tr/GZPPuYnqeRufYn
vcIw91VtZp67Sfvql+hZ61e9zg+K7O/aT1u0UH/qbf6wyP4d/b20VefrX71P
cC/mn3uAJrCADjz2WpIWk8hAOrGQzgxmEKd8brJ25bm7m+Zz2j1EK3WEZjOc
13ZPLaEHObzxWpaOpMY9StPoRS69SWco57y/jFJKoucTfT/Z0TMgkSb/o3XE
OcIB9rGXPexmFzvZwXa2UcZWtrCZTWxkA+tZF/v/22gHqGhx+g==
          "]]}, {
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hecz3UcwPGvTVk5kp1VKIdy1gnnBi5HzogknA4tkhAyChmFshpIpIwy
khkyyhkNo0IRlSJRRihFen4e/nje6/P+fD+P3/3u8f1+r3xG3/Q+2aIoyvQj
LSaK0otEUU+GMIl5rCKLA5zgEjmdLUwpKhNLP1KLRtELjGExHYtFUXPtxCi6
m0fr8yzifnNKOMdIupmf0+EsoL05KZzjWbqah+lg3qGdOVE7MIiHzM/oQObR
1tw0fA5P08U8QPszl3Rzk3COfjxofkr78hZtzI3COZ6gs7mPrmE1s+hhb7Yu
5zHuM9+jq3idDPMb+jmfUcpckobh8+lNcXMJbqGXOUln6Ba2soylTKe1aw20
mBYlhpsoQmv79bnZuqfuZFf4TsSzgg95jWRnXtUUXanNtAxlKc2tlAv3j5mu
V9BHtLw+qhX1TX1Y5+jjfMGX7KYxlVx7UvewN9wvEljLOubTwpm3NVU/0nv1
Nm6nMlWpQkvedf0OHaLVdKguDPffOlnv1BG6j6/4OvxdVLcfyzfW+3kg/F7W
h98Xnk/X3tONbCDNXJNa1GCsvbv0fa2t4/RuHa8TwueF76dNvQOJJJFMCs1I
IJ44qlOJkhQiBxe9U8fZzzZWMpeJDCaTCuF50VTnN1tvCu8LH4f3gld4OXwH
3yWB7eF94DCTaWKvMVnhPeAQk2gUnle2heef75hIQ3vxfBqee77lJRrYaxWe
M/1ED3KAOHOaLuFF6pjrUZcPzPUoZF2YAmSaC4br2kqnaaLuCM8U+a2naKZO
De8ZN1hn6I1aR/Npd82teclDnDmn5iIbOchObfvXiKyv6H9cDfeRf/iXv7jM
3+F+c5FLnOcCf1KLs5zjd87wBzU5xWl+5TdOUoNfOM5P/MwxYvmBH/meoxzh
BFkx1/8f/w93a8BY
          "]]}, {
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl8z3UcwPHvJIXcjLIVOXJVSo5imSFGwpjYZphEB5ooIk3MWVHudOdW
hFJk3SkdGzroIHImpa3kKnl+Hv3x3Ov7/nx/j9/vt+/38/3VzBqeMiwmiqL+
/gyKjaKhVaJoAnNZQR4F7KOIYl5Tnnga0IxEkskls2oUzeRx1nFHtShK17u4
3fFNtOQncyt9Qgdphn7Cau4zr9G3mMFAc5p+xCqGm1/RN5nGAHNv/YAVDDOv
1A1Mpb+5l75PT8ep3ECuuYlO0qX0c9xTB/No+M7miZrDYvqaU/ROxjPE/Ig+
zMtkmLuF/5mx4X3M43QMebzIvdZe0jcYTbr5Nt3Ms9xtfk6/5itGUd/areE6
8DTdzIu0u47Uq7QOdelsrqddNE2f0bfZRIq5IY1owAPWrtbn9R59QR/kG75l
J125xrmHdBffhfsVPpt36EGm80v0Pd4Na+bGXMe1TLB2vS7TobpcJ/M9P/Aj
qTR1boruZk+4vmHP8CF9yHL+Vd3Cx/QyN6cFzZhu7UZ9TbN1rT7GXvbxc7iH
JDh3M/sdHwjXPNx7Pg17Jdxf59brZ2ylt7kPicwyt9YntY0+FfaYfZ9OBn3D
M0A/0kilKx1pTVPqE0c5Yij0XO0ln80sZw45JIQ9o1le96XjL8LzwefhOWAh
C8J9CvuIHWH/c5T5dAl7h+3h2vML8+hsrRPbwvtzhLkkW+tIQdgTHKaD+Ray
HLfXfD3EQZLMA/R15tDWPFvb6UbtRC3HtanJ/eYrNVlr6Ai9XLP1ivDZGqfx
XEp1LqOD9apajcrEUiV8L+sVtRLlqEB52lsvo2UpxSWUpp31i7UkF3IRJWhr
/QItTkQxYkiyfo7/OMu//BPuPac5w9+c4iSJ/Mlf/EERhWHP8DvH+ZXfOMYJ
dsT+/9t7HuKIxkE=
          "]]}, {
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1HdYllUYwOHX0rCybAeSFS21UitDG1oG2s5BWVgOQCxREYRkqZgUWawm
tDNXBdreQy3L1XZWroZQaUtza8P7XP1x8zvPA9f3Ms5HQkZOyphmURSl+TC4
TRTlxUZRGXU0MI/lNLGLlnFRFEd7upJMXwaSwUimMs5rvcPbrOPu+CjK13t5
kyrzW/o6a7jLPFbv4VUqza/pS3zDneZcncILVJhf1NmsosycE55DfXiOuUGf
ZyWTzdnhOTwbnmN+TmeynEnmUeE5TA/PMc/QqXxFqXmkNtHI00y0y9I/+Yz7
zJ/rRp5kgnmE/sYn1Jg/1cO0FY87d9fh4fvjMS40X8xF1JkXU+KcqXfwI7UU
2w3TX1lItXmRfs8PfMwuNjPG5/7Wf9hLV/PDuo8lXGB+RLvpo7qU8c63ag99
Qg/X1pQ538bv/MGX5Nh/obm6RcfqpfTkEp6yu0yXabI+o0k6TVeEn8t5tPbS
WXqEHkl5+N7Zyl98He6n/WrN1216u17OFfRmjt2V+q1erS/rVfqKrqXcOU+v
0Tf0KD2aivBabGcHGxhnv14LdKcW6nX04Vreteur74U7484XUEgRxZSE9wG5
ZJFOKn1IIpF2xBLDTu+vRpYxl3pq6Rfuh5b6mn+d93A/u8Od4yMWkB1+jxxK
jbmDfqijwt3lEKrN7fUDzQr3k4OpMrfT+eHvG/72tKTSfIbO0+E6STM1htM5
jTRK7b9jLunhbpLBJnMG5zsnch4Pmbtoup6rD2pnfUDPCa+nHbUTZ3I2ZzHU
/heGUGR+X3/mJ4aaJ4bP6UGcyikMZoL9IG1BAidzC+Ptb9bmnMSJDKTEPlUP
pC0ncBPF9jfqAcTThgEU2d+gzYgjlusptE/RiOM5jv4U2PfT//RYPSb+//+9
+wHRrdIA
          "]]}, {
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0+VSEGEUgOHFAusKUGe8Ab0GvQT1hx2AraCC3WIn3Q0W2AHYnXTY3Z1g
YT6MP55553yzZ2ZnZ7++ETGDokOCIGgjMTwIEiihkmoe0kpYryDoRX8GMoQo
4ogniXzKqOAs1dRQy9veQfCONyTxmkRK6NwnCCbpTLbQ1Zygm6mkiJ7OinUn
m+hknqAVtPGTp6zjCWvJp4PnonQGqwkzr9GVHCKHHs5ydQfxBOYIPcA3vnOP
5dxlGdn8ZQzRLCHU3lLdzz7S6eYsQy9ygZvcYBTTWUAz17nGfFL5zQi2s415
/GI4u2ihlUZm00Ac7/nASU4xlKmcIJlSYikjhY985hNzOM0ZzjKMJuZyjvNM
YyS7Gc0f0tjLHr7wldss5BaLuEMm3X2PLF3MJS5zhbHcZwVXqSKGcRwkkhC7
eVrOYX7wkEc8YBWPKeA563nGBgrpaH+8vmAj1dRQy0Re8oo66pnFZI4whS72
t+oxjnK8/Z3ad/zfddTTQCNNNFPFGcopJY9EVhBLJIMZQD/CCaXFnXtAFRUU
U0QhBeSTRy45ZJNFJhmkk0YqKSSTFP7/jv8DSma3nQ==
          "]]}, {
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0+VSlFEAx+GDgUl3bWCgIgpImNgBBmGiLjp+VUHAugGd8RLkHvQe9BYc
sBsVxA4MEH12/PDM73/O7O775d34qZ6O7pQQwh0yIiGkU04DLXTRx1UGuMlt
hhhlMvmdaAgxathMG12c4Szd9HCOawzwgjf8oSUWwpTu1t9apvM4wXyWsoRt
bOW5z7xmPPk85x+6Rb/pHE3wzM7TXL7ax/WplmgrDTRSzxf3qXqMx3aOZvPZ
PqqPtFD3UU0NK/nofqZ2ct/O0kw+2Ef0nhboXipZzjLeut+j04gQI4N0AgcY
8pmDeogRO0VHNV+nE+UkY+6q9J3O0MPctVfoe41rOQt44Fyrn3ShLmLYfsgq
u47FVPDK3ROK7GJm08Ys2imlgzWsZTXrWcd+mtjIBr77nU06lx38dN6uv3Sn
ptHMhPMundS/yXfIfqm99NHPeS5wkUtc5jQJWpPPoZooaUx4P0cY5BY3uM4V
eknQTD1xYkSJUEYpJRRTRCEF5JNHLjlkk0Vm5P//6B9Xd24S
          "]]}, {
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl813McwPHvJEJtlBwV7UiiJLZWytG1abmHrXRgYUNtFLbkbGMjd7X7
bitsbqHERkmUc6NUhNTm7CCVzfHcwx/P3+vzfn9/j8f3+3j8vo9fREpGYnpI
EASxPhIig+CG8CB4RP/hb75lPu0sY2JUECSz1flh2niVJLsr+cb5If7iFa6w
u18v16/1APtJNN+nl+kW3cefXGy+Vz/gZS4xv6SX6jq9mYOdOxNCJw7iJvtA
H9N/eZTXud7uNZ3HjUwzv6GPs4iFnGl3Bt85L2A5V5tv0yH6lA7WJ/V0na2n
6RN6qg5iILPMA/QUTuJk+nOrfZT2I5xIIrjF/kTtS29OoA8Z9sdrL47hOI4l
3f5o7clR9KA7M+1DNYwj6EZXZtgfpodzCF04lCM76tpzEZ7B751DIfU00kwr
7YT5TiQxxJNMGlnkUUAhRRRTQikXusdFJPCie43XF3Qt053v0tyOZ+A68/Pa
TBNrOn4ru/f1V37hWeLs5uiDPM048zP6OZ+xmjS793Q7PzDGPJpM5weo4Txz
rY7SKv2Uho5339yo2/iecobb3aE5lDLMXKaf8DFTzSs1Rgs0WvN1kqZwFRvM
m9hMNh+ygmtcu12v1Tf1I9Yz2TyFjc6FDHUu0i94i68oJta+RL/kbUaYK/Qs
rdSR+o6eo9V6ti7Wc/VdTdVVuoQdtNBKFmNdW6o/8hM/cyfx9nX6GzvZxVzO
t6/X3ezhd+5mgv0F/OG8lzzuocw7Uk4FlVRRzWJqqCWfXDJJJYk4ookglDbv
aAtNNFBHAdlkhP//n/YfCqjGzw==
          "]]}, {
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0sk2FXAAwOF/S71DneOoZYomGlSKJgqNqBSauIN5djUPIu7V3Crn8ACs
WNaaRTQgSg9Qq1r3ndPie4LfL706XhZbE0KYoj4jhDoSpBhnmll+8pe1G0JY
TzaFVBCljySjTPKBOeb5xGe+8JVfVG0M4TI5nKeIt2zjEilGuMVh+iikjDds
ZSfnKOA12VxkmCQd7KedfZTwiix2cJY8XrKFCzxhgAh7qWcPJ3nBZrZzht08
J5NKHvKIOnZxnVyucZMbbOIZJ6ignMfUcpUr1FBNPzHiRGmkgUGaaaGJNlp5
yhBdHKCTfLoppZeD9HCIBKe4wxFuc5S7nOY+x7jHcR5QzG/9FlhkiW8ss8J3
frDKR94zwTuGSRChnAKyWEcaf/y1ygxTjJGklx666aKTDtppo5UWmmmikQbi
xIgSyfj/9z+rA3O7
          "]]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVTlAEUgOHPThS7W8Tuwu7ubrFz9EZ/g97Zid2B3YXdAXYrYoHdXc+O
Fw/vOWdnYGa/ZUsMndhtQqogCPL5ERsRBCv5VCYI3kQGwXO285RtPOM1T9hK
Elt4zCsesZmHbCKRlzwglvts5CQn6Fc2CPry3ryBXxynj1tv3pnX85Nj9HLr
yVvzD77Tzb5S4zlKd/sR7aFXdRp/Cey/dQd/SG1PRX+u2RcwyrxHq+gH3c0p
Rtrna2XdpRV1p1bSeVpeKxBJOcoy1z1Cy1CS0pRijntxLUERilGU2e6FtDD5
KUgBZrnn1XzkIg+5memeQ3OSjXCyM8M9i2YlI5nJxHT39JqBNKQjLWE0D72f
nvkmz/4o10nhNzncI4iiI0OYzFRi2MxhEkjkEUk85glPCQu9R6xgHXF09ncP
axc9pHe4yHj7Jb3CQcbal+tthpkb0ZiGHHA7xxjzMr1MAvsZ7bZUrzPYHEU9
6rDPra6e0XF6Vu9xlxSSiWEVA7w+kBfm0wwy79XqWpVqLLTX0Jp8NH9iNYuo
5Vabz+YvrGEx9d0a8NX8jbUs4QY3uUC018/rEL2lQ7UpzWhCi9CzYzitaE1L
2tKGEbSnA+3oREe6Eu33ZQv9T3s+z0kmhRe85BWvQ98DPCSeuNBnhIVMYRLR
dKAupQnnl89NMtc4EvH/e+Uf9wHAAg==
          "]]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {{-1.5, 1.5}, {0.01, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"-", "2.`"}], 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "1.8`"}], 
       RowBox[{"-", "1.5`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.2`"}], 
       RowBox[{"-", "1.2`"}], 
       RowBox[{"-", "1.`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.8`"}], 
       RowBox[{"-", "0.7`"}], 
       RowBox[{"-", "0.5`"}], 
       RowBox[{"-", "0.2`"}], 
       RowBox[{"-", "0.15`"}], 
       RowBox[{"-", "0.1`"}], 
       RowBox[{"-", "0.06`"}]}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1]]], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1]]], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1]]], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.915, 0.3325, 0.2125]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.892463388430566*^9, 3.8924759634118156`*^9, 3.892518402499341*^9, 
   3.8925185296335163`*^9, 3.8925190768915873`*^9, 3.892519142835832*^9, 
   3.892519177773518*^9, {3.892520110677157*^9, 3.892520116693268*^9}, 
   3.8925201521452417`*^9, 3.89253074280214*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"f50a44bb-d2a2-4366-8f56-f90823be8034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs30", ",", " ", "rs30"}], "}"}], "=", 
   RowBox[{"RegionsM30", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "==", "1"}], "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "==", 
        RowBox[{"-", "1"}]}], "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Element]", 
        RowBox[{"{", 
         RowBox[{"16", ",", "32", ",", "35"}], "}"}]}]}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.892274571571726*^9, 3.892274610800408*^9}, {
  3.89227487619175*^9, 3.892274893894432*^9}, {3.892398313169614*^9, 
  3.892398317973271*^9}, {3.892520164986112*^9, 3.892520173255065*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"78b59404-8355-476b-b78e-25f722c8fc40"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"regs30\\\", \\\",\\\", \\\
\"rs30\\\"}], \\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"RegionsM30\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"Dataset\\\", RowBox[{\\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1142\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \
\\\"\\\\\\\"sigma\\\\\\\"\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"1\\\"}], \\\
\"&&\\\", RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \
\\\"\\\\\\\"mean\\\\\\\"\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\"&&\\\", RowBox[{RowBox[{\\\"#1\\\", \
\\\"[\\\", \\\"\\\\\\\"error\\\\\\\"\\\", \\\"]\\\"}], \\\"\[Element]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"16\\\", \\\",\\\", \\\"32\\\", \\\",\\\", \
\\\"35\\\"}], \\\"}\\\"}]}]}], \\\"&\\\"}]}], \\\"]\\\"}]\\) are not the same \
shape.\"", 2, 114, 1, 21716539368208606054, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8925307428731833`*^9},
 CellLabel->
  "During evaluation of \
In[114]:=",ExpressionUUID->"c0358ea9-dbb8-40a8-8248-97319649b262"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs30", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "&"}], ")"}], "/@", 
     "rs30"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.892274619831417*^9, 3.892274621747987*^9}, {
  3.892398320621809*^9, 3.892398323380931*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"ea575283-d01f-4281-8ab2-8f3a74b6df3d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzsvXdYVcmWPmzEiBlFjBgQI6iACVnoUVRExYgBMWHEiIiiCEYMYEbEhGJE
REBADKAbQUkCknM8HHI+JDPfmbbfOk9vv/55e+b2zJ259j/9vNamTtWqVWut
WvVWleLqbfPWNmnUqNFm5UaN/uP/m05fT2hoqOdUatSiSvYeoXw747ECi1qG
V9sOvWojFjOceUL8NcykkmHvDjtfK4SXMOwq2/iYs38+w86tz+gpe+QwrNp+
/AAjQQrDEzu5GSXpRzGs1ja0SKTuw3Cn75iAh33/nmHl7/UxfP377zF873t7
GPb43l6G07/3h+GV3/vLsOi7PBj+XV58zOkOe6zz5pYvkx8w5AcM+QFDfsCQ
HzDkBwz5AUN+wJAfMOQHDPkBQ37AkB8w5AcM+QFDfsCQHzDkBwz58TDXIiPy
hNyyt0x+wJAfMOQHDPkBQ37AkB8w5AcM+QFDfsCQHzDkBwz5AUN+wJAfMOQH
DPkBQ37AkB8w5MfDXFF/QWWo8XsmP2DIDxjyA4b8gCE/YMgPGPIDhvyAIT9g
yA8Y8gOG/IAhP2DIDxjyA4b8gCE/YMgPGPLjYW6duuFQrafxTH7AkB8w5AcM
+QFDfsCQHzDkBwz5AUN+wJAfMOQHDPkBQ37AkB8w5AcM+QFDfsCQHzDkx8Nc
UrJDZjf/FCY/YMgPGPIDhvyAIT9gyA8Y8gOG/IAhH2DIBxjyAYZ8gCEfYMgH
GPIBhnyAIR8e5qZbxpyrCshk8gGGfIAhH2DIBxjyAYZ8gNE/YPQPGP0DRv+A
0T9g9A8Y/eNhLr29za08YQ7rHzD6B4z+AaN/wOgfMNoLjPYCo73AaC8w2svD
nP2q/pbz1opYe4HRXmC0FxjtBUZ9et4BC7mCfFYfMOoDxvfNmhupDNtUxL4H
HvbbfH/D9T72sdnDcUmk8B0T8Ljf9DuTOztE7dkRrXQa+R0TsNJv34u4Ruuf
qns4ZzP9AO73vZyAh/w2P4oYHvEdc8+eLWjfc0Du79/XEPDN3+qr4ra3Fhce
v5dHA76Xc8qGZwJrlQtZ/7IfDbu2+mExm69oH9oP/cH8RDn0Fe3B+OL3Mb7A
GB+0B+2DvH1+G680bnNck4F+1hlk/Ft9Qm6rX+/NupNziMK1B1rIVnGZRkv6
DJiWT1m/1ZfNne+k39C5cTa5ff97wt9v+K1/BYS/b/Tbf4/9H+W+mhujFkuD
fpNHPBs/YNgDt9/6l8j5HFw7c/bXVLr9W3tjGO7z/Xs23sD4+zvf/57wvdpv
8ixn8gKGvtedn/5I3b6CdI3Lkg8cFpLTd/mw74Hx/cTv8mDfN+hm7EzSFzN8
/7ffr2N/D4y/14n0WiFWqGPft5w9x13fqJ7hsd/bx/QLGPPp0/f2ck18T3qV
Nc8jl+/1M/0Cxnxp9b1+znTJ27UhrYuZP4D81H7TrzDuk0rojpy9yWz+4vcr
zySa+tsUc0qy/lOfvsll8xG/d1Sva0f7pBrOwbPuw9mwQjY/Md7A8Ic6v/3+
K25y5hBHsw8JbP7ie2B83//794Tv4b/Q/v7f209oP+Yv5gvsPXDad/1l+orv
/2jfhQT9hn3FeJZ+lwfTb9gDvn3AeG/+Ph84jC/sAd8+YD4GvbMIVLev5l60
ULZberyA2XvUX/ib/PPY/IR9gzyAMR/QX8wH9BffA//Rfwul30/63MNilgPx
4683ExaNaCSXyOKvTu3jNht3TyTHs6s2+4+Qxhdar1TsbLamMXsG/fPp57bJ
okMqG8897j2cZQNTSDN/nI1NVCbx/XX7roZTtzbNpmv+9W8UIoqI7w/PNyt0
OO0qlK5fw8q6rZ0oZP5QXfXiVrtiIfN3JybdrhnwWEifsk7HKZyQ2kPov+d2
g0VHtkn93c4ZiuFaSQVM/7k+L66rWxYxe97tcM0kH/kSWjkp6arJqFSuz+WU
OA3dTNL71qifhUjIffqQNmTqDMm6cau60DpTsj67M21M5K58iv0W1MJjfyAt
NHzt+uVeEnm+2+tosyeeK1nxyn9zr3SKOuo5U3l4LJc2JfmtcEIaOYypr3Cv
z+KGOTb3ezQ2m6JTvTl1pQTqlN18xeCQNObPjvVu0nNzskRfqi7NUu4u9W+t
n40fbjRERMKEFq823M8mx68K5226FLL5HqyxrK2FUgV1etL0aOMXQuqn1mnp
qQdV5Job8+hk71xynPIy29q7iuZ5aYne9cmlvcGR44N61NC3hzSwo1YuyQi3
aQTZ15GM1cmwg1+E1ESgKXCpk9i7NSOW7ZHIX7kg/oKJXzn3xS834PKOPLJ0
UItW2FbN7Ems8XAj0/o6TtegiVLd9mIaNb3opsl8qb/sW2z1QuEFx+zXsP5u
u5OUA4gfD7QbZxcTU5fE/GvvaS4fDSozKNA3NFIhKv4Hf/si52krt/gs5m/d
xxQ73O2aQVHNxMpGlxKJH09YZgm7a13LpPGq3mkNp0RsviO+ODFNfuiKIIl9
uBi4PamTNJ6A/26mOEf0clIOiy8Sn6yb5xMqjde6tTM2GDIhl9bJBSyRTa76
wb9rKJ7ZfHRgLvU8fjRC4eiP/v7EyJdnTyvnk/nU6N3Oiyp+8P9f7z5ord+4
gN7MzTztPD2QEySOWTfYJ4nCtyyS8dDL5a6Eb/TquC2HfNqZb0h6W8j1lbsw
x2x1LpWXPh6emV/N6V23ubFrdyHZddi1xf98JLfx2QKrWSUpZNx6wC39yVH0
xbX9Mm8uhXSG3mhuvzCNLp9Z3vnq8wzKL7qTH3Y9g6a/3XGz6YZMiope6GaS
lk2XZ0XHT7mQRaUW8T0tYvM4p35tWowyENK3RlfVBE4FZK/huTDBNIeC17rt
8i8ppKXv759f8TSH2h29N0F5cgm90J6au0lJSEu3vlooflnCKTZrP8/QRERm
UfNnuqwSc+eP31h/b3cB3ev0cZ3plypuxmLhsaNqBfQsbM4Jxa21nJrwS+b4
XUXMHobtzLWd45rN4jtu9y1zw4kS+X/O72fU9ArzZ4hvDsSmFGxSkaxH76Rt
89dw4/ofj3edZJFANtUrO1m8fEjdV66qCj2QwOKd8VsSWqQ3Tac9snqtPG7E
cNbV3LOvzdJYPOO+aUdcze406ikaKpB1jqIzgx16N42W2MeIOVqCPrGkojLD
8uZbaXwzZ0lmx9tOkvmmVNzLKLGUbFqGru23QWLHe+yPaBhSRjU+CW6JZkJa
bGD2bUa/SvK1tjjQPU0a7xR122ZIkvm8fXC2ucG1StLcYbQzp1pIOvkemkGt
q6mx+bX5Kpq5LJ7Zqx3Z+litkJ6VOnf/6FxPVqs6RjwJlsYvwX3qH+jOyqOI
2xVporal3ICPDSetbER0yPDWVFnNMu7ZhS4G78pFLF4hG/OGUzOLafax7OOK
j2q5T8UjPz2+XkTlKe3nnRpVx1k19fFfUF1ESnvsJimXhHAP3C1lDaOT6ZOH
tZf6zQgWPyKeud4pYXxk5xQWf6xep7xyvZwkPhhafMx5bDCLd9a13N7HYrGk
Hd4uUWle2VTpkP9OISuPzLf3PPmkfQ59eKfdyONVPvP3yUH+V00mFXMrdza3
HVCQS2eHX04XuUnXO4iXzn/1Fs5syGXxQKtK7QKb07m0NNhZVZBZxOIpx/Fd
62fMrqHE9pv2Gkjk23r0+rFBu2tJsbzW+rJkfge2eLrNwFUSXy1pv+5AXSGV
Hx/Socty6XoI8dekZ1qv4jsXsXhikW/1ogJXSTw44bqjzFppfBbaeGx52Pzn
XMZqxcTmErv2yKBgiXj1c8oeZtVswMVESrwvmC27JJRi+rx61PFJMqV+aNbB
onMGl7e2Lv+cURa5t9qlLLDOpCKlwBm5DzIpPGT6pzArIQ2JcrE7M17ij8aN
v26ysYjaDuKMGt7nUIe6/RdsZhZwJ+cU7+mfIaSo8E+uJTequL6qk+py6vJp
cd/4KzIDqjl3i5CJ4fUS/xqoIxLNT+IefZ1z8opaBuldsWjmsVTErT5d+/FG
dA45jl6lltmrkgvsqutbUZ1HhRvTztmMTabP5ckRbYPSKbw839QgXUwj7g1d
NnB87q/87U/yt7/ytX8tX/srP/v/zs/+yr/+Mf/675ZfRX//r+Zb0T9g9A8Y
/fvfkp9F+4HRfmC0HxjtB0b7gdF+Xv6Xj//hfDDaB4z2AaN9wGgfMNoHjPbx
8s18/Kf5Z7QHmK3nfsdoDzDaA4z2AKM9wGgPv37/RZ9bXi4tYfUDo35g1A+M
+oFRPzDqN3NxFDbfVs7qB0b9wKgfGPUDo35g1N/1q4LR8z2VrH5g1A+M+oFR
PzDqB0b94rtF4RXPq1j9wKgfGPUDo35g1M+vL2r2szFKn8WsPmDUB4z6gFEf
MOpzrbe5Y6hZw+oDRn3AqA8Y9QGjPpubCzte2F/L6gNGfcCoDxj18f9+9YwB
VmGv6tjfA+PvgfH3wPj7SWJx8X/8O/4eGH8PjL8HxvrXYdyFxAmLAtj6Ozp8
d4DiqAds/QmMvwfGehJ/j/UQMOY3MPIhwFi/AmP9Boz8DjDyR8BY3wNj/QmM
fMGeAy0nVqwIZ/ES/3vkwxF//tn+CT+f/2f7I/x8FzB//+ln+2P8/S/kw/iY
n28Chnz/bH8M9p+/n4H8H3//DPkaPnZsCNv1fngZy6+t/KTf2HapmGHN2322
vr5azfInNTX+00b0rmM49rqtj/EKqb5Cv+APMF5oLzD8LTD8LTDiCWDIFxjj
AYzxBYY+8PWJred4+y38/TX+fhl/vxHlwNAHfvzDH29+vPFn+434nu/f+eMH
/wQMf4Lxgz3FeMH+YD9otq2qp0tyINtvOml36lUL8zi2n4j8z1/d/8T+DPIp
V77XR37vSz5ev+9HU39r7x0Ovw8cM75SdKU6muWnsJ/F3+9EfWjfn+23In/U
eOZv+49svwj7N7Ob2Md+nVnC9mMv3TlyLdlVTKbn2newkC2joTcqhfu21rHx
gD4BI38B+f/RHotYOcYD5cCMb/f7+DD9/R2jHPlHlAOjHPrIt5fAGG/V2Ltd
DYUR7Hu2//j798DoH+wZ9BkY+8cYf/QX9gj6Coz9NegD+q8/d/0cTc8KFp8A
f7cneZQ1ryDQRLmSfX9k7iH7Bd2r2PfAkJe8XnlqfbrU3wNjfFOOm18ovv6Y
jS8w9quBsR8MfZ32fT+aYeQTgaHvwLC/wNA/YMwXYOxXA5t/bx/DyJcCY78U
GPudwJifwJgfwJjPwJhfwNCXgBEmaw5lhLDx5s8v7K9jfDG/ID/ML8y3IQ9X
k9qpUja+wi8N8s7tpeM96/7sjzJhlWz/OMf5Bbna1bByjA/GHxjfA2P8gcFf
AEb8BQx+AjDsC+Nb/N5fvv2GvYO+8/sL+wx9g/3FfMJ8hnwhf8xP+Ce0B/bw
r+6n/4wvAX37R/kSmA/gS2B+Yj2A+TZYv9e6ia2l/gfxBMYHGOO3c9b8Vu1L
pfEG4m3I76XuCbfsyFpm/xB/YDyBMd6tp3NzvDzqWXzMj5cZn/n3eAD2EvED
MPwT7Od/lf+B/jb/WBK7c2Y1a++VaoPu3drXM31CezG/oB/Qf5RjfqAc8kU5
fg/lkBfK8fsox3oE5ZgffP1EPAX9hL1AOfKvKId/h75gfQp9wfzH+GP9hvGH
PTj8XZ5svvL5a8CIzzB/Yb/grxB/Af8xHyJk9gzt5cfLiLfQftgztB/xNDDi
MfQH4w99RnwNDHsB/wT9wPruj+NfyzDkg/HC99B38KtQvn3waW3lfcmsHPp7
vqFyT+fEFyx+B4b9A8Z8AEb8nnstPO9i8gsWvw/tNPLyDeELFr8fVnu10qCn
H4vfO+eacrN7+rP5d2zt0ZRjdRyLT5b0yWiI8npFPpbW3S2ehDD9mzBb2U3f
IZTp24aREfrik69YfJ/bQY9TaBLJ7OmRuc3POXeI+YHv6+h6RneAxL7KPzXo
Y9QincX7W3d43DNpJ43vR0zV1peVrBv5+c+hW/Qj+lUJaXxGtLbAp/IHvszL
KT3Gy6aLSOnK40rRzGzi589aNM0e3WOsdP3mcOSQ3dfCEjoyb4OXfts8Nl/M
h82YK3tbms9h9iBoTu+KyCrq++7ANZPYIjZ/HCZ5XjbZJM1/sPxbhmZ+RWgt
BVhqCGSvlrP8glfg9LM2PSXrF5tT3pcX+lJrs7sDLeKz6dAAw1PpE72pl/e4
srDc5xydrfV52iSeVtb1vqt/PoLSlts1XjY9nqI7ZE0S9IjmPLjPs/dJ/Fzi
BYWYhlOpnM/CqswXPTPJvLYqSJ0Tcmo5N2VDluXQsz4abVROVnJ2NkrKp8Py
Kcq0W/SV/9jsv/o2oGVmIa1M9rO3uZRPuo7jc595VpGdx4u+RlqS+G7LgONZ
S2upbkubI84bC8mkycXSjTUepNV3x17nlDKK0Vku2JXnRqF9+u8ycKyiHd1m
jQy45kr31GfWz1Ctoc8Wui5tUlxo9vJbfT5OqCGZWy9XHYlxoSjPpRpBN+vo
Y9xWH/Xd98nr4HwLzdQ6Mu8o1+LqsvsUavhpiexTyfoof0K/WU/9aEpp/Ff3
XqGc/IGXBQbv/GmKsWu5aMdrzvxTSVPVspe0S35aYsONS9zeCMET38jXtKP7
gZ3+Sldor/yrs7MCQmlXyy7e6noRbP66uFRVhY0JoRrLxt6nckIpfep4PeUs
Z67H3WkxwfIxbH60i1U8xinEUZvKumM2sY9Y/sP9TL93CrODuRXLei885JPI
5tcoGjJAKzyZ5P11bphoh7J8SPGsXakNkxK4mG+LWxo+TyPzr8Zags6xdOnb
FwMZlTQ6OVqni32rOBrn/CnDLU6aD/HKHf/6yckM8jVo66m/OpHlRxb32/L1
wscszj38mo762GzaXqKb2rAkgaw+T+kxcIk0X8Jpbop+X5pNXZYFbRB/yGbx
jPyMI+762gXMv/rQvgViM8nvzlfo87RnPhXmah+1WVbBVTZWLf4yJJ82bXtQ
ZtxUzNnpdMubnlBARot3DhZUlLH1tUj2nLt6aiZdHpwTniwjzZ+o7GhOWpaF
pCc2zGrYK82nGBXeWiHuL82nfFth6WLSKpeGCerd2wSVUV3y2fECLREFiHrP
7OJWQao3I/b578yjRQ8S9NaFV5JO2PJuFsWFpD/norz70WrSKhkfrCBXROYF
O49r3a+mZ42cfNVnFpPDkdLjpldrSKz5sLH9+TIKN1BoM1C1nnQLl65IKiuj
DmcqzD/trmf+44C6w1W/t9L8380B069/HP6czf/WQTvaTjntyeb3zLtDVfbV
PGL+Xq5rYZMHpx4y/x7tZuLf2eUBpS6+M0Fwq5rlb5psKz/nbOf5Q/4k893A
YW+UgqitqHCGssphtt+Lcn0lq5ZWKlEsnjKc7TDbTjGR5VfcLXYnfNZMI0vV
3o/U3d7/wEcfZXunId4/i5Z6dFsjHiHNr6C/GsvMjYdHSvMtFQG3q/zFOdTl
wZ0gBbtiFs8iHu7ZIcNhcpGU3yDqFbqp5GQuWdaHBSu8Sf6Bj67oN2tF0OUC
2jzUIkW0I4P4+Zjdx7w67pSU972u8Vp9Zg2Lh5Gfu9zvUVeHZUWkqnV9lnJX
ab4mKtg9UN08l8ULiDdo070Rh50qyKsge47stgIWL4xX7tHGfnwhixcQb7R7
utf/4TvJOH2Z5miiUcrihcQPymdtRoSRoXCEx+yoQJpSJN/NomMYJVrK3d5e
FUgaHZd9dV9dyB1687rA+0KuRI9WrDGVqeEMxTK3W08ootK3A3clOcTQIr/T
unN2S+LLjhvOOH+KoUIDxU6POvqR3LZ3BaKFF7lEJf15lcuiSW91y/linUjK
UN37eerHePKMqXyuHxpN1jsztY6XJZNM2bvdSV2j6brGol1ynkkkFKnPl7XL
4yb3HxA/dK+QHHRrVonjRFyjufut144UUnLxLjWBdxI91ZztMklHSEs7Tjtn
Y5dMYyfHDfepE1K0hrWdzaQSrmfw/tbKD0R0xLXJU/VOqWQq1yu5ZqSI7qQt
bqryrYbbVLZ+0VZREen57x1tdDObDCLaDnatLKIN9QNHG0Vnk9zEc25+msXU
rGB9V/v4HLrk/L5T09QSOtnumr3Ng3xa1fnJSvdXVfQmISmhIbOAFup+Ptba
W0yx0W0TGwIKKLK6YP/oq2Ia1bXxff2DJeSruPbEvTO15D7U+JLJ01JKfJVx
IvVwHWnVjeposaGUTFffmHFoah0lnz3wSj3+IsvHyEXM3iAef45KPWbmhux4
x9Yjjdo1az49wYXmrV56QnGDpN7rmk6pii4sfmt99mp4scl9qpv/cqqLbS31
9d42JkTWhdxq5DYZpNaTyosXBjfS7pGJepuDzj2vkFdGzpWun4JZfLheObE4
upsL2w+o3hyyvF34PXJ50+quvpMdfbCd8vrB7jfUWKzbx2KLPYuvoP/Nc7Sb
TZzmI80f3w/T7HX2MdNPm2aTAu6aeDB71a9a0+ubmxuLZ+0+lzYqP+FKFjKD
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
Bhbc3mX3b3Zr9J6+iD862qjG0zbvPQOvBWVSp2UbYhuii7gXKyoOfOotIjdr
8WDB/QzStzVumd6xgPQdKN1aq4ZTeutYemNVEVles9mRdDuX6jq3+XrmKeML
/bpf5df9Kr/4+b/uV/l1v8q/2P0q/+78ff79Kf9ufH7I4/8qn/9/O3//X42v
j/b+q/D1/9l8fPze38XH/2fz7/+r/Pr/Kn/+r/Lj/yr//Wd89p/x1fn8c/59
NXw+IZ9fzb+PCPmgP7t/iM8/5POt+fxq2Ks/3jckIj7+R/nVyB8CI7/Nx9jf
4fOvMb+AkQ9Hfhj5cOz3ACPfgv0A5H+Bsd+D/QDkW4AxPnw+J59Pxr8vic+X
4fPZ+fxmyJ9/Poovb769hvwgb/75Hb58UQ6M+Q95Yv5Bfvz5wZcfX98hPz6f
Gfw55G/4fGbw35B/QT4I/Gn+fU/gZ4KPB74Y+HbgG+H3wOcC/wj8MfDtkN9B
e2Bvwa9Efgf8WfCHwG9+/b0/NKdO0Xzq8FrGFwK/CPwg8OeAoV+QP/KNsMfA
GA/sb8A+AjO+2ecnKrc2VrH7SLAfxD9/weff8/ne4LMCQ56QL/i3kBfkB3mC
Hwf5oX3go2F8+esDtA/8WYw3xp8fD2J80T7+/ED7GJ+H116+f4V94fNtgTFf
YJ9QjvHnzweMN//8DTDWY42/8yEZn++v3mfFv48J9ggYfFjw+392Hxr//jP+
/XSQPzD4lJjvf5UfC3sE/4HxYnyT3+cv8rn88z388x7gg2O+Y34hPsF8Br8Q
8wvxA+Y3+Lawd/AnsIfA4HOCbwv/Af8CfQCGfcB5CP55K/BjYf9+dn8a//wL
+O+QF8Yf+oLxwvyGfDEe6A/4lGgv+MKQJ98f8/nZmP+QL99fw99A3rAP0Gf+
+QnoP+wB+sO/f+1n96tB36CfwNBP2AfIA+OP+AIY/hHzH/LC+MNfAsM+wP5D
ngPrq5xMtkv5lsgfHd+2qucJj2imH/6+t+LCMxJIo+OWl+rbE4mfL3BcdHtD
n6up5Gqqds3GUMjiC9hXDb3tq5VaZtHiccPbWMRksfVhQJzvF3eu8If13saZ
dw5OP5VHI1Kbbk+ykvJ5zXZGW/sPr2bxBvSvTdbV5oWbCyh4oXdx2NySH873
jo7feX5ETTkFpHAhDSkVP5yXLZzc69gaHTFdydbqb6Eqjcc1hre2dd5Zw+Ln
vrsnZDd8yeEGbz81VdM/hwK9dh51vl7A1fkVWp6vzaUPK2UPaLap5jT3PjK/
ObeI7Z9vPKPXvse6EtJU7GXqX1FM+s4TOp1rUk46tsN2JCXGke39CWt3tU6i
YuuxVv5d4snmxqyKfrpJ9KHPsfMme6T3f3U6d7eLfVws81fKSxQjGyLT6WZy
hJHTpGwav2htftjrDGrb5OZJ9bfZtHmtk6zFtkyub2BQWucr2RR6VFDrXp/O
nT8YteLDzGw6vc56W1KYiBvr1aGtc6qQxd+j4+v76Trl0ux19o/1j+Qxe7pH
tsrUf3cx1+61Z95K2TzaM0TvQ5jkuymdtbZfrMojy96z+hjJljJ7EH7s0R2T
kXl0TTOzRSu3Alo6NPNuyZEazn+zOic0LCbd1cdJsFUan4d/OxWisLCQzM72
+/hMsYTF3yOvj8kNaiHxfyqVtWE1NcxfWsrLainnF1Hdi+B5temlzJ9OuTxv
8ZjgUmoXNkEg61hOhdFm+++2qCKN1N5nFS9U0dXTiz8lnKqmvoFJ2dZ3qkju
4Qvbts7VdGD14gzrG9VENlw3y7haajnQJ936SzU1LlWL9xhfR05rIgqN39RQ
qdqt2U7y9bSq5cFWHgedmb2Y0EdnqvL7uz/cl+V77rjfx0VxLJ4vOFc0aPra
WPJMq9ZQLolkf7+tfed+RvvCpXzm3/1v6eNht1dOT2bxf+J1o7G2JlJ/u2r3
pos7nqbTm9VNBxrFJDN7hPj/tZlNTti1HOoX0t3exD7zh/WA87L8i2o3hcze
HTMbMtKsk3R9sNvCbsfnSyI6ffyAk0176fpg8geVTf6bK5j/g79d83hXeYxV
PrOH2tu4CzMu5bP1Qr8C66YzBhZTu1P6EQq389h6oab5NnuZoLof4p1Dvt2e
9i0soU29TXf5t5WuH2A/J3iqGH9WLiWzqvl39c1KpefPtCI91R3KmL1n5/PC
3iwYnF1JDheubRTvr2T21Ubf7Hl0O+n6A/5CVNGhRbmb1P9SdO87Dp1rye56
150Gr39cnyzttmrfvr11JCOY3VSlmXR9sq+y4yH//HP0tGhERKegWLp2LH+d
WCaQS1jwarDFmyS65fVwR9LpOK6sTfsCy3PpdP79mpVJBmXcvGUaW9T65ZNL
xfJGKu51XIc0qyGUWUKxPUzaWvTy4NZnPFEYODOBXMv2hai/iibv1gZrvcvi
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
8w38F+RvwccBxvihPsx31Af+B/gPfD4aMOIN8BXAJ+C/nweM7/H+Fv/9NcxP
xAvAuF8N+TI+Hw4Y/h38BuwH8++fRL4P5X/1/j58D31Hvg76wufT8fle2J+H
PvL5X3w+zl/lT+B7zDfsd/P5ErAn8C/A4Pcg/8fn9wHDn4CPAX4Q6mf5wd/5
AiiHPYK+wb8Ag08E/cP30G/kE6HPsA+wJ7AfwOA7YH4jPoX+gG8B/YL/RX/B
t4A8oI/QX/59fxhf6AOffwH5YjzQX8gH7UX/fvY+IfQZ7fnP3u/Ff6/yj/Gm
kPXnr/IroA/QV2DoJ/QD8sB4Q/7A0CeMP+SF8f/jfa81TF9gjyHPqtvfults
uU/89d3pD3YZb26msvWdL1d3/hCXSofXR0c3PA1n8uvt0lNP9lwK83fQp2/P
4+zdVLKY/TJc1eXp5ZtZVHr20Kaka9L7rxILmn4Kuytk/hH2Zrvrla2jZgpJ
03ZuiHpiNpPnh3cjtJUfF/5wf30fJ8WXU+JENGzMqZqwl3k/3Ge/6mGjZ5c2
F1Coect+RgeLiR9fyi3NHPV6eDGb/0db5/o4KRRT7OerN/X7VjD5KSyzmydb
Wsv8M/xF4aNB2RsHlbL5OzIg2c8yu5T65vZ/ph9ZxY/nuGbduvu1bFRJ9/qd
/uy+PoWzarK4JDslhzQuxqsa9RVyd83GDJQfLlmP1C30U79RwB1pe8heY3c+
ba5NvF3iWsspDWs6xmtiOfkGybf0mBVIbR42z339NJ3updW0tXifyem/nPXw
QTNJ/CVyvGyTGMfik2+pjzvbL4+j675hfdYnSe9Tcv304OvCr7nUe8ugm/qr
s1g8tzR70l2TDBG3IFBovWB+HnWaH93Yfn8GuY37FHh+sZQ/XV2Y4tRXIZ9u
XX5aE3Y3j8V3pTkLS8OMi7lnfa2SNC4XUMTybRMEAbkks6rnitrsPBbfzV1+
4cirwYXUKfKsrU2oNN4L9DnkZOJRSC6r495uNy2k8jaN3UzaSOM9N4FbT6OT
ZXQ2pTKrVraEoj9W7tecWMOtPr1j4xGlMgpPtBue+Vni711vvx5aU0ryqxIu
yCjUc5tWLb1vPr+ClIxWH9ZUriKTj+0/x3uX0ZWVLff4X5TGg04r+zvKuNaQ
80WXxHtZlSSO7W+hWVtHhU3TErZoSfn1LU8bP3qWLSYNn5g9/v2l8aFow/Vg
dc3XzL5eaHV1gXh1hDQf8Hv84FjXSsmvOJ2mDXzxQn9RAPHj9dPc2U0Thmew
+HLMxaCjV4uElLr92wH/Q7HEj9fzne5utWorjT/718yI1ZPNIzNVQVP7h+k/
3C89s3z8myWnpPH67ruv5A72LyBfjbQPYbNyf7jv8HJZ0T1Br3xS81of1lBU
zvwf4veRU6rHDh4umV/OVW76Awp/4Gf3366y8GZAIak2+9jEPqH0B36d3d4e
Sef3StdjOwalB37sVk5GFv3rw3RqfoiX/d4uPlrXtoLi3fd8DfOs/IFPPLC9
r6ebnjSe9hstvyH2VQUVTso1kM2XxtcdBvRv7vGpmsXXsJ+fHBoqza9K4+18
K/Uz1ksl8bXq7ks2baTxdxdfmVfq3aXxN+LxD9c7vR7VU0znZ1gf8A8P5MZ5
Nsr2dkyn8VUbCsJGlHGCdxM+N3teSNPPdFmTFFPCtbuoaRE5rJCuma14WLKu
ihsnf7Wmf3UxVbo+OW6zLpLrszkkUvGzJO5y/9DB4kQEWbzMSpUZlUW6TkfN
/bcn05e65Spq3YRkt1D9sP+kHLKR39z44VURTZ/sMNhofD6N6NwmfYdyARWP
iB8o+FLB3Uvpb9Y9STJ+T9SumPQpIbM5u3qKXxXROrmnH2fEiDnzBa2rrsmW
0rdnC2eLKyoo8UrnMXdWlNL4uFFPoxeKSfmM9zzP1pL1yZymqpkOYrL/qjJP
dWEFpQtVrsgcrKZR9iM/iEdK5s8ewVSX6FqKdhyYfOx0FYtXV9v0d0vzzab6
AVc3JHm6sHga8f+Qhj7Xq5Yk084Y+fPOZp7cov5vx+wcnUqdPYsNZWU96fLG
m3fnaKdS4KYT6oJuSZyxudGwiMU5NP1em2POvolcUiWXHiLIoWGPZ1n5t4zn
ZDL7t813y2brhYN9FHPC+5bRZN2BV2SOVXPDFpsW6F2Rrg98zn7dPzI2h1yO
patm9hBz8r1aPLp2oIQ2V6foutyT5gewXpAZpH0y/UEJiw/9m59wCxxaQgGx
Wz/PSK5i64lwuYklYU39uOuHPb0mrEsj7SqLmAaDFxSnWTzn7D5JHC0eGKaw
NYTK9fyDBDUZdGTCiqiG7umcZfYCtwfbhBR9r/lhf8MYzudr7xBbuWwyW6/1
NSwmmpJV3/eRHZtNzbwS3ykUJlDb7Su2dNwt0YPS3AkCq1xOaY7yTZsAEbUr
zwtU+JBK9o/rte4/FZLrulvd7Rtl05Qza/3qPuaS+Y49Z20aF3GG+9UqTVsW
UHijfF/9g0KqumXeSlkrj3R7u64SfxXRDpsPc9YcyafgsNEXbHYV0KQWC5oq
RhaQZtPDM2ULi8h44In+q+SLyLOl+dcZXpWcZ9aF8qVri8kr/NJJm4WllJJ9
ybP/Osn6ra+pvvhlOd0Yd8B1g28J7Z1UlWe8uo7zuXDxkEtoObkurTU3OFtJ
q9dkGB1oVUbRlGlmwFWR81mdJWKjcpoy+oCbSVA2dyciQ33k5Vxy316+OWli
Pjcsat2bg3l5FJAxU8moWyiXNMl6wITwDKosbO2hfrGc092832jM9CJqN0Dh
bkl1DSdf32K3wKuMuq5IHh8kV0MncuaFux+vJN01wkYqa+rom0L+c8P8KioM
aeEebVNPF+c3G+Yn0fuaksG+0SViGrXsREC+r8S+dJ6m4zKxloz3X1at0Kj6
tf/H2//7td/36328v3N/79d+3l/bz/u1f/f/3r/7d9uvgzz+Xfbv0H9+PuL/
yv4e+guM/v2rvgf4s/1A9A8Y/fmfek/wr+4noj/AaC///cC/6z4E/n4k2guM
9vDfG/y73jNEe7D+xu/z3yP8u947xO/x78f/u94/RP389wv/We8hon7+e4b/
rPcRUT//fYB/1nuJqB/n4VA//z3E/+x7iqgP5yP+q+8r8t/7+p9+L5F/Hpv/
/iP/PSH+/Rx8/gB/f5LPD/gz/gDyjWgfMNqP/CL6h3wh+o/8IOTLx8j3Qb7A
KEd+D+MBDHv3x/11Ee/8q4h3v4aInb9CPhPnrYChD//d7xny3yvkn78H5q+P
+OPJvz8f8Rcw4hPIl+/f+OMB+47vgTEefPvLlz/sGTDf/kD+2N/H/ib4DOAf
YL8P79dgv5B//wLyc+APgM+A+Qr+AvYDcT8G9vtw3gIY+oD7D/AeFDDO4wDj
PST+fQnAGM//6fcDf/Y+Fv+9If57QrAXsE/A/Pc22fuEv2OU/7PfL8T3GI8f
7iP6/Xtg/nusbP/yd4z9cPAR8D3sG74HxvhhPwHzARjjh/Ne0P8/3r+Qx+5b
+Nl7hdgPBgYfBxh8HGDwb3C/MfgCwPz36PjvAQLz7/9g9z38no8Axv0QuP8A
fw/M568Ag5+C9mD/HRj765jv2A/n88lY/p6X38f34Dfw7QHuRwDGfRkYH9yH
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
of1Q0NgOOxGl+qzWedazNpg5S72y61glqQ/gvujuYI8lNZTr0CxOcVMrcEpv
JNJmNFJsU413Wfo82H30s9nN4VzqnnZQRdlVPjhFtauXPeZTK6vsbqxOEYDS
Yx8qclYbdZnuoXJepg0yG+Lkgj/GQwAjTM+07jNMlN2QRqtJpZz7WQ+4fKwG
NGp8w+h1eZRp0pntn3Ul/DN14bzMxtMOZP0jxvWOGNc3YlzPiHH9Isb1ihjX
J2Jcj4jR/0eM522I0d9CjP4NYlzPiNEfQIz+H2L0/xCj/4cY/T/EaE9K4X+a
/BiUn3S8AjHKDzHKrye/pie/pie/pie/pie/pie/5v8vvwbl15Nv89fybVBe
Pfk3/zj/BuVF6i39lFdPfs4/zs9B+fTk6/x9PcJ/l/wd7D9i7P+/an4P9h8x
9vdfJf8H+4sY+4sY+/u/NV8I+4sY+yvNH/9nzS/C/iDG/iDG7/9nyUfC70eM
348Yvx8xfv//q3wm/H7E+P2I8fsR4/f+38qHwu/F80r8XsT4vYjx+xDj90nn
Q/135Vfh9yEfAr8PMX4fYvwexP/d+VnS+U6k/pVU/fQ/ymdCewcxtmP8BuNR
2I5YOt8J4zWoL6XznZB/gHwGaYzxG4z3Isb9CzE+j/EajBdjvBTjycg/wPlM
+C0/48EYv0GM8kT/SzqfDO15lK90PhDaZyg/tFdQXtIY9TnKD/Ud9g/3T5QH
7kfYLl1f9I/yc5C/i/EG5PtK5+dg/g3ykTF+gHxq5I9jfBHfh/kyyO8n+Tg/
4xWYL4P5LshPlVtBrQsLFhOM8sfvl+bnkPy8n/Y44km/fR/hw+PzON/xecTS
+Xio7xEjXxflQ+rt/ozX4/OIcf7g/MP9CDHyyTF/CZ/H+YjPI/6z/ETpfCbE
2H+UB7YjRv4zjieuZ5wfyPfH/iN/GNcv9hftJcSYP4X8acSY74Xvw3acHzhf
cP3iekZ9iRjzr5CfjBjzB1C+yM9Gfgmub9yPEWN+FuabIMb5iOsd5YfrHTHO
fxKv+9kfXK/S+YGYr4byx/mJ+wW+D9cXyhvtQeTvY/4Zzkdsx/+Xvp8C5Yfz
CzHKC+WH8kd7AfMNUJ74vr/Xl1UkX0c63xX3f8SYb4H3MeF+hvs/7u+IyX00
P/cP3N9wPeF+jhj3F1xf2D+cLyhvHA+UN44HyhP3X5Qnzlfs/9/bX1UgLZ+/
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
iyFQoXSOwTsWqEeOYl3tL4aox2pb+JksKLRcYJ8wSgzW/tovbPpI4l94flVh
FRJT9F4S33IMnHHOe0QkWC16q20wlQNe8331/SyiyPm3yOeQ74jR0eCy4dfH
Nl31cP6Y50z36HByHnKo+owyf2g4fNM+5W5zqRVG345/414XCoeC/Aepr5Cc
j/UdLHtrggYfXK9+eFP2KgSarhf0Vz/ebfcK+xbI3AyBCDtrQ7/7Qvj+elZU
pnEwLN12abmfchvciJKdwOUFEf270X9gwzHHBjA5vTKvi3Ii/vEm2qCDzMx3
xB7A86nZcxac57ZIzs/WGsuq58k3AbNxokzw6/fgw3OsfzMiBYbNvdvCORdK
Ka/5Nnd0OAuUZR+maSqHQMrs0tT02lrYAC9mGkxgwlOG/PjRAbUwfqdeDD3u
EqyclmLbf3YD+GwtNlE4W015bhWN4jZ12w2d1e81X1ZS2TOq/X1Uu/2y5Ypp
mtZZoFKxhaq4mwDt0za9sBG+pzT6+97ptZ0LyZbWs8yHJANnyCvaRiYPnDZY
hdHl86m4m9VnHSv4UBf+NJbmV07d9LhbIdjQU7+1p35rT/3WnvqtPfk1Pfk1
Pfk1Pfk1Pfk1Pfk1Pfk1Pfk1Pfk1iFF+Pfk2/7V8G5RfT/7NX8u/Qfn15OP0
5OP8V/JxUD49+Tk9+Tn/KD8H5dGTr/Pvma+D/e/J3/nnyN+Rzk+Rzjf5o3wU
jEchxvi/dL4JtmO8HzHG66XzTbAd4/OIMX6E8UxpLN0faUzsmZ/9QX0pnb8h
na9B4pM/90tsl8a4f2B/cD1huzTG+Yb5HcgHRn448n2Rr458XuS3k/qcP+ND
mB+CGN+HGOtnYvwJ45eIpfNd/ig/CeNPyA9FLP3/OF/+LD9JOv8EMea34Puw
HbF0O+HP/8Qovz/Ld0J+NfKHEWO+x5/lPyHfGvnDiDGfA78H5x9inG+Icb4h
lp5f0vlkOF74PI6HdL4Szi8cf+n8JOl8BOn8JJx/yJ+WzlfC+Shd3/WP6hFL
1/+V5jf/Wf1X9OfCFimajLzWRObnUJXrKm4rWsE86zaXsz3+d/b6zaofp06t
5MO3uuvvNQuzf2efya6omLuwWAidS4bsYeeV/E5fq7puss/cKIbcvDEq5m+Z
VPOH4qbemlzwiDshFyzOouJnBj5/nsAHT+d5E8w7iimVK1suzzFsg/PL1rky
HlRRokdGL9+/F4P+pJtTzK84UU8brPcqf2+CyWPX7Of7P6dGi/ufMghrhgEl
N+84Lokm++3qHy27+AXJVNiSTw0bh/Dg9Pyy08zO99Q3w3bqqCYPBtxXYnM+
ZpL9Vkl4UdvAMI8a+NzD9MEDAVhO8z7HtMqjfigJrg31EkCGHZ/DuhMHq9UV
86+tEYDt/rf7mUEUuB7RdNaoFMB0Udh31q14uGFm/6nDq9sePO2eRxPFw6G9
pYmPFNvAdnHBe9raIrJfP28sYXO2lVGNfE1hprIIgpp22zOOlVGdqTGbdk4U
gZVVygl2RgLsalVaUi5uA8VP8l9ZQxKh/aaK0SZ9EUzu15JFk00Cu7F2p51W
i0Grod6CPzUJttJni+YfEQN95LZ9/ORKst87nS+KoPsnSfjOa56E0Vsifpdf
mXJ95HmNTkk+nvrcD5PgrgCOVCs8d5wd/7v92sLphIEsTQTeXUcDbMwSyH5d
+OqRrsHVRLJfT7oXVM5pfkM9uVqn5NaPC4OdZsjbL/5ENdjSj57Zz4fHGWW3
HE2LqHTlKov75UKQd4fVaqXd9k7Q0ku3rcWQ0L6mhjMrCiqW73j5dl0LDNJ/
dJb5IwKWL3tx2VC7GeY0nI+lxQZTPiU7fJUjWkBLvXoP2+wDRY+hppbX8WC4
1sglak/Y1C9K9mtZR4TgOUt2rnlVBXVr12Bvb54I0tpYjRylaqIPcX3uHvyu
/BBXDC+mZr2m+0ST9bh4XfAahdcxcCHti5LuJi6knr9pxq+Khhrf2+/9Glqh
+eC4pWqnomD6KeWrpe4tcMW+YZ7B0WiY3W9XQNlZiT7xokWqbbjTBPKGCc2c
tttEX6iLbvrauIVDkoanqEzUCBurTz2ysXKGEPZz5pAJTXC+wngvv8GLUpiT
8SCksBl07mVfZ0x+T/SD/umHDozRaZT1ytnKs8/yIITWf4S9biyxPx5zpoCa
4Rtw7/dpxY/nXOiwfzzHoPINTD65Ts6wqdu/tmky4Su9hciW8SP2XuHBwWc1
jawXsXA067nQZjUPNPz7LVSjmMR+0Q7+tJvd/hbc5ulZPhHzwKKxd18PYIKy
TNzyABofRnWULlDb9w42B//ybEwYH/qsOb+TveIdFP1QCPXx4oOdxzAxa10e
0S85hpOHePDyqb4+zZbL+nX7L0dpdoyZFLGHUj/SgjVd4uDcL9/kHhsJ4LYN
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
06gt
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHmYj1UUx+/VqoQWKUuMorKMfYsiSyNrQ4wxQ2MMxjpEssyUpWQo7ZSk
RAtFu0qqUdEqpUhpI6WSpX19njrf53ze5+eP73Pe9733nnO+5977Pb/nl5Zf
1Hd8uRBCWQzhKLOnG+wx6Nt2wxJDtqEq3zTnDOzRhjOxxxiqYY81nG2oaKhk
OAdb2VDTcLyhvOEs7AmG6qw7zlDbcKKhgqGO4SR81WBc62uxTvPq4vtkQ1Pm
Kc65hlMMpxrOw55mqG+oAtcGWPFriBW/FsRQLvXwLV+N4al8m2AVrxHrVI9m
xBe/5lj5Smdc67MMnQydDS2Jk2ZoDWfVrw1W9WuLFdcLsMqrHVZc22PF9RJq
oVwuMpwP745wbkj8RuTVgfEG5JQO167wlK8ufNN7K/JVrhnEEdfL8aU43eGm
uT2w4tcTK369sOLXGyt+3fCnfbgUK199DRfCqR9W8fqwTvXoT/yLDQOw4noZ
4+351hD+A+EsfnMNVxumGp6FW47hY3LKNQzmWXkNwYrrFVhxLSQ/1WMUVnnl
w1lch2GVex7rVJsRhky4jsTK11DGtb6AdeI0Gt/iehUx5Hts8HMmfu8Z1gW/
y58a7oHLevgUGfbDZ4JhGnko/hh8y9ckclUuk7GKdxD+Ew1TiF9AHYfj60rm
5JGH6q3z9VHw8zrIUEy9xKkEq/gPG5bC6YDhc8O9hs+Iea1hJs+KU2qYbphh
+N7wNb7nkLfqdB1W+c5infjdQN6qwTysfM1mfDLvI9nn+wzLyPcxwwrDQsNu
w3LyeokYNxrK8HUT82aT1+vkdDN5F1KL1Yb74Xg7+Smv9w1vwvVWw/XBz+8i
wy18+9Zwm2Exdi7r1xhW4m+b4R3W6U5Ld6W5ib6fwV5pz3SWkh4grUx0X/Ok
39V5T3Rf+iVtrsu7NFtaKE2UdtfmXbpeg/WKXYdcKuJD70nPqEmOaayXNtcj
hsakRdKrRPelidJ76Zt0MNH9+iGl+w3g1Ih3+ZXeSHdOwUe9kNL9xuTblHfx
T2d9ovvN4NaC92qs07zO1DILHq2Il+h+a3zrXnQNqR7QJqR6QNuQ0v2kD7Rj
rAnrusBZOindTDSxP7l24ptq0YF5SX6dQBZrVKOOzDueWtfArzQqkzFpXb+Q
0u5ucOvOe9IPuodUP+gRUv2gJ7XLgH9zfGTAT5rXJ6R6QN+Q6h+9yLE/edQh
Rivq0od5ugM6+7oT0p9s6jWVsbkhpe/SR+l/Djko17zgWpboe2FI9YAh1Eu6
NZrc5SMXbkNZn+j7CPIdjS9xyGde0ify4VrIGvEoYEzv0qNpzJOmSaOk89L3
8cG1X9qpMyetnkCe+k2nO6A7If0vIlf5nYKvrcH7xxL4SSels8Opl/plFv7H
wG0S85I+MQme01iTybt8qM8OYq/FbwZ8pPcl+HzasCq45kv7pfvXkMfM4Nqo
eLN4l96X4uuH4D1gWUjp/hzy1j5fT36zWZ/o/g3kUcr7ZNZp3jPBdXk5e1ZM
LGlqorXS84WsKQuu/bOIqXHpc9LnislD324hhtaqR6iPqH8sCK73t5OPtH0R
ayJ7KJ37IHhveCC4rt9luBO/i3j+MLjuP2iob4sLo/euTww7g/8+GMsejME+
Qq4/sg86K4/zfSl1X85eKPcV5L/F8BB57CUv1fQ5w/PEKWF/VIcnDWup5T5y
XATvldTuK8OXwfviU8F7cAn+Hsanvj2B30eYV0KOq8lTOT5KnpuD10C56w7o
7ujOriPXsVi9j6MGq6jDGvJWfi8wT3OkFzrfOtvZrNUdfBH/RezpW/CTfZtn
7fnL7PsrPOsMbWB9EfE38Lye7+OZ+xLzdZbKgp+9jYZX+T7O9nxU9LOgGrxG
HTYy/ya+beS5jOcbyXENec4i1kzDpuDnXr9h3uD9ZvZPZ1FnrxTO8+Cr5zuY
u5n6X4efOax7N/j5eZf3uxnfxHzp01Zqvo53PS/hOZu1W/CjPqzeqD6n86Jz
vJRc3icf7Zl6Q/IbdTt+tvMuzdLZ3AY/2Q/JTXsh/dX52cEazde92sn3XcwZ
z/gO8lW/UL/JYK7uZA5zd+FD+raXWkof9gQ/17oT0kad7S+Ca6V08jDPE7Aa
S34/f8mcncTNZf4hxvcQYwH7vJu9vp+1ilVMTjPIS8/zGf8K/x8TI4c93Eat
vmGN5uuufo8/9Sf1JN1F9Z2DfJMmSPsWY/dR/+94XgzHA/CV/ZHnB9jfUuL8
QFx9k27ewdz9zN/Pu+6X7vZa/H/N+vmMHziinqrbROzhI2p+mPHbyFu6PcTu
36DoZ3cfHB6E6yHWXmzjp0bXqkOMyX8N+3Zc9POwlzqK3wj7lh+dT0ezFaPv
1USztaJroX7j6ndfR0Mr+9Yyeo+9IvoazW9sdnD0Myl/BfgcbbZD9L0bZrZ9
9LrVM5sXXVulK2PQlrZmh0bvmeKaC9+zzE6Nfv/OM1scXYeamR0bvQ61zc6I
rnONzE6PrjvNzf4e/I6PjF4j1aep2eHR63BB9NiKe5LZCtF7wgCzl0fXnilm
06Pva7XonMVXMdOIe6b+G4vew6pGz0+5lTM7kDqoAfenDm3M/sPZaG3Pf3L+
/yOeYp1s9rLoWize58O9UnQOyv8XQ9fo90X7XJ29zjabFV3PtA/lyEH7EMjh
QrMx+lkVv4uI+6+hXfS7/IehRXT9+Ytclaf2pCb7cmn0eZpzdnRu4vUb50ln
qZ/ZKtH1XmetLufnGLNNovdg8fgpOJdO9twluh42iP77Q303J/q+ak+1zw3Z
a+X4Kzl0s+fu0fucePwdnEtm9DOkGvY2Wzl6z1Scn4PH6hmdv+Zn2HP56L26
h9le0Xvm/5hcUn0=
            "]], 
           PolygonBox[CompressedData["
1:eJwtktmLz1EYh88rZA2DsS9jDAnlhgvFBWVfx5jB2NfJMqMZkht/AMqNEsIg
+zZjCREhIzJJSklJSsmdNUuW59PnXDyd5/z6fc973vd8ilbWlFa3SClNgJYw
MXBYhF+DPngNvMIPQju8IxzBL8MfmMX+Lutu+AVb2L9j3QUr8CFwFr8KbfD+
cAq/Ad9hMvubrJtgQLiGzj6tO+Hfsl+C0ewHwhn8CgzGt8NH/DC0xv+xXoRG
GBH+TX4BPkM1+5fJPf6AWvZvWHdAv3BN1dIdv8Jm9q/1HYwK11StBuiAtwq7
ZjIeHwf78h3mhGek2dyHbuyHw3m8CZbjy6A+eUbT8KnhWrdgUnhmmtV1WIxX
hmf1LM96KBxNnvlWvBMcw99DEd4ebifPTL0OgkPJPdfhP3Pvb3OvfcNvrZ4/
5UwoC5VQhhfCE/wxtA3fUXfTG87EZ4Tf/g4MwwvgAX4OSsMzUO8PoQLvCc34
U1iALwz7fpiPl4dr7YWu+NzwWceTexkTzoJ62ob3gBP4h+Tsfsl3V4ZVqxec
TK4Z4W/0X71ZSXgmmoXepHv4zrrrI+iMTw/3psxrFiPD2dJM1OtsuJfcs95m
bDj7eiNltRh2Jmf2L8wLn70n+dsu4azojI16a3iR3NNqfFV4Fs9hCb40nIUD
Odu9w66Mr8HXhv+rTPzOGVE2dIcqfF14lsrkBnx9ePaqqexMCWdRGfoPCS2H
0Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxVmgnYz1UWx9//Pb9IpEQpSzJCiVAppXVqTNOUStK+703LlLapibSQiMoW
EUJelaUkIrTYQpFdSmTPWrJvcz7O9/+85nne85y733PuPfd8z/m9/6p3Ptr0
kVRQUFDGCgr8r6BbrqDgWC90d77XO/Y4dXX62Okup/OcPnO6x+lCp2FOdzqd
6/Sp091OFziNdrrX6SKnL5zud7rYaafTDqc3nXY77XLq7DTPaa5TQ6cxTvc5
/dVposvxsdMnTvu9vs+pewoZX86FnBW8fJzTOm/v6fU2Tm2dejm96tTOqYfT
K+rrrbbXnN4Vb+/UR7yD00Zfa4NTRy9vd77NqZNTD6c3vK2/U1+Nfd1pQC7a
33QaKP6W0/vinZ0GiXdx+iAXZ438Hzm9LRmH5kKHd5wGO3XVuCHqp2+Y+tHv
Hy7PpU79dE69pVOvFDKO1Nm9K/2Gax7jRqitr9Zrq/P6TPqh01eSiT0/lz7o
MdapUDKOUVuhqIvkLu538oHLUQMb0Fj0Hu/0ofT+Wmsj1yjtyfl9ozZ0mqCx
nMGX4sh0va97Hfbk5X86vyyFTpOlN3pMEWftOdqPtaeqbbTTdOmATtOkJ/UZ
akP2mZIbWWaJI8sP4pzTbHH2+N5pnOZ8q31Y911s3flypyu93EQ2Pl9yI+8V
3jbJ+VynBWpD3h8lH/IuFkfGn52+055LxJG3hMWa7He1r3lVijP4Rf3osTCF
3MuclqoNnVZo3nydwQzt94SPv5a34eU/nFY6rXJazVpOi5zWStbF6lugvnVO
P0ne9eLIu0Ecua5JcTabnNZoPdbarDNDrs0+ZnEKeX9XG3JcnuLeJ6k+X3tv
1VrI9adkpb5DMiFLsxR77nTa7vSb+kpZ7L3LabfkYM894pzBPqctWnvLQeex
X23sv1dj6f/D91qSYp9Fsg/utV+KfUw+hrfAOyzj9cOcSjoVT7EWe96UYmwJ
p2IpZKLv0BT97H+YxmROpZwO0dibNe8IyGLckU6Hq7+49ss0B/99SQp/d5T6
WK+c5pR2Kqs26uW1HrIfl2IO/QPUfoxTBbWxxiC1VXKqrDJrVMHXa43Skgv9
TlAbaxyvsYy7RWtUZU+Ltf7iVE3rMvZEcdZerv6aTicdNLaWxlV3+tNphdOt
Tiern77Bmlfb6Wjfq47z+k6nai3Gnpainba6aqultvyet2mNetKhjM7r9IPm
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
DfHM/wDLYOGp
            "]], 
           PolygonBox[CompressedData["
1:eJwllnmwj1UYx3+/87w1bdO+TEmopuzElX1kdy2JJJSlS7biYkhE1hIqaqTS
okuMQYlKaBNtCCEppbilRUXSvn++8/3jO/M55z3ve855znO+z1uhqLjz0JTL
5UpQhj6KXO5jNJvO8flcbhu8FS2gvRB1gFejm+D6qA28By2Fq6C34DfRPPgx
NAgegrrBM9H38CHUBH4+eWxX9FryO7Xh1ixkH3yY+U+Hz0TraXdB3/J8P3oW
XoX2wp+gB+E7Gd8a3o2W0C6DNsF90evwfLQGvho1SN7DKvgR1Bu+HzVkrpVh
3oWuh7ujQvgu7Znny2nfC+9EveBT6VMQO6BHaV+nPcDj0Lk8u5J2D3gD6giv
RQ2T17A5vEat7Sl0AP4cNUre4wr4IdQTvg8dhY+gq+AX0UXwQfQcXIS+gr9E
jZP7psLNWMMeuD3qQftG1A6+G/XUWaKO8DR0KWObhGOpHKhNewntGfB2dBLt
irRn5X1mx9EO1AJ+FV0IF2sOeAwqhN9Ac+BlOiP4WjQVHozOYvyA8Nnehp6E
b0f14CnoAcWTMcd0Fuh92udljmV3rZd2lnnugcm5eovmTM7ZKeE9am9D0ORw
DLT3W9Hl8BPhuXRmA+Gz+d5IuKu+EY6hYnePziCc08rlUcoJuAhNh4tRDd4t
CY/dhk6j3TucG8NQW3gDmgsvR+3gjcpB+BnUD26BJsKdtEa4FZqcfIcK+F5L
2pMUi+S5bw6P1RrKwd+F71Zf1AdujiYkn3FT+F3tGX6BMzyF752MFuTd15ln
J2Y+m5boBuWP8iE5Z3bAw3TH4UWoOmMnKObJZzpD50vfUX0LTdLaaB+BW6Gy
cF36zpFXoA/g4WHWne2m3Ebjk+/c4+Ec0NkrBhfzfqPMd/MOrUntsPd8jf6A
/0Hr4Ga6Y3BbxhyEL9Oe4P7hte1FNeEt4btXmnesqofPUjF7Gl6IDvBsePJd
qhaOne5UHbgNffvhfPLZ1QiP1Rnq2dBwrmqMvG1wOLfkcYpt1XBuKsaKzS60
ODlGH8Ij0dvJHls+8560F/UpV+tkzgXlbC14Js9HJN/ZQtr1w15YmuxVNTPn
pjxrMc8Whfeud5bBS1GCRyfnZlXGb03O0cZw2XBt2K37Q3uMcgp+Jzm3K9O3
JTnH12utmZ/JoyvBY+nbDG9CF2T2VHnpxuRcmcjzkrxzRt5RMfNYeYhya3q4
NijHRoVzQrnQB1UR0/de8hp09g/T7pWcA+1pjw6PPZTs5XXp25Hs6fXk15n3
rj55z+zw2cqDzsjsifJC1aS5PGuQ2ZvHomrwON3XvGNWAG8P107FVHe3Vtg7
dIeV65XDXqScl3d/g1Yme7i8/hhanez5I+BymefSnlRLDysfk2vqb4oH6g+v
QX/Dl6AByXfiJ7iCPCP5m6o1X6AVyTXnZ/j38LtN0b/KBeZ7BW6uOxb2GHmL
1ngCzzqFvWIQ+gEuj/olr6k0XKNUmzSHvF05pNyRx+cze7i8W3Po7D4Le6HO
cB3cJewd8hh9+8dw7dMc+mnRGrW2l5NjPz78b6Iz+CvsCfKCtejX8B61t5cU
43BOKBcKkmvbvHDtVo1TLs4P137lpGL7Z/hbirFi+Uv4W4ppJd3V8L+PPPWK
sOfIa+Qh+teQZ8mr9M+hu/NpuDbqDulu7AvXBt0Ree2ccC2V5+pfZlq4luif
Rmf7X3jvOmPVvlnhWqoaeD5zlcl8t1STd4Y9XN4tj9G/hTxC3qB/jGtoH5/5
LFXT/wfXT0nK
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHnc1mMWh1/13D8a25CQnWxj38c6g+zr2AbZUmQXKZWlRFpkS4RCiUpp
IUlKasgy9jF2WcqeMci+z7nmXM/n8cd5z+/eznaf+3zP867dofOhZzdramq6
Of40Dz6oNDWNDXqx1tR0VtBRQUcHnS1vF7RRrO8W9E58nxl0pPs6u35MUJeg
44KODzpPfkLQOa4fG3SunH2XBJ2hvEvVjc7zg04M6hDUM+ikoJODLpB3Curu
esegruppH3Sh66cE9Qo6Lej0oG6uI/ci108NuljOvh7KQ99l2oJ/17kPef31
E/8GyNF/uX7iXz85+wa6jv4rtRs9V8nx7wrX8XuQnH3DlIu8vtqCjmv1Ez+u
D+ptLG+Q9wka7Dp2X60e4jfUdeJ9s3LRcY3ryL3RdWJwk5x9zwU9FDQraLh2
EY9eJf28NWikPuDr7XJ8Pbmkn7cFjdBn9o1yHRtH6xu2j5ET+ztcx8Y75eyb
qg5k3BU0xHiMNxb4Okk/ieXdzuHfBDn+jfMcZya7F//u0x90jAz7+wTdEt9r
l/ThXqjknim1XOtvXtyvXdj+uLYyN1NbxxnLcdo7Xf/xe0bQWPfNch3b5wRN
1KdRobd/SXsfdh2fZsvZN039xOwBOTrmai/+PaFd7H1Szt7HXMfuMaHn8qB1
gv7pOvY+qz/40bekzEeDng56UD+ekc/Uppu8j+f1Dds7xNllgpYPekn70P+y
nPitV1I2NWpqyT3/DnrFdfx4I+gp9b8pR/+rruPfa3L8+Cjodc99LOfc27XM
dWy8oqSed4PmqxMb/xLzGwS9EN/z1EM8FriO7R+oG51vuY7c91zH9vfl7KMG
U4vXD/pEW5D9fdBnQf8l9iXt+I9z89X5p5jfsKTt1Grs/dQzC9S5KOhD/f5K
jt+fu44tX8ix/beg79R/VUkfFgZdW1L/t0E/qAMZP8q/8Fzdxjtj/xB9+jno
S235VRnsvSvWBwdtHNQ2aNOSNm5ecs8vtYw1+UKOnxPznUq+ia2Cb1lSdikp
F9urkrwp+BYlZTQPfrd7asEXL7m+WNCSJc9zbik56+1L7m0R9Ae/2TcsaMWg
1kGr+L1S0LLuQ15Lc5u5FeR/lJZUz9bKXjpoG99Bq6BxQcODtg2apExkzVBu
XV9LZePH997Jdtq1aknMA1PAmO1jvEbQmiUxHOwFg8fH+LagPwfdGrSa+8D4
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
IeRslT0jOfh8yTz8H+S9Lf4=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlfdL1lEUxr/Je2+DdhRBSGUW2aI0s7Rs0LDhyJYNFTXL1LJtaYVhAyMI
goigkpB+708o24P2oqJJNCmCBg2qz8O5P3w4z3m/695znnve/qU1+Wvioiiq
gBik+ii67aIoHgphJvlsqEQPhfdwH/IgGe7AeZgI2fAcXkISzIPpPFsG69ET
4AJkka8i3uKDi9HxMJe8Bn7BPvIW4gC9F50Jx7i3nHwDejQsQ2+D79BEfoLY
D57CP8iECtjLtZ6Qhm6Gv2HN2eGeu3AJJkEOXIQd3L+f+IxvJqIHeNOT+S0F
nQy90bPgCuwkP0j8xj3r0T28XdMab8Ee8qPOnvkM88lnElPhhupCvpzYDTLQ
n4hroAwWkm/0ttfZ2hP6HjEXNkEReTGsQyc665323Bx6OArdVTVDL4XIW4/m
hZ69CDXICT0b7G1P2stCZ9+6ClPDN9ty/Q1xUfitUL3w1kutIQ79SnsMNV1J
PggWoDfCQPRl+Shm95SSJ0C+M4+cU1/Jm4hnYnZvA/mB8Ew++h16JMxQncjb
Qx16q0B/DV5ocPbtctjgbA190B2gPnhYvW6jNTrreS16E8xBb4cx6M3edBE0
ot8SR8AhmOOtJ+pFFexCXye2g8PyNPkQiHO2Ru3lNXGYsz3N8lYj1aYy7P1x
6KVqkEe+GmrR1bAbfTN45QjUk/8mJshnzs7Oz1C7luC97t68Jg/uR8dUI66f
1HvQa715Q57UWfpGPBWzM1VH/sjZWWzUvsirvXljms6I+qA9ODvTSZoVqhm6
AHqht3ibJapplc6+t2c3h7Pjvc0WnSHVaigsdlYz7V3v1LtUgyfOZopmiXrW
GtbYGNastWgG6OxrTSXkf4jjnXnsAaTzW0no0UP5mDwj1DDNW8/V62LojB4O
S9BZMBad7a3X8oDOahdv13Rm5S15Ul6Uxz5CR29eXQ3OWw9OBg+MQHeCFGff
OBM8LO9q5k1BT4bj6HR+++JsJmgWaKat0OzwNpvkcZ11eUTe0JnXu+VJeVHf
GO9txmi2aOYUoH84e7dmcK5msTev6YxdC56X1+UZ1WqJt1mtmmkWfHD2X6CZ
0I9rfaE1ZjU/7WyGa3ZrD2eDZ+VV3TPOW41UG/XkP/bNvgo=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
n/BA
            "]], 
           PolygonBox[CompressedData["
1:eJwtlPdL1lEUxr+IvPdQkbZ3apsm9WPQjiJtGu2yNA2D0HaZo0mDIBACESSI
IAIhgggi+kfaey/KKNp9Hs754cN97nvf945znuctqaovr8vLsqwU8qHMsuxz
yrIDcAbuwDw+O874J5dl3xh/wiZohIewivU2xgL4Ak+gHg7CY1jDegdjcfK9
H0BdnNGbtXJoRa+F+7CS+XnGwjh7LvzO+R0SehGcRJ+Gr/AedsMhGM7adriN
roI56IVwAr0eeqCnwH70MeiOngB70UegF7oWbunecBdWMD+X/A7PtA/zi4yT
4Z3OYX6dcTF8gFLzu5WBobvpTugWyKFHwS70KShCV8AVdDW8gS3Mr+rtMAZd
DTfQtdAPvRra0RtgGnqq+Vu3wi/4qz2gCV7DZtY7GedDFzyHndAAn6CG9Zt6
J7xUb5lfZpwO/yDPfO9mGIheBxfQFTAEvREuoSthtPmbW6Inuuuj6GV79LaP
ea/V45HmPVTvVJMB5m9oCg/1NfdcY3hmJvMZ5nfdE3cfa14bvWEWepz52uHk
tfsYvVENZzOfCPvQR+XpqElD1KynuUfkjR3qsflv9F15ZpK5Z+QV7THe/Eyd
JQ8NNq9Zc9T4R2RCWVBmKll/G724Fr3Oh5rkPZeXRsC25J6S1+UZeUWeV1bu
Jc9ia3hxkHkv5En15mnyrKlHyl5/c690hJcLzL0tTy8wz7yyrowsRS8x9+5Z
WIZebq51R2Wj0DzryoiyNszcq8qc/gu+J89aW3iv2NzbneGtoeZekcfknRfJ
syQPKQuvwnvKRIl5zVQr1eQ/iByQjA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
bvD1CuX4TsEPKaTXocEPK6TT8cEfz9qjw6N8RCGbDg7esVC+vyh4/ywM0o89
L5Rbb4jyK1lx957gexfCczWDX5R1d6wV5UuycOf1+H0hXJiCn591x51IvM+6
A60f9Z2z7rUvcl6y8tGdnM1CWGFplJdkxaGrom5E1j3w5Sz90O3MqD+10DnY
J/iqLMzDGxuYl3eso6Lu9Kx7JbKnW/604FOyzg96zbZu+MT+hfzigOD3ZWGf
74J/k3V/OyXqTy50V2Zd3/LaVo+6s7NwzLlZdmLjCcFPLOQn5Pw3svL+sVE+
ptBbyElRNy/rjWRW8G+z7pCfssZZWOvrLDlk+MbPuaOXYowzsvDZ0+hizFAt
+FlZ+OywrPPH2Xs+yjcWuiftF+WTs+4oR2StNet8B2eh0F15ZZRXZMXsF4hL
hXDEyCifXejePj3K5xS6P7NOM71W3wefm3X/WIc7Rxbmeyz421n+uFfUj8rC
dztGuY/Pw+HEt0J7xDwvZc21UZR3zXrLGI/uWfdz9L09S+ciyjtnva3cwpxZ
cWiTqN8t6+3jZtYsK+8vD/53Vi4qh8xOWW8uG0Z5l6z3kU2jvHvWe0qn4Kdk
4b1Dg092+dng72fhCs7UHJ+rhznvheLIjviKz+p5UTc6K17tSVzMihsNon4P
++Og4O9m3SOeDD4pC5PsVGg/2Av2c1jWnuK7d9tHPgj+YdZbBucCTMnZ6Iwt
he48Q6LuvSwMwxp/4nX+KviJWe8T52X5M77M+tUrtIbg/aeyMD9xYqBjBf46
1T6Lnx1uX9s8+jUu9L9pF2fFDuLGNVFuVCinoNce1o117eS1ZQ/PKLSP7E8u
tEf40/72qeOC71cIK7JvtQvtHes6wGvL2hMvWP9Ls3IPeYczVafQueLsbFDo
/FwQ5RqFfrs+P/gFhXIM+3yI9/rCrJhIPGwSvGmheyBx/Yms2M4ad/Q6X56V
58hxu3GeC917OF/1C50x9vxA7zvYYd9C+AH71mTZuCj4b1nvGZyLg3w2pmXF
PuLex8HvCro76Q7xTBZO/i/4v1n3ub+CL8t6w2jI3mbdFd/MihHEB3xlqP2F
M/uZzy3nlPzBWb0yK8eT3/HvA+zjxHh8G79eHOU/st4//gcXPIMO
            "]], 
           PolygonBox[CompressedData["
1:eJwtlndwVkUUxT8jkezu4Mjo6NgF7L23EZShCggm0kRIIHQCSeihSJOqCCLI
ICoiIoijKONYQAS7YBTpCBmaQxFRFMWO4u/M+f44887ZfWXf3XvP3VrFZQWl
OZlM5gVQDcyMmczJKZNZETKZbaAeejmYDH8Q3MDcI+ju8DHgCXiGsXfgG0BD
dAn6CLwyL5O5HX4nWIcuAUOZr4X+CP4xWIteDLrBHwWL4COYr8G1GL2V6zYw
A94BzICfxPy78E3gCPpHsAT+igCfAB6DjwYN4H24/zB8OetpD/+QsSnoveBJ
eA5jy+FbwGH092ARfDHozNya6LXtB+/BV4Ih+n/eVwjfB+YGx6A+97dG92du
Nvpv+F/gLfjb4Av4l2AqvDbYDt8M2mktYCd8VzTXN9rB7wazFGutB34AzAte
8yb4RjANPh3U4Pu90AXwcu0Z/Ch4Fb6CNTVgvg16AHwOY0Xw/eDZ4Jh2gP8O
lsFPAZ3gf4I34VeC4/B/o/+tnHf8Bz8R/S79c1fe/zX6cfQBMAD+HVgAXwnO
Zr4c3RY+CJyJLkW3gQ8Ep6H7oB/Q+0B1dFd0K3g+KEYvRY8L/sYG+HrQAD4B
nJ+cs8rVVaAA/k907HVPPnwQ9+RwrYuO8O7w++Fl4HR0X3RrrT049jvAzOA9
mAzvCCbBe4NLuP8y8KliBV5m7iEwET5KMYdPBy2Da0h7vSV6L7XnVdE5rtzW
NxbCh/O+xLUL+ib4zaASXlMxYvwQWAh/Pzi3h+mbwTmu2huOLgyuwX7o0dl3
HQve+4bJtaoc6I8+Bz04eE/K0Gcl74325CL4Pco/7v0guNaGRHPV3KzoPdbe
6h19uf9hdGf4UXAhui56LM+vRpeix2Zr+4/g3O3B2MHgHC6HN4/OveOgAv28
apLng76NnhvtLblZr3iJa26wZyh2Lypn8xzDMvQ4rl1Vi+CO5BxVbsqT3pD3
KGfh40FP5UNyLmlNveC3ROf6IfRQ9HPoKnT1rFcMjv43eUZBssfJ23brH+Ud
4KvgGrqY+fryPJ7/RPWJvhx8Bv8W3JXsmfJKrelG+Hh5RnAOTITfmuy9PZWf
yTmtXF4f7DXTork8Zyq8XvK/9QU/oyuivy1P6Ac/I7n2lPNXJOe0cllrug3e
invqBP9DCbxmcm2oRruh85JrRzXaA52SvUc11Rt9anIty5MaReeIckMxrAOv
nezN6gnXwJvIM9Fr0L/Bx0RzedIv8FHgc/hSMAJ+Fc+MgBeB+dE5E7I5OBD+
WnSsTgR7UXPGvgn2pHXam2hvk6co1kuia1cx7wI/COYH90St7Rh4PXiNqvUW
0b1GNa9Y6Zv6lmI2R96C3hlcA/KOlqqHYA+pjO4J6gUak1co55Rr8gzV3g/R
vUg1eB5zFyR7W/vgXjcl2ovU857J1khu1hPmReds9awnXA0fGR2rkaBpdE2q
FlUziu2C6DnFuFm2hlQ7qrHd8ubk3K4I7t2qWdWqenjjaM+R16hmr4VfD9YG
nxnkvcuic1Ee/BQ4N9nLtgfvZYfkWtCeqjc1QW8O7lFNk3u2erXGGiefCXQW
2BjcG+9lbGtwj2yV3LPVq6uCvfM+xnYEe2iz5DOPzjp6pkXymrQW5UhL9Ozo
Z/WMen2j5G+p5+9F74mOhc4o2uun0buC97wTumOyd+8LzqVqWlNwTskLfoo+
u8gTVsNXRffqYYz9Gp3zynXlnM4ubXl+T/AZpp36efK9Grsu+cyis4piXggv
Sv62PPDS5DOQzj7qWfny+uhc0ppz0cXKoTyv8X+YO3Hh
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
5dLy1WiTnZH8zQ880jk5Jrklet4kZ/4PBrj8VA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnmwV2Mcxo+6Kt3zfTNZrp3s22DGvo4lZBvtmyQhSe5tvTe5QrqVSptL
SimizWiVikIlWxPSJAkRyU2WYqisn2ee3x+fOc9z3nPe33ve97v8GnUua15a
K8uyaiiCFyLLpsOIPMveglNTlj2E74muhlXoZ+AN9FTIGS+GGvR22MrYz7AK
vRIuZuxS+BtdBZsZ+xrGo/vAO+jJ8Cb6RWiFruT5hpqjOMvK0V+gVzDWoPDs
VBiW+52ejG/EL9NauK6Ep2Epfgqcwvjp8Hvub2iATrAD/ZN+k2c/gBnof+A7
9KPhtY2DAegtUIYuhRnoWfA4ejm8F94z7dV0GK5vgYno3fAL+lutKfeerA7P
oXdnwvWs5UbYh3uj8aehW6B7517z1fhr4T/0qNxjH8OruZ8Zit6lM0FXwPPo
cngl9x6tRX8CT6BHsJ+T0H1hAX4IjEb3gDnoSj2jb4XZ6P4wDV0BC3PHxGL0
QFiMfgq6sLbuOg/m3oS/E38v/jH8RnxnfDf8UPwGfCf8Pfgh+PX4bvjS8No2
45uh18Gi3Gv+Cv19OJb66p5iEebqbKAx718FTbTXWpP2DuahH1YMo0fCEvQk
nTn6x/DZvg1defc+/HB+/8vc37YjPKZvXIF+El5HT9ac6O26h+4Fg9E7YQK6
HBahP4SXcz/TnPm74Acw/7v4c/HnwB78Ns3BWP1kXQ/GK/ZgPnoQdGSsK34w
z6/Dd8Dfja/Cr8WvR38aPqsN3LuS8dvxl+P/hTbofbm3BV1T7Nx9Nnz2yuE6
jI3C71Hsw9nJ7+hZ3audHNOK5W/gIvx5MBD9F5yFPjM5V//AH4o+LHltg7jX
C31h8rNRyO1hXPvlzvFrknNcua0YvwFdAfuHc+KS5Dn0rmpID8ULPIcuDud+
WbJWDajiekbyWv5UzKB7wyx0Yuxw9BHJe6k9HIleGt67knCt6ZP8rGrO0ehj
kmNXMXsk+qjk2NWZNEIfmxzrivHrknNWuZoxRzv0PK77Qb3wtzVJHtM3tkHP
5VoX6ugcoG3ys2uYYy/X9vj6XD/KXbtmhs9WNawZ/mYYi67F/fOTa6Jq4V7u
3YKer5wt9hyt8HMUE1AEJ+FPTs495cBx6OOTc1k5fAL6xOTcUI5PUWzhp+l7
c8d2C3ztQozv5to6+VtW6wy4tkz+rfdz166myWtVDVvCtXvyWaknHIA+MDlX
HmS+fow3TM7tprlj74Lkb1MMKjfHhXNdOboGfVf4Xe1J//CatJadMBt9EO//
mnvN6hUTwrmmnqG9OTj5We3RA4Uz0Vnsyl3LHwnnvmr6WHR1uBa9BkXJOaNc
Uc5tYuzz8NoVg3WTc065thVuQr8Urv1j4ArFdnhv1ZMuw08M907t+f3hPdVe
6htU28aEa7dqXI1qb7gXqAepFi0M927VJMVaSfK3KOaWhXOgpJCT7RSnyWtT
jVJvaKuakbtHqNerZ6pXqucrthaEe6NiTLW7Zbg3qIard3QK9zr1EPWW1uFa
rB6j3DiEOX/LnSPbdBbhWq+aqloWyf8tVNMqwzmhXNA7P6iWhWuveqBq563h
/yaqoZ8pt8O1VTVDvaFD+L+BeoR6SftwbVdPuUN5mfzfQD1FvfS2cG9XT1Xv
7Bj+r6IeujwcAzp77dH/6eRgJg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHnc11MWxx9hxpLnfqOFrCFCdiJMtsLUWKbsYuwMUkO2xsxgrLMx2fe9
CCWEopWyZE+bdrtkNwaD5rxf5/19/fxxnvO927nnc+6593x+T4dj+/c+vUVT
U1O/+LNs6I6lqemxkA1DHmpuaroh5MaQ+0KuDrkmZPcYOyBk/5D77bs25IGQ
60KuD3lQzfphjjM2NGSwtp4KGWLfcPe5KWSE+uaQx0JuD7kjZJT6zpDH1XeF
PKG+O2R0yD0h94aMDLkl5NaQJx1n7Gn3BNPrtseGvOge2B7XnNjwfXLIw9qb
IE7wTVQTp0lqcIx3HfOeFQ/rn3Gc9iP6dZt73+d+z4c8Ku4X1Pj0nGsYm6qP
4H5JDb6X1cRgiv6y5jVjDc5XQ8bYftT9ie8RnulvQ97QJ2Iw173xa6Y4wTFL
Db7ZauL0lpr9pxsv4vRhyLSQN0PmOI7dxc6boUx0j3nuSQzmqzmfd0JeEce7
avC9p+Y831eD4yP3ZI8F2iB+HziOT0v142Pb4zzDb92Pfb7SD2x8KmawfqYG
0+dqYvaFGhxLjN0sfRlvXL50HLvfuQ84PnEue3ztngtD/qNeFPK9c8H6PzWY
flAT7x/VH4lthn78N+Rtsf3k+GJtExtyqqnkGnz/VXx3Dtk8ZNmS+MG9cnx/
o73lSvYRg+VLamLwy5I4id8KJTWYflFynDFsrxHSPqRlSXvEvrlkXMBaSmqw
rlJynLFWJTGDddWSGkx3lzzX1UKvWHJP4jckvpcJaRNyQ0mcrUPeDGkR0jak
nd9gXV0NvrVK4llBX8EJjjXVjK3tOHt2EA/+rq8G03olY8fYuiEr2a5K4gPP
Bs4F92b6QYxeCHmwJNaOrmnl2HL69HrIsJBTeZ/F1Mk3vbhmU3Fid6bfm3jG
7cW0hRrcW6rBt3XIOvr+RsgjIf1CthUbuLdTg3t7NZi2cR3zppasNeDo4jg+
dtcWNnqosbGzfhOPXdTkzlv27xTSTQz4vqsa36lZW+n7SLF2DdlTn9hvD8dp
kyNLvIsvx/fT+nhgyK9DeoaMds99Sr6be2ivl/5xb36jxq991btqYycxHaB/
rKem7mabHPzE92ZafI8J6R9yUcgZ7numtvqEXBAywJgdpI/4crAaXw5R40tv
/SXeh7s3vhwWsp/tRb4H1Jazoj3QddQz6jP19YRoHxXyu5BjQg7VxkL3ZuxY
+9hnQcikkPNCJjp+vOsP1sf5vhm8D/AC6ib19dUYm+I+fwwZpG34BDWUug4f
ud82vGOYbfjHA7Zv0B71+4pYf74+1NyFeTUXqWs2Ne4ZbVEjxoqfOks84BfU
X+oxdZX6Sv2lvj5mu+YxtG91nPU1j6l5zePO+1PJ+J5cMt4P6ws4qedPiXOs
7SH2jRHneH0FzwTbNXehDR8ard/DxVdzmUnOG+x+Q9x/srE4N3w6pyR3wFdq
a81Z0M+LY6pj+EWNrjkI+hXjwtznmhucZmpzg9PQhi9QW99y3lzbdd39TGzU
12nNDS4yWwzUvunNDb5S8xf0TGP3uv4RyzdsT3Kc9dRq8vELbXAvP3GMWrlY
nNTr+WJYaBuc1Nu3mxsc5b3mBo95R5yLXPOIOKc0N/jNu8Zpnvjx8QNtgZs6
/qE4F9uu+dM8cSzR11n6vqS5wWM+NXYfanek+09ubnAaYj3Gt2/vktiordzV
dXw/eWfBSR3/Rj+oyT+Kgbr9rZi+t13zmO+Nxbeur3lMzWt+cB57UmOptdRO
6sm6vtm83U2+nS18y8FM31KxUiup6zVfoQ0+6jht4rdUv2vuUnMZNPOI17K+
0+DEj5W0RT2mtoKNOk7tr3kMbXBQt6nF8JDV9K3mMYyBk3HWzPNNP7Ikt2HO
T8aopTGA27QWOz5R09uWBo+hTVzxpaU42+trzWPai3Mt2/CiNsZwJWO8jnFf
23m7WSv2024HzwOc1PT1xbChbXyhdlOz4TIdxftiSX5zSkn+AnfZ2Bh1dH07
11G/4S2dxAiP6OKcl0pyi9NKg8dsXho8Zgtx0tdZTNuYu/i9re2ax2xrjDrr
9wbuVfOa7Z1X8zzWwYngGTuWrPPU6H30fWf72IP6u4e24Qm76Fc32zWP6VYa
vGdnfWVdzWt29xzq3wncD3hRV2MFf+mhr6+U5DSnlwbH6q7dnvrKPr1s1zym
l7Hort81p2Hs7JLcqG/JejPN96mndrE3oIq8qbJuwFN6a4u8gRvAG6aHzCiZ
c1eW5Dpn6sdB7lFzmoP0lT74D5wCPnFcyXw8XLtwFmoUHG1wyCX6e4D9zIOr
HKlNbMNFjtInuMbRpcGfGKfuHfuzPY513rUhl5fkNqyndsMrLnVP4nNnyB0h
fw65riT/oM4/GfJESY53T8l7wD2/L2RoST4P9zlRfx4OGVGSez9UMt+5J/Pc
50DPdoBxPlAf+hg34kpOTggZX5JT/j3kQtf81Tl9PKuBxnBsyB+0/a+SvJDx
f4Rc7Lw7xPl7Y3yOsfp3yfOnb75xwtcb3RsOe01JbkdMJ4c8W5KfnWCcjnds
kDF/zlgSl785B750W8itP4vvFa69OeSm0siti4zDALHXWC/WT2J2iXG42rPs
awwuMA7nee59xXqZPo4qec94L67Xv5Pd8yZjfpaxG6iNq7VzofHt7Vlcqb/4
cpX+EMt/uid+Ddbfi431EY5f5pwLjDNY/6JP+EPNoA5Rg/DxOmN2pfG6yD1v
0ZcrjO352r5GvNi7vTRs3Obcq1zXx7O6w/O6q2Se0EddI+9XNV68WbxX5Di5
Ti3gHnAfWjv33pL3hPo0RBz3OkZN5S3hTaGWPFCyrmxse4Tfwxw71fm02zjO
vE76RK1qpea+ddSfIc6nb3jJezjc9kaOD9XnN7TbyfEHncO95/5TL6hlo4zB
oyVryY7OoaZ0tY+xfs59vGSezXask/3Y2qHk/wSG6udTJTnc3mra9Ztzt3Gb
5n5d3fMJfZgbMqck/2OvWY7P1VZXfRnlvuOdy/3i7eL320meLe9ID/tes5++
cSXv1jjbe4U8U/J9P0574/X/DL+xTx684Fm9HbKoZD1gfILzn7XveOdgk3ef
N+T5knnInMnudb7t452LH9z1Y8RztGun6P9E5x+nvefsn+L3iWIF8yDPH583
EuvT4oW/vGQMT7NNvg3zLNs492Xnn+53F898qmsHudcxjr/ifPZ80X2HarP+
fxH3pa1nTh7092ynlUbukcfkGDwTjriM69507Qjn9LNvuj7zvpBjcFewzHDP
Cf5u4XcMOQW3g7esGnxhqyrPdu/Qq1R5JnuFblHl+U/0rI9SL/Qb/jNHn+fY
hneNts33SWFj3SrfWvadLa5Nnb+JeOknz0+JuetX+b6eGnrjKt+/HqGXlszb
I+N7yyrftkNCb1Hle3hE6D2rrIl9Qh9Y5Xt6eOi+Vb6DM/UDH+B31Ft4SvsY
/8F4gpHcJW83i/7dq8yxSfYTj7bR971nuk58/+Q5jtT+JsZpkXaIx1xj9b+Q
ravMuxJ6+yrvRe/QHap8xz8L2bnKOzUwdMcq689qobtUmVfLhN63ypicE3rD
KmvXuaE3qbLW/RiyTZX52z/0clXWw7NDt6qyRrUMvXKVnODQ0IdVWWPeC+lV
5bv6YcgOVb7nnarc43JjskCM8/3m/sLz4ElwooONBX3tYt2OVd6dBa6p187z
e80Y36nKezTGuJFTHxO/Kt/Jea6hjrfzXLkX5HJr8/mrkN2qfCvI683N7W84
8yr5AfY+KmmT82xT5ZmSR93NJXz5tKQ/8PLe5s3yVcaUeG5Q5RkQ/+/AWmX9
BuvikniJ5Tsl4/mF+U1uf+I94Y7sH3q/Kvka92897yC5uUaV+fm594Q7wvn3
MAeqKs+VM901dLcq+fI+oXtWWXc45+086xWr/M0AxyHHvy6Z59vGd+cq3zby
eu0qc3ujKnPxUuP6ZcnYksurm8/k7JKSeUu+vF8yZ9j/3ZI+kL8flMxhcnMt
8/P/8ig5JQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdrUEEQha8aK+KMJvYaS+z6oKIPFvDBKIgl9q6xlySoBGxYsGKJib1G
FISAIAFBAoIIIogE8T/Ye2+I6HeYffjYM9x79+7uObP5xWVFpQ2zLJsMOfDC
smypZ9kNxr7wFCZRn2PMgz7oMXACfQBew3LqW4yj4B2sor7DWAj/YDL1bsaN
Ft/2gv0Wc3yBDdT3NQ80QTeHLegqrQHdAk6hD8I3KKV+yLga+qObwkn0IRiM
LoEH6B0wHD0MtqG3Q2t0KziL3gVD0OPhDPqwxb9aeryrf3ZEF0MtugR6oNfC
PfQmeAMrqG8zjoSXsIz6JmMB/ILPae3HYCzP+nms9TR8h/ewB47AT/gE++Ao
PIPFvH+dMRe6oldCHboMMnRjKEdXwAdYQ32XcUI6+6lw3sKDtuglUINerz2g
23usvR56oxtBpYVH2vurlIXatLc/8sxij8pKO4+5lBnN/TxlpSatvQ2ss9hD
OXqgh3dPlAl0rsdZPYKF6AU6Y/RV6ILeDI/lu4V3c+GKhYcz0UWwF33J4mze
pizWpWx28vBOGZXXs6HawvNZ6EKPrFy2ePY76erk7d/0b3k8j3qOR1a0Bp3V
DI9/V6bsd/PwRj3QweOM69OZyZsGHr0gj7p7eFiRMqC9dvbwTnsegV4E19A7
YYpHZpQVeZrjkRllRRmYpm89snkB8tGj4bjFGTXzyKSyqB4b5OGJvFCP6N3p
cNHim6Ho+R5eaA26CyZ6ZFF3gnrRPNamnszz8FReyvOeHj1dlTKt3vlocTeo
h9S7BR53iXp4AHqcR29stejlrxZ3g3pad4Xe0TPdGVrrj7RXrfk/Mx2e7g==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmHncl1Maxl9CluR3nsmYRNGIGJWdZIuSGJNljGUMhkGjmdKMmaGNNltI
WcpSKrSgSFHWbFmGkb1MltRYikpKJZT7+znf5/PMH9d7P+c557nPfd3nPudc
v3fnc3uc1H3jurq6TvGnXthxqa7ub4HTAkNrdXW9Ar0DGwJFvEuBm+P58sAV
gRsClznupkA/+4YF+gT6Bm7UB+3hvmPcLfroHxgVuDpwTWBEYEBgYGB64K7A
mMCtjqXvtsCgwODAHYErA1cF7tTi63b76Rut72v1hx2iX+x1gbvlA+97tMR+
rxZO47XwmKCF90QtuZmkhd+4wPX6vc938HhAniMDD8mB2KfIjdgf1NI31X7y
dL8+yu8Hmotp8oTfw46l/UngtcB/Ao8GxhrXTDnD9TEtXB/XwvUJLVyf1ML1
KS1cn9bCb5aWGF91vhmBZ3wH7+cCk+X6mv3EMttcwPVZxzLuRd/B6WV5Uhf/
DjziHC/ZP02eM+W0X9Rri8Cugf86B/7myBN+b2jh96YWfm9p4fe2Fn7vaOH0
rpZ439PCb672+cA87QuB97XE8boxEsd844LHB1q4fhR4Ra4zXDfWbIH5JX8f
2/+q85BXamehuWCeJsF/88AWgc/lBqdP5Q/vr4ybeD/zHeO+lBt9i+UP7y/0
QXuJ7xi3VB9wXV3L9Ucsy2t5DeDaIOJYE3ZtYJlj6fsm8KG8V8kNrt9q8bXS
fvrW6HuRvrD/C3ynhd89cv4+8EMtPxP7j1o4rdfCY4MW3nUpW3KzUcoWfuv0
TZ42TvkdPDZJmefXtZzvlfLYLJ5XyK9+ypY+1mOV/Oql7KP8fr61sFXKeYTr
limPXS1X1naOXOe4lr9PmWdDz+v1ctrG9/D+ecrzEW8t5XeM2zZlPvT9LGX+
8Obs32A+GvmOcb8IbJoyv7NSnqNZYPuUeZKDvwfOSDlnjR1L3w7WI5yapsyT
uvhD4MzA1oEd7advJ/0T785a+DXXEuMuxt3IfY/d1v2PhXfLwHbGvruWuPbQ
EvuvtOybX+obv3v6jtjPCZxt7HsZE7H80VhbB9r4TN/e9uOvlT52lOdaa3Zf
ORD7Po6l/YJ7mvPxgGjvJg/OR+4A7oy2ciD2g7XEe5hz4688uznjDjVu+v5k
rO0C5wXONcZDfM+4w/VBjMek/D2+j0o5pgNTvue5K7k7j3AsZ3DHwEEpx3ih
fo8OTNVPp8AFgfONvbO+mfNYLf5+HWgfODLwG+fuEPhzoKvzTA9cpM+JxnpC
4ESf8X2SFt+/DRyn7+P1jd9T/u/dlYG/6uPiQA/7u+vrdylrppP1h4bq6bu/
BLoZbwfzRC56madSQ2HRCuVdy52EZhpmTtFMaAw0B5oGXYA+GGgNlLoJiz4Y
ZF3Qh85Ce5Ta7WZ99XfsLbVK39xbq/QN7cHOg69SM5UaCovGKLXXHfLgjhpX
q/QT2gJNNspx19s/1u+5tx+uVVpqgv3ceY8aH7pikvHebxuuD9iG52TbxDrF
dqmlphjfQ7aJY6rtUc4/VU7TjWms8z9Sq7TdRPnNNL5SJ3GP9zV35JI62t+9
UeqqUmc95vflvcK5Wmop9id3Guf9armhMWbJ7VnbcHvONtyetw23F2zDbbZt
uL1ou9Q3b8r7JfvgiZZ4xX7uys+MFS3xmnl52W/g8bp9pZbiHiq11BvynuO4
Uku9Vau01Nv2LZJ3qZ/eq1WaaV6t0ljv1iqdVOomLPqBfbW75+Bs371fq3TY
3Fql296RJ1riQ7mhLxbIZ6Ht8n5dZG4+9hu4fWofNfJqrdJhCxz3pvlj3Azn
oL/UymU+vjDX8ENvLDHWr2wT+1Lb8FlmG37LbZODr23DB42xwlhX2iamVbZL
XbVKnqttk5fFxlTqqjW1Sletlc8626WWKrUVFq2F7lonf7QFdzR3dqm3+GZ4
tP+RsmaBA7oDXUHc6AS0BTx5xz4hVjRDqa2waIl3zdniWqWx+J5coHHwW+q5
DfJEV+ALPtzBaA90Cs/fyQO9gY4iN2iQLT2/W1pnpV5cb47wwTi4wZXvy9+T
nBkDvP+4+wYH7vNuwi9aoNRE2Cb6amofHNAv6JhJ3m0nmCM0zHbmjv5G5ggf
6Bi0CzoCPVFqJjQJ9zz3LTrhlsClKeu4wrGMO9MYGsgHPdMsVTqMdqk52pr3
xsZU3/kbp0qT7ZIq7dXSGPfUB/7QGm1Spcl2Nx+tHLeT/a1TpdX2MF70yd62
iaU8Dw5y3Uot2MJ8Mf9ugnN6f+PbV1+M28/2HYF+KWul5s6zlz4O9PuzjXNH
+9A2aB30AloAbYDG6Wh8+EXXoG9GB/qnXB/4PszviYm7pL08+LaD8R3uOOY+
ynFoqqOdl3fojuMdh+YptRsWjdQ1VdqEd2icE5wP/XOcfo+3XWqyzvLu4Dzo
LmqyS6o0Fr6uCVyS8t4am7KWQjexv9j3nBX4PcX8nGyuTk35/OA79mM3xxDH
P1P+lr05JNArVVr8bPNPnaDFqdVrA/9K1e8KbAO5lXMOS/m3B/1TApNT1nCX
pbwn8LONzw3lOkm+IwO9na+NuW+nvdDn21PWuAe7hl3N3YiUNTd1Q21cYT9+
qDXq/LpA35T36/WOOd8cdzfPd6WsNVnLGwIDnWNa4OGUNXErfbCPRqWsmzv6
TTdzOzQwKFX57mGOLjeednJgfmr4KmNAA49P+fdeuW6XmE++6yeXm1y/hq5z
T9d6TMra+hTXlnuB2iDflzr+TuNoJ4++xgJ/9Dl1e6tr1sz16O3zjYGr5UON
9DIf1MXNKdfOmbZ5vi3Qx5jpP8f3Xc0tOeM8H+0an+c6nevYIc5zgWtGvh4I
3J+q3xODjbm7704074PMA/V4rXHBiTP6LPM33Dz1kWdr13+oPi411w1d5xuM
/WJz0cP1GeYawaG/ue1hrk5zPdnDZ5jLW81nP3PU2u/u9FvqYaycWJ/bXSNq
lprrKL8xcmQ9OVupkc/VDWgGziL2WCdrYULK9cC6jXDt4D5S/vTf6xjsPanS
IbSpSdbtLtcOfuPkSP94x6ARuC+5A/mfMb9P+H0wDx5FXufHA/sUmdMTgX2L
7LtT2O/N0xuBg4q8hjMDexU59scCexc5N7uFbVDkOtgh7FMpnyfogknWxtOB
A4qcsxmBNkWu0UfJfZHXsFXYIvBQPNcP27HItcldwN7nPlhnfMT2Le+KXCPw
qCeXFHbPwIPx/EzgwCLnqW3Yt1Ou66Pi+Qdzv00871HkNX/HcYzZEDimyDXy
SMp3Qxd5r7cuiJVztqeWOU+X03Jr81A5cI5Odtzp1hd76Ur5TbVOejruVPvY
a+yz5uHzM5+PiOcV1lSzInO4Sq41+bJuc1JeO/xPM4es4XcpryPrsCrltWhS
5LwPsBY2tx7I8eqU87xlPH+S8jk83bzwPNF2J9d5K9d6k7Cdi7y3LjIOxqCD
G1mj9G/qmHZh56d83hwez0tT3rusT0M5UhebGSfrU+catQ/7TcrnCvV4rDX5
ZGD7InN/NtC0yOf8K4GWRc4vnLYocoyHhl2Y8jmEj631c1jYz1M+e74MLEn5
fyQ7x/uvwt6d8t6am/L+OiSeP0r53JqV8t7o4neNivztSuMm5hZFHseYj/2e
b79wbub92rVn3T8wX+RqmfkiV7uE3bXIe2+RfOCycdgORT6rjgy7JuXz+MeU
9wN7Ya19vGfsRo7/Ceii3+I=
            "]], 
           PolygonBox[CompressedData["
1:eJwt1Ndvj3EUx/FHlRghvl+bGKVogzv+BRduJC4kLiRCIiF2qV21YnRZNUqV
SokSJKK1I/aovbfYIrba6/3JORevfM+T3+95fuc545c2bNzAsSlJkvRHKh6H
JHmK0ShDi5gkzTGBeCIicU/sJN6NhsR9sId4FI6hCpOwGK/xxu8txykcQC4K
cAL7MB15uIHbGI7VaMOz/3HmYB1O4yDmoRCH0Zfv7OUcgCu4jqFYiTM4gvko
Qiu+W8s5FcVoy3Uq5hBvQEviD5yTsRwnsR+zkI/jqMYULMEd3McIlKA19//k
nIE1eIBHGIlSvPUaqTZZOIejWISluIjPyMYKPPF3KPKeJDz/Judar8lfz6HE
c6wTrWaq1Ww89JoVeg73vAcFnvNLz0G/PR6X/B31bkNwzXuU5zXtzLPTsJl4
MDoSd8JC4kHoSnyecwsqUD9ajVXbuWgQbcbKvIeNuX7GudF7VDdazUp9Rtpx
3T7avf1Qj/gu5/pgPfuIGmz1njWLNnPlXtOmXHfApmA53vKe5vuMabZ7R5tl
zfh7XMCyYDP823uqXs4MNuuHPBfNvGavUbTZ1wxmEHfBGOLtwXJNidYL5XwV
3zENq4L18o8/Wz1V7d75bKiGz5HO/ds4Kz23y94b5fgCPfh8QbDfrPEeVHhN
MonPei470CtaD9W7XfgWbCeKPadfnqNy0wz/CLaT2kXt6JdgO6bd0g50595u
0XZPOX4KtkPaHc2w/itCtN/Sf0aTaO+kd1HOX4PNvGZdO6leKWflqp5pNl75
bGpG/gMjTrg4
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgm4ztUTx2/2Xd5zftaufb+0qKT8VdpXWrRKZalEiGzZ60pE2mwlWdqs
RcgSUdpIkRQplUjJllB2//k03/d5e547z5wzZ5s5Z87M9/zuW6VNl5s658nK
ynoqb1aW/WVdE7KyysSsrKuNrzDqaXSt0ZdGfY1uNPrYqJfRdUarjB41am70
mVFvo2ZGq436GN1gtNaon9FNRsVs7qJG061cyHhBozes/I3RbUa3Gl3Fmqms
rHuMSlh7caOZJitivLDRVCufaryk0VtWPs34EOv7klE1K1c1OmbyB63ewugW
o85GdxjdadRBsluNHjK6zeh2o46SUe+ivi2Nath81Y1O2Jzdpde9Ru2NbtYa
5az9buPdjCpYubzRbOv/SMrljOmhca2Neoq3Meqk9dGvl2RtjR41amd0n1Ff
o/uNHjAaKBvQd5A4dgxIuc209VNfdOwvTttj6suaTxg9bNTVKFd7hN1Pyg50
f1x9aRuivrQNVl/GD1Vf9maYOLY+JY6tI2Rbb6PhklF/WjJsfVZ2ovszRn1U
f04y7HheHFtfEGc/RmsvsG+UZNTHSIYde4LrPc5orGS5Wr+t9po9u0nn+ovR
V0brjMbLfvbmFdmJfa9JV3SfKBn2TZbN2DdJMuqvGo3UmNc1Dvumywb0nSrb
sOMNtWP3m+K0zVBf7Jimvox/J/g9mGX0svTlfN5KuRw75hhNkB0LpBN2vCMZ
dsyT3tgxVzLqC9UX3ReJo+NS6YEds7U2a7wnvbFpsfpSXyIZY+40ne8IbtNd
wXV/32iZ7ED35eJvG30gzjofimPTp0bzjd41+kwc+z6WDdi0Qn2xdaXasalV
8DXXGH0hvZfIhqE6789lM3as0jjqqyVjTJbd+33B9+MjrcPaW4zWptyf1v7H
vnWyDZvWyx50/Foy6t9IxnwbjT6Rrd9Khn3fSYbdm8Sx73tx9N0sG9D3B8mo
5zWd80S3u1J0/X42ujv4fvwkvZdJ163SGx2JVdxj7vMF1v9so3OMtktvdPxV
tlH/3WiD7PhDeqPvDsmo79ca24x2qh07dktv7Ghta9xr9KOVd6mdtj+lO/u9
T5x7/Jc483a2cZ2Mso0OaB10/MfoN+l4WDqh4yHJqB+RDL3a2vg2wfU6Khm6
LDDZXuPHjU6kvIxeJ8XR65TgOmFrVnAZ9TzBZeiV38p/S6+80vWg0bzgNjJv
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
/zidxcPyD3yDu/uSzn9/cN/9MuV8n8r7JMef/wx+b8epD2Pwdb6zcX/uVTv9
2Pv3guePWjqH8TqLpZoXHMgdGi0fiWZjiJ5viB8ndKbttS/syQOykzu1S/ZS
5wx4LxBLKkZ/P/D+4X9Ab1v5hpS/43hj8j6bE7x8V8r/FzNHPlPFypWjYyPu
KpiEu/tB8Hmap/wsSkVvezc4ltqjsZSJn6U0x17Fuj3aN3TLjq7rm8Hf+dy7
jvKJ9B0dKX/gGxTxJepch0mvixLLDUa/Bc8BzMN7mu8k3EPuIHeR+9lQ/PXg
d5X4SjzlHhAnuM+nyyeeUXm3+jOOuMr9yZUd2DNWcWyX9h8/2hI8jkwz2mp0
fcr5NpVnGP/VqFnK+XaV8ZGfgmMS7vfXwe90Il8g3xJ7yO/kXOLBmuAxoHT0
3I+PET++CB4zfjF63+i6lPdhLsazlz/Kj/CRb+Un0fYySfyMllnf5cqp5xtv
rrd0WWsvZ7QheN8LovfnXv4gH+Aecv+5+8Snr4LHLXx/g/a+qY29xGhH8Di0
MXgOw3e+l/8QezYFj0989+CbD/GJO7JYe8X+Ldceku+Py8/hx1RmDGX+Pwj+
AIeAN44GxyXIcmzOutHbcvSdDf/5OzheZC2+c3D2fB84ovF8i/tZvoKfcHfB
lv9+e7JyLdU5/2Xygdr6php1npwrMZP4+mnwnABGAauQK8gDnwfPD78Hv4fc
QfLGyuC54qB05TstueWj4DH7N42hfzethf/MUhtyZIekA/d7h/aNeEAuISYg
f0v9uWN8o+M7Fv41TT5GPOMNS8ysIfxDbKmkeMKZ0n6K+rRUf2Ih95V7y34S
Z3lbrhbnvQlmIc7m1f9fNqsNObbn1xtjhModdLYFhH0Zl0/9+d5ITMRG4k8h
/W8dm/jOiF18U+TbIn41XXLODluLxEzfIpIznm+X7A3jimks+1xC3yjZP75d
NlccKKZvmjMlT/s4+uGzyEqo/3Tp00a+XFL6cy6n6nvoIvkfvndAZfyWOEy8
3qN7AT4GJ9OfmEDc4FslOaCV7nJKsZ17FhWDlqg/sWiB5iW2IyuteVgzal1i
UmnFnKnaH/ykfnQcXE55oKJiC/Ly0mG2dErnqQr6NopPga3xK77R8Y2P73v4
F37GNwDGMHc3tWdr/nnSmX1ARhvfvdbKR9cof2ZLTmysqDx1qsWqkon//gI7
CsmWp4wPk98SP3Lkb+heXzYeUUwhtpST7eB/3gH1ZG899afc0NYZHj2PHNa8
vJPAAnwjJodvNL4iuv/Olpw9oW8d9ectRpncx7nzm49jktWVnuuD7y9j8eVp
ilGt5XP4WyGtc538f6rK+PB09ec7MPqhGz47S7FiuWINd4H10QPfa6M7hs9z
D2aEzH2ZqTLxcobm5+wq63z53Uo1+TB215DtjW3f/pd4vr3N+LToGKKJlS9M
PN8OZP8Tz7W3yJ/AV7eY7M3o+ON2K0+PjgPe505Hzy3kJvANunxgfEx0TFfE
+reNPt9U430VfwqYvHX0PM6+ozc5qIXJX4+O5x42Xj3x3EkcIzcc0P0ldyTi
tRXf0Bd72Wu+k/BtBRx4o80xKTrWpn9NjQ2J53Vy9E3GJ0fPzbTX0pw3m3xK
dKzNHmMjsfp+7nXi+AD7XpCNfAPl/9V8kxtismuiv4W4B2cnfhe+s3LL6Pnh
e/w6ui9s4qyiny0+Pkt+/qTxMxLHa99Y+fTE40d941cqtow1fnni33nviX42
//7+yvj5ifvoh9HPhnM5y2RnJp6fzwWzRMeZ51m5UeJY7VXmSBxTLsaWxPH0
RCu3S/x7QHnjFRLHKFdF9w9844rofoaPrSZmRM9p4Hj2kjfLPJNdkfibZ7CV
Wyf+/uhv5XsSf8f0Jh4k/l7pwV4l/iboxl4l/r7pzNyJvzPWW/nr6G+Lx/DP
xN83M63cIPFcutDKTaPjZN5kV0fP759H1xU9y1jf9tHxGOv3iq5DXSv3kQ8z
96Do83c0Pjt6Hq6CvtHfiJzJuOjn8qLx+dHz+4LoeqMzundSebTxt6K/j1YZ
XxmFQ6OfPefO3vSLvj/sR/foe/KV8bXRc1RVk4+PjhM5q1ein9cP6BUdJz0X
3Vfwkwusz4jouPhHfDw6xkL3udKf88mNfkbFrNwueozkHLpGP4vCVm4Y/b3d
zMrnRX9vvx3d//A9fOq16H7FnRga/V6sYW+iv5loX6Q+LyOLjk+2G/81+u8H
O0Tfa/aZ82yhM91PnIiOC7G7mnz1bysfjP67wvwmy5f4/wnzGM+bOBavZbxm
4m+XrdZ3W3S8WNBkhRJ/e2wx2c/Rf9tYyWSVE8fie0y2NzruXMJZRX8jsR9F
E9+TqxIfQ/9dJt8Z/TeP+OCd8sOK1p6d+LsKf2kin9ln/M/ov5fcYfyP6Jg4
y/qejP4bydpWrpP4G6ZN9PhLXOIcSiR+Ftcl3o8+xGN8Gn++OHocJAbeZ+Xi
iefhy6LnAOL/JdFjIncYf58gnz9u/ET0d1eOtb8RHW++E/07CO/vo8aPRP8d
6CHjh6O/x0ZF9xV0Oyfxu8o9vTB67CZuXx89ThGjLjP+QPQ306XRcwb54v9T
Jgwo
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnf0j1Ucx7+kddq/+3lKy2l3Og3RJCtE2WRFFCWRjMxk78rIHhGStORI
U0MDkbLL3iurlJLSer3P+/fH63zfn3uf53vv/az7XN68XZ22BXO53AwoBMWz
XG5w5HIdUy43En5EH4Il6BpwFvPnwvfo+rCTub2wCF0NtqB3wFfoqtAVXR/G
oVtBR3RnaIF+Cdqhn4JH0FMgj/8+Dwbk5XIDoQ1zU2Egc5vgMPoX+AZdE/qj
H4CJ6PbQCV0Pxiav8SS6DoxGN4O30XOgD7oh9EL3hbbol+FxdG0YhW4EfdAN
YULyMx3Q98OY5D3fiZ4Lk9ANoAu6W/isU+FqznItbEG3hCvRrZlvmnymp9E9
oQ16OlRm/l3syeiDsBz9HbyHfh+qMD8D+1n0NPgI/SH8neexRugf4FN0UViH
Xg+zFI88+6IMDEr2iWJTAZ5PjpHOWgmGJ5/5Jta7UWdI/s/KzK2Fj5PHaikW
MA/9Fv9fgmdrYFfL85pl0SvCe/+JsbroVdpz8p7vUX7wzjHsIlAauxb2UZ2d
+QbYFWEY9nh4GL0AqqDvS45FORicHJPp4RxTbmlsVjjGiq3+43V0P5iRfMY3
lFvwCnqE9oTOsf5KdB0ogD4ZVmst6BHek/aimP2BPgHL0bXhV/Qx+Fa+Sc7N
e8P/rRxVbpaHIck5Oi1cA8p9xaQqa80Px/aQfI5+UzWCnqkcQH8QzuWt+Gdm
OIeUO4phdd7/JPzsYeV0OCeVi1pzimqNZwrx+5BqKFxzqrWJcDa6Rbi2eyfH
5jXs1skxUmyeyH9XMbom8561V+V4TfTYcG0dgX3orfAlejEURx9XTqO7QzH0
UVimWoB/wzGQ71fAn2Efy7d651XlFmtsRQ+FmzOfWWfdLn9rP+HcP55cm3cw
tiO5Rodg35q5t3WC1di9YRt6vuqZuduhc/I7Lyp+2BvRA1Rf6OfC755I9uXk
cCzk0+bYE8O5W0B9DnsUvw9iF+b3FvgnfLZn4IbMNaDc1x5Owz4F6qLXwG/h
nFIuyUcXM7cMuzF6PaxEt4fNyTWlXqGeqV6pnnFV5hpU7emZlujCjK3T2WAp
9mPqGck1fD5zJcK5oDH14gQT8tyTL0RfkLk36j9a8ewVmX2jnlYK+6LMe+sL
l6EvgSbJPtwdvjN0VyxUf0HvCusucF3mnqleqRgfCN9Bunu+hqLo/WHdVfHX
2WApuhs0Q5/O+72SfXgb9qmZfdkTfg7fIbo79M5JmWtctb0Kzsnc09XLdcep
l5VkbGdyT1uIfRf2LvUS+D2c08pl1fxf+TFWbNUT/lO+QY/knlIo8560F/WU
I+EaUO7rTpuHfifcS/sl586ZvLM2OYd0N8nH8q3uqErMjQ8/qzujqXwDc9Bf
wKPoJTA3+T+aoBfDbPTnMDo/R5Wb9bDPQDfP1/JhBewx4V5wIDmWRWBDckzX
hGtItaM7YVJ+DRTIz9HGYZ/JV5/pDOhF6mnoBcm9eED47lZPLhnuIeodyrnu
2NdnrnX1oIPhmCvW+ibZHs4h5Y6+OUrx7DDs3ckx0lqlGduTvGYZ9HDG9iaP
yRdlGduX7JPy6BdUb6y9P9l38oHOLh/Kt3dnnpOPx2FXzFxL+qa4NPMdrrtb
PiqHHqEcTl5jW/gbSd9G6olD0RvCvlGOFeX5Ypl7mb7BdDcNgg7Jd5TuAvU4
9TbdCdXCPUm9qHzy3keG70adQWfdFI61zjwbXT38LaAeJ19tDMdCPtNeN4dz
R3veE6451Zq+8ZTLBTPXinL6f1pekf0=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgnYjlUTx19LyS4859xlyRqyZEsS+uRLq76UktL61UfJFm0SSZayL2UJ
SQqRJfuWCFFSUbRI2deytZDwzc/8n+vput655r7PnDNn5pw5M/9zP2/phzvc
3j57VlZWuxxZWfaXtShkZVWKWVmPp7KyvrXnQUZtjPYajTL6ztq/MP6q0X+N
vjLqb/SI0ddGA4z+Z1TOdJQ1mm3Pm40GGrU2ehC56ehqtNWehxg9bvS90WCj
x4x+Nhpm9ITRDqPhRu2Mdhp1NOpgtM1oqFFbo0ttnvJGc+y5n+ntbNTFqIq1
VY7u02XR/Vpgzw2NNzAKRr2sX3ujDkYvGbXTe0WTVTCaZ/1flryjUR+jTkZP
GvUVZ77ekiN7RfM/ZfSq+NNG/cWfMRog/qzRQPHnjAaJsz5DjJ436mY0wqiH
0YtGrxv1lL3DjbpLNlR9XzAaJo5spPri6xvyAdtHp9w3bB+X8rXD9lHqi2ys
+iIbo76MHywbsW+8xuHrBPmJf+/KJmx5S234OlEcX98WR98kcfx+R5zxk6UD
X9/UPMzxntFrWo8pkrNO09SG3+/LH3ydrjbeZ6gNn3432mm0y2im2lin2fKf
tflAHF/nyx/8WCCOH2eDt88zmqO+2Lsr+LrMNVqovvi6VL5h+2L5zJotl2/4
sUh9kX1oNFWyJerL+C+Nlkn+kcbh60r5j68fi+Nf5+A2fmK0Sm2zjNbIZ3xd
rTbeV0gfutbKP9bgc9mNLZ/JN+xdJzlr86k4sg3qi9/r1ZfxG+Uztv+hfdht
tEltzP+1OD4ldi6zR7e3S3A/yEtb5A+2f6O++L1ZHFnt6D58b7RNdmPLVtmN
vT/LN+z9QT4j+0l9kf2ovozfYfSF9mGn+Ffy4yv5t0f+fC3fNup9r9qwt5jZ
dnF0P/apDduXBLf3oNEh2Y5dv4hj+2HZhE+/qo33o7Ibn36Trdh43Gi73tln
4p1Yf83m6hQ8fv+Urdj+qPI9+fEZ408b7bfnM7KDOf/+h425gu8lOj4M3n7K
6ILgbSeMTsp/fD0rHfiRw/ock42npY85zgvuA+f1/OCcOXIG74ssK7iOI0bP
2fOzwecpHFwvffMGtxXdeYLbxXu+4G34dLU9VzeqYZQ/eBs2FpEObOmqsbmN
Fww+dzajopJjY4Hg45C9YNQt+BpcaJRdNqXUN5fGH9G+PR9cdzC6Mrqt0ahU
cH+w5eLgdmNjMXHmLC6OXSWNCmnOi+Q/Yy5RG7oqShc6DhodkF2lNQ8+ldf8
CTVXHH0VxBlfSTqYv4rmZp4rqcFGlY1KmC+5o+uuJV0VtNblNA+688jWj9XO
flSVPtagpvoyvrZ04McV4thSV3Niy4vSUQ8dNn+B6PrO2SRb68sOdFPfqEfU
pwZqw94RwTEINfu64LHCuGtkB/M3Mqojv0vbPBdGt6Wn5m9sdKtRE6PraYuu
599GTYPrTcuYu6He6+t9glEvzbNa4242ukXPjL9B47DrP9JFW1+ju4zuNbpD
Y5jz9n/oaK42bOxj1Exj7lQb+taqP7IW4uhoKb3ouEeccXdLjqyV9DHuPnHk
94uj4wFxdIA3wZjtlTv2KHeAAcGJYCywJxgTHAbeBLeCx8Cw4EqwGhgTvAlm
qyA8CE4Ch4IlwW3lhfvAUmDP9sGxGpgUHAqGA4eCZcFqsxUr4NqywqHgokrC
nmCwysKb4LQ0FgTHgCvBWWkcCger4UNvycDXYGr64k8fydqpL1gwjUeR4Vs/
vacxKPgsjTuZO40109hzoGRd1JfxDRXvxDR1DHxBnca3ITob5CpqDjUGP8Fg
w2QXWOt1+TRK7z3VBm5jLUZoTDp/kUPwebTGYAe4a6x8o06NkU9gq/FaizEa
84raxsn/salMbQPLzJL/EzQ+jUffSmXw6ETZBC6bnMpgU2TgUXBXGp++I9kA
6Zgg38BoU2UX+GqG/AFDTdcaTFO/kWqbJltnacxojXtfPlGTwWbgGrABuAFs
OUe+MD+4a57sAlstkr1L9D5JbQtTGfw6X74t1Ds+L9UY7AJ3fSRblysO0phy
pfykbZlsXakx0zRuufxZpTH4t1rv7MkavWM3WAs8BwZZI3+xb51k2AjmSuPK
TyXDp/WS4efneseHDXrHRuI4jZfhX8i+jZKlsWYae26SbJjWhbXMpzil5qXv
BvgB/p+rGMAu8NdW2cH54JyAP7+Tj/gDfvtedm/TmHUah+yi6Hj3yeC2kPd2
y26w23bZR9uuVAaD7khlMOhO+f+z7AB/gUHAG+g7oTb83qs5ikfHo08FtwVs
BgZbGhyPHkhlMGgak8LBecTmPunCn8MaD7alfbN8PSIZtoLdjsu+o5JhO/ju
d/mJ/Jj0npTd4NCTmg8sBZYB0zAfuOuMdIGrwGDLg+PRv2QruO+U7EB+Vj4x
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
77dFryXUEc5WTc07IXpuxcf/A1sj/68=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlndwV0UUhX/BiCWi0Zh3NxoxBMvYwDIWdCwgCiLNUERRB4IEJCGJICIi
IChIkSaiWFABUSkBhYyjqIM6igMWigKhFwHpUkQgYPnO3P3jzH77dt97+3bv
PffVKSwrKK2RSqWmo3R0p6VSB9GyJJUaidbBa9E38LeoTkilLkG/w2VoEWMV
6Hl4DmrP2PfmfBJ9DU9Hz8IV6BB8AD2e+DtehG/gnj3wXrSP/h7UBf4FXc/Y
YPr94cloGPyROe9HR+C95nNXoBPwf2gV3A2luD8dVcHdE3/3X2h54mvYBN/G
+CGtBTWEx3PtJXg4yqF/EdoK99Q9jLVGb8DvowaMjaQ/GH438bX/iZYm/g1/
w9XoN7gIvQx/Yj73IJoCf4VmwruyU6lW8Gpdo7+bfkP4JFqpe9GpvO8MtBZ+
Ap0Jn43Wwz3Q+XBAm+ESdA6chTbCxagNvND8LE7oHngbWgy31jfpLNFs+E1U
pbNDO+GF6FF4K/oBboaGwN3QB/AArQnuiKbAHyY+1ha9nficJvAFrGEL/Aq6
l342/U3weHRh8D3XXmvOg8GfqWf9gwbCRYopuB/6Qs9GveEZWrNiB02DJ+qd
5jGm2NIa7uJ5D6F/4anoUvhytB2ez363Y+5681ivi/qbn7nOui9Kgu+x9lZr
1loKzPdKa7ofvozxbXAlz1tJvy/6g/6X6ArG+tDvBb+GtsM70Dw9i/l3MH57
8L3VmXRnbCP6Dq6PlsDz0TD4Y30PfBT9Co/SHpnngGJfMTMPHo3mJn4m0+AB
aFbiMdwVXmN+ttW8/5h5zCpW9cxecB7reRUuRRfDT5rzBMUA/LlyEi5HBYwv
MD+LanQPnMm1DfA41AFebL52nUE5/BMqhDtrPuOFWn+270lJ8BxRbuTS3kT/
FnQg8ZyrD1+HdiXuEY/Bbcy/pSZtJ/rDaQcydrreo/M338ta0dvkKfISedx9
jE+UR8CHdUZ6t9aoXFa8Mt4ELUl8jUsZaxp8bqW+AR7BtUFwhvmzdqIfE3/m
fnOPlbfKI3SWRdyTHc+0HdwW5cP7UGN4AmMjEt/jDfImeUziMVEJdzaPHc15
Hd6NfoaPoUnyKvO9LWbOYfOYUazIA7vw/FH0h8CZtMtQM64dof+p4jn4Hujb
da2U/gz69eDatOX059A2op9PO848x5Rb8tCrgseEYmEHuja4B8l7dGZl8Czu
aQDn0fagP5m2irXm0HalP8bcm7PiXnUy9yrt2WZzT5WXLkI3Bs9h5a72aAXc
kmvH4QWoI/wM1/rA6bTLUXOuHaX/GXokvjMrflOL4HuqvdScm4PXONU2xWCr
4HusvdU7Hqbfwjz302hvDe5h8i7VmOPmni4vV004hbG76Y9JvEapFg41P3vV
xLrBc0y5pZp7Jf2rg+/lU9pzuLd5LVaOygu1hrToiavMPUjeo5pybvCaoFqg
nJRXyQPlffIsecMgc2+VRzzA2FvmXiqPVG14wdzrVSNU25VzyjXV+NnmZ5oX
c6B9zEHlnmJ6boyZ/BhzpeZnpLNRzDaGMxhfB4/VfprHaGaMkbOC1zzVOs2p
iDmtXNY/SAfzHMyIMSrvfQ9NStyD34kxlhM9+Br4afO91Jwawf8Z9K+wWp4R
fE1ai2puLv2m5t6nf4JGcFrwuaPlaebXxPoHqRXcA+V9qtGqTc3NvV816rTg
NV21fA2y4DVStVE1/LzgNVK1UTVcXj4WDU3c04vNPUjeI08qiTms3JXn9Iwx
rtiWh00199TcmAP9aJ8zr236B5lpnuO1o2e2NM+Z9JiTitWawdeqmN0Sc1C5
p3+CesH/YfTvon+G/wHGsZ+m
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmgnYlkMXx1+yL5WonplJKe2l0oZKm1baVym7xIeKlBZkC2Xfo4UihEIp
krJHUUq0aqNECyFZUr7zc/739XRd77nOzJl7Zs45c+bMf+Z5y14yoEv/gwsK
CuYVKiiwv4JGsaDgTKMbcwUFpxivbrQ8FBSMM3rL6FKjmiarYfS1lesYr220
2sqnGq9ltNLK9YzXNVpr5dOM1zdaZ+UzjJ9utMHKHxlNMRph1NBkDYw2WflP
o+eNRhrdSLvp8oDRX1a+zejW4Dqi63dWftba7tc3TUzW2GiLyc8y3tzoRyu3
NN7CaLuVn7LvRhndadTZZJ2MyhqNtfrtRncYPWF0m+rjje4yutvoU6OZRm8Y
TZBstNFE8TFGT4vfY/SM+L1Gk8TvM5osjt7NbO6mRltNtyc1P/o9J5seNHor
53Yie9HoEaNHjV4welj1qZI9ZvSKbMCml40eV32aZMwzXRx/vCo+zmiGbMOm
12X/BNk9UfbNkm2T5IunVZ8tGfZNke4PGT0vjq5zZAftc9WGHW9LRv0dybD1
XaOXZMc8ybD1Pcmw9X1x7PtAHPs+km2vGX0oGfWPJcO+T2Qz9i2QjPqbsuNZ
+eVOxUEFW6viRv9aeaHsxx+LtU7Y97n6U18iGfYtlc3Y94Vk1JdJhn3LjebL
7q/EsXWF7MS+ryWjvlIy7Fstm7FvlWTU10iGfTvUxrdrJcMHL1r83R7cpjuM
LzK+zuhb2YC+55ndnxlfb7RRdmL3hpzLqW+Wndi0SL4hLr43+lL2bRXHvh/E
selHcWzdJo5928XR+2TToUj0vbhTdmDfT+LYNNr0vzu4rH10fXcZ/S57vjP6
RXag+2+yZ5PRr5JR36NvselPoy2y4x/puk12z9Z6/y3bsOkvfUt9r2T02ad+
2LRbc6LTfslYn46mcwejUcHjbIdsLRbdjoNMfnDwMnYUCs7R/ZDgHJsODc6Z
57DgHB8UCa4Hcx4eXIatxwbXFfuq2FzHG91lsqOD24N9RwX3BfVjgsvoUzh4
P8Y90sp/yGc7g+tbLPj+Z1+zx6+3en+jAUYlguuNvsWD20O9pGToXk5jHG+U
kwzdT5Av6BONjgg+fxJH3xNlA/qWCW4n+t6rMcsaVTJbc9F9U0r96HOy5mSe
0hqD/uUlQ99u0fWrxTjSGx0ryjbqVYyCdKwm/ZinqmTUq0uGvjU0H/qea9Te
qAPnrHyBXrXF0aWOeAWjuuLMf5/sqylZcelUT+3oe5pRZel4ujh6NZROpxg1
kN7UHzJ6UDqm6HafSR8rlzJ6wMqN5Q/0bSKOvk3F0be5dEWXZpJRb2FUX3q1
kk5nGLWUjHpryRqIV5V+jxg9LN3Pll7o0k56NJUvm2rODuLo0snoLM3/s/q2
NTpHYzSRL07U2nTWt+j1mNGj0qub+jH/4yp3NeouGeP1lE7o0kMy6l00HnZv
Un4l/xKD2b5/0misvr1A8zF2z+jl840ulIyxrzS6yOhi8R6a/wnp1UdtyIg1
cF4vo/PwqY1ZxugpK1+usZnzCs3BeP0koz4+OF7sbTTRaILGKx29b1+jX8Sv
NrrB6Fqj64Lngn4au7/moz5Qsiv1Hf2uMXpGZfoPkox+gzXWQOnRSWs1VP35
dpg4eWi4OP3Au2C/64wmaewhGruvdKou/As+rCHMC26rJSwMfqsvnAtGrCv8
C344XTgXvAj+BeeCEcG/YGGwI/j3luB48YXgmBe8CP4FE4MbGwnngrHAwWBF
sHJjYUnwVnNhXvBhU2FhcnALYV7wYm3hdPANdoMTwYvYAz4EL9IGBgIjYsN4
1bFtguoZDqZ+u/ox1ij1YyziqaPWI8PK9MnwMRgS28BcGUaerDbse05tGabM
MOYUtWWYm3GJ2zcV25zh4BdwyWvSHZ3JGeQO8gm6giFflu7TVM/wcYaXp6tt
nMZ6VWO9rjr2z1AdPcCHGXaeqTZ0nKU27AM7ZNh5ttqw8y21QWCrz2QruHGO
zlJwIxgSXDxPdXQE+4ELwc5gyPm5PFbOsPN7akNv8CFY8c7guGmtbFigNvT+
RHXs+FR1bFioOnovUn229F2ktZorvTOM/r7sW3yAbeCu9bJhWS6Pl5dq/bAB
3PildAcrZhj5K7Ux7gq1Mc9K1fHHKtWxB6yY4eXValsgu2krHx1rgonBm2sz
+4NjZTAya7BENrwtHZfIno2yhzr4Lsvlm9TGt9+pDXvAiltk62a1ZVj5+1we
K2/N5bHyD7k8Ps7w8ja1Yc8OtWX4OMPLO9UGnl+nNXpVvsBPYE9w888531dz
tFboAe77U3qDG3dL1z2qb5IM3MlZBUbi7NqlOmcY+oEVwY1gTHBtgdr4FkyG
Hfv0HTbsVx29/1UdjP+v7NmoOcG+nM+c02CVLdIXPJphZfQoLqzHOGBYcB14
L8PK4E7sAWNSpz94EnyJ3mBA+vwUHOMeZ1Qx+v1wTPC12auxMywOpsUesCf9
sQcdqGfYHf22qt9f0re4/AjOBMeB58AfNWQnY4MxS8gG7C8lvXNqyzBxhpHh
QTaUVh90KqM6a1BOc22QX/Ff5ehY+Z7geLmM9P/UaFpwTM0anqz+R0mXJBvK
qw2bKqiO3hVVv192lZF+YNHK0req6oxVTfVSWudqmg+cWSvksexp8nsJzck8
4M268kslyTIMXVvz0Q8Mul52E78Ztq4T8vib+SYHxwpDpEeGSd8zmhkcF4KL
wcqNgmPnhlo7dAVbnhny+DjDy03UxnzN1Mb8zVVHP/DnWbIVzJhh5JZqQ4/W
atsVHNe2CY6RW0tX5gaXglPBlWAm8BJ4kvOza8jj5naajzO8Y8hj6Paar7Pa
sLnLATp1UdtiozdCHhd30/jM31115gCLZri4h9qY41y1dZKeGaaA95K/ztF4
jAUuBXeCMcBUYAowIzjwWo0Nhr1Q34Hv+mqODC+DZy89YA7Kl2jsfurDd+DT
K1QHh4IZwVKctZzDvwbHvlcFx8X/0zh99e3VGm+A+oO7wc2XadyBausufZl/
mdHbwbEwfcCxg/TdYNWxE5w9RHYPVT3DwUNDHgdTb6I1wI/PBselw03/dqbL
zVa+Nef6DtJ4YDZwKRjtY+PPBa/zfTmjm4Jjs5FaB7DfCMnApmAXsAxrc6vG
A0Nw9oIrvjQ+Nfh7CJyzl3PrZck4p/YZnx78vls0Oo5Zq7ON7xnvHeMvhTzG
4fzg7Pgk+JsRshLKbUU0HvmMHFhMZfL8PKNXgvd/TXPWlIzcz5kUoucy8tis
4PFOnC8Mfn8mx803ej3k8wF7kv24KPg9Ftm7RjNCfr+yr9hTnwW/cyKrrm/p
+6/m4273pjh7mP3H3mYPvm80W/W20q2NdEIX8tLnwe+Z9GOfsQeI/w+C/xZA
/UOjOSF/x4MTz18Ev/shI6aJTWJ+qdHTweN+ruTE5kHR65MUN8TPCMXL84oZ
4mWKYoZ9zL2IeDk6OibL4uJFrTVvaFMVJ0uC30t7a+1fOmD9X9F6HRP9DMti
aLrWnTV8Vb7hfeM1rTXvY8QfsUdcTFNsEL/c04jhB7W+DbVuM+XPY6PnwSwu
3pD/n5CMOOFuNlV7Y6zWq7fiYIbWnRxAXugn38+Rb2+28S9K7sMZipXW0mWR
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

            "]], 
           PolygonBox[CompressedData["
1:eJwtlXmwl1Mcxl8JLaS4+J1zLDdyXevYB2Ub66AyjTHGmHBblPbk3up2dZMs
5UqSRhLtaSGVUkMSlVZJmiYXaZJqaKhIGz7PPO8fz5znOed9z/ue7/l+n2/T
sh5tutfJsmw4qAvaxSzrl7KsCWNtIcsegveHV8BrQ5aNgm8Dn8CfBxWs/43+
Bt6I8RA4CjagD4GbWL8FHIXXgJdZq4/eCd8POqEHoM9gbIz+i3E/6AJfBIbB
67G+A74PvIR+CiyEfwFehPcCH8OXgnKe/SH6Xf3Tz/CtYDB8Gria9TL0s/CD
oDd8CHPFjO3R1RrB9OAz7oH/DprAZ4FePPsH+iv4iYyvgoPgGXQVaMN6BboP
8dqEfgDdF/00ejP6fnS5zoDeiH4dfm1yrIYopugeYC58CXgO3g3MgX8GBis2
4EP4YtAVXs37ZzG2QNcqFmB9cIz6sLYPvRZ+EmNP9Lros+gMW+DzwNfBMZwF
fwF8Dn8TvBf9T/qXUWBOdMwV67FgM/wDsA4+H3wHnwHWBJ9hfvSd6a7Gge3w
X/QO/BUwIfpMOssIfRM+CHyquwZTomOgs48EG+HTwOrgmKyHvwNWBu+5AT4J
rAqOkfbqAGYG76mz9Yz+V51xL/xPcDd8HugIryRGRYwZujt8N3w5vKHuDb0p
+lnFVLm0CywLzqkd8F/BRHh/7ngF/A2wIjin2sJ3gi+Dn6mBN9A3lPvBsXs/
OvaK4UWsXQb+gQ8Ej7J2MfoAfDK4JPkZrWnuEfgA1TDf3op+DX4Fc1OV26AZ
/HywHV7JM+fCzwPbgt8ZzfPXoWcoVsGxWBnNi/JaHcs4LLhmq9Djou8yMg5H
r2EsRpdqHr0qr+0Sxhr0stxbmuW5+63eC87hO5NzVrn6n2pCtaeaC74jeZM8
SN4jj2qZ7EHynmNU1+Bk9J7gmm2v2Oi/Cz5zW3RV9N3ozLqbG5g7HHxHLeBj
mBsanDM3JueEcuEIuD255lRr/4LG6MnRXP94CvojPQ/2omcz3sPcAvgY0Aj+
VvRe+kd5z/fRa/Kge5M9SV6kPSI6gS3BHjKUuVOT95ZHFsFPS/aS3qyfLi9N
9h55zNnwc8CPwR5eDG+anBt90c3h1yfXmmJQgIdkr5KHnSlvSfb+8oJzvQxd
J8/5dvDHwaTgOcW6A/rYPOaqzYnRta0alTctVM0Ge9RieEmyt+udn+Sl0bmp
Pe9jrVXy3Y5Hd85zLuY5toSxNLl2TpBPgAuSe8tx8jFwoXoUur7yETRE/xY8
tzbP2dI8p6+EX5PcGwaBq+Ajo7lqqDV6Uf4vE5ST6Jno0cF3fDl6RHStTQG3
ot+O7n2zweq8JkryHDsc3QPk/aq55XmNqDbUsw7IK6J7lzxoqbw0utdUF9xL
O4Hjo3vqE8kx0NnrRvfOjslcPbRLckwUi3p5LLqCBtEx6ZwcU8VSe96c3PPU
69TDj0R7orxQPf5S+GPRZ5VHycueTN5bnvYwvDI615SD8j55mLxLHigvnx7d
W+Tp8u6p0V4vD7+D9+9K9gLFWL1qQXQvUc/qlhwTxUJneBDdLzpXVTPqTXOj
e5V61Lvw25LvQp7zP69nb04=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Kk24nPO3lu8orys33jcsw4E7fjLutpYrzba687S2fVV31rap1lSVxlrPd586
rvCY5Fx+1qi1FmONlmrv+KChNpIL/tAaG6daR22Sah21aap11Gap1lGby20L
y3Db0jLc0BpbGTf6YutUa6dtUq2dtpXT9pYrrdLF2Fl36I1lc9FUO8lnB78h
bnTEzsa9i2Xi3tVypZc6GxN975lq7bSb3Dr7TaWjdk+1Xuqaar26gXXc1Q9L
tXbqlmrt1D3V2mnvVGsnyivkop320yfa4SA5oDvQIZUe/v+e47cd5XaA7Xb1
u0pjHei7Sp/8UW499AFnNMghqdZ+FTd4HGrdH+TWxbqe8jncd/A5wvJUn/dJ
tXY6KtVarkeqtdMxcuM9+oT7I/dZ1md2rDukWkehN16NcRoTNj2Vu1mnXO40
lV46yX7RC6elWl+dkGrN85dUa7A/p1pf9TIWNAiaBI3VW15H21+fVOu0E1Ot
neh3xVy0zTl+jyY4Vz/ojko/geiT6v7NvfN4605PteY5X85/1wf+zrKvSi/h
A913imOIXukrH2I82296WU+5uuvje7dc9OT0VOurC1KtnS5JtV66zHfcNa5N
tda6ONWap78cqEPzNNQuZxvvNc7vKrlorSvkea3vKp12qd+jUwb4nrvO7fq4
0zLa6KZm39wkv0rnDDLGGx3vSjdeaIw32HbPXLTWh/rju7tSrUWr2PHPGYL2
QvsMlA91tzoflMnjmY4zMXG/5p49we/QIPenWi9V+unBZu/QF9zjF4XNd27R
X/fpt9JUaBi0Ebro38aOpqr0Ezgk1XpssD6e0AdldMrwVOuZF/wGnYJuQQ+N
aNbvCN892Ow7+n7KvvbKRUd9Gs+/ykWTPJdqjYSPdmqse1Ktl16SM3pnZKq1
FuUxjt9453ao8VSaalSqNdLrqdZFYzX0yaRUayrmhLOcs7C1/l7TD9oIjfRW
qnUR84eWGqevSiNNTLUeo46/N82x362jfYdcflualwqyTrfMZR9nD9+M3zD9
+9QsuTC+X6byWydnc+tc9OGrqZzTU4ydc4A9l/3261R+6znFORslj69SWd/s
y99b5pufUvkNgj7Yp8hZ8prfO8i13taRl+QsvwWQ0+TzglR+FyAXZ8sZvt+k
8rcB8vOLVPZo5muXXPZqyqvmkhPkw07mCHO5OJXfHfDzQ9i3+lsvl35nyHu2
3Gfob6DtaM96+020/9nxnipfuO+vX9YIYz9X7ktFXVMu8U527to7lvOcL35/
WCDfJanodjT7FlH/i3Gsm8scnOL4sWb7mjPo8Lfj+cew75znWT6Ptr8frcPn
z+YKMe/n+vnYcYHrwbncgcgNfqdapM+5zuu+jn+TY077g7wzEesvzlN367hr
LGef3KkOyeU8g8u+gfu4X1P/O8+5aeYTY7xmLvlKPB28z3C2752LD8r0s4rn
I/Ur6Ou38hvpmDIG5P9KxkD7ffRJnm5nLORqJ9fFGMerg37Brb1Todf4bX3H
VNZdG58PyMV3K39zp35D54xzizML/+s6DqvbD20ZpzWre3PgGvY5x3bt7b+1
eU5//M54uXm6QS65yu9dG4YNS2Vsfi1f2ra1/TaeS/3MqZxLjNQ3bJPtv69r
gL2VfZV8b2/Osw7W8azH//rGwBpsZwztrB9mHq3tPDNXazlfo81p9petchnT
HY1nW2NlfpgnznfW7xbmHWO2ubnCmtjUddHGfjo6VvTVzxzdzrkmhzo4p7TF
N+t4W9tfbj6w17BP7pwLt2FypMxew3rirOSc2cS1Cadx8iKeHXM5Uxm3wwIP
9Zvv/Ga0cW0vx+3lS7zkUydjaGcMQ+2HPtlDQHzweya/LfFbCb+d8JsZv7nw
G8wr8f7lXNZlS3OVXOppPPSzg8/cF8CePrey/Uj57i8X2hzmt7fYF/sndx/u
QOy9xMp5/6jrkGfWJXnDXfEIkbsjZwXnwe5+29H+iYv7c2fb8H4P2/SzzJ3t
Q333009XfZ0RONF1dWHY+64H1iN7UAvjwAf3894+n+zaZL9jX+M+z/2YPfzz
wBMdwyvJBcd/fOAXuazVeWFf5XImzwmba46SN12dR/Y/+jzVvimzP6Cj2WPZ
E1pYf6rtD7HNQcZGm9X9ZjX3wAOMrbXPreTANxv77YE+E8tejhVj3s05ZQ9h
n2X9Ldc26szZiwI/yGV/WRJ2Wy57yeLAG3M5N64K/CyX/eJo5j+XtbZ09HNX
LvvWg4y77Y+Ek22GBg7L5dwa4Ngxbn8KeyKXNTIt8JxcztXRgaNy2VfeCeub
yz5zZuCkXPaax8LOz+V8+1fg4FzyZYWI5zzrzwp8IJd94M3AsbmMwQ1hQ3LZ
Z24m982NYwNPMx58cw6xr3C2dzMf2DNZLy0df86vnZxTzqHqPNrX55WtP9f1
yHpjrbX0mX1m5Yj5llzuB931S5+X4zOXM+DqsIfMtYcDr8/lrvO1fL50D+R7
zmvy9wpjXjH6vzaXe0SLeL40l/vC3bnkOm0m5JLr5Nf8sG9y2YufDHsqlzsB
sfxkPLfmEjcxvx3P43K5u/F7AToWzTo5ylNyOSeY52Md28tyiYMY+ucSH7GR
O4vNn8cDj8tl3z7JfCVXh8fzxbncB8nBI82xZwKvyeX+9Ujg4bmcO8eY0+Tz
8bnkK7n6Yzw/ncv+z/6xKJc9ZFDYTOec8b7XMf8+l5iIh7wjz8ixhfH8XS73
ym9z8Y1f5vM957RX4N9y2fP5fWJgLvvls4HP5XIP6x02wjYzAj/K5Wx8ntzM
5Q79buDUXM7pWcZKnHzXy29/H/hiLv+n7Y2w13O5K7FfLshlz2St3JHLerkE
zOW+zHic4Jicm8uaZD3+DwW0JVw=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGdsiFEUhr+aIUbEbr5bO3YaEUmJRNLEL//8QkLFjlJ7FrFHY4sRM3ZC
opUgYs/YQoyijdasWaqqKOV5c86PJ++54/vuPeeec1oNm9A/o0oURWlQDSaH
KLoHDeBqHEV30NtQD+pDBqRBCWs/4T32Ozgd2zfP4Ad0gS/MDUVvQG3IZFyM
ToVG0AmWwytoDW3gBOyEQvZWwn3sadAYGsJAuATVoSfrT3RPnYvdHK2A35DN
uC1aAC+gpZS50+h+3Rk7Qi/CBajm/zwDp4KtJcB8yIcYAmyAs/KR7z9AOvYA
qOJz19FrUMt93gSV0A3yWD+nuLjvHxmPQ69ATejH+HywPVrTPwfBH0iGFOa+
o6VuN/ZY3vfYKKYT4BbUgSz2jEcHQzF2OVzGngFN/Uz5Ph2aeAwU+4SkKOrh
bzBK84x7eUwXo8v0Zth/YZhixXp3dAXjuehW+IqdiO6Fuqz3Rd8w9xh9CE+x
m6EP/E31lrrTLHgUbK0itreqwfe9/c2WohPhV2x3WIf9AdpDB9gXbE52Geu7
PMeUW6Wx5dqKYLnR2n0vgc4eg+1wLJhvm2M7e2ywWujtvuxRjsTmU23Gm9F0
xn08VqvcV8WsCEZCDuN2epckO0P/TvW7r4eO7sPzYDWjWmmBbvMcVO6p5pSL
CyDJc1K5ppgnes4pNiPcV8UoC/stfMd+HVstrwx2F9X0N70VfIotBjdhYbCz
lUM/odzfVmd+1l64G9udq+LP7mD/TkG3eEwUC9VkHjoH8mPLiUnYY/xtfsO8
YD1FveQ55GAfDWYrpor1SfgXW8xH+pkpHtPRukuw3qQedAA9qHti58LsYDWg
3FfOvcReEqwXKCZl2EfgT2w9KztYzapWNfcL+3iwXtQVXRPMB929CAqD7dGa
esxhmAKPY4upaml4sFpUTalWFqEFsdXMalgb7F/ycYfnSKrvUe8YEqw3qIds
DFYjqg35qNrODdb7VOOZwXqweq9irt4xM1gskv1uh4L1Lt3xP32h+7o=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQncV1Max18KsxiE7N1zKQppQ5u0l5SUeEslZhSJUdlDlkxkyRqyZMs2
YcxYJrI1mKRJI8UMY5lmmMWIGTNmLGOZ5zvnez/3/Xze5/Pcsz6/33POPef+
/u/OR08bNXXDhoaGUc0aGuKvYUBqaDg0bFRY66KhYbOwzcPa6LcI2y2sRdiW
YTeF/TTswbC9wrYL2z5sV/vSr33YtrbtEdYybJuwPfW0tQvbKmzrsLbOTXl3
6xjTwbl3COshJuKMDRsYNiisc9hOYa3C9g4rwlJYp7AdbevoHJT3sb0M6xa2
S5F593RuuO6nB1d324m9r+N2DutlOzz214O9tx7efeVMPvrpyVl/PfwG6DvK
qaPYB+nhN1jfJewAPVyH6OF0oB6Mw8K6yq+PWMBxkHVwOticwnuknOF0iB5O
h8qHOUbYl36jbKftMNvhOty5mXe0nPuLt5VrM8Y6eDc6jn6HW0cO5oddEPaj
sHHmghwcIX94T9DD+6iwofL+vh6uP9CD62g9vCfq4TRJTw6O0ZODY/Vwnawn
H8fp4T3DuZhjinVwOkH+cP2hHn5n2pc4J1rHXp4eNl5+xzsH40+yDq6nyhN+
p+nhd7oefmfowXRK2JGOOcuYcNoy3vNvwjeEv0JMtM+UJ/zO0cPpXD24ztPD
b5bcTnSt8FNdM/y0sNl6+F2oh9OcsJPFeLEefpfo4XepHn6X6eF3tjzAerlr
AIcr5UH7XPvSdpV18LtaD79r9PC7Vm7nuw7sNfbZddbBdZ596Xe9dRfIb5zj
bpA/vP8W9puw34bdIk/43aqH3+1yA+8C80K/e8VHzNvsS7975EDbXXKG3916
2haaF9b2DuemfKd1jPmxc8P7ETERZ23YM2FLw+6XJ+/iT+R2Y9h95oW2Rc5B
mTuBu+HmsIfkA+9HnRuuP9eD62Hbif0zxzFmse3weEwP9sf18H5CzuTjST05
e0oPv6f1i+S0SOxL9fD7hf6BsGf1cH2+yPcbnH6pB+MyPfyWiAUcL1gHpxfN
Kbx/JWc4rdTDaXHK41eFrbAv/R5JmedLYb82BlyXOzfzrpbzU+Kd79q8Yh28
X3Yc/dZY94zrx9680HxfVOQ997qc4fo7ecLpTT3x35YbeN+wL/3eExPx37Iv
/d4VB22rU+bzh7A/yo2235sjcvOOc1M+K+XcrAv7k3PD4x/GAMtrrh/r9tew
V637oMjvHJz+UuQ9TdufnYPyetvh8ZGc4fqxc4PlzsCwMGWMf7ed2B86jjG/
ZB3DzmbdUub3Sdi/m3D91FyQp8/0cPpcD64v9OD9rx5OX4W9X+Sz5Gs9/L7R
w4NzfL24NkjZw2nDlD3Y/yMWcDRLuY5c3pwy3o3Dfytl3PT9dsoe7N9NGTd4
N0k1v++k3E7bpim3w6N5ynOTy83j+Ut5sAZLXbMtUq6D0/dSHgfvFinXwY87
hLuRs3WrlHnCj/OY+4e7594o35NyTL7j+Lbhu+fWlDltF7a9z2DfQQ/XHfVw
3UkPp1Z6eBd6+CU9eHcO2yxlfntb3kWjDn5tUubDfburHh772K912G7WbR22
RxO8rZ2D8XtaB/a9xA3eDnrwdtSDt5MevO0dx5h9nbeN3/r9U/72Py+sR9iQ
sG5iBdf9YfeFtQ07N2x3+/X0Gbz76cHYS0/M/fXg7a0Hbx89ePvqO4mlc1gX
MXUxrwP15GyQHh5d5QHWAyyD/cAmGAc36TvUOvAO04P3ID14DxYrGG93LeA5
wjrwDrcv/Q4J6yd2NAHf3Xx/t3U9W8qjTHl/HC4+sMwy36PDfuB6oMHG2g7G
MfZhzDjrwPt9YzNmmmXmOEJ88DgqbKT9xjuONjQWmgVt86MoX2D+jjb+YWEn
ONeEsLXiOCbsQvFOCjtOrOCabnzmmGIdMU8MO1IsE8RFLl8IWxbWGHa8fYk3
1b7wuThsTtjElDUkWgnthBbsYPm0aJsslmfFeHLYKT4fG3aGmIhzqnWMaWEO
Ks2KR9+BaZB7Bx2M7uNcqfQw5RnOR55ONz4x0K7tzC/6dXfLle5Fg70Y/Z4L
uyhlDdzeNrRpR7mhUTtZRrt2tox+6mK5pfMRg3XjnRno+g2UQ3I/Vpp4b8dX
3/cz5dPdc7P6Fp9jPtB6PYpaD/eUWy/Lle7tVdS6d39x9bEMt76WKw3ct6g1
cL+i1sD9i1oDD3AMeurQotbDA4taAw8uag1MGZ2Etphe1Hp4iPzQfQcVtZYe
JLeDbYMPum9EUWvgkfIZZbm3WEaZixGOh0+jWOEzuqj1G/fU8cZEH4yTG7pv
jHzGWq407RHiG2dbpVcr/YpH73G+cMdzn1e696ii1r2Uh1p3ZJMcjTfXY8RY
aeCJRa11jy1qrTtZblMsN8ppSlHr2xOKWj9Pks+JtlVamrZu4hsmt6n2G++6
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
xtkl
            "]], 
           PolygonBox[CompressedData["
1:eJwtk1lIlGEUhn+GsYikXaMwv2MLDRnZYmW7VBRiN022EGGR90qXWmHRQlhG
tFoUERYpbRbIgEQMdOGN0F0TEcS0WpGlthJZz+Gci4fzvv83/3z/d97zFe2u
S9bGoigqhzi8DVE0U6LoGjUBOegv1DY4AfPwcyEffRNK0QtgYrB3PsIsfCv1
OkxHf6W2w1UYgx8r9l/7YBR6NDSh62EAFuJvUW/DG5gh9q7u0Qtb8ClqA7yA
7fhHwb4pC2vwHdTTsBadgMPBnm1CL4O76AcwAv2N2gKnIIkvgAvo+zABnSe2
dgB+wTr8GeoR+AHv4Bwcgj9QwfpZ6lF4DdX4x9Q9MBtdDAOF1qNPsAv/hLoX
3sMruATnYRxr46EZvR/++m907RhUsjbk+iK8hB08S1PL4ClU4TupPew5B51B
D6JvUIvwn4Ppy7AN3+fZPITnMI1nV3QWYDm6DBqD9XCJWM+0V3f8LAGOBzvT
SrGea6/vQQy9QWw2mjzLzWLflvJvjcRmQb95J3ok1KC7/WyDnkXas+/33ugM
bMXHxXrZBVPFzqhn0zNMRk8Sm+2TsB7927PUzFbjf3qWLZ7dP89SM5wv1pMc
n2m9GyVid0HvyDPvofZOM16BXiV29oOwET1cbG+dsWFiM6+z3uyzlPXZ1ZnS
s08Ry1Z7kCvWE+2FzvRi9CKxrPXOlKO/+146o/n4D8HuimaS8R51+QxolkvF
stNM/wNW26MK
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
VdfESNu5L51S8v70wpJ3q2Md//HOxTDX3Q+uPeZprP2e6Bo8t+QeYo7PcoxG
+R3m+AzrU8WA/8wZWPB9A2MrWDiTOGPJCYl9Xzn++E4s5/xi753j91hHo/0G
+/lM68fpC/X3S57lqzpm65ufTAl9Ss219tvvODVzaca2y3OBXIO8hn37QugL
a+YIC/ke/fwY5bddc9+Hfss53iP0njXj4XaW4av9Iu7eWnMfkqdwzhMjFvA8
ZHxWiWceqBkv94jyIzVjzLOhn6uZfzBf3IlfUDLH4Txkn5NDkesRR5aKd4fW
zEvuI05GfdGaORd5H3GH+EKcIR69Hvr+mrF5tXj24ZrxbDyxv+b8XOiaYf1s
UfNMog5nHVCTp25rmZjMXSL5KXec2AZqJ28lf+XudxfLPEfeMEj7jj6/g23Y
uQPmzOUd+iZuwTGJXbtp511iD/8PxLPkj5zDxKzqWUdMwP8prm1yUs5J4t25
xC7yWueMueRe4VvvULg/wba79t19hrnexe/iAzlgq+ZeIg7i0+H6tqzlQfGd
G2rmyOyDBV2fXWHfu+bc4gfzxnn4EvPm86vGM5fVPHver5krMB4rh/3imufQ
kjXPV+6w2jXXGWtsxXjmAtczMa+tndxteeeB93rVzv0XZe7H8HEh/Rwe+sSa
62Jy6G8dU/JA/v+MnHCv0MdYHmTfR3pGLOZY9fJ75ABrhG9X1Ny3H9bM59j/
K+gb/fRqZ15ITsh4L2c/fOcOnzndtcI6IR9ZyrkbGfqumnOCfRkx3mG9ufdb
Wvvj7ImaeRo+MqbkKz31h/OOs5Z7EOLMOuHbuJq84V37Yvw+q5nHk59MDH2N
z8B1yDHJq+gPnJyj7O9Sc48fFXrTdvKIp6t5ecl1z3cXVa+kD5xD5HDET/Y/
5xZn1tWh145+5gm9XegB7czvuN/gvuO336rD9l3Nb5HXwUXJ1YglO7ezP/bl
gNq5q0Jzx0PceqVm7CJ+9G5nDNko9LCae+3I0APbuT8uqble73PNbOm8cO5x
/nEOTrbOGQpfOU9/phiDfjvDaq5p1vNFNfcDe4HYuXo74+flNfcM++UQxqqd
uc5yfpf1AwcaUzNPvaVmvCZWk2txFnJebxG222rGEmL/5u2M/5z/jGE/x39r
y4zxto4zNvIDcoM7PRuIh5wPxBDiDecez9DHM4xDO3M39j3xgr3PGfJUTd84
czZr57lDf8wXsejRmucH2MGzo3PV5Pfk9sT7l2vGfHzYznf7x3s/1MxVdojy
9u3kvgP0kTg/ouZzPHNlzX3Lnr00ymu28+z92rljHm8OvWE71zQYuzsOYz3P
LjBesu6JmZz7c7v34RBwELg23PR09wh17n+5+yUX+0vNuHqafZLPdPMZ4idz
OG/NeSTn6qFvrMcna67JLaO8VTtj4taht2lnzLs+ZP12vn9dyHrtfP+XkKk1
8wb2x90198jZNWMN6/nOmrwan5eOZ5Zpp6/4Nae+dbMMpt9s2lnfnLPkVIzf
Jo4hti3cU8Tdvu3cE+Rr5Kwj3DubiZe8kry2mf9NjQ+MA3uNZw8LvW477yfg
puSA+9rn5n6L/vrb51auaeYRDj26Jq8gDnH/SyzqGfZRNeMbPszjd8nzyLvI
K1h/O7nviIvEUGLjtTXj5qPOHd/FlxdrrjPWGOcXuTsc4P8BhEBFJQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnnQlmMUxp++0qJVJS3ivc9d+iLzEWNQ9pHGMkNlbUFGZOnDjKVEzCBk
jBJClrG0U6mUltEUJZVKKLKUaSwxliSk4nfN9fxxzbnOuZ/7vbdzrvOmwbV9
hlUVRTEa1APfRVFMAu3Bb6kohmEPyUVxIPZD/IWyYAt8HhgD3wp+hv8HnoRv
A7/AW2GXgiHMPwm7iFgP+MvwxfDPBPjzYAH8U/AI/GvwA3wfWAS/mjndsW/j
P4C9A3wC/xI8Cv8G7IDvBw/C7wSb4F+Bp+HHMb+NzgHeBevBt4z11JrwZ8F8
+EZwKt++ir8Evhm8D7+eWE+dBb++7gLUw5+O3xjeHNTHn4FfB34AqMKfit8B
fjhoij8Lvw28PWiMPxP/IPjBoBH+m/gnwl8s70pn1FssD+9Fb7ISDOWb0xQn
Nh77FJgCH1FhX4zdiD8teQ81+GOxc/HXgbPxp5VzPwe3w68iVoPdyfwt2C/A
huQ33gwfwHg19mP8u/Q24Hf4laARYzfhf5B8J83wb8auSr6TmaC37gBbAafD
X9c7JL/BTv0W+Ae+B7TOzjnlmu6kHX4tdnXynWX8W7Fr8Ztj54A94VwJ7IWM
z8auwN8KVsFHKYcqjs2F/xvOlU7KKXAtc07AXsc334drQLmvM1YY65S91mz8
X5XbYDf8L3AYY7fgr0l+4zfAaOWkcif5LVaH96I3mQJ/SDkOX5bMh4ffQrER
8J/ALngtWBuuAeX+NvBaOMeV27rDieGaUC0sBNXs5zb8j5RbsmBdeKwtuAf+
R/iuH0/e60i9efKe79bZw2cbBXbAf9Sc5D0tgA9ijW5lzm3CXoHfpcyZzvCu
2Wu/pTWwBf5K+GRQN7tGVBt1GHtOZw/XnjRgo2o7fHf3ggnhHFTuqUZvgFdl
z9VvSnv2aY2wBu3HPgaGVBwbB47h+/XJNfC3ck1vDB/MN7t1VrA9OUcehv8J
9uK/AM5j7rnZd6XYRfD7wnM1552w5knrtEZfxu+HX1PxGsrdQ4k1KXNYtdJE
GlHWTAt4A1AXvwFomq0p0hJ9o1pqid+wrKlW2ZohrVCsY7bGSFu0Rjf4kWAO
fstwLhyVzZUTytWE36zM2cjOceW2Yl2y31Bv1yJca0dkc9XcE9ijs7VEazTM
1kRpoc7QNlvjpG3qGd2zNUra1Dqs7RcTy2GNPyc755RrHXUnpWZUypyUlp/B
N+3Cmi4tf0brhDX9TPztYW3WN9KaWTpjWHMuwD8fTEyOSWtmhNeS5vRnbE24
tqrL2p6uNytr/KxszZPWdShrYXKYqyZ6ZdesalVzLs/uOeo1qolLsjVHWqMz
qzcem30X6pEvYU/O7n3qicfDFxPrWp5xYHYNq3YVU271y9Y65Zh636V6s3AP
vAw+T28Wjknb5odrTxqnXqweqN6nnqze9p5qOrnHbVCthbVJMfUG9Xz1+pqy
9oeGtVIaoN6sHqLeoR6t3rQiXLvqUa+AU7J7vXqq9rY3/F9Be/wf0FpcOw==

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmQnUV1MXxl8zGTNlVv7nUjLPZOYzkwyZ+3xkpsxkDBUVKQ00qJCkpEzJ
lKhXKWWqlISQeZ7H+vZvnd9d11rttd9zzzl7P88+557/fU5Nzmh/TLul6+rq
dlmmri7+1V2Z6uq6ht0WNrtWV/dl2BdhN4adH3ZBWEf9hWE36S8KuyWsXVj7
sNvCLgu7PKxL2CVhl4bdqqevk2MvDrvZGMx/Imxw2JCwrsa4Iqx72JVhV4Xd
rr867A59h7Ae+mvC7tRfG9bZPODoFXZd2PVhvcNukF8fPfz66uHXTw/GbmIB
x90+g/c9ejj115NzkJypx716OA0TX8+wgdaIcQ/6rJc16GrOofKH9316eN+v
h/cD+jutXTfn9LQGcH4o7C55jzU3GEfKGa6j9PAbLTc4PWyNGDfCGLQfcSzj
BsgbPo8ZG96P6+E0xnHkftTYtL8Nmxf2bth3+vlh4+QM16f1cB2vp5bP6Knf
c2HD5fqCWMH+snzIOVGeYH9JT98Ex1KP543B/KdcA3BMMgY86q0jXF/Rw3WK
nr08Vf9k2Kt64r1oHnBMlyf8XtPDb4Yefq+HPSu/N/RgnCwWcLzpM3i/pYfT
23pyzpEz9XhHD6cPwqaJZbY1YtyHPgPXXMdOdn3q5T1fD+8Fcobr+/ppru1k
51CDIdZ0obHh+pX4wLVInnD6VA+nz+UzK+wT68K4j8Nm2v7MseW4F+XztbHh
8Y0eXF/KmdxfOGe2uJ9ybb6X53th+8b52Dxsq7Af5QzXn/TU8mc99ftFD9ff
xQr2f+RDzr/kCfa/9fT94Vjq8VvYR85vGrnXCls7bLEx4FGXch3hulTKHq5L
p+x5z5ZJ2fOeLZuyh9+f5gHH8vH8h1rmt4I84bdiyh5+K6Xs4bdy/P2rGJeI
BRyrpPwM3qum7OG0WsqenA1T5kw91kzZw2n9lPEtF7ZGyjVi3AY+W94aLDbn
Oinzh/e6eng30sN7Pf2y1m6JNSMeNYDzhsaGd2FuMG4a1iBlro318NssZW5w
2jjlGlGbjYxBu4ljGbd6yrzhs7mx4b2FHk7JceSuGZv2skXgD2vp+rzn/msu
50buy0Zy3VpPLbfRU79t9XDdXqxg31U+5NxZnmDfRU/fjmGbWI/tjMH8LVNe
A3DsZgx47GEd4dpCD9c99ezlvcOaGWMfPZx2Mg849pMbnPbXw+kAPZwO1IPr
P3r47S4WcBwctoM8DtGT51A9vI+wFvA4Uk+M48THGXC4dWHc8T4D41GOhfdS
ReZ5NDWKv/cK3yrsmJT/hvexeuK2dF4L67G2NW1tbHifbm4wniRnuJ4SdpD8
TpMbnE60Row7wRi0T3Us4w6TN3z+Z2x4n6GH038dR+42xqY9y/OH8+oj+bUN
O1ue8DvPGsHjHJ9Ry3P19F0gPvBeIgfyXOgzuLYLO1mu7fXwuFjPnHfDpoVN
DzvfnMS92TmMvdTYcLo67CzxXiF/eDeL9Woa9nH8fY24wdsx7CKxXGYM1uQG
OYD3cp8R6zr5g+V6PeOuNR59t4gL3oPDbg+7I+yesM5hXfSXmrOLnjwrBcYV
i4x9Ucrf8XzDd/Xvq8K66eHaXd/BPB3kd4ceXD30YL9TD/YtilwrYnUSL5h6
W5ebwvroqXdfPfz66Zl3tx5OPY1N/T4Ve/+wAf/iMVAPj0F6eNyrh8ddYTeK
42v3wDz5ne363eS6sQ8eEh+4ng8bFfZI2IPygccI+8HbMLivUeQ1GS0msDwX
NtL5n4t9pLEGOO5Rx4J3mFjJMdw84HggrJd9T4uD/vF68D4eNjTsvrCnnEO8
r8KelfMzjgX7OPuJNcb8g8Va1nisz4aEfSF2Yr0gB7jOCpsUNjnszbCJYS+F
vRz2mLhelOcY+8cYuz7sSfG+5DPmTDcP9Vsn6rp2kbHDjT3HvpgiB+oxVU89
XjHeOHGzd3uI7wnzvWZs1vatf+F9PWyCeN/Qg3e28+vtHy2fGcagHu+YG1wz
fcbYOc6jb679U12rHvLht5pvZL6PSw3Dt36pGfiGXmA+Yr+vB+8HevB+qGcd
0OXoVnQsehrtiRZFT6NP0a7tfEa71PDMWWgMaoMGQ0egbdDKnY1V6nY0Hbr9
Ntvo8q620cTdbKONu9su7wjIV2p1tGup1WmXWp02OrWnbfRqL9uXmL+zPNGe
d9Uq3d67Vun2PrVKk99dqzT5PeJCcwyxFvT3q1W6eqg5BjgHnmjYgbVKww+S
52Db3Yw3WIwDnV/eU3SvVVr9PnOiN0fJDc06TD7ozeFyQIeOsBbDapW+f8BY
ve1/qFbdU/SV52hz9Hc9R9cqbV9q/ZHmmO97yLvynp79V+r2x+T2hG24Pmmb
ej1lG27jbJeafLx50F8TxIsmfd7cE2zDGT37bK3S+eOsNfnHin2iseCDbn1J
fpNss38n22ZOve1Sn9dbr+fNV+rzKbVKn0+VwzTb4Jhuu9Tn02vV3cHEWqXV
X5MDGnRmrdLqr9cqHf6WHGbZLvXzu7VKt78ppvfsI8ds55S6fY4859qG5zzb
9cabJ8Y5zh9oXcbIc4E5yIne/FRuaNUP5LPQNhzQoR9bC/pLff++sWba/5E1
flP+Wxb5O5DvBjh/br5S25daf5E5+C5GE/D9C3Z0JHpy3SL/TvAbUWr4r+X5
rW3qhY5D077iec3ZXN4rfSvnHxxX6vOf5fCjfXBAt6Jp0V5oGbQP/H63D7zo
uD9qlcZGc5Ya/i+5/mMbDujNxfL+y/nlfQG6+gv7/7EWf5iv1O3kKHU77VLn
l7ofv6RW3Uf8KE/0LXPghralDQc0KTqWnOjONZ2P7qANf/obmAMtQl+p/9G2
pZ5H28ITPYtuLfU8bXiiXxlX3gWQm2fJ+pa6fR370JuNxYpWRbuip9GaaM7y
bmJ5udG/Xqr0+aap0v/rinVj56/qejaRG2PRtOUdRxl3Q3OzVmukSpMX4kb7
oZUOT5WG39zaNbW9tnu5qdy2tF1q9eZiQqdulyp9vo35t7Nd6vmt5NPcWLTR
hvvKAT27gzVA0+2UKg2/s7x3tU3dd7MNn91tl/cFW6dKt++RKt3eQj572YbP
3rZLDb+3dd1JTM3FuE+qNDy40ZBoqDap0u0HygF9elCq9PkhqdL5pe4/wFil
nj9YrGjpo1Kl4Y+Q31G2d3HdSu17mDkaypk1Xsq7lhbiQG+eLAd067FyOt42
ONCarVOl7Uutj28l59bO4U7gaGsI7lPNAY/TbMMV7Vvq+BPNUchzd3G3cQ6c
Tremn6WsV7qYHx3EOVxqUXQd90ln/Ksu/I1u5dxuK+ZSq59jfjTuBfI7x7jU
BW11kTjQhhfbhwa72rHX2AYj+hUd+0nK+pXcaD50SX850H+pnC8QexufkQON
ji69UozXmuMsc16VqvuCdnK7wtytjVfeT5yXKk1+nbGYh4ZFO5batV+qtHGP
VGnsrqnS1d3F2Nl51OIWY6HXu/yLf6nv25mno9w6OQctgs54wfrSf2OqdHVf
22jHXtbpBte4vB9pb4575FDq8z6p0vx3OKen3Eo93ztVdwfdzN/bfOXdAZzL
O9ZGqdLq6F+0Gr/H9Y5Db97rvCG2yYf2G5oqbT9IXEMdBzc07/1iR+cOF8cw
+6jHCPswvhfQjGj3EXJnf6FtRzkHfE+a71HrTf4xtsmNZh0rn9HO72P+B+Uw
1jn9jT1SXOPMwbinbd9vzifk97g5ejtuWKr0P3O+lMsIMaFbJ5gTbTvRfGje
Z8XHfkG7oq2nGmuUz54z38vOB9MU1wlMaOFJqdLeU1Kl7V8Ue73jiIV2QEtw
zvKOnS4+dOtM56E30a7lnc4AMdI/w1jo8FlinGFc8L3lfHLOcdwkx74tZ/JP
S5W2f13caPJ3xHy/a8447grnpUr/zDfnAtul9n7f2POdU+rzBanS5Iyrizp/
n/KdIVgX2vejzzijOG+5xz8z/t60yGcf594qRR7HHV6tyOvNWq8Wf/+U8t3Y
L3r2119hP6d8xv/kPM5O8nMPy9ndpMj9nC9/hv2Qcr6/w35LOccfKd8fUY/f
U74Dopa/pnyfxZ7aJOJsXOS436V8v0bdinj2jfvjE+Nztm4Yz1cvMt7PxQ3m
ZtanrXl+Nf568Xyx2BdZryvl+pO8PpMv59cGMX5V67J++CXOWc7atpQbHHln
Wlr3o8yx2BqtUOQ1Y23+Cfs2ZT5fWxdqwjfA0sb8yhpRnz3ta+E6LuOaMnYp
f9e/MeZc8S1xH/CbtZW/W4xfzvicUTXPqSXi+9ia8ptxuWvK37f6bCX/pvYN
vAeueVf5sLVnLT61djznDGTeys5tYBzmss58l7RybEPjUPs1vf/k2Vo+p76c
L+PdD/z9qs/W8W/WifVa5Jqsq46jv5FjWIf13B+8C+v7PrD/N3Ct1xQPGPim
2sj/X9nI/VnWfK57kjXZ1O+bxv59pnVr4m8w8zZx7ke2W7mmjX0/4VJ4hibX
6GHrnHxXibeZ79tmxqe27Mflzbu5ceDL91Vzv7HKPcGe38r/d2jrXm1WVGcH
++UqxzR3/zC2meOJvbnv5BaO4TuoufutrX9v6fNjxAFffgv4neO3aI94dr64
z2Ke78k7am605o7RHlDk9Tw1/Hby3Z71KfJ+6Ri+t2t8JPUu8vlxV/g21mHb
8P2KvH9PDL9bkd/F48LfUuT3kP6Wjtk3/NXuv2PDbijyO9kz/Gmuy03hDyny
+wqWo8WzV/gL3fd3hvUo8lnVKuzaIp9HxO5lfMbeXr4nYae4jtTmNuvTKeyw
Ip8Z3YtcC+rA2G0cf7jjGAPGHcTZIfx+RT4jtw5/rvvwpPAnF/mcOjD8dUU+
L/cv8hzGH1zk+lLb6+UAfsYe4PibrRH1ObTIdaEmx4ffuci/CZ2LXGvqfEL4
XYv8+3B5+MuK/P5dHHZJkd/h9mHtivyOnhd2dpHPsCvYv0U+a1qH7VLk3yj2
yDHuE9b2dNeX9d/JPXAGdSrymfd/pOpqxQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwt02tLVFEUxvHDMBqmFimpM8KgcnbvTK1MmtIsMysjhwGvb7Sx0hiaseuA
YoLhLbWLJSJ9Aj9KXyPKS2USVFqm9V+s9eLHes6MZ89ee23LE+l4KuB5XhRB
jDjPu4h13/N+4Qx5AEFk4QbeIoIPfP+MehVfyL/xlHwJG+QdzJC7sU8uoU6i
FV953sJpcg1+kHcxTH6JUvzkuY56Etvkv7hO7sIeeRO15Cp8J//Bc3IC/8gh
ah968c3Xd3qsB9m77OkU+R2O4T3PTdRRp71LD3ecnoH0HsBxLKIM/Xz/hPoA
q+TD1EHctb+N8VmMeh4F1uMcdRZT5FxZAzdxwPY8Ld/Z2tnUNpzDQesxSa13
+m4OxtCCYhzFFYw7PXuZyQWnZypnKTOVXuUM5eyk5zdYsN5ljdd4hRWeC6kv
8NhpbzKTOC6jyGaSoTY6/dsjmMcQ8hHGfdzDJ18/u4YJp3dF7oD0lrRepMcG
dDi9C2u+vptGnq0hZ5mx3yqwvYxZ77KnZnQ6vSufcZbc7vRufPR1Vo9wyGZW
TV1Chc1E7nrU6dnLnZe7XmmzjNjsZU1Zq8zelT3LXmWNZduD/LZPveX0f0Du
vmezvm1ZZv7Qzixse0o5vcMh6/mErenbTP4DEe2I1Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmge4X1PWh6/oZUSJKDEkuGcfIphII2qi94mI6D1kEFFHZCKEEQQz4xuD
mQjRuwiGSPReRm9BoiSI3nvJt17rPc/1PHc9++y9dlm/tdv67f/tsv8RA4a1
a2lpuXzelpb4a1motLSsEvJI1dJyfKR/DukWsmHIN1H2dcinIeNbW1quCNk6
ypcL+TnKtox02ZCf4nvbSJcP+SW+/xLpyJA/hJwZckbIESHXR/tLQy4LOSHy
I0LWDukXskzI99F280g7hvwY35tE2iHku/g+PdKJ0e7akHtMrwu515S+p4Rc
rp3fVvl9R8idll0Z8m7IsyHPhbwT8oz5u0Ousd8dY6xOIS0hU213VcgDITeG
3BSyfehWCJkb49wf+RvUTbPu1SF3mV6jjRPF/6B9TAp5yPTmkP9pLzgeDbkl
5NaQx0xvC3nc9L8hp8b4p4Ssy/xFfrJtxpTs58mQF/QXfnpaX4DpKce5U/zT
tPc5U/zxvCntXwq5rzWxvqIvwPGW42D7q+J5OGSmdmPv661p36PqbtbW18yj
m25/tJ9hXdq/YR9PhLxpynhvOyY4ZouNuZxlGfmXtRdb3xPb89abKuY5luGn
DjGXcyNtifRDMdPHp2LD3o/Fj73fagdjfmRddN9Zhl0fhLxoX5/ZB/74Uh+B
7xP7Y4yvxYlfvzFljK+si+5z+8BP3zsOa3neKvvC3p/EDL4fW3Pdk/8l5H3t
WrjKfhlzrmXgnq/KPrD3B/um/TxV4sQH81ep//w3/kK3YHx/Ib52VdbFpgWq
rPuFMkP8C1VZFzsWqdIWcP+uSj+Cb6n4/lnb21dpE5hWqNIO+l68yrroOlmG
LYtVOU/0tXSVfYC1Y5V4sHGJKvvDZ8tV6Ud8sLwpYyxrXXQr2je2lyrto+8q
ZEnznUMWdfyVq8RGvotl4FvTfpdT941raqUq54Y2v3cc8qvYDqy1Y7Jm1whZ
pkpMq1tGfrUq/QW+VW3XXl2L+LvaDju6aQu4bw+5IuTKkHWq9Cm4e4gHfN21
D3s31CbG/4N10W1kGTauXeWc0VdP+8AffbQPe9e1P8boq0/x8QamjLF+SKu6
XvaBbzZ2HDBtZV/Y209sa4Vsqt/J97cMu44I2T1kj5DNLAP31vaBvZvYN+23
ECc+2EY9tmxuO3TbhfQW35bWxaZtrdtbWUX8O4SsJ74dTfHBrmLA3gH6Gr/u
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
S8TYOxhnvxpyV8jqIeuEHOAc8S5xtPz99UgfC5kv5LqQGSGfRfl+ke4fclHU
vyHSN+Qea5XUUX4za0w+MyfS90O6yjPxEf75MNI3S3KXY8QFt+Jd5ChteNH6
lM8TONqFbBT5W4i7Sv4291Ok14ZsEPJRyKyS/OlHuE5IXzEc5f6EM24mb4T7
bCr/uSnSt+VdLTHO3JK/AS4f3yuEbBXfS5ccn3FXjbLVQraL/OVVvpvwpjBf
lM3PmmZdRrpAnb/jnRSyfsg/qvRfX321cOgXqdMO6owu2deKITuV5BF16Fev
c/6WjbRjnb89rhhpp7rtN8lt5GDwsi3kZiuFfuU6dcSrWxmzwtG2k6d1CX3n
On/DPFBfsh7gg+CAE1ahb63zdz/W1jzaxj5o5144NNL5S76l8IbB3mCdTnKN
socmuz+a94wH1N2knjbze97QDz7l/YO3DN56eEvhbYW3Jd5keMeqo37nku86
zdvKXVXb+wv7b339ylwN1EberDjfed/iXetc+2PM5q1niuNNNX+lexWbmjed
adoyRd356hj/PNvTH29XvPdgY/MuRru/axP24EO+L7NsF7+5F7kvuSvxDe88
vPkcXvL74fhePNJ9SvLCVUP2Kvm+gn6wdQbZJ2M2b5e867HueKPEB827IW9w
Ex2Psf7jPN2o7npx8r52i3N7iXXJT7CMee7i/DCPF1nWvNVNsl9+h+cs54zn
7jzbuRnpXDXvuOeoYx/yPsIbw7iS7wnwbN5N2Me8cxT3Lbql3bvUR8f5xG/x
2MQd84jz+ph59F9Z5+RoO9wzcFfPMnByX/K+wx3TvO+QJ64hJiAeWMkzaJRr
awHX4WolddTrX3Kvsed4o/j1TGpNW3n/4e2kCn37knnePb6z7tmeweD+OL7f
LfmexBxgJ/vtFNcle4h457Sq7f2blPfioz0nsXW4ZbQjfuJtmDdiznn+T4L3
pyNds8RCx7mOqEf8NdYx+riu/lG1vU1jB3EPe/hc201wXZzk3kBHPHSe+THa
fl7V9pZ9oTaNd22eYR/jXTeXuDabd+rm3XqiunHqJ7j29nD9cb8e6xzvWVLH
Pjqn5Dsa72y8q43wnBwa5+LjJWOlXYll6rxTiRP4HwXehM4q+R7EOXmK5Xzz
fsIbEe8i61qHstZIf1cyXmMtM5+Xug6X0IZFrUPMNLPknYpudsl1sJR7rrPr
bV/PB84J7n7eNLlbWTvcmRNda6wx3hXXChwXlLyLiMmJ0TmHTiv5fZhl5Ind
8Q9r8XTP2tGeJ5y9J1nGWhhVcv5HW87a6G19vtGfWDKuxt9nivcI/c97Xh/r
0K57yf+5YU7eKhkHgIfYhvhzbXW8afJ22FObsZ8YfmzJMvrFdt4aT7McXMwd
58sYz4CTtWek416sbSP9XsI6nBU9xQuWNcOft5W8O1lnnImcPewn9hXxwGsl
Yy/24DchX5fEyly1uh6mhTznOuX841xozgj2Je+m9F07/++FfFLyLHuoZDyH
bfyOxhnE+bNj2Ha34/yp5N3BHXJnyDMl72TGX8M1R7s1S55f+0bbJ11n34V8
W3LO0XUVC/i6ua6a+4kYntiBM5rzebfoZ/eQg/Rrd/35S8mYj7P7q0i/LDlv
l4UMqLPPDazPfrwIH7iW8AXzD9fo65rAzyf4TX18+ZT+vMq9zTrp7rqhzgR0
JffR+EivcE6fZS2U3PuPu4fZv+u47hjr4LDxwpJYh8T3wyX31CjXHXuBWI/z
gphqaMmziHPnVMs5K3aJtoPqjLPHuoZ7ql/XtqxP9gvrkX2Or+GAxOOTS95p
TzhnzNcrIfvVuVaYw5edR+KKYfpkn9C/WDIOOSC+p5eMJa523bNv9nbdMK+H
lYxjqD9cW5hH2k207TDH4LtP9DmlZGzSPb7viHTnkvcsdTiHe9bpd3x+qGOw
JtkfvercI9sTI9d5xq0b6b9L7l/WS4861wxzxXm9suvlIG0bqM3cExc4T7/O
UZX3HHfcZ+KhPuf7ga4N1jW/u7DWbi25z9njXSNdo87/p0N/vOthbfN8c8/A
6ziH4bOHlNy754d0q/P3EO6goa6H50MG1rnnHwn5oOQ+xmd71+m320uuOdbb
XpHuGXJwyb3yfcn9ci8+rvOsv6fk/mfv3xfydMlyOOJOdd4V7NEhJWMozt0+
zsXf9A/x5Imuac5k7jHOTc7McX6zhjlrVtKvje4Oz13uDu4gzoJx1meOmSti
UPTcMZy9n5vnG2yr6QfOpK6OsbNlxGJN/Pfr72iRXl9yPuGvN5bsD/43qeR9
e7hrn7XH3HDuwkfZd71cV/hjI33CuidG4Ezb2zx7jxgNnkmcxr4crs2sD9YX
e/YMceGDLXlfqXPO4Wnwusm+ScDfbvbdAv7G28VW8L86z2vO3Q3qPHtZR7Vr
qTdldcb969W5n9mbcGC4Im8eP0T6aclzuh98tM712LfO85Sz9KWS5yBnIOfB
xSX7YR3d55rhfYE1C0fcDk5Zpz82qvPsYL8T28LDb/I9hrcJ3i2a/9sg1uvP
e1Kd5yDvT4NdA/8P3JszTA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtldWLllEQh1/XtdfutWO/M3av7drdvbZrr7JeCF76L9iKAWIHNgYGKnZg
oagoiKJYN7bY+vyYc/EwM6e+98yZ+X318haOLEhLkmQRpEM5S5Iy8CuVJL1D
klTGrwi/ifsSV8Ffia0K/aAG8SpsNRgAfyBhrCv2K3vq4q/Grw6DoDBxMeiO
/535xvhrdQ4Mg/LEK/Q70AdKES/Xd0BPuAiX4AN7N2UlSVHmlxFXCn5mFvEa
bCYMgXcwmbE52FpQHD/D/KwfnFEfP2W+9h/xMewnaAvDYbd+C1pCZ9gDH6E1
dIFW7G0J+ewdGTx3Fcy/XTm8hp1PvAibrjzh17SYK+YDfhPzuyf6Rvx65rn6
m/LcVzXPtd7gFnYB8WJsCbgKHYjHYpcxfwd7F+pAETgDu5QXyNCdWHs2+o1g
M+QzVoC9zP4p+FdirkbBQOLBMAW/JDyDfcoBa8vpjfRtMEm5hVPQlXg8NhdG
45/DloUUbIK5jC3AbuWME9j2xGOC36G73gYm4BeDF3BAb8La8thXcAg+E1fA
tmDtcWwajIBJxNuwDYO/+VK4F3/7G3vWYe9DiHtuwuOYiwfMP5SFbapd7HTO
uxHcN7igd4hvP1M1E39DZ6vm81j/KK6dC82Ij2ALxRo/r7qItZQHt5UH2Jjl
Oboec5gb3zCH/d3M30Y57W2eI+VmIuyFp8HfQj3xFvsk1loTOAyv4UvKc6Za
2AKNY00chJfBc6kcb8C+iXubwk74Dp1iTpTbDXFOOd6hu6sGYTnzXfi2zua+
9vyAn9A83nE/9nnwt1QNpbH2b3Ct6KY7ERcy92cH7+0SxD2C93gRcw2RduSo
Js17Wr2sNaXx083negXXkkoWtUvfbN7z6vXBwbWpgbkvjZK2VSfuH1zj2uK3
gfmszw6udbWJBwbXvDrmPate1VimeY+rt3WGtKusRS2F7XqL4GctYU0jcw1Q
7w+F9cE1RVqi3+yE39G8V9QjQ817Ur04Nbj2tDbvVWnQCGmZ+dw0OKrcS3Ni
DV4OrnHSNo0NMO9h9e5kmKW7m/v5qnH8Xua1Ni+4Nqrn1GvSyB7mNa9aV89K
66RJ0iJpXl/zM7RXGjHWvAdU+9ODa+s4xmYE11hpt5nnQho+3rzn1GtaI+3N
ZWxWcA2eYP6foP8Cjd2PNaTaUY8PMr+T7iINy8ZvZ5571ay073RwLZUGvocx
5t+mmpVWnQyupdIsaa80Q1ohDf4PzQ4EUw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt0lk3VlEcwOH3NWQeXlMUoRAqlaJMGRpIIQpRKNGEpELUZV1zYy2fwBfo
k5EGMvScVRfP+p2z1//sddY5u3h8tu9NOBQKfSOK4DqbCproZZJFvrLKGuts
EO2BPHIZZIiHRNHMa6Z4xQzTVHOURcI0cY0qFji07xE9yzLnyOEBA/SH/71o
I8+YYJznTHKRNOb5Y/SqnmKJEi4QSzIpJFLIHD/Mx2gBHzlBPLdIoJ2fZi7p
Ix4zzCgjnOcYwUfdMndD27jOpvub+l1n9Thx5POWbeuX9Zfe1k46SKKYTxRR
Qy0necdv81d0R99rKam0MMYTynhKHfWc5gO7nmnQPb2rXdwhnW72rd/TCD1k
UMFnyuklk1Ze8JJKzpBFH9nc58BeK3xhgYlgbxopJ4tMMoiQThqppJBMEokk
EE9ccFaIDf5bcB7/n+O/Qeo3tw==
          "]]}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0ktLlFEAx+Ez46Xca7lSJ9OFhJFly6HMzE3qqGFZQg0VGmnfoLwwoEKQ
u2CEFgUh7qpVMH4CBT+AYHlJs7S7qZX1vLR4+J3/mfPuJpG+1z4QCyFkScZD
yBiPmSbHHAtssB099Kab03khHMoP4TDzzqU6oM1ar1M84pI9oZM0cZd++ngY
3fm9Ts9zKvqWYnrtWUqc7+gFPanPGaPDHtcst6Pv7RP6lGeM0ujueFRu0mbf
0jQZztm1UblOq31DexjhrH1MG7hKi31NuxnmjF0TlctctK9oF08YJOVuSF/x
kk5eM0OOB9R606H3STpXa5G26wFN6UGt0kJt0zwtIJ+jdkzj7DsH/auV/OYP
u/xijyP8ZIfvbPODBF/5xie+8JkKNtlig498oJw11lnhHauUscQyi7zlDe95
Ef//P/sHWLhOKw==
          "]], 
         LineBox[CompressedData["
1:eJwl09tPz2EcwPGnuDCHFG6EFCLFiuiXDppuHNPW6JJNFy5sklM53TUuGJtT
2DJszDoQm2jahBDCkGPq3h/gWq9nXbz2/jzP8913v9/v+/1l7aqv2ZsUQuin
xdBMaXIIvRNC6KGax2zlCU/ppopHbOEEx1k+MYRlvDRvZpRj5NnL5YV5EyMc
Zam9HJ6bN/KHIyyxt5g+8zC/ybau0EX6TH/xk4XWa3Ue5eYmvU5rvA8V9rbr
Va6Rw2R7tdrPK17Hz8IU+1N5Yx5gXfzs3IjfjUpnzXqLm+RbF5DCDutpulOn
60mt0VNax1ve8Z4CbnOHM6xw3WldqXe1UNOYQSq77c3Us7pNz+kePvCRT6yi
jXbOU+S6YhJ0WK/RdOYwm3p7c/WC1upF3cdnvvCVRPxdnTXoEN9YTzGd8Z7x
uTm/pPe5R4n1ZZ2v+zVDD2hLfPbmEs3Ug/qdH2yglC7K4rvj/Io+5EE8sy5j
AYess/SwNsb3z1wev793djVFJCgkn1yyySSdWaQwif/e9X/8ZZhBemlLGv8v
jAH5a1i4
          "]]}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVbFVEYgNFRAQsbu7u7u7uTElQERFCxW7BbL/Q/6F/QO7u7sQu7W7DW
PF6s8357z1yceWafUz8le8K8IkEQRPmIiwiCWLLIZS/7OcgZ8njGRwpZHhkE
RYnnLS2jgqAF2ZRkHqWoyQ3XX/Ga5xS3t56z5utkmEcxmm6M4YX9DXpOm2oE
O4mkBvn21+ppbaxPwu+juZwyX+MRW60f68PI8EGDYA3HzVf5ww7rv3qfoeYH
OkxPaH2dShKJTCOZ6txxfbUe0zr6U7drgVbT27pSj2gt/arb9JtW1S+6Qg9r
P+1DXw5Z99cB/DDH6neN09rEk8AgbtkfqHlayCrzUa2r9fhtnq6/dIY2IIWZ
DOGu/cF6T4toDifNDbURxUglnTSaMIsRjGQ4T90fpes4Y26mz3SOlmA2WWTS
nLmMYzxjeeneCVqaXUTzxl537cFN83lamS/oRi1DG1pTlt2U453rPbUXvblo
3VYv6SYtT3vaMZ8KTOK96xP1g1bUzVw2d9COxLCASiykE4tYzBQ+uneyftLK
uoUr5s76WZdrFZawjKV0oWt4psJnDd9ZeI7Cs0KN8IwQQ3miw99M+I4o8Nv7
QD63OM0B9rGHHDKZTQazSCeNVGaSwgymM41kkphKIgnER/z/T/gHES1/CA==

          "]]}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dbjmEYwPEr8jzJyEx2kcoeIbuhqFApI9mZkfoo2bIqfAe+gkOfwCoj
I5us7N99ePE7/ud13ver636ejPrm6qaEEMJtTsZCaOEGt+ikmz7i8RDGk8MS
CiijigY+kJwUQhIzOMAbu89MNx8jkxhlxCnnrecrdRMVbKSKSnJJZB+93luu
k2lgCgtZRAID+OudCbqTHnMfvzni/Ed/Ms5cy2PzJ/o57PxDvzLGvIWH5o9s
MK9jPYWU8s1+q3bpYh3BUUaygBQ2c8/zYi1iLXedS/S+VusovphHaw0PorvV
bt2mY/luTtXtPDIv1Se6Q9P4FX0XreOpOU+f6S6dSGASu3luv0xf6B6dykDS
2ctL+xX6SvdrBoOYRj2v7VfpOz2oWQwmm0O8t1+ta5hJEznkM4vjzGYIc2lm
DgXMo5H5DGU4JxgW7aP7iO6cGiopJT+6f7JJIxZ9U7/VLu5wk+tco4N22rjK
FS5ziYu0coHznOMsZzjNqdj//8Y/tM5cuw==
          "]]}, {
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0slL1HEcx+Gvl9KxbFEr66T9Bxa5BR2yCDUjDQrUhEzLbSaLHG1BFAW3
YykUZtBCRURgpaBBZBFUR1vUTIUOefYf6Bk6PLw+7x/D7zAz2ediFdGkEMIL
TqaEEE8OYZAxXjLLHH9YJ8ln0sgih2GGIiF85TNfeM7l1BDKtZp+rtoD2scz
2uwyreIJN+yn2kuuez/7OG5/SrzHXUMVtZxlyvMeYu4S/cgjrtuPdZJuovYx
/cADrtkP9Q1dtNpHdZZxOuz7+pqbtNhH9D1jxO17+irxLprtYn3HHdrtuzpB
J032YX3LKXcOe8km7lmFVrLsXmGVM/zgO4sscIjTfGOOeX7ymyV+McoM05zw
zhEtT3yPrLmvsMd9W8u0lL+J34tbNNoHdbe26S69pFlapDs1ppka1R1aqBna
qtu1RdO1QLdps27RJt2q+ZqmjbpJL+pmzdNUbdAUrdeIHtBkPa8btE436oXI
///sP0SgV7A=
          "]], 
         LineBox[CompressedData["
1:eJwl09tPz2EcwPEnhy3MvZlDbRXJIRcSJcqhfsUoitpQP4dcxSaNZWazMYYc
brJ1w40Lo7jTBWPWdCGH/gM5bJJDDjmm1zMXr70/z/N99tt33+/3l57cX9WU
EkJ4xPTJIbSkhpDUiVNCmMBbcwPjzZe1XBO8MdczznxJy7SU1+adpJgv6jpd
yyvzDoL5gq7Ral2tA/qPUUqst2ixvtS//GGV9WZdwj5zm3ZzlyJm2pvFDJqt
K/WKbtJ2rWEFs60P6TsGeR9/mzT7LTrEBz7GeyDD/mH9xGdq4z1yj/t0UO3M
Vmp4YL1Ns5hDJtnMpZY6cmh1bp4e1fl6VY/oNT3GMF/4SikLXDuu3/hOHQl6
qOCA69e1l8fx3VgvIpeFnLC3WG9onp6Mz1JP6U0OmjfqUj2jI/xge3yGPKGP
zvg9OHNLk/pUd+kylpNPIQXspiu+Hz0bn7+e09s0myt1pZ7Xn/ziN1U84zl3
2ONMI3t5Yd1P26QQmkhQTgXr2UAZJRSSRy7ZpDONqQSGfesD9POQTjo4nfr/
vzAG2vVlcg==
          "]]}, {
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0t9PzWEAx/GnbtHmUihJZS5w49q/EMNaS+UI6dQ5mYoZKqn8KFMSZdjK
OLrugq221Fibi+bnnZXNXdma6Uro9ayL197n8+x8z6/vKUikD6eyQggZSjeF
cH1DCIO8ZII5vvOL7I0hbCaPPRzgIL0kXDtGhvfxdXJCqNYLPKfHfqHPmKXD
rtIWRrhtj+pT3nHNrtRmHnPLfqKPeEu7fVybGOKmPawPmaHNrtDzDHLDfqD3
mabVLtdz3KPbHtB+3nDVLtNG7tJl9+kdprhiH9N0/G502r36lS9MxOc6m9S5
+Pm5bB/VzzR4vI/97KXTWb2+1mVWWGCeb/H34ge/WeQnS/F34hWXXHtEP3GI
i/a4fuQDSTuldZrNbko4S4PzWs2imCLOUO/8tAZ2Ucgpks5r9L/u1AJOUmcn
9J/u0HxOxPewq/Wv5un2eO+ptSt1Vbfp1nhP43vbFfpHc3VLzvp/cw0x1l/v

          "]], 
         LineBox[CompressedData["
1:eJwl00lIlGEYwPFX2qxR02y7dOho1iFTs832zDZztEYThBZtxals36NoIcI6
dPNgh6AoWwwLEuoSRlHSrZVoofVQaNB28vfR4cf/ed75voGZ+Wb0qmS8ISWE
0ElpeghHYiEk00L4aX7PAd6xn5u0UZMRwgr+mfcx0nxDq7WKv+a9jDBf14Qu
5495D8PN13SZVvLbvJth5qtaofUa1186VLNZQp39Ca2U2ctZytPoPnLNY8nh
oH2MxqP313bt4jan7bf0G4cYZz+sH/jBWft3/Rh9FvMnfcNRPnOHbo4x3uvH
9Qsd9HCCPOcn9St3abLf01P0MfelHwn7BG3S/jqAVKrt+VrAQAaxNfr+ecZz
7tPgfDNJXti36ESKKGQyk6J7mco0ptDs2mJ9oDO0RafreZ2pD/WMPtILxMxp
pLPSPksvaYYOJpPV9tk6hyyGsMvZGl7yisc0Ot/ONl7bd+g8SphLKfPZyUIW
sYDLrl2sV6LfyHNaz1rWsZ4NbGQTddSSoIwSisknh1FkkkK35/4tXXRwkXOx
//+JXhiOZyo=
          "]]}, {
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl02dfjlEcwPGTEYW77FnKnpU9ohQqIyOjKFRIVsPsmfcgkpUivQdegSe8
B3snKzu+18eD7+f3v845D+77PtedXl1fUhcXQnhAcyyEi3Rxn0c8oZfEpBBS
yWINWyijkhraOcq65BDWUk4Fe8lkH0tIoo4vzubpXM4yj0UsZghDSWQmx/no
/HcGmxtIIJ4pHKPH3jcGmOsZSGAyR3hv72v0uc1b2cxfz+u1mDhq6ba2Uidy
mkks5I/1Q/pGl+tYTjGOBfyyXqUvdamOpJFRZDGC/Tyzv1GL2MBTz5v0uR7Q
0fw0j9FKXpiX6Sut1vH8Nk/Qg7w2r9C3elhT6IvuSmt4Z87WD9H9aBr9KGAb
vda36yrSKWEnO+jPNM4zldVM5wwzGMRsmphFDrnM4QSfondFP+tJnc8wCtnF
D+u7NZ8MStlDGTGGc45kLjhbG33H6HeilGJyySSFhOiOvauPecg97tLJHW7T
QTu3aOMmN7jONa7SyhVauMyl2P//xj/IhGBD
          "]]}, {
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl09lTzXEcx+FvlH05Jbu0oAhZs2+FKHeZYdz6A7i2L9mX/4Fx7Q7JFgon
+75V9jWibFmSnt+4eOb1eZ9zZs7Mr07mytWlqxJCCHHWxkJYw34OcpQa6mkm
KTmE/uSQTwFLWMpyDrOCQ3wkMyWEDMaQzGhSGEsfUmnwuQ+8J2ZP5az7Mm+Z
Y7/TV3R3T+GMO84LZtsv9Rld3JM46b7EE2bZT7Weju6JnHBfpJaZdp0+oo0J
doVe4AEz7Id6j1+Mt49rNXeYbt/VW3xjnF2uVdxgmn1Tr/GZPPuYnqeRufYn
vcIw91VtZp67Sfvql+hZ61e9zg+K7O/aT1u0UH/qbf6wyP4d/b20VefrX71P
cC/mn3uAJrCADjz2WpIWk8hAOrGQzgxmEKd8brJ25bm7m+Zz2j1EK3WEZjOc
13ZPLaEHObzxWpaOpMY9StPoRS69SWco57y/jFJKoucTfT/Z0TMgkSb/o3XE
OcIB9rGXPexmFzvZwXa2UcZWtrCZTWxkA+tZF/v/22gHqGhx+g==
          "]]}, {
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hecz3UcwPGvTVk5kp1VKIdy1gnnBi5HzogknA4tkhAyChmFshpIpIwy
khkyyhkNo0IRlSJRRihFen4e/nje6/P+fD+P3/3u8f1+r3xG3/Q+2aIoyvQj
LSaK0otEUU+GMIl5rCKLA5zgEjmdLUwpKhNLP1KLRtELjGExHYtFUXPtxCi6
m0fr8yzifnNKOMdIupmf0+EsoL05KZzjWbqah+lg3qGdOVE7MIiHzM/oQObR
1tw0fA5P08U8QPszl3Rzk3COfjxofkr78hZtzI3COZ6gs7mPrmE1s+hhb7Yu
5zHuM9+jq3idDPMb+jmfUcpckobh8+lNcXMJbqGXOUln6Ba2soylTKe1aw20
mBYlhpsoQmv79bnZuqfuZFf4TsSzgg95jWRnXtUUXanNtAxlKc2tlAv3j5mu
V9BHtLw+qhX1TX1Y5+jjfMGX7KYxlVx7UvewN9wvEljLOubTwpm3NVU/0nv1
Nm6nMlWpQkvedf0OHaLVdKguDPffOlnv1BG6j6/4OvxdVLcfyzfW+3kg/F7W
h98Xnk/X3tONbCDNXJNa1GCsvbv0fa2t4/RuHa8TwueF76dNvQOJJJFMCs1I
IJ44qlOJkhQiBxe9U8fZzzZWMpeJDCaTCuF50VTnN1tvCu8LH4f3gld4OXwH
3yWB7eF94DCTaWKvMVnhPeAQk2gUnle2heef75hIQ3vxfBqee77lJRrYaxWe
M/1ED3KAOHOaLuFF6pjrUZcPzPUoZF2YAmSaC4br2kqnaaLuCM8U+a2naKZO
De8ZN1hn6I1aR/Npd82teclDnDmn5iIbOchObfvXiKyv6H9cDfeRf/iXv7jM
3+F+c5FLnOcCf1KLs5zjd87wBzU5xWl+5TdOUoNfOM5P/MwxYvmBH/meoxzh
BFkx1/8f/w93a8BY
          "]]}, {
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl8z3UcwPHvJIXcjLIVOXJVSo5imSFGwpjYZphEB5ooIk3MWVHudOdW
hFJk3SkdGzroIHImpa3kKnl+Hv3x3Ov7/nx/j9/vt+/38/3VzBqeMiwmiqL+
/gyKjaKhVaJoAnNZQR4F7KOIYl5Tnnga0IxEkskls2oUzeRx1nFHtShK17u4
3fFNtOQncyt9Qgdphn7Cau4zr9G3mMFAc5p+xCqGm1/RN5nGAHNv/YAVDDOv
1A1Mpb+5l75PT8ep3ECuuYlO0qX0c9xTB/No+M7miZrDYvqaU/ROxjPE/Ig+
zMtkmLuF/5mx4X3M43QMebzIvdZe0jcYTbr5Nt3Ms9xtfk6/5itGUd/areE6
8DTdzIu0u47Uq7QOdelsrqddNE2f0bfZRIq5IY1owAPWrtbn9R59QR/kG75l
J125xrmHdBffhfsVPpt36EGm80v0Pd4Na+bGXMe1TLB2vS7TobpcJ/M9P/Aj
qTR1boruZk+4vmHP8CF9yHL+Vd3Cx/QyN6cFzZhu7UZ9TbN1rT7GXvbxc7iH
JDh3M/sdHwjXPNx7Pg17Jdxf59brZ2ylt7kPicwyt9YntY0+FfaYfZ9OBn3D
M0A/0kilKx1pTVPqE0c5Yij0XO0ln80sZw45JIQ9o1le96XjL8LzwefhOWAh
C8J9CvuIHWH/c5T5dAl7h+3h2vML8+hsrRPbwvtzhLkkW+tIQdgTHKaD+Ray
HLfXfD3EQZLMA/R15tDWPFvb6UbtRC3HtanJ/eYrNVlr6Ai9XLP1ivDZGqfx
XEp1LqOD9apajcrEUiV8L+sVtRLlqEB52lsvo2UpxSWUpp31i7UkF3IRJWhr
/QItTkQxYkiyfo7/OMu//BPuPac5w9+c4iSJ/Mlf/EERhWHP8DvH+ZXfOMYJ
dsT+/9t7HuKIxkE=
          "]]}, {
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1HdYllUYwOHX0rCybAeSFS21UitDG1oG2s5BWVgOQCxREYRkqZgUWawm
tDNXBdreQy3L1XZWroZQaUtza8P7XP1x8zvPA9f3Ms5HQkZOyphmURSl+TC4
TRTlxUZRGXU0MI/lNLGLlnFRFEd7upJMXwaSwUimMs5rvcPbrOPu+CjK13t5
kyrzW/o6a7jLPFbv4VUqza/pS3zDneZcncILVJhf1NmsosycE55DfXiOuUGf
ZyWTzdnhOTwbnmN+TmeynEnmUeE5TA/PMc/QqXxFqXmkNtHI00y0y9I/+Yz7
zJ/rRp5kgnmE/sYn1Jg/1cO0FY87d9fh4fvjMS40X8xF1JkXU+KcqXfwI7UU
2w3TX1lItXmRfs8PfMwuNjPG5/7Wf9hLV/PDuo8lXGB+RLvpo7qU8c63ag99
Qg/X1pQ538bv/MGX5Nh/obm6RcfqpfTkEp6yu0yXabI+o0k6TVeEn8t5tPbS
WXqEHkl5+N7Zyl98He6n/WrN1216u17OFfRmjt2V+q1erS/rVfqKrqXcOU+v
0Tf0KD2aivBabGcHGxhnv14LdKcW6nX04Vreteur74U7484XUEgRxZSE9wG5
ZJFOKn1IIpF2xBLDTu+vRpYxl3pq6Rfuh5b6mn+d93A/u8Od4yMWkB1+jxxK
jbmDfqijwt3lEKrN7fUDzQr3k4OpMrfT+eHvG/72tKTSfIbO0+E6STM1htM5
jTRK7b9jLunhbpLBJnMG5zsnch4Pmbtoup6rD2pnfUDPCa+nHbUTZ3I2ZzHU
/heGUGR+X3/mJ4aaJ4bP6UGcyikMZoL9IG1BAidzC+Ptb9bmnMSJDKTEPlUP
pC0ncBPF9jfqAcTThgEU2d+gzYgjlusptE/RiOM5jv4U2PfT//RYPSb+//+9
+wHRrdIA
          "]]}, {
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0+VSEGEUgOHFAusKUGe8Ab0GvQT1hx2AraCC3WIn3Q0W2AHYnXTY3Z1g
YT6MP55553yzZ2ZnZ7++ETGDokOCIGgjMTwIEiihkmoe0kpYryDoRX8GMoQo
4ogniXzKqOAs1dRQy9veQfCONyTxmkRK6NwnCCbpTLbQ1Zygm6mkiJ7OinUn
m+hknqAVtPGTp6zjCWvJp4PnonQGqwkzr9GVHCKHHs5ydQfxBOYIPcA3vnOP
5dxlGdn8ZQzRLCHU3lLdzz7S6eYsQy9ygZvcYBTTWUAz17nGfFL5zQi2s415
/GI4u2ihlUZm00Ac7/nASU4xlKmcIJlSYikjhY985hNzOM0ZzjKMJuZyjvNM
YyS7Gc0f0tjLHr7wldss5BaLuEMm3X2PLF3MJS5zhbHcZwVXqSKGcRwkkhC7
eVrOYX7wkEc8YBWPKeA563nGBgrpaH+8vmAj1dRQy0Re8oo66pnFZI4whS72
t+oxjnK8/Z3ad/zfddTTQCNNNFPFGcopJY9EVhBLJIMZQD/CCaXFnXtAFRUU
U0QhBeSTRy45ZJNFJhmkk0YqKSSTFP7/jv8DSma3nQ==
          "]]}, {
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0+VSlFEAx+GDgUl3bWCgIgpImNgBBmGiLjp+VUHAugGd8RLkHvQe9BYc
sBsVxA4MEH12/PDM73/O7O775d34qZ6O7pQQwh0yIiGkU04DLXTRx1UGuMlt
hhhlMvmdaAgxathMG12c4Szd9HCOawzwgjf8oSUWwpTu1t9apvM4wXyWsoRt
bOW5z7xmPPk85x+6Rb/pHE3wzM7TXL7ax/WplmgrDTRSzxf3qXqMx3aOZvPZ
PqqPtFD3UU0NK/nofqZ2ct/O0kw+2Ef0nhboXipZzjLeut+j04gQI4N0AgcY
8pmDeogRO0VHNV+nE+UkY+6q9J3O0MPctVfoe41rOQt44Fyrn3ShLmLYfsgq
u47FVPDK3ROK7GJm08Ys2imlgzWsZTXrWcd+mtjIBr77nU06lx38dN6uv3Sn
ptHMhPMundS/yXfIfqm99NHPeS5wkUtc5jQJWpPPoZooaUx4P0cY5BY3uM4V
eknQTD1xYkSJUEYpJRRTRCEF5JNHLjlkk0Vm5P//6B9Xd24S
          "]]}, {
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1Hl813McwPHvJEJtlBwV7UiiJLZWytG1abmHrXRgYUNtFLbkbGMjd7X7
bitsbqHERkmUc6NUhNTm7CCVzfHcwx/P3+vzfn9/j8f3+3j8vo9fREpGYnpI
EASxPhIig+CG8CB4RP/hb75lPu0sY2JUECSz1flh2niVJLsr+cb5If7iFa6w
u18v16/1APtJNN+nl+kW3cefXGy+Vz/gZS4xv6SX6jq9mYOdOxNCJw7iJvtA
H9N/eZTXud7uNZ3HjUwzv6GPs4iFnGl3Bt85L2A5V5tv0yH6lA7WJ/V0na2n
6RN6qg5iILPMA/QUTuJk+nOrfZT2I5xIIrjF/kTtS29OoA8Z9sdrL47hOI4l
3f5o7clR9KA7M+1DNYwj6EZXZtgfpodzCF04lCM76tpzEZ7B751DIfU00kwr
7YT5TiQxxJNMGlnkUUAhRRRTQikXusdFJPCie43XF3Qt053v0tyOZ+A68/Pa
TBNrOn4ru/f1V37hWeLs5uiDPM048zP6OZ+xmjS793Q7PzDGPJpM5weo4Txz
rY7SKv2Uho5339yo2/iecobb3aE5lDLMXKaf8DFTzSs1Rgs0WvN1kqZwFRvM
m9hMNh+ygmtcu12v1Tf1I9Yz2TyFjc6FDHUu0i94i68oJta+RL/kbUaYK/Qs
rdSR+o6eo9V6ti7Wc/VdTdVVuoQdtNBKFmNdW6o/8hM/cyfx9nX6GzvZxVzO
t6/X3ezhd+5mgv0F/OG8lzzuocw7Uk4FlVRRzWJqqCWfXDJJJYk4ookglDbv
aAtNNFBHAdlkhP//n/YfCqjGzw==
          "]]}, {
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0sk2FXAAwOF/S71DneOoZYomGlSKJgqNqBSauIN5djUPIu7V3Crn8ACs
WNaaRTQgSg9Qq1r3ndPie4LfL706XhZbE0KYoj4jhDoSpBhnmll+8pe1G0JY
TzaFVBCljySjTPKBOeb5xGe+8JVfVG0M4TI5nKeIt2zjEilGuMVh+iikjDds
ZSfnKOA12VxkmCQd7KedfZTwiix2cJY8XrKFCzxhgAh7qWcPJ3nBZrZzht08
J5NKHvKIOnZxnVyucZMbbOIZJ6ignMfUcpUr1FBNPzHiRGmkgUGaaaGJNlp5
yhBdHKCTfLoppZeD9HCIBKe4wxFuc5S7nOY+x7jHcR5QzG/9FlhkiW8ss8J3
frDKR94zwTuGSRChnAKyWEcaf/y1ygxTjJGklx666aKTDtppo5UWmmmikQbi
xIgSyfj/9z+rA3O7
          "]]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1FVTlAEUgOHPThS7W8Tuwu7ubrFz9EZ/g97Zid2B3YXdAXYrYoHdXc+O
Fw/vOWdnYGa/ZUsMndhtQqogCPL5ERsRBCv5VCYI3kQGwXO285RtPOM1T9hK
Elt4zCsesZmHbCKRlzwglvts5CQn6Fc2CPry3ryBXxynj1tv3pnX85Nj9HLr
yVvzD77Tzb5S4zlKd/sR7aFXdRp/Cey/dQd/SG1PRX+u2RcwyrxHq+gH3c0p
Rtrna2XdpRV1p1bSeVpeKxBJOcoy1z1Cy1CS0pRijntxLUERilGU2e6FtDD5
KUgBZrnn1XzkIg+5memeQ3OSjXCyM8M9i2YlI5nJxHT39JqBNKQjLWE0D72f
nvkmz/4o10nhNzncI4iiI0OYzFRi2MxhEkjkEUk85glPCQu9R6xgHXF09ncP
axc9pHe4yHj7Jb3CQcbal+tthpkb0ZiGHHA7xxjzMr1MAvsZ7bZUrzPYHEU9
6rDPra6e0XF6Vu9xlxSSiWEVA7w+kBfm0wwy79XqWpVqLLTX0Jp8NH9iNYuo
5Vabz+YvrGEx9d0a8NX8jbUs4QY3uUC018/rEL2lQ7UpzWhCi9CzYzitaE1L
2tKGEbSnA+3oREe6Eu33ZQv9T3s+z0kmhRe85BWvQ98DPCSeuNBnhIVMYRLR
dKAupQnnl89NMtc4EvH/e+Uf9wHAAg==
          "]]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {{-1.5, 1.5}, {0.01, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", 
       "32", "32", "32", "32"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1]]], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1]]], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1]]], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], FontFamily -> "Arial", 
                    EdgeForm[
                    Directive[
                    Opacity[1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.3]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.915, 0.3325, 0.2125]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.892463388482312*^9, 3.892475963457287*^9, {3.892520160281041*^9, 
   3.892520175537812*^9}, 3.892530743265657*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"ef9ef608-b17c-4206-97f9-411675d73a55"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["m = 32 DataRegions", "Subsection",
 CellChangeTimes->{{3.889464459399866*^9, 3.889464465717945*^9}, {
  3.8894650795230017`*^9, 3.889465080897689*^9}, {3.892398329544392*^9, 
  3.89239833059608*^9}, {3.8925202498026648`*^9, 
  3.892520253493575*^9}},ExpressionUUID->"4dd19af3-465a-410d-9ea2-\
61faad231029"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RCndsM32", "[", 
   RowBox[{"baseMean_", ",", " ", "baseSigma_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"pS_", ",", " ", "pShip_", ",", "other___"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "pKsi", "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pKsi", "=", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"baseSigma", "*", "pS"}], ")"}], "2"]}], "*", 
       RowBox[{"GIndex", "[", 
        RowBox[{"baseMean", ",", 
         RowBox[{"pS", " ", "*", " ", "baseSigma"}], ",", "0"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", " ", 
     RowBox[{"RCndsM30", "[", 
      RowBox[{"baseMean", ",", " ", "baseSigma", ",", " ", 
       RowBox[{"{", 
        RowBox[{"pS", ",", " ", "pShip", ",", " ", "pKsi"}], "}"}]}], 
      "]"}]}]}], " ", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.889464153103773*^9, {3.889464410569189*^9, 3.889464416202147*^9}, {
   3.8894644937114677`*^9, 3.8894646816167107`*^9}, {3.889464760426255*^9, 
   3.889464772136879*^9}, {3.889464880513568*^9, 3.8894648873248577`*^9}, {
   3.889465084486096*^9, 3.889465086368153*^9}, {3.8894651168723507`*^9, 
   3.889465218012381*^9}, {3.889465390068365*^9, 3.889465390570945*^9}, 
   3.8894654447478313`*^9, {3.889465742427355*^9, 3.889465772294619*^9}, {
   3.889467086121805*^9, 3.889467108197364*^9}, {3.8922727266515417`*^9, 
   3.8922727282310143`*^9}, {3.8922731836260147`*^9, 3.892273191505871*^9}, {
   3.892398336191771*^9, 3.892398349653569*^9}, {3.8924453223034487`*^9, 
   3.892445324356661*^9}, {3.892518561658051*^9, 3.892518685456656*^9}, {
   3.892518814819861*^9, 3.89251888451724*^9}, {3.8925190491154613`*^9, 
   3.892519052097301*^9}, {3.892520198209586*^9, 3.8925202231342278`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"38395422-b3ea-4c19-b377-bc9972c313f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"Select", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "\[Equal]", "35"}], " ", "&&",
       " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<m\>\"", "]"}], "\[Equal]", "32"}], "&&", " ", 
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "<", "0"}]}], "&"}], " ", 
    "]"}], "]"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.889465662690414*^9, 3.889465672607194*^9}, {
  3.8923983424850883`*^9, 3.8923983435061693`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"31499883-a181-4119-b487-65659385c1eb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.01321369, "result_sigma" -> 0.00016588633, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -2., 
        "sigma" -> 1, "error" -> 35, "p1" -> 1.0346024268315162`17., "p2" -> 
        1.0069599938658935`17., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.020120477, "result_sigma" -> 0.00022588414, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1.8, 
        "sigma" -> 1, "error" -> 35, "p1" -> 1., "p2" -> 1., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.038633231, "result_sigma" -> 0.00035164702, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1.5, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.997799850255251, "p2" -> 
        1.0082626476883885`17., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11069363, "result_sigma" -> 0.00070593882, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.8241151447318499`16., "p2" -> 
        0.9807262863019222`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.218925, "result_sigma" -> 0.0011685836, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -0.7, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.6970781707763671`16., "p2" -> 
        0.9997970581054685`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.36975652, "result_sigma" -> 0.0014280465, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -0.5, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.563061755895615, "p2" -> 
        1.004491651058198`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 1.0877933, "result_sigma" -> 0.0033726126, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -0.2, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.2953605046665517`16., "p2" -> 
        0.9922792032905396`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 7], "Path" -> {}, "DisplayedRowCount" -> 7,
      "DisplayedColumnCount" -> 10, "DataRowCount" -> 7, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0132137"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000165886"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0346024268315162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0201205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000225884"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0386332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000351647"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9978"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000705939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8241151447318499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.218925"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00116858"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6970781707763671"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.369757"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00142805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.563062"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08779"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00337261"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2953605046665518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{741., {169.91754150390625`, 177.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{741., {169.91754150390625`, 177.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892463388516931*^9, 3.892475963526928*^9, 
  3.892520227068986*^9, 3.8925307433007727`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"1c1328e1-b26e-4b99-8889-f78dfe917bb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"regs32", ",", " ", "rs32"}], "}"}], "=", 
   RowBox[{"RegionsM32", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<error\>\"", "]"}], "==", "35"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.889464780615033*^9, 3.889464825681293*^9}, {
   3.889464907447905*^9, 3.8894649076139107`*^9}, {3.8894649446025343`*^9, 
   3.889464944851894*^9}, {3.889465238710845*^9, 3.889465269104631*^9}, 
   3.889465366698434*^9, 3.889465453288748*^9, {3.889465543266838*^9, 
   3.8894655434449577`*^9}, 3.889465634547612*^9, 3.889465679970582*^9, {
   3.8894657835225983`*^9, 3.889465788099812*^9}, {3.892272734023162*^9, 
   3.8922727372382383`*^9}, {3.892273200135103*^9, 3.892273208074603*^9}, {
   3.892398359869212*^9, 3.892398365175211*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"d6972569-e99b-49f8-a0d3-b064e4bb7e98"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"regs32\\\", \\\",\\\", \\\
\"rs32\\\"}], \\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"RegionsM32\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"Dataset\\\", RowBox[{\\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1142\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \\\"\\\\\\\"error\\\
\\\\\"\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"35\\\"}], \\\"&\\\"}]}], \\\"]\
\\\"}]\\) are not the same shape.\"", 2, 118, 2, 21716539368208606054, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8925307433089743`*^9},
 CellLabel->
  "During evaluation of \
In[118]:=",ExpressionUUID->"18144c9a-50b0-485f-a9af-537258e00852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"regs32", "//", "Normal"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"mean", ",", " ", 
     RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sigma", ",", " ", "0.01", ",", " ", "1.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "&"}], ")"}], "/@", 
     "rs32"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.889464812070797*^9, 3.88946481288135*^9}, 
   3.889465242475933*^9, {3.889465704709655*^9, 3.889465717023387*^9}, {
   3.889465797009753*^9, 3.8894658006874247`*^9}, {3.892272750806109*^9, 
   3.89227275158029*^9}, {3.892398366646522*^9, 3.892398370299388*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"b1785ff8-2350-4f11-ac19-0dbd655c8b32"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
       "AxesInFront" -> True}, PlotRange -> {{-1.5, 1.5}, {0.01, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox["rs32", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.892463388686927*^9, 3.892475963693461*^9, 
  3.892520234323864*^9, 3.892530743350668*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"356a4cc2-a085-4063-8ba2-02cd3ff1457d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 14",
  FontWeight->"Bold"],
 ", sigma = 1, mean = \[Dash]1, ",
 StyleBox["error = 16",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.892277368430962*^9, 3.892277391776228*^9}, {
   3.892285825734497*^9, 3.8922858432304287`*^9}, {3.892286257661607*^9, 
   3.892286260889318*^9}, 3.892361243018243*^9, {3.892398378889889*^9, 
   3.892398379917082*^9}},ExpressionUUID->"05396c5d-6a83-4e1e-b5be-\
2a9bee19953c"],

Cell[CellGroupData[{

Cell[BoxData["d14"], "Input",
 CellChangeTimes->{{3.892277767598569*^9, 3.892277786641212*^9}, {
  3.892398381113887*^9, 3.892398382469005*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f20de964-d944-4544-87e5-072e24b2866e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.063475935, "result_sigma" -> 0.000025156445000000002`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        1.9412109375000008`17., "p2" -> -0.0009809570312500004`19., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.085537333, "result_sigma" -> 0.000049101839000000005`, 
        "m" -> 14, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 4, "p1" -> 
        1.9426801964628644`17., "p2" -> 0.00048237953519893065`20., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.094749278, "result_sigma" -> 0.00010864192, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 2.0099611465787053`17., "p2" -> 
        0.0002489731404963654`19., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.099955669, "result_sigma" -> 0.00012550863, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 2.002257761057966`16., "p2" -> 
        0.00008648719693248948, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10272994, "result_sigma" -> 0.0002240334, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 2.0115837756743313`17., "p2" -> 
        0.00008270977787271102, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10498127, "result_sigma" -> 0.00023823332, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 12, "p1" -> 2.0305897856067605`17., 
        "p2" -> -0.00001872099109071979, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10717557, "result_sigma" -> 0.00028238113, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 2.023271677219686`16., "p2" -> 
        0.00006085206644041772, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10749467, "result_sigma" -> 0.00032837785, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 2.0632357410716287`17., "p2" -> 
        0.0000606905062682297, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10876247, "result_sigma" -> 0.00042122736, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 20, "p1" -> 2.0360232036268338`17., "p2" -> 
        0.001697604388449789`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10939028, "result_sigma" -> 0.00038239342, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 2.1125308974595534`17., 
        "p2" -> -0.001337614644268001`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11023173, "result_sigma" -> 0.00067731784, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 2.1963986544406984`17., "p2" -> 
        0.002415988581010166`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11034874, "result_sigma" -> 0.00068635246, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11037616, "result_sigma" -> 0.00061727147, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 25, "p1" -> 2.0487802545778315`17., 
        "p2" -> -0.001343453810329548`18., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 13, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 13], "Path" -> {}, "DisplayedRowCount" -> 
     13, "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0634759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000251564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9412109375000008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000491018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.9426801964628644"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000108642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0099611465787052"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0999557"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000125509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.002257761057966"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10273"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000224033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0115837756743316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.104981"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000238233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0305897856067608"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000282381"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.023271677219686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000328378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0632357410716288"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000421227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.036023203626834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000382393"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1125308974595536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110232"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000677318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.1963986544406984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000686352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000617271"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0487802545778316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{747., {271.91754150390625`, 279.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892463388729104*^9, 3.892475963735299*^9, 
  3.892530743391362*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"38403c24-7058-44a0-bc0b-16b967e1f0c6"]
}, Open  ]],

Cell["\<\
Shipit[m_, seed_, weeks_, trials_, mean_, sigma_, error_, params_]\
\>", "Text",
 CellChangeTimes->{
  3.8922774786249437`*^9},ExpressionUUID->"5c2a1a40-41ef-4d98-8b67-\
5f040fdc3947"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shFn", "[", 
    RowBox[{"p_", ",", "a_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Shipit", "[", 
     RowBox[{"14", ",", "1", ",", "10000000", ",", " ", "25", ",", " ", 
      RowBox[{"-", "1"}], ",", "1", ",", "16", ",", " ", 
      RowBox[{"{", 
       RowBox[{"p", ",", " ", "a"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892277432385109*^9, 3.8922774478599863`*^9}, {
   3.892277486002925*^9, 3.89227751792494*^9}, {3.892277575890009*^9, 
   3.892277628393573*^9}, 3.892277835312179*^9, {3.8922778658666077`*^9, 
   3.892277866044043*^9}, {3.892278040661169*^9, 3.892278059204832*^9}, {
   3.8922783102385263`*^9, 3.892278310367772*^9}, {3.892293128570086*^9, 
   3.892293128974053*^9}, {3.892350850073522*^9, 3.892350850241357*^9}, {
   3.89239838535785*^9, 3.8923983860802097`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"59f6ae0c-1718-472f-8bb9-0f8efd12891e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1.6", ",", "2.5", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"shFn", "[", 
         RowBox[{"#", ",", "0"}], "]"}]}], "}"}], "&"}], ",", "range"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"shFn", "[", 
         RowBox[{"#", ",", 
          RowBox[{"-", "0.1"}]}], "]"}]}], "}"}], "&"}], ",", "range"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l3", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"shFn", "[", 
         RowBox[{"#", ",", "0.1"}], "]"}]}], "}"}], "&"}], ",", "range"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892277529231868*^9, 3.892277635907536*^9}, {
  3.89227783715867*^9, 3.892277853285212*^9}, {3.8922779024873238`*^9, 
  3.8922779025909357`*^9}, {3.892277938725355*^9, 3.892277948089374*^9}, {
  3.892278064979577*^9, 3.8922780715475082`*^9}, {3.892278199619801*^9, 
  3.892278204948538*^9}, {3.892278316415516*^9, 3.892278316729712*^9}, {
  3.892282303825553*^9, 3.8922823074217997`*^9}, {3.892288385743102*^9, 
  3.892288430991084*^9}, {3.89240556542804*^9, 3.892405612302891*^9}, {
  3.892475853332714*^9, 3.892475859287746*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"e08fdcb5-26ed-492f-97e5-cd6ec9bc829b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"l1", ",", "l2", ",", "l3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.892277647318041*^9, 3.892277651616905*^9}, {
  3.8922781103716784`*^9, 3.8922781162527323`*^9}, {3.892278214031816*^9, 
  3.892278214592691*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"b281205c-88ce-4024-bae1-a557059b5aeb"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.6, 0.10369938}, {1.7000000000000002`, 0.10568952}, {1.8, 
       0.10742812}, {1.9000000000000001`, 0.10808396}, {2., 0.10815644}, {2.1,
        0.10806773}, {2.2, 0.10798098}, {2.3000000000000003`, 0.10787082}, {
       2.4000000000000004`, 0.1072321}, {2.5, 0.10645138}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.6, 0.10450718}, {1.7000000000000002`, 0.10612147}, {1.8, 
       0.10762614}, {1.9000000000000001`, 0.10808312}, {2., 0.10815364}, {2.1,
        0.10812219}, {2.2, 0.10799687}, {2.3000000000000003`, 0.10791347}, {
       2.4000000000000004`, 0.10699643}, {2.5, 0.10619267}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.6, 0.10314025}, {1.7000000000000002`, 0.10517358}, {1.8, 
       0.1070528}, {1.9000000000000001`, 0.10799}, {2., 0.10816412}, {2.1, 
       0.1080222}, {2.2, 0.10793091}, {2.3000000000000003`, 0.10801882}, {
       2.4000000000000004`, 0.10726783}, {2.5, 0.10653751}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.5812500000000038`, 0.10286114611111156`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.5812500000000038`, 2.5}, {0.10286114611111156`, 0.10816412}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892463463396826*^9, 3.892475994157383*^9, 
  3.892530746407729*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"0307b004-cd59-4564-b681-1c99f42a219a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shM14E16N", "[", 
    RowBox[{"p_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Shipit", "[", 
         RowBox[{"14", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
          RowBox[{"-", "1"}], ",", "1", ",", "16", ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", " ", "a"}], "}"}]}], "]"}], "&"}], ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892282733134947*^9, 3.8922827459786177`*^9}, {
   3.892282876812405*^9, 3.892282925169712*^9}, {3.892284430174745*^9, 
   3.892284430370842*^9}, {3.892285128565845*^9, 3.892285158939155*^9}, 
   3.89228519254305*^9, {3.892285443275159*^9, 3.892285461443377*^9}, {
   3.8922854943258553`*^9, 3.892285496957378*^9}, {3.89228824303552*^9, 
   3.892288243544449*^9}, {3.892288305248515*^9, 3.892288308147613*^9}, {
   3.892398410507374*^9, 3.892398411578145*^9}, {3.8924058045217733`*^9, 
   3.89240580821231*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"9eb61896-e99f-41b3-a1ed-4da7c4ed5cc8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"range", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"1.95", ",", "2.125", ",", "0.025"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14E16N", "[", 
        RowBox[{"#", ",", "0", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14E16N", "[", 
        RowBox[{"#", ",", "0.1", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14E16N", "[", 
        RowBox[{"#", ",", 
         RowBox[{"-", "0.1"}], ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892282374317274*^9, 3.892282401709289*^9}, {
   3.892282438632196*^9, 3.892282451649353*^9}, {3.892282487348776*^9, 
   3.892282537592512*^9}, 3.8922827245337067`*^9, {3.892282793355856*^9, 
   3.8922827941833353`*^9}, {3.89228293045715*^9, 3.892282955263584*^9}, {
   3.892283044430337*^9, 3.8922830645823708`*^9}, {3.8922832632278633`*^9, 
   3.892283285549306*^9}, {3.8922835387703543`*^9, 3.892283547919845*^9}, {
   3.892283689816313*^9, 3.892283692582142*^9}, 3.892284411877531*^9, {
   3.892284488991322*^9, 3.892284508963543*^9}, 3.892285527548739*^9, {
   3.892285565338516*^9, 3.892285569305408*^9}, {3.8922856999940243`*^9, 
   3.892285737378387*^9}, {3.8922860841600037`*^9, 3.8922860965988092`*^9}, {
   3.892288313304214*^9, 3.8922883747064323`*^9}, {3.892293156355908*^9, 
   3.89229315678574*^9}, {3.892405822571082*^9, 3.8924058305066338`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"40062b67-c874-4577-aa98-565de01e75f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"l1", ",", "l2", ",", "l3"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[133]:=",ExpressionUUID->"3814eae0-3b0b-4442-81a3-44aec2626ef8"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.95, 0.10777844600006424`}, {1.95, 
           0.10783379293094232`}}], 
          LineBox[{{1.95, 0.10783379293094232`}, {1.95, 
           0.1078891398618204}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.9749999999999999`, 0.10787480290084753`}, {
           1.9749999999999999`, 0.10792908481069946`}}], 
          LineBox[{{1.9749999999999999`, 0.10792908481069946`}, {
           1.9749999999999999`, 0.1079833667205514}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2., 0.10792836940509348`}, {2., 0.1079818303305349}}], 
          LineBox[{{2., 0.1079818303305349}, {2., 0.10803529125597633`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.10794731272529427`}, {2.025, 
           0.10800168969037506`}}], 
          LineBox[{{2.025, 0.10800168969037506`}, {2.025, 
           0.10805606665545585`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.10791966452399435`}, {2.05, 
           0.10797369215275268`}}], 
          LineBox[{{2.05, 0.10797369215275268`}, {2.05, 
           0.10802771978151102`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.107920021101464}, {2.075, 
           0.10797536855809631`}}], 
          LineBox[{{2.075, 0.10797536855809631`}, {2.075, 
           0.10803071601472862`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.10787784454584269`}, {2.1, 0.10793285671464228`}}],
           LineBox[{{2.1, 0.10793285671464228`}, {2.1, 
           0.10798786888344188`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.10782947851833319`}, {2.125, 
           0.10788434948493539`}}], 
          LineBox[{{2.125, 0.10788434948493539`}, {2.125, 
           0.10793922045153759`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{1.95, 0.10763829603453712`}, {1.95, 
           0.10769373961744914`}}], 
          LineBox[{{1.95, 0.10769373961744914`}, {1.95, 
           0.10774918320036117`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{1.9749999999999999`, 0.10775917087927779`}, {
           1.9749999999999999`, 0.10781268631508273`}}], 
          LineBox[{{1.9749999999999999`, 0.10781268631508273`}, {
           1.9749999999999999`, 0.10786620175088767`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2., 0.10782062769955304`}, {2., 0.10787330932728585`}}], 
          LineBox[{{2., 0.10787330932728585`}, {2., 0.10792599095501866`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.10786156432564371`}, {2.025, 
           0.10791515499583326`}}], 
          LineBox[{{2.025, 0.10791515499583326`}, {2.025, 
           0.10796874566602281`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.10787342275286509`}, {2.05, 
           0.10792714615505401`}}], 
          LineBox[{{2.05, 0.10792714615505401`}, {2.05, 
           0.10798086955724294`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.10789575083162012`}, {2.075, 
           0.10795044633772694`}}], 
          LineBox[{{2.075, 0.10795044633772694`}, {2.075, 
           0.10800514184383375`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.10785072418026134`}, {2.1, 0.10790585967081452`}}],
           LineBox[{{2.1, 0.10790585967081452`}, {2.1, 0.1079609951613677}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.10782940410161558`}, {2.125, 
           0.10788423766226357`}}], 
          LineBox[{{2.125, 0.10788423766226357`}, {2.125, 
           0.10793907122291156`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{1.95, 0.1078314648565793}, {1.95, 0.10788726789751338`}}],
           LineBox[{{1.95, 0.10788726789751338`}, {1.95, 
           0.10794307093844746`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{1.9749999999999999`, 0.10790241838048592`}, {
           1.9749999999999999`, 0.10795812739144278`}}], 
          LineBox[{{1.9749999999999999`, 0.10795812739144278`}, {
           1.9749999999999999`, 0.10801383640239964`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2., 0.10795447663076395`}, {2., 0.10800904038889783`}}], 
          LineBox[{{2., 0.10800904038889783`}, {2., 0.10806360414703171`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.10795233466613066`}, {2.025, 
           0.1080069649695593}}], 
          LineBox[{{2.025, 0.1080069649695593}, {2.025, 
           0.10806159527298795`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.10791357442779008`}, {2.05, 
           0.10796787681530817`}}], 
          LineBox[{{2.05, 0.10796787681530817`}, {2.05, 
           0.10802217920282627`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.10787248707622776`}, {2.075, 
           0.10792779702015573`}}], 
          LineBox[{{2.075, 0.10792779702015573`}, {2.075, 
           0.1079831069640837}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.10781626750817676`}, {2.1, 0.1078713914765086}}], 
          LineBox[{{2.1, 0.1078713914765086}, {2.1, 0.10792651544484043`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.10773786444283584`}, {2.125, 
           0.1077941716685947}}], 
          LineBox[{{2.125, 0.1077941716685947}, {2.125, 
           0.10785047889435356`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.95, 0.1078891398618204}, 
             Offset[{3, 0}, {1.95, 0.1078891398618204}]}, {{1.95, 
             0.1078891398618204}, 
             Offset[{-3, 0}, {1.95, 0.1078891398618204}]}, {{1.95, 
             0.10777844600006424`}, 
             Offset[{3, 0}, {1.95, 0.10777844600006424`}]}, {{1.95, 
             0.10777844600006424`}, 
             Offset[{-3, 0}, {1.95, 0.10777844600006424`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.9749999999999999`, 0.1079833667205514}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.1079833667205514}]}, {{
             1.9749999999999999`, 0.1079833667205514}, 
             Offset[{-3, 0}, {1.9749999999999999`, 0.1079833667205514}]}, {{
             1.9749999999999999`, 0.10787480290084753`}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.10787480290084753`}]}, {{
             1.9749999999999999`, 0.10787480290084753`}, 
             Offset[{-3, 0}, {1.9749999999999999`, 
              0.10787480290084753`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.10803529125597633`}, 
             Offset[{3, 0}, {2., 0.10803529125597633`}]}, {{2., 
             0.10803529125597633`}, 
             Offset[{-3, 0}, {2., 0.10803529125597633`}]}, {{2., 
             0.10792836940509348`}, 
             Offset[{3, 0}, {2., 0.10792836940509348`}]}, {{2., 
             0.10792836940509348`}, 
             Offset[{-3, 0}, {2., 0.10792836940509348`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.10805606665545585`}, 
             Offset[{3, 0}, {2.025, 0.10805606665545585`}]}, {{2.025, 
             0.10805606665545585`}, 
             Offset[{-3, 0}, {2.025, 0.10805606665545585`}]}, {{2.025, 
             0.10794731272529427`}, 
             Offset[{3, 0}, {2.025, 0.10794731272529427`}]}, {{2.025, 
             0.10794731272529427`}, 
             Offset[{-3, 0}, {2.025, 0.10794731272529427`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.10802771978151102`}, 
             Offset[{3, 0}, {2.05, 0.10802771978151102`}]}, {{2.05, 
             0.10802771978151102`}, 
             Offset[{-3, 0}, {2.05, 0.10802771978151102`}]}, {{2.05, 
             0.10791966452399435`}, 
             Offset[{3, 0}, {2.05, 0.10791966452399435`}]}, {{2.05, 
             0.10791966452399435`}, 
             Offset[{-3, 0}, {2.05, 0.10791966452399435`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.10803071601472862`}, 
             Offset[{3, 0}, {2.075, 0.10803071601472862`}]}, {{2.075, 
             0.10803071601472862`}, 
             Offset[{-3, 0}, {2.075, 0.10803071601472862`}]}, {{2.075, 
             0.107920021101464}, 
             Offset[{3, 0}, {2.075, 0.107920021101464}]}, {{2.075, 
             0.107920021101464}, 
             Offset[{-3, 0}, {2.075, 0.107920021101464}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.10798786888344188`}, 
             Offset[{3, 0}, {2.1, 0.10798786888344188`}]}, {{2.1, 
             0.10798786888344188`}, 
             Offset[{-3, 0}, {2.1, 0.10798786888344188`}]}, {{2.1, 
             0.10787784454584269`}, 
             Offset[{3, 0}, {2.1, 0.10787784454584269`}]}, {{2.1, 
             0.10787784454584269`}, 
             Offset[{-3, 0}, {2.1, 0.10787784454584269`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.10793922045153759`}, 
             Offset[{3, 0}, {2.125, 0.10793922045153759`}]}, {{2.125, 
             0.10793922045153759`}, 
             Offset[{-3, 0}, {2.125, 0.10793922045153759`}]}, {{2.125, 
             0.10782947851833319`}, 
             Offset[{3, 0}, {2.125, 0.10782947851833319`}]}, {{2.125, 
             0.10782947851833319`}, 
             Offset[{-3, 0}, {2.125, 0.10782947851833319`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.95, 0.10774918320036117`}, 
             Offset[{3, 0}, {1.95, 0.10774918320036117`}]}, {{1.95, 
             0.10774918320036117`}, 
             Offset[{-3, 0}, {1.95, 0.10774918320036117`}]}, {{1.95, 
             0.10763829603453712`}, 
             Offset[{3, 0}, {1.95, 0.10763829603453712`}]}, {{1.95, 
             0.10763829603453712`}, 
             Offset[{-3, 0}, {1.95, 0.10763829603453712`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.9749999999999999`, 0.10786620175088767`}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.10786620175088767`}]}, {{
             1.9749999999999999`, 0.10786620175088767`}, 
             Offset[{-3, 0}, {1.9749999999999999`, 0.10786620175088767`}]}, {{
             1.9749999999999999`, 0.10775917087927779`}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.10775917087927779`}]}, {{
             1.9749999999999999`, 0.10775917087927779`}, 
             Offset[{-3, 0}, {1.9749999999999999`, 
              0.10775917087927779`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.10792599095501866`}, 
             Offset[{3, 0}, {2., 0.10792599095501866`}]}, {{2., 
             0.10792599095501866`}, 
             Offset[{-3, 0}, {2., 0.10792599095501866`}]}, {{2., 
             0.10782062769955304`}, 
             Offset[{3, 0}, {2., 0.10782062769955304`}]}, {{2., 
             0.10782062769955304`}, 
             Offset[{-3, 0}, {2., 0.10782062769955304`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.10796874566602281`}, 
             Offset[{3, 0}, {2.025, 0.10796874566602281`}]}, {{2.025, 
             0.10796874566602281`}, 
             Offset[{-3, 0}, {2.025, 0.10796874566602281`}]}, {{2.025, 
             0.10786156432564371`}, 
             Offset[{3, 0}, {2.025, 0.10786156432564371`}]}, {{2.025, 
             0.10786156432564371`}, 
             Offset[{-3, 0}, {2.025, 0.10786156432564371`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.10798086955724294`}, 
             Offset[{3, 0}, {2.05, 0.10798086955724294`}]}, {{2.05, 
             0.10798086955724294`}, 
             Offset[{-3, 0}, {2.05, 0.10798086955724294`}]}, {{2.05, 
             0.10787342275286509`}, 
             Offset[{3, 0}, {2.05, 0.10787342275286509`}]}, {{2.05, 
             0.10787342275286509`}, 
             Offset[{-3, 0}, {2.05, 0.10787342275286509`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.10800514184383375`}, 
             Offset[{3, 0}, {2.075, 0.10800514184383375`}]}, {{2.075, 
             0.10800514184383375`}, 
             Offset[{-3, 0}, {2.075, 0.10800514184383375`}]}, {{2.075, 
             0.10789575083162012`}, 
             Offset[{3, 0}, {2.075, 0.10789575083162012`}]}, {{2.075, 
             0.10789575083162012`}, 
             Offset[{-3, 0}, {2.075, 0.10789575083162012`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.1079609951613677}, 
             Offset[{3, 0}, {2.1, 0.1079609951613677}]}, {{2.1, 
             0.1079609951613677}, 
             Offset[{-3, 0}, {2.1, 0.1079609951613677}]}, {{2.1, 
             0.10785072418026134`}, 
             Offset[{3, 0}, {2.1, 0.10785072418026134`}]}, {{2.1, 
             0.10785072418026134`}, 
             Offset[{-3, 0}, {2.1, 0.10785072418026134`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.10793907122291156`}, 
             Offset[{3, 0}, {2.125, 0.10793907122291156`}]}, {{2.125, 
             0.10793907122291156`}, 
             Offset[{-3, 0}, {2.125, 0.10793907122291156`}]}, {{2.125, 
             0.10782940410161558`}, 
             Offset[{3, 0}, {2.125, 0.10782940410161558`}]}, {{2.125, 
             0.10782940410161558`}, 
             Offset[{-3, 0}, {2.125, 0.10782940410161558`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.95, 0.10794307093844746`}, 
             Offset[{3, 0}, {1.95, 0.10794307093844746`}]}, {{1.95, 
             0.10794307093844746`}, 
             Offset[{-3, 0}, {1.95, 0.10794307093844746`}]}, {{1.95, 
             0.1078314648565793}, 
             Offset[{3, 0}, {1.95, 0.1078314648565793}]}, {{1.95, 
             0.1078314648565793}, 
             Offset[{-3, 0}, {1.95, 0.1078314648565793}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.9749999999999999`, 0.10801383640239964`}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.10801383640239964`}]}, {{
             1.9749999999999999`, 0.10801383640239964`}, 
             Offset[{-3, 0}, {1.9749999999999999`, 0.10801383640239964`}]}, {{
             1.9749999999999999`, 0.10790241838048592`}, 
             Offset[{3, 0}, {1.9749999999999999`, 0.10790241838048592`}]}, {{
             1.9749999999999999`, 0.10790241838048592`}, 
             Offset[{-3, 0}, {1.9749999999999999`, 
              0.10790241838048592`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.10806360414703171`}, 
             Offset[{3, 0}, {2., 0.10806360414703171`}]}, {{2., 
             0.10806360414703171`}, 
             Offset[{-3, 0}, {2., 0.10806360414703171`}]}, {{2., 
             0.10795447663076395`}, 
             Offset[{3, 0}, {2., 0.10795447663076395`}]}, {{2., 
             0.10795447663076395`}, 
             Offset[{-3, 0}, {2., 0.10795447663076395`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.10806159527298795`}, 
             Offset[{3, 0}, {2.025, 0.10806159527298795`}]}, {{2.025, 
             0.10806159527298795`}, 
             Offset[{-3, 0}, {2.025, 0.10806159527298795`}]}, {{2.025, 
             0.10795233466613066`}, 
             Offset[{3, 0}, {2.025, 0.10795233466613066`}]}, {{2.025, 
             0.10795233466613066`}, 
             Offset[{-3, 0}, {2.025, 0.10795233466613066`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.10802217920282627`}, 
             Offset[{3, 0}, {2.05, 0.10802217920282627`}]}, {{2.05, 
             0.10802217920282627`}, 
             Offset[{-3, 0}, {2.05, 0.10802217920282627`}]}, {{2.05, 
             0.10791357442779008`}, 
             Offset[{3, 0}, {2.05, 0.10791357442779008`}]}, {{2.05, 
             0.10791357442779008`}, 
             Offset[{-3, 0}, {2.05, 0.10791357442779008`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.1079831069640837}, 
             Offset[{3, 0}, {2.075, 0.1079831069640837}]}, {{2.075, 
             0.1079831069640837}, 
             Offset[{-3, 0}, {2.075, 0.1079831069640837}]}, {{2.075, 
             0.10787248707622776`}, 
             Offset[{3, 0}, {2.075, 0.10787248707622776`}]}, {{2.075, 
             0.10787248707622776`}, 
             Offset[{-3, 0}, {2.075, 0.10787248707622776`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.10792651544484043`}, 
             Offset[{3, 0}, {2.1, 0.10792651544484043`}]}, {{2.1, 
             0.10792651544484043`}, 
             Offset[{-3, 0}, {2.1, 0.10792651544484043`}]}, {{2.1, 
             0.10781626750817676`}, 
             Offset[{3, 0}, {2.1, 0.10781626750817676`}]}, {{2.1, 
             0.10781626750817676`}, 
             Offset[{-3, 0}, {2.1, 0.10781626750817676`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.10785047889435356`}, 
             Offset[{3, 0}, {2.125, 0.10785047889435356`}]}, {{2.125, 
             0.10785047889435356`}, 
             Offset[{-3, 0}, {2.125, 0.10785047889435356`}]}, {{2.125, 
             0.10773786444283584`}, 
             Offset[{3, 0}, {2.125, 0.10773786444283584`}]}, {{2.125, 
             0.10773786444283584`}, 
             Offset[{-3, 0}, {2.125, 0.10773786444283584`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.95, 0.10783379293094232`}, {1.9749999999999999`, 
       0.10792908481069946`}, {2., 0.1079818303305349}, {2.025, 
       0.10800168969037506`}, {2.05, 0.10797369215275268`}, {2.075, 
       0.10797536855809631`}, {2.1, 0.10793285671464228`}, {2.125, 
       0.10788434948493539`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.95, 0.10769373961744914`}, {1.9749999999999999`, 
       0.10781268631508273`}, {2., 0.10787330932728585`}, {2.025, 
       0.10791515499583326`}, {2.05, 0.10792714615505401`}, {2.075, 
       0.10795044633772694`}, {2.1, 0.10790585967081452`}, {2.125, 
       0.10788423766226357`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1.95, 0.10788726789751338`}, {1.9749999999999999`, 
       0.10795812739144278`}, {2., 0.10800904038889783`}, {2.025, 
       0.1080069649695593}, {2.05, 0.10796787681530817`}, {2.075, 
       0.10792779702015573`}, {2.1, 0.1078713914765086}, {2.125, 
       0.1077941716685947}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9463541666666713`, 0.10761466780606566`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9463541666666713`, 2.125}, {0.10761466780606566`, 
   0.10806360414703171`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924652644856787`*^9, 3.892479048089971*^9, 
  3.89253075572353*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"87ffc9cb-eaa1-4303-94e3-54dfeaf02b40"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 14",
  FontWeight->"Bold"],
 ", sigma = 1, mean = \[Dash]1, ",
 StyleBox["error = 35",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.892277368430962*^9, 3.892277391776228*^9}, {
  3.892285825734497*^9, 3.8922858432304287`*^9}, {3.892286257661607*^9, 
  3.892286260889318*^9}, {3.892286356315919*^9, 3.8922863575499697`*^9}, {
  3.8923612451184*^9, 3.892361246855735*^9}, {3.892398416863777*^9, 
  3.892398417201788*^9}},ExpressionUUID->"fdb79382-5bdb-4bbd-93ae-\
c154c6bf6160"],

Cell["\<\
Shipit[m_, seed_, weeks_, trials_, mean_, sigma_, error_, params_]\
\>", "Text",
 CellChangeTimes->{
  3.8922774786249437`*^9},ExpressionUUID->"20b0f8f7-69cc-48df-ace0-\
3da783ce3880"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shM14N", "[", 
    RowBox[{"p_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Shipit", "[", 
         RowBox[{"14", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
          RowBox[{"-", "1"}], ",", "1", ",", "35", ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", " ", "a"}], "}"}]}], "]"}], "&"}], ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892282733134947*^9, 3.8922827459786177`*^9}, {
   3.892282876812405*^9, 3.892282925169712*^9}, {3.892284430174745*^9, 
   3.892284430370842*^9}, {3.892285128565845*^9, 3.892285158939155*^9}, 
   3.89228519254305*^9, {3.892285443275159*^9, 3.892285461443377*^9}, {
   3.8922854943258553`*^9, 3.892285496957378*^9}, {3.89228636115818*^9, 
   3.892286362499303*^9}, {3.8922882205077343`*^9, 3.8922882210308113`*^9}, {
   3.892288446071945*^9, 3.892288449264179*^9}, {3.8923984198318872`*^9, 
   3.8923984210479727`*^9}, {3.892405769366888*^9, 3.892405777760151*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"b12e0ff6-967a-4f0d-b121-95f778ecb8f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"2.0", ",", "2.15", ",", "0.025"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l14n1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14N", "[", 
        RowBox[{"#", ",", "0", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l14n2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14N", "[", 
        RowBox[{"#", ",", "0.1", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l14n3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM14N", "[", 
        RowBox[{"#", ",", 
         RowBox[{"-", "0.1"}], ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892282374317274*^9, 3.892282401709289*^9}, {
   3.892282438632196*^9, 3.892282451649353*^9}, {3.892282487348776*^9, 
   3.892282537592512*^9}, 3.8922827245337067`*^9, {3.892282793355856*^9, 
   3.8922827941833353`*^9}, {3.89228293045715*^9, 3.892282955263584*^9}, {
   3.892283044430337*^9, 3.8922830645823708`*^9}, {3.8922832632278633`*^9, 
   3.892283285549306*^9}, {3.8922835387703543`*^9, 3.892283547919845*^9}, {
   3.892283689816313*^9, 3.892283692582142*^9}, 3.892284411877531*^9, {
   3.892284488991322*^9, 3.892284508963543*^9}, 3.892285527548739*^9, {
   3.892285565338516*^9, 3.892285569305408*^9}, {3.8922856999940243`*^9, 
   3.892285737378387*^9}, {3.8922860841600037`*^9, 3.8922860965988092`*^9}, {
   3.8922864572237988`*^9, 3.892286505667172*^9}, {3.8922865654147043`*^9, 
   3.892286614841487*^9}, {3.8922867151040087`*^9, 3.892286715883219*^9}, {
   3.892286816983045*^9, 3.892286825248002*^9}, {3.892286946226022*^9, 
   3.8922869463588343`*^9}, {3.892288456868019*^9, 3.8922884629572906`*^9}, {
   3.892350879548347*^9, 3.89235088456612*^9}, {3.892357410009234*^9, 
   3.892357410306396*^9}, {3.892358603497036*^9, 3.89235864918707*^9}, {
   3.892405785377605*^9, 3.892405791532846*^9}, {3.89243944808997*^9, 
   3.892439451701131*^9}, {3.892439494689988*^9, 3.8924395047240562`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"759a6d8c-5e63-456a-ab66-07fd769d58d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"l14n1", ",", "l14n2", ",", "l14n3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.892439992938896*^9, 3.892440008828065*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"1ea0638f-fb43-45f6-a5a9-fea632adeef3"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2., 0.11246602763030353`}, {2., 0.1125465940138586}}], 
          LineBox[{{2., 0.1125465940138586}, {2., 0.11262716039741366`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.11253360172109236`}, {2.025, 
           0.11261469634262355`}}], 
          LineBox[{{2.025, 0.11261469634262355`}, {2.025, 
           0.11269579096415475`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.11256738549484467`}, {2.05, 
           0.11264795525018487`}}], 
          LineBox[{{2.05, 0.11264795525018487`}, {2.05, 
           0.11272852500552506`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.11255332809385842`}, {2.075, 
           0.11263335285077844`}}], 
          LineBox[{{2.075, 0.11263335285077844`}, {2.075, 
           0.11271337760769846`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.11248239115397655`}, {2.1, 0.11256268950378663`}}],
           LineBox[{{2.1, 0.11256268950378663`}, {2.1, 
           0.11264298785359671`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.11247235484166321`}, {2.125, 
           0.11255144680503675`}}], 
          LineBox[{{2.125, 0.11255144680503675`}, {2.125, 
           0.11263053876841028`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.15, 0.11244746343009025`}, {2.15, 
           0.11252700937721014`}}], 
          LineBox[{{2.15, 0.11252700937721014`}, {2.15, 
           0.11260655532433002`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2., 0.11235272430875877`}, {2., 0.1124320056127404}}], 
          LineBox[{{2., 0.1124320056127404}, {2., 0.11251128691672203`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.11241824945883379`}, {2.025, 
           0.11249848338039424`}}], 
          LineBox[{{2.025, 0.11249848338039424`}, {2.025, 
           0.11257871730195469`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.11249112016242639`}, {2.05, 
           0.11257099875899003`}}], 
          LineBox[{{2.05, 0.11257099875899003`}, {2.05, 
           0.11265087735555367`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.1125302707178562}, {2.075, 
           0.11260867091430951`}}], 
          LineBox[{{2.075, 0.11260867091430951`}, {2.075, 
           0.11268707111076282`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.11247376190714113`}, {2.1, 0.11255302489418832`}}],
           LineBox[{{2.1, 0.11255302489418832`}, {2.1, 
           0.11263228788123551`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.11243705375925538`}, {2.125, 
           0.11251589518042195`}}], 
          LineBox[{{2.125, 0.11251589518042195`}, {2.125, 
           0.11259473660158852`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{2.15, 0.11247390850955369`}, {2.15, 
           0.11255207584343899`}}], 
          LineBox[{{2.15, 0.11255207584343899`}, {2.15, 
           0.11263024317732429`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2., 0.1125069489243619}, {2., 0.11258812999044296`}}], 
          LineBox[{{2., 0.11258812999044296`}, {2., 0.11266931105652402`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.025, 0.11250581426516396`}, {2.025, 
           0.11258710380805718`}}], 
          LineBox[{{2.025, 0.11258710380805718`}, {2.025, 
           0.11266839335095041`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.05, 0.11252219889510347`}, {2.05, 
           0.11260355338631109`}}], 
          LineBox[{{2.05, 0.11260355338631109`}, {2.05, 
           0.11268490787751871`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.075, 0.11250263153105886`}, {2.075, 
           0.11258300871418031`}}], 
          LineBox[{{2.075, 0.11258300871418031`}, {2.075, 
           0.11266338589730177`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.1, 0.11248089089431101`}, {2.1, 0.1125612917101808}}], 
          LineBox[{{2.1, 0.1125612917101808}, {2.1, 0.11264169252605058`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.125, 0.11244359517248136`}, {2.125, 
           0.11252405710077956`}}], 
          LineBox[{{2.125, 0.11252405710077956`}, {2.125, 
           0.11260451902907777`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{2.15, 0.11236162664444178`}, {2.15, 
           0.11244300340702491`}}], 
          LineBox[{{2.15, 0.11244300340702491`}, {2.15, 
           0.11252438016960804`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.11262716039741366`}, 
             Offset[{3, 0}, {2., 0.11262716039741366`}]}, {{2., 
             0.11262716039741366`}, 
             Offset[{-3, 0}, {2., 0.11262716039741366`}]}, {{2., 
             0.11246602763030353`}, 
             Offset[{3, 0}, {2., 0.11246602763030353`}]}, {{2., 
             0.11246602763030353`}, 
             Offset[{-3, 0}, {2., 0.11246602763030353`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.11269579096415475`}, 
             Offset[{3, 0}, {2.025, 0.11269579096415475`}]}, {{2.025, 
             0.11269579096415475`}, 
             Offset[{-3, 0}, {2.025, 0.11269579096415475`}]}, {{2.025, 
             0.11253360172109236`}, 
             Offset[{3, 0}, {2.025, 0.11253360172109236`}]}, {{2.025, 
             0.11253360172109236`}, 
             Offset[{-3, 0}, {2.025, 0.11253360172109236`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.11272852500552506`}, 
             Offset[{3, 0}, {2.05, 0.11272852500552506`}]}, {{2.05, 
             0.11272852500552506`}, 
             Offset[{-3, 0}, {2.05, 0.11272852500552506`}]}, {{2.05, 
             0.11256738549484467`}, 
             Offset[{3, 0}, {2.05, 0.11256738549484467`}]}, {{2.05, 
             0.11256738549484467`}, 
             Offset[{-3, 0}, {2.05, 0.11256738549484467`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.11271337760769846`}, 
             Offset[{3, 0}, {2.075, 0.11271337760769846`}]}, {{2.075, 
             0.11271337760769846`}, 
             Offset[{-3, 0}, {2.075, 0.11271337760769846`}]}, {{2.075, 
             0.11255332809385842`}, 
             Offset[{3, 0}, {2.075, 0.11255332809385842`}]}, {{2.075, 
             0.11255332809385842`}, 
             Offset[{-3, 0}, {2.075, 0.11255332809385842`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.11264298785359671`}, 
             Offset[{3, 0}, {2.1, 0.11264298785359671`}]}, {{2.1, 
             0.11264298785359671`}, 
             Offset[{-3, 0}, {2.1, 0.11264298785359671`}]}, {{2.1, 
             0.11248239115397655`}, 
             Offset[{3, 0}, {2.1, 0.11248239115397655`}]}, {{2.1, 
             0.11248239115397655`}, 
             Offset[{-3, 0}, {2.1, 0.11248239115397655`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.11263053876841028`}, 
             Offset[{3, 0}, {2.125, 0.11263053876841028`}]}, {{2.125, 
             0.11263053876841028`}, 
             Offset[{-3, 0}, {2.125, 0.11263053876841028`}]}, {{2.125, 
             0.11247235484166321`}, 
             Offset[{3, 0}, {2.125, 0.11247235484166321`}]}, {{2.125, 
             0.11247235484166321`}, 
             Offset[{-3, 0}, {2.125, 0.11247235484166321`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.15, 0.11260655532433002`}, 
             Offset[{3, 0}, {2.15, 0.11260655532433002`}]}, {{2.15, 
             0.11260655532433002`}, 
             Offset[{-3, 0}, {2.15, 0.11260655532433002`}]}, {{2.15, 
             0.11244746343009025`}, 
             Offset[{3, 0}, {2.15, 0.11244746343009025`}]}, {{2.15, 
             0.11244746343009025`}, 
             Offset[{-3, 0}, {2.15, 0.11244746343009025`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.11251128691672203`}, 
             Offset[{3, 0}, {2., 0.11251128691672203`}]}, {{2., 
             0.11251128691672203`}, 
             Offset[{-3, 0}, {2., 0.11251128691672203`}]}, {{2., 
             0.11235272430875877`}, 
             Offset[{3, 0}, {2., 0.11235272430875877`}]}, {{2., 
             0.11235272430875877`}, 
             Offset[{-3, 0}, {2., 0.11235272430875877`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.11257871730195469`}, 
             Offset[{3, 0}, {2.025, 0.11257871730195469`}]}, {{2.025, 
             0.11257871730195469`}, 
             Offset[{-3, 0}, {2.025, 0.11257871730195469`}]}, {{2.025, 
             0.11241824945883379`}, 
             Offset[{3, 0}, {2.025, 0.11241824945883379`}]}, {{2.025, 
             0.11241824945883379`}, 
             Offset[{-3, 0}, {2.025, 0.11241824945883379`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.11265087735555367`}, 
             Offset[{3, 0}, {2.05, 0.11265087735555367`}]}, {{2.05, 
             0.11265087735555367`}, 
             Offset[{-3, 0}, {2.05, 0.11265087735555367`}]}, {{2.05, 
             0.11249112016242639`}, 
             Offset[{3, 0}, {2.05, 0.11249112016242639`}]}, {{2.05, 
             0.11249112016242639`}, 
             Offset[{-3, 0}, {2.05, 0.11249112016242639`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.11268707111076282`}, 
             Offset[{3, 0}, {2.075, 0.11268707111076282`}]}, {{2.075, 
             0.11268707111076282`}, 
             Offset[{-3, 0}, {2.075, 0.11268707111076282`}]}, {{2.075, 
             0.1125302707178562}, 
             Offset[{3, 0}, {2.075, 0.1125302707178562}]}, {{2.075, 
             0.1125302707178562}, 
             Offset[{-3, 0}, {2.075, 0.1125302707178562}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.11263228788123551`}, 
             Offset[{3, 0}, {2.1, 0.11263228788123551`}]}, {{2.1, 
             0.11263228788123551`}, 
             Offset[{-3, 0}, {2.1, 0.11263228788123551`}]}, {{2.1, 
             0.11247376190714113`}, 
             Offset[{3, 0}, {2.1, 0.11247376190714113`}]}, {{2.1, 
             0.11247376190714113`}, 
             Offset[{-3, 0}, {2.1, 0.11247376190714113`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.11259473660158852`}, 
             Offset[{3, 0}, {2.125, 0.11259473660158852`}]}, {{2.125, 
             0.11259473660158852`}, 
             Offset[{-3, 0}, {2.125, 0.11259473660158852`}]}, {{2.125, 
             0.11243705375925538`}, 
             Offset[{3, 0}, {2.125, 0.11243705375925538`}]}, {{2.125, 
             0.11243705375925538`}, 
             Offset[{-3, 0}, {2.125, 0.11243705375925538`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.15, 0.11263024317732429`}, 
             Offset[{3, 0}, {2.15, 0.11263024317732429`}]}, {{2.15, 
             0.11263024317732429`}, 
             Offset[{-3, 0}, {2.15, 0.11263024317732429`}]}, {{2.15, 
             0.11247390850955369`}, 
             Offset[{3, 0}, {2.15, 0.11247390850955369`}]}, {{2.15, 
             0.11247390850955369`}, 
             Offset[{-3, 0}, {2.15, 0.11247390850955369`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.11266931105652402`}, 
             Offset[{3, 0}, {2., 0.11266931105652402`}]}, {{2., 
             0.11266931105652402`}, 
             Offset[{-3, 0}, {2., 0.11266931105652402`}]}, {{2., 
             0.1125069489243619}, 
             Offset[{3, 0}, {2., 0.1125069489243619}]}, {{2., 
             0.1125069489243619}, 
             Offset[{-3, 0}, {2., 0.1125069489243619}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.025, 0.11266839335095041`}, 
             Offset[{3, 0}, {2.025, 0.11266839335095041`}]}, {{2.025, 
             0.11266839335095041`}, 
             Offset[{-3, 0}, {2.025, 0.11266839335095041`}]}, {{2.025, 
             0.11250581426516396`}, 
             Offset[{3, 0}, {2.025, 0.11250581426516396`}]}, {{2.025, 
             0.11250581426516396`}, 
             Offset[{-3, 0}, {2.025, 0.11250581426516396`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.05, 0.11268490787751871`}, 
             Offset[{3, 0}, {2.05, 0.11268490787751871`}]}, {{2.05, 
             0.11268490787751871`}, 
             Offset[{-3, 0}, {2.05, 0.11268490787751871`}]}, {{2.05, 
             0.11252219889510347`}, 
             Offset[{3, 0}, {2.05, 0.11252219889510347`}]}, {{2.05, 
             0.11252219889510347`}, 
             Offset[{-3, 0}, {2.05, 0.11252219889510347`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.075, 0.11266338589730177`}, 
             Offset[{3, 0}, {2.075, 0.11266338589730177`}]}, {{2.075, 
             0.11266338589730177`}, 
             Offset[{-3, 0}, {2.075, 0.11266338589730177`}]}, {{2.075, 
             0.11250263153105886`}, 
             Offset[{3, 0}, {2.075, 0.11250263153105886`}]}, {{2.075, 
             0.11250263153105886`}, 
             Offset[{-3, 0}, {2.075, 0.11250263153105886`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1, 0.11264169252605058`}, 
             Offset[{3, 0}, {2.1, 0.11264169252605058`}]}, {{2.1, 
             0.11264169252605058`}, 
             Offset[{-3, 0}, {2.1, 0.11264169252605058`}]}, {{2.1, 
             0.11248089089431101`}, 
             Offset[{3, 0}, {2.1, 0.11248089089431101`}]}, {{2.1, 
             0.11248089089431101`}, 
             Offset[{-3, 0}, {2.1, 0.11248089089431101`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.125, 0.11260451902907777`}, 
             Offset[{3, 0}, {2.125, 0.11260451902907777`}]}, {{2.125, 
             0.11260451902907777`}, 
             Offset[{-3, 0}, {2.125, 0.11260451902907777`}]}, {{2.125, 
             0.11244359517248136`}, 
             Offset[{3, 0}, {2.125, 0.11244359517248136`}]}, {{2.125, 
             0.11244359517248136`}, 
             Offset[{-3, 0}, {2.125, 0.11244359517248136`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.15, 0.11252438016960804`}, 
             Offset[{3, 0}, {2.15, 0.11252438016960804`}]}, {{2.15, 
             0.11252438016960804`}, 
             Offset[{-3, 0}, {2.15, 0.11252438016960804`}]}, {{2.15, 
             0.11236162664444178`}, 
             Offset[{3, 0}, {2.15, 0.11236162664444178`}]}, {{2.15, 
             0.11236162664444178`}, 
             Offset[{-3, 0}, {2.15, 0.11236162664444178`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{2., 0.1125465940138586}, {2.025, 0.11261469634262355`}, {
       2.05, 0.11264795525018487`}, {2.075, 0.11263335285077844`}, {2.1, 
       0.11256268950378663`}, {2.125, 0.11255144680503675`}, {2.15, 
       0.11252700937721014`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{2., 0.1124320056127404}, {2.025, 0.11249848338039424`}, {
       2.05, 0.11257099875899003`}, {2.075, 0.11260867091430951`}, {2.1, 
       0.11255302489418832`}, {2.125, 0.11251589518042195`}, {2.15, 
       0.11255207584343899`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{2., 0.11258812999044296`}, {2.025, 0.11258710380805718`}, {
       2.05, 0.11260355338631109`}, {2.075, 0.11258300871418031`}, {2.1, 
       0.1125612917101808}, {2.125, 0.11252405710077956`}, {2.15, 
       0.11244300340702491`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9968750000000048`, 0.11233184649227222`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.9968750000000048`, 2.15}, {0.11233184649227222`, 
   0.11272852500552506`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924674321034813`*^9, 3.8924801451399593`*^9, 
  3.8925307652629004`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"55708ebb-69fa-49dd-9199-08f8217c5c53"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 12,",
  FontWeight->"Bold"],
 " sigma = 1, mean = \[Dash]1, error = 35"
}], "Subsection",
 CellChangeTimes->{{3.8924434291539516`*^9, 3.892443438138631*^9}, {
  3.892455690088397*^9, 
  3.892455691251802*^9}},ExpressionUUID->"b8bd9fac-6881-472e-b919-\
59aeca396d17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shM12N", "[", 
    RowBox[{"stop_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaMul", ",", " ", "baseMean", ",", " ", "baseSigma"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"baseMean", " ", "=", " ", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"baseSigma", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigmaMul", "=", 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"baseMean", "/", "baseSigma"}], "/", "stop"}], " ", "+", 
          " ", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlusMinus", "@@", 
       RowBox[{"AvgMeasurements", "[", 
        RowBox[{"ParallelMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Shipit", "[", 
            RowBox[{
            "12", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
             "baseMean", ",", "baseSigma", ",", "35", ",", 
             RowBox[{"{", 
              RowBox[{"stop", ",", " ", "stop", ",", " ", "sigmaMul"}], 
              "}"}]}], "]"}], "&"}], ",", " ", 
          RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"shM12N", "[", 
    RowBox[{"stop_", ",", "ship_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigmaMul", ",", " ", "baseMean", ",", " ", "baseSigma"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"baseMean", " ", "=", " ", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"baseSigma", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigmaMul", "=", 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"baseMean", "/", "baseSigma"}], "/", "stop"}], " ", "+", 
          " ", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlusMinus", "@@", 
       RowBox[{"AvgMeasurements", "[", 
        RowBox[{"ParallelMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Shipit", "[", 
            RowBox[{
            "12", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
             "baseMean", ",", "baseSigma", ",", "35", ",", 
             RowBox[{"{", 
              RowBox[{"stop", ",", " ", "ship", ",", " ", "sigmaMul"}], 
              "}"}]}], "]"}], "&"}], ",", " ", 
          RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892442953774391*^9, 3.892442954115698*^9}, {
  3.8924431032269497`*^9, 3.892443160785768*^9}, {3.892443192156702*^9, 
  3.892443307014349*^9}, {3.892443981031556*^9, 3.8924440375418386`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"8132e1b0-39ed-489c-bcdc-db27dff847e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.05", ",", "1.0", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892443595761956*^9, 3.8924435962501783`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"d9b44e0f-bceb-40ff-966b-03f5111e099f"],

Cell[BoxData[
 RowBox[{"0.1126238934329379`", "\[PlusMinus]", 
  "0.00012865902541253158`"}]], "Output",
 CellChangeTimes->{3.892467470032502*^9, 3.8924801814280443`*^9, 
  3.892530765622219*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"562f418d-78c1-4ee8-b649-94ff757054fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.06", ",", "1.0", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892443330673181*^9, 3.892443367951812*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"088c9cfc-b01f-45a4-997c-08a7a9104304"],

Cell[BoxData[
 RowBox[{"0.11261190692539035`", "\[PlusMinus]", 
  "0.00012900774437842806`"}]], "Output",
 CellChangeTimes->{3.892467508361988*^9, 3.892480217795979*^9, 
  3.892530765979088*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"8977809f-4dc6-4615-8e9f-c297625ae082"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.07", ",", "0.98", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892443550471149*^9, 3.892443550575013*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"74153d37-5fdb-4776-a232-f404ad2468e8"],

Cell[BoxData[
 RowBox[{"0.11259871031085018`", "\[PlusMinus]", 
  "0.00012668977929998913`"}]], "Output",
 CellChangeTimes->{3.89246754651297*^9, 3.892480254374872*^9, 
  3.892530766334475*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"28581898-60b8-4c1b-9f11-262910c8c9e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.06", ",", "0.98", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892443479613194*^9, 3.892443481757298*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"6ac7f658-2acf-4841-ab61-6e8d720df27b"],

Cell[BoxData[
 RowBox[{"0.11259326864998634`", "\[PlusMinus]", 
  "0.00012642659275131677`"}]], "Output",
 CellChangeTimes->{3.8924675851042633`*^9, 3.892480290751934*^9, 
  3.892530766707103*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"c0b89db0-1e19-4cd2-8070-294ba12bf737"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.05", ",", "0.98", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.8924435747933617`*^9, 3.892443574941527*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"17f0c7c6-7966-4dab-8414-f04d3bedbb74"],

Cell[BoxData[
 RowBox[{"0.11261868454326203`", "\[PlusMinus]", 
  "0.0001271586643089729`"}]], "Output",
 CellChangeTimes->{3.8924676240174313`*^9, 3.892480327139043*^9, 
  3.8925307670608664`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"78092191-17bb-40b9-a371-00701f001623"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.05", ",", "1.02", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892443715758288*^9, 3.8924437171011868`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"49a7fa23-6d7f-40aa-9a0a-04253b56d516"],

Cell[BoxData[
 RowBox[{"0.1125585414060432`", "\[PlusMinus]", 
  "0.00013019641491152475`"}]], "Output",
 CellChangeTimes->{3.892467701033845*^9, 3.892480784366056*^9, 
  3.892530767417248*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"0ca5d665-9a20-4eff-aaed-301619ae654f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM12N", "[", 
  RowBox[{"2.0", ",", "2.05", ",", "0.97", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.892444955256352*^9, 3.892444959582067*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"7394d3a8-2c04-45aa-9577-9c762941466d"],

Cell[BoxData[
 RowBox[{"0.11246767375829309`", "\[PlusMinus]", 
  "0.00012623507841566148`"}]], "Output",
 CellChangeTimes->{3.892467815760037*^9, 3.89248082448638*^9, 
  3.892530767782794*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"b2a35a1a-2ce1-4bd6-9df8-ab3ce4f22625"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 30",
  FontWeight->"Bold"],
 ", sigma = 1, mean = \[Dash]1, error = 35"
}], "Subsection",
 CellChangeTimes->{{3.892277368430962*^9, 3.892277391776228*^9}, {
  3.892285825734497*^9, 3.8922858432304287`*^9}, {3.892286257661607*^9, 
  3.892286260889318*^9}, {3.892286356315919*^9, 3.8922863575499697`*^9}, {
  3.8923612451184*^9, 3.892361246855735*^9}, {3.892398416863777*^9, 
  3.892398417201788*^9}, {3.892405749048023*^9, 3.892405751343892*^9}, {
  3.892460108622243*^9, 
  3.892460109409259*^9}},ExpressionUUID->"26410a42-65e1-4586-a893-\
64559b44608d"],

Cell["\<\
Shipit[m_, seed_, weeks_, trials_, mean_, sigma_, error_, params_]\
\>", "Text",
 CellChangeTimes->{
  3.8922774786249437`*^9},ExpressionUUID->"143c9075-e3c0-4a23-8969-\
82bc36ad55f3"],

Cell[CellGroupData[{

Cell[BoxData["d30"], "Input",
 CellChangeTimes->{{3.892405979257902*^9, 3.892405980183448*^9}, {
  3.892460113543948*^9, 3.8924601150763693`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"9e4b6359-884f-4903-b8db-90317f1625b3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.063570956, "result_sigma" -> 0.000026406539000000005`, 
        "m" -> 30, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        0.8307288151183363`16., "p2" -> 0.9528361472649454`16., 
        "p3" -> -0.020974412762232726`18., "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.076791526, "result_sigma" -> 0.000036262933000000005`, 
        "m" -> 30, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1, "sigma" -> 1, "error" -> 3, "p1" -> 
        1.874357782109246`16., "p2" -> 0.513291080440395, "p3" -> 
        0.00641603952612518`17., "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.085673634, "result_sigma" -> 0.00004411349000000001, "m" -> 
        30, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.8323684655898715`16., "p2" -> 
        0.9786311872452276`16., "p3" -> -0.025430003343576715`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.094000992, "result_sigma" -> 0.000078150569, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 1.927533978360143`16., "p2" -> 
        0.5194490044614262`16., "p3" -> 0.011992141078263956`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10007687, "result_sigma" -> 0.00012864212, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.7461857280439517`16., "p2" -> 
        1.0016535973600678`17., "p3" -> -0.019133961330098058`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.103069, "result_sigma" -> 0.00020127023, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 0.7623964934430931`16., "p2" -> 
        0.9996197135086305`16., "p3" -> -0.020532852709498943`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10513311, "result_sigma" -> 0.00026461075, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 12, "p1" -> 0.7969443002678183`16., "p2" -> 
        0.9841804341057462`16., "p3" -> -0.02207205158446448`17., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10704407, "result_sigma" -> 0.00027615133, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 0.7945737135044886`16., "p2" -> 
        0.9854973773289398`16., "p3" -> -0.022245188942953933`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10789585, "result_sigma" -> 0.0003410395, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.7726207622047019`16., "p2" -> 
        1.0011749958822755`17., "p3" -> -0.02298769233041938`17., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10863451, "result_sigma" -> 0.00040637399, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 20, "p1" -> 0.7858497705406517`16., "p2" -> 
        0.979439316560466, "p3" -> -0.02193015116322246`17., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10970868, "result_sigma" -> 0.00040102835, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 0.7569461006633791`16., "p2" -> 
        1.0089789085905383`17., "p3" -> -0.022275753111854375`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11027616, "result_sigma" -> 0.00051780782, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 25, "p1" -> 0.7682553624798412`16., "p2" -> 
        1.010670895171669`16., "p3" -> -0.023160971674419016`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11051935, "result_sigma" -> 0.00063026801, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.7977641012533296`16., "p2" -> 
        0.95636996777575, "p3" -> -0.020788254863148822`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11066879, "result_sigma" -> 0.00072564092, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7375824007923694`16., "p2" -> 
        1.0051553747283584`17., "p3" -> -0.023013424818385666`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11096631, "result_sigma" -> 0.00062225224, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 0.746905985204251, "p2" -> 
        1.0194866403119105`17., "p3" -> -0.021858416607298536`18., "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 15, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 15], "Meta" -> <||>,
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 15, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType}], 15], "Path" -> {}, 
     "DisplayedRowCount" -> 15, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     15, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.063571"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000264065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8307288151183363"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0767915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000362629"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.874357782109246"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0856736"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000441135"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8323684655898715"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.094001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000781506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.927533978360143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.100077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000128642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7461857280439517"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.103069"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00020127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7623964934430931"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.105133"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000264611"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7969443002678183"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107044"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000276151"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7945737135044886"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107896"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00034104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7726207622047019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108635"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000406374"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7858497705406517"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109709"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000401028"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7569461006633791"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110276"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000517808"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7682553624798412"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110519"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000630268"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7977641012533296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000725641"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7375824007923694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110966"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000622252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.746906"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{747., {305.91754150390625`, 313.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{747., {305.91754150390625`, 313.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924678158284597`*^9, 3.8924808245611753`*^9, 
  3.8925307678298903`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"fa69b739-bd1b-4b9d-ad8b-de5b27c3355f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shM30N", "[", 
    RowBox[{"s_", ",", "ship_", ",", "ksi_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Shipit", "[", 
         RowBox[{"30", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
          RowBox[{"-", "1"}], ",", "1", ",", "35", ",", " ", 
          RowBox[{"{", 
           RowBox[{"s", ",", " ", "ship", ",", "ksi"}], "}"}]}], "]"}], "&"}],
        ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892282733134947*^9, 3.8922827459786177`*^9}, {
   3.892282876812405*^9, 3.892282925169712*^9}, {3.892284430174745*^9, 
   3.892284430370842*^9}, {3.892285128565845*^9, 3.892285158939155*^9}, 
   3.89228519254305*^9, {3.892285443275159*^9, 3.892285461443377*^9}, {
   3.8922854943258553`*^9, 3.892285496957378*^9}, {3.89228636115818*^9, 
   3.892286362499303*^9}, {3.8922882205077343`*^9, 3.8922882210308113`*^9}, {
   3.892288446071945*^9, 3.892288449264179*^9}, {3.8923984198318872`*^9, 
   3.8923984210479727`*^9}, {3.892405884532292*^9, 3.892405892523106*^9}, {
   3.892460134239056*^9, 3.8924601345624866`*^9}, {3.892460190007378*^9, 
   3.892460214645702*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a46439df-40d1-4e16-aec1-7d34481209fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.76", ",", "0.81", ",", "0.005"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.892522113072754*^9, 3.892522121937351*^9}, {
  3.8925222748129387`*^9, 3.892522278176033*^9}, {3.892522548866311*^9, 
  3.892522575143406*^9}, {3.892522658660388*^9, 3.8925226625175858`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"c0f82535-18e3-4f27-9398-118165023fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM30N", "[", 
        RowBox[{"#", ",", "1.0", ",", 
         RowBox[{"-", "0.02"}], ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892282374317274*^9, 3.892282401709289*^9}, {
   3.892282438632196*^9, 3.892282451649353*^9}, {3.892282487348776*^9, 
   3.892282537592512*^9}, 3.8922827245337067`*^9, {3.892282793355856*^9, 
   3.8922827941833353`*^9}, {3.89228293045715*^9, 3.892282955263584*^9}, {
   3.892283044430337*^9, 3.8922830645823708`*^9}, {3.8922832632278633`*^9, 
   3.892283285549306*^9}, {3.8922835387703543`*^9, 3.892283547919845*^9}, {
   3.892283689816313*^9, 3.892283692582142*^9}, 3.892284411877531*^9, {
   3.892284488991322*^9, 3.892284508963543*^9}, 3.892285527548739*^9, {
   3.892285565338516*^9, 3.892285569305408*^9}, {3.8922856999940243`*^9, 
   3.892285737378387*^9}, {3.8922860841600037`*^9, 3.8922860965988092`*^9}, {
   3.8922864572237988`*^9, 3.892286505667172*^9}, {3.8922865654147043`*^9, 
   3.892286614841487*^9}, {3.8922867151040087`*^9, 3.892286715883219*^9}, {
   3.892286816983045*^9, 3.892286825248002*^9}, {3.892286946226022*^9, 
   3.8922869463588343`*^9}, {3.892288456868019*^9, 3.8922884629572906`*^9}, {
   3.892350879548347*^9, 3.89235088456612*^9}, {3.892357410009234*^9, 
   3.892357410306396*^9}, {3.892358603497036*^9, 3.89235864918707*^9}, {
   3.8924062243257103`*^9, 3.892406339703108*^9}, 3.8924064724896173`*^9, {
   3.892406601780075*^9, 3.8924066425109587`*^9}, {3.8924067950378036`*^9, 
   3.8924068163011017`*^9}, {3.8924069150330143`*^9, 3.892406916828528*^9}, {
   3.892439742966069*^9, 3.892439743123219*^9}, {3.892442810824926*^9, 
   3.892442817826147*^9}, {3.8924602483234663`*^9, 3.892460277959757*^9}, {
   3.892462164535028*^9, 3.892462174682685*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"bd1f14ba-14f0-48d4-bc68-2348f965ee76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.62", ",", "0.67", ",", "0.005"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "50"}], ";"}]}], "Input",
 CellChangeTimes->{{3.892520503667542*^9, 3.892520508807613*^9}, {
  3.892520824603928*^9, 3.8925208310533752`*^9}, {3.8925220991874743`*^9, 
  3.8925221249459*^9}, {3.892522600695632*^9, 3.892522610120687*^9}, {
  3.892522664273591*^9, 3.892522664450912*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"9fa6429a-5505-4a3e-afef-80f2de7d74d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "+", "0.12"}], ",", 
       RowBox[{"shM30N", "[", 
        RowBox[{"#", ",", "1.0", ",", 
         RowBox[{"-", "0.01"}], ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8924621702125263`*^9, 3.892462183128545*^9}, {
  3.892522629892324*^9, 3.8925226317573357`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"16b05afa-8afb-418b-b18d-ae9a45499ca6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g30", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892441499752686*^9, 3.892441505151773*^9}, {
  3.892460294886755*^9, 3.8924602987133093`*^9}, {3.892462209079855*^9, 
  3.892462211582106*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"a2218c17-c871-4834-b3f5-435737ab01f0"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.76, 0.11257653094056551`}, {0.76, 
           0.11270564872722322`}}], 
          LineBox[{{0.76, 0.11270564872722322`}, {0.76, 
           0.11283476651388093`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.765, 0.1124777915762187}, {0.765, 
           0.11260483644047511`}}], 
          LineBox[{{0.765, 0.11260483644047511`}, {0.765, 
           0.11273188130473152`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.77, 0.11235737588359149`}, {0.77, 
           0.11248478711863272`}}], 
          LineBox[{{0.77, 0.11248478711863272`}, {0.77, 
           0.11261219835367395`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.775, 0.1123495708397967}, {0.775, 0.1124771771988323}}],
           LineBox[{{0.775, 0.1124771771988323}, {0.775, 
           0.11260478355786789`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.78, 0.11226641430933408`}, {0.78, 
           0.11239573506775677`}}], 
          LineBox[{{0.78, 0.11239573506775677`}, {0.78, 
           0.11252505582617946`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.785, 0.11223115483634148`}, {0.785, 
           0.11235893558895853`}}], 
          LineBox[{{0.785, 0.11235893558895853`}, {0.785, 
           0.11248671634157557`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.79, 0.1122110707640172}, {0.79, 0.11233876414511516`}}],
           LineBox[{{0.79, 0.11233876414511516`}, {0.79, 
           0.11246645752621312`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.795, 0.11213043358663594`}, {0.795, 
           0.11225696260679274`}}], 
          LineBox[{{0.795, 0.11225696260679274`}, {0.795, 
           0.11238349162694955`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.8, 0.11193424895184907`}, {0.8, 0.1120582804501627}}], 
          LineBox[{{0.8, 0.1120582804501627}, {0.8, 0.11218231194847632`}}]}},
        
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.805, 0.11173740144483917`}, {0.805, 
           0.11186085658272364`}}], 
          LineBox[{{0.805, 0.11186085658272364`}, {0.805, 
           0.11198431172060812`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.81, 0.11152092134623612`}, {0.81, 
           0.11164413227855144`}}], 
          LineBox[{{0.81, 0.11164413227855144`}, {0.81, 
           0.11176734321086676`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.74, 0.11242856438987045`}, {0.74, 
           0.11256006869278284`}}], 
          LineBox[{{0.74, 0.11256006869278284`}, {0.74, 
           0.11269157299569524`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.745, 0.1124927317684256}, {0.745, 
           0.11262311351963664`}}], 
          LineBox[{{0.745, 0.11262311351963664`}, {0.745, 
           0.11275349527084767`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.75, 0.11246381018147579`}, {0.75, 0.1125940640739268}}],
           LineBox[{{0.75, 0.1125940640739268}, {0.75, 
           0.11272431796637782`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.755, 0.11253352329600216`}, {0.755, 
           0.11266208232812794`}}], 
          LineBox[{{0.755, 0.11266208232812794`}, {0.755, 
           0.11279064136025371`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.76, 0.1124833255350841}, {0.76, 0.11261368539889646`}}],
           LineBox[{{0.76, 0.11261368539889646`}, {0.76, 
           0.11274404526270883`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.765, 0.11239716551496146`}, {0.765, 
           0.11252606739216285`}}], 
          LineBox[{{0.765, 0.11252606739216285`}, {0.765, 
           0.11265496926936425`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.77, 0.11230980026669912`}, {0.77, 
           0.11243926696729495`}}], 
          LineBox[{{0.77, 0.11243926696729495`}, {0.77, 
           0.11256873366789077`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.775, 0.11226719601826712`}, {0.775, 
           0.11239491713702647`}}], 
          LineBox[{{0.775, 0.11239491713702647`}, {0.775, 
           0.11252263825578582`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.78, 0.11217383445703473`}, {0.78, 
           0.11229939842323879`}}], 
          LineBox[{{0.78, 0.11229939842323879`}, {0.78, 
           0.11242496238944284`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.785, 0.11195710092274393`}, {0.785, 
           0.11208373251580823`}}], 
          LineBox[{{0.785, 0.11208373251580823`}, {0.785, 
           0.11221036410887254`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.79, 0.11182508680739557`}, {0.79, 
           0.11194933384076633`}}], 
          LineBox[{{0.79, 0.11194933384076633`}, {0.79, 
           0.11207358087413709`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.76, 0.11283476651388093`}, 
             Offset[{3, 0}, {0.76, 0.11283476651388093`}]}, {{0.76, 
             0.11283476651388093`}, 
             Offset[{-3, 0}, {0.76, 0.11283476651388093`}]}, {{0.76, 
             0.11257653094056551`}, 
             Offset[{3, 0}, {0.76, 0.11257653094056551`}]}, {{0.76, 
             0.11257653094056551`}, 
             Offset[{-3, 0}, {0.76, 0.11257653094056551`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.765, 0.11273188130473152`}, 
             Offset[{3, 0}, {0.765, 0.11273188130473152`}]}, {{0.765, 
             0.11273188130473152`}, 
             Offset[{-3, 0}, {0.765, 0.11273188130473152`}]}, {{0.765, 
             0.1124777915762187}, 
             Offset[{3, 0}, {0.765, 0.1124777915762187}]}, {{0.765, 
             0.1124777915762187}, 
             Offset[{-3, 0}, {0.765, 0.1124777915762187}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.77, 0.11261219835367395`}, 
             Offset[{3, 0}, {0.77, 0.11261219835367395`}]}, {{0.77, 
             0.11261219835367395`}, 
             Offset[{-3, 0}, {0.77, 0.11261219835367395`}]}, {{0.77, 
             0.11235737588359149`}, 
             Offset[{3, 0}, {0.77, 0.11235737588359149`}]}, {{0.77, 
             0.11235737588359149`}, 
             Offset[{-3, 0}, {0.77, 0.11235737588359149`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.775, 0.11260478355786789`}, 
             Offset[{3, 0}, {0.775, 0.11260478355786789`}]}, {{0.775, 
             0.11260478355786789`}, 
             Offset[{-3, 0}, {0.775, 0.11260478355786789`}]}, {{0.775, 
             0.1123495708397967}, 
             Offset[{3, 0}, {0.775, 0.1123495708397967}]}, {{0.775, 
             0.1123495708397967}, 
             Offset[{-3, 0}, {0.775, 0.1123495708397967}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.78, 0.11252505582617946`}, 
             Offset[{3, 0}, {0.78, 0.11252505582617946`}]}, {{0.78, 
             0.11252505582617946`}, 
             Offset[{-3, 0}, {0.78, 0.11252505582617946`}]}, {{0.78, 
             0.11226641430933408`}, 
             Offset[{3, 0}, {0.78, 0.11226641430933408`}]}, {{0.78, 
             0.11226641430933408`}, 
             Offset[{-3, 0}, {0.78, 0.11226641430933408`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.785, 0.11248671634157557`}, 
             Offset[{3, 0}, {0.785, 0.11248671634157557`}]}, {{0.785, 
             0.11248671634157557`}, 
             Offset[{-3, 0}, {0.785, 0.11248671634157557`}]}, {{0.785, 
             0.11223115483634148`}, 
             Offset[{3, 0}, {0.785, 0.11223115483634148`}]}, {{0.785, 
             0.11223115483634148`}, 
             Offset[{-3, 0}, {0.785, 0.11223115483634148`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.79, 0.11246645752621312`}, 
             Offset[{3, 0}, {0.79, 0.11246645752621312`}]}, {{0.79, 
             0.11246645752621312`}, 
             Offset[{-3, 0}, {0.79, 0.11246645752621312`}]}, {{0.79, 
             0.1122110707640172}, 
             Offset[{3, 0}, {0.79, 0.1122110707640172}]}, {{0.79, 
             0.1122110707640172}, 
             Offset[{-3, 0}, {0.79, 0.1122110707640172}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.795, 0.11238349162694955`}, 
             Offset[{3, 0}, {0.795, 0.11238349162694955`}]}, {{0.795, 
             0.11238349162694955`}, 
             Offset[{-3, 0}, {0.795, 0.11238349162694955`}]}, {{0.795, 
             0.11213043358663594`}, 
             Offset[{3, 0}, {0.795, 0.11213043358663594`}]}, {{0.795, 
             0.11213043358663594`}, 
             Offset[{-3, 0}, {0.795, 0.11213043358663594`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8, 0.11218231194847632`}, 
             Offset[{3, 0}, {0.8, 0.11218231194847632`}]}, {{0.8, 
             0.11218231194847632`}, 
             Offset[{-3, 0}, {0.8, 0.11218231194847632`}]}, {{0.8, 
             0.11193424895184907`}, 
             Offset[{3, 0}, {0.8, 0.11193424895184907`}]}, {{0.8, 
             0.11193424895184907`}, 
             Offset[{-3, 0}, {0.8, 0.11193424895184907`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.805, 0.11198431172060812`}, 
             Offset[{3, 0}, {0.805, 0.11198431172060812`}]}, {{0.805, 
             0.11198431172060812`}, 
             Offset[{-3, 0}, {0.805, 0.11198431172060812`}]}, {{0.805, 
             0.11173740144483917`}, 
             Offset[{3, 0}, {0.805, 0.11173740144483917`}]}, {{0.805, 
             0.11173740144483917`}, 
             Offset[{-3, 0}, {0.805, 0.11173740144483917`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.81, 0.11176734321086676`}, 
             Offset[{3, 0}, {0.81, 0.11176734321086676`}]}, {{0.81, 
             0.11176734321086676`}, 
             Offset[{-3, 0}, {0.81, 0.11176734321086676`}]}, {{0.81, 
             0.11152092134623612`}, 
             Offset[{3, 0}, {0.81, 0.11152092134623612`}]}, {{0.81, 
             0.11152092134623612`}, 
             Offset[{-3, 0}, {0.81, 0.11152092134623612`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.74, 0.11269157299569524`}, 
             Offset[{3, 0}, {0.74, 0.11269157299569524`}]}, {{0.74, 
             0.11269157299569524`}, 
             Offset[{-3, 0}, {0.74, 0.11269157299569524`}]}, {{0.74, 
             0.11242856438987045`}, 
             Offset[{3, 0}, {0.74, 0.11242856438987045`}]}, {{0.74, 
             0.11242856438987045`}, 
             Offset[{-3, 0}, {0.74, 0.11242856438987045`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.745, 0.11275349527084767`}, 
             Offset[{3, 0}, {0.745, 0.11275349527084767`}]}, {{0.745, 
             0.11275349527084767`}, 
             Offset[{-3, 0}, {0.745, 0.11275349527084767`}]}, {{0.745, 
             0.1124927317684256}, 
             Offset[{3, 0}, {0.745, 0.1124927317684256}]}, {{0.745, 
             0.1124927317684256}, 
             Offset[{-3, 0}, {0.745, 0.1124927317684256}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.75, 0.11272431796637782`}, 
             Offset[{3, 0}, {0.75, 0.11272431796637782`}]}, {{0.75, 
             0.11272431796637782`}, 
             Offset[{-3, 0}, {0.75, 0.11272431796637782`}]}, {{0.75, 
             0.11246381018147579`}, 
             Offset[{3, 0}, {0.75, 0.11246381018147579`}]}, {{0.75, 
             0.11246381018147579`}, 
             Offset[{-3, 0}, {0.75, 0.11246381018147579`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.755, 0.11279064136025371`}, 
             Offset[{3, 0}, {0.755, 0.11279064136025371`}]}, {{0.755, 
             0.11279064136025371`}, 
             Offset[{-3, 0}, {0.755, 0.11279064136025371`}]}, {{0.755, 
             0.11253352329600216`}, 
             Offset[{3, 0}, {0.755, 0.11253352329600216`}]}, {{0.755, 
             0.11253352329600216`}, 
             Offset[{-3, 0}, {0.755, 0.11253352329600216`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.76, 0.11274404526270883`}, 
             Offset[{3, 0}, {0.76, 0.11274404526270883`}]}, {{0.76, 
             0.11274404526270883`}, 
             Offset[{-3, 0}, {0.76, 0.11274404526270883`}]}, {{0.76, 
             0.1124833255350841}, 
             Offset[{3, 0}, {0.76, 0.1124833255350841}]}, {{0.76, 
             0.1124833255350841}, 
             Offset[{-3, 0}, {0.76, 0.1124833255350841}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.765, 0.11265496926936425`}, 
             Offset[{3, 0}, {0.765, 0.11265496926936425`}]}, {{0.765, 
             0.11265496926936425`}, 
             Offset[{-3, 0}, {0.765, 0.11265496926936425`}]}, {{0.765, 
             0.11239716551496146`}, 
             Offset[{3, 0}, {0.765, 0.11239716551496146`}]}, {{0.765, 
             0.11239716551496146`}, 
             Offset[{-3, 0}, {0.765, 0.11239716551496146`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.77, 0.11256873366789077`}, 
             Offset[{3, 0}, {0.77, 0.11256873366789077`}]}, {{0.77, 
             0.11256873366789077`}, 
             Offset[{-3, 0}, {0.77, 0.11256873366789077`}]}, {{0.77, 
             0.11230980026669912`}, 
             Offset[{3, 0}, {0.77, 0.11230980026669912`}]}, {{0.77, 
             0.11230980026669912`}, 
             Offset[{-3, 0}, {0.77, 0.11230980026669912`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.775, 0.11252263825578582`}, 
             Offset[{3, 0}, {0.775, 0.11252263825578582`}]}, {{0.775, 
             0.11252263825578582`}, 
             Offset[{-3, 0}, {0.775, 0.11252263825578582`}]}, {{0.775, 
             0.11226719601826712`}, 
             Offset[{3, 0}, {0.775, 0.11226719601826712`}]}, {{0.775, 
             0.11226719601826712`}, 
             Offset[{-3, 0}, {0.775, 0.11226719601826712`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.78, 0.11242496238944284`}, 
             Offset[{3, 0}, {0.78, 0.11242496238944284`}]}, {{0.78, 
             0.11242496238944284`}, 
             Offset[{-3, 0}, {0.78, 0.11242496238944284`}]}, {{0.78, 
             0.11217383445703473`}, 
             Offset[{3, 0}, {0.78, 0.11217383445703473`}]}, {{0.78, 
             0.11217383445703473`}, 
             Offset[{-3, 0}, {0.78, 0.11217383445703473`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.785, 0.11221036410887254`}, 
             Offset[{3, 0}, {0.785, 0.11221036410887254`}]}, {{0.785, 
             0.11221036410887254`}, 
             Offset[{-3, 0}, {0.785, 0.11221036410887254`}]}, {{0.785, 
             0.11195710092274393`}, 
             Offset[{3, 0}, {0.785, 0.11195710092274393`}]}, {{0.785, 
             0.11195710092274393`}, 
             Offset[{-3, 0}, {0.785, 0.11195710092274393`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.79, 0.11207358087413709`}, 
             Offset[{3, 0}, {0.79, 0.11207358087413709`}]}, {{0.79, 
             0.11207358087413709`}, 
             Offset[{-3, 0}, {0.79, 0.11207358087413709`}]}, {{0.79, 
             0.11182508680739557`}, 
             Offset[{3, 0}, {0.79, 0.11182508680739557`}]}, {{0.79, 
             0.11182508680739557`}, 
             Offset[{-3, 0}, {0.79, 0.11182508680739557`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.76, 0.11270564872722322`}, {0.765, 0.11260483644047511`}, {
       0.77, 0.11248478711863272`}, {0.775, 0.1124771771988323}, {0.78, 
       0.11239573506775677`}, {0.785, 0.11235893558895853`}, {0.79, 
       0.11233876414511516`}, {0.795, 0.11225696260679274`}, {0.8, 
       0.1120582804501627}, {0.805, 0.11186085658272364`}, {0.81, 
       0.11164413227855144`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.74, 0.11256006869278284`}, {0.745, 0.11262311351963664`}, {
       0.75, 0.1125940640739268}, {0.755, 0.11266208232812794`}, {0.76, 
       0.11261368539889646`}, {0.765, 0.11252606739216285`}, {0.77, 
       0.11243926696729495`}, {0.775, 0.11239491713702647`}, {0.78, 
       0.11229939842323879`}, {0.785, 0.11208373251580823`}, {0.79, 
       0.11194933384076633`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.7385416666666685, 0.1114479299480341},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{536.4374999999997, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.7385416666666685, 0.81}, {0.1114479299480341, 
   0.11283476651388093`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.892522085736204*^9, {3.892522262181275*^9, 3.8925222843123913`*^9}, {
   3.892522539662033*^9, 3.892522556038068*^9}, 3.8925226429069366`*^9, 
   3.8925307756842413`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"079e70f7-9a93-4175-89f9-837b885f1b3e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 32",
  FontWeight->"Bold"],
 ", sigma = 1, mean = \[Dash]1, error = 35"
}], "Subsection",
 CellChangeTimes->{{3.892277368430962*^9, 3.892277391776228*^9}, {
  3.892285825734497*^9, 3.8922858432304287`*^9}, {3.892286257661607*^9, 
  3.892286260889318*^9}, {3.892286356315919*^9, 3.8922863575499697`*^9}, {
  3.8923612451184*^9, 3.892361246855735*^9}, {3.892398416863777*^9, 
  3.892398417201788*^9}, {3.892405749048023*^9, 
  3.892405751343892*^9}},ExpressionUUID->"b4ea1d94-cb04-48fc-9e15-\
d94c9ab7487d"],

Cell["\<\
Shipit[m_, seed_, weeks_, trials_, mean_, sigma_, error_, params_]\
\>", "Text",
 CellChangeTimes->{
  3.8922774786249437`*^9},ExpressionUUID->"024adc26-0611-4f43-9ab9-\
df7b6f8ff795"],

Cell[CellGroupData[{

Cell[BoxData["d32"], "Input",
 CellChangeTimes->{{3.892405979257902*^9, 3.892405980183448*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"c905f3bb-9b7e-43e5-9435-ebf01935a878"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.063584773, "result_sigma" -> 0.000023656584000000003`, 
        "m" -> 32, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1., "sigma" -> 1, "error" -> 2, "p1" -> 
        0.7173783302307133`16., "p2" -> 0.9998270034790047`16., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.077454522, "result_sigma" -> 0.000042080774, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 3, "p1" -> 0.7210789620876304`16., "p2" -> 
        0.9919550538063021`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.085668748, "result_sigma" -> 0.00004812440900000001, "m" -> 
        32, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.7522570376235718`16., "p2" -> 
        0.9935887764919807`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.094879419, "result_sigma" -> 0.00010317241, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.7720713148787315`16., "p2" -> 
        0.9925412545610861`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10005478, "result_sigma" -> 0.000136515, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.7670640214758322`16., "p2" -> 
        0.9972006709619756`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10304937, "result_sigma" -> 0.00020617119, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 10, "p1" -> 0.7757376994110178`16., "p2" -> 
        0.9965661723096458`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10505286, "result_sigma" -> 0.0002589695, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 12, "p1" -> 0.7631571780890223`16., "p2" -> 
        0.9881357274949545`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10711498, "result_sigma" -> 0.00029766931, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 15, "p1" -> 0.8120835134642018`16., "p2" -> 
        1., "p3" -> Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.10785201, "result_sigma" -> 0.00031675889, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.8079645605833732`16., "p2" -> 
        0.9828027478276313`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10853488, "result_sigma" -> 0.00039537504, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1., "error" -> 20, "p1" -> 0.8676772182707603`16., "p2" -> 
        1.0041917281861328`17., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10950646, "result_sigma" -> 0.0004053866, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 22, "p1" -> 0.8180262828457103`16., "p2" -> 
        0.9997572072764929`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.10984047, "result_sigma" -> 0.00047047824, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 25, "p1" -> 0.8298874673608225`16., "p2" -> 
        1.010124974827341`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.1101982, "result_sigma" -> 0.00049904568, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1., "error" -> 25, "p1" -> 0.82, "p2" -> 1., "p3" -> 
        Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.11069363, "result_sigma" -> 0.00070593882, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.8241151447318499`16., "p2" -> 
        0.9807262863019222`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11073835, "result_sigma" -> 0.00063114979, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.8004849123070018`16., "p2" -> 
        0.9958562722895289`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.1108011, "result_sigma" -> 0.00061063216, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.8081029703559068`16., "p2" -> 
        1., "p3" -> Missing["NoInput"], "p4" -> Missing["NoInput"]|>, <|
       "result" -> 0.11101862, "result_sigma" -> 0.00065589869, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 32, "p1" -> 0.8241044583242453`16., "p2" -> 
        0.9951449386001678`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 17, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 17], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`UnknownShape[False], "p4" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 17, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`UnknownType, 
         TypeSystem`UnknownType}], 17], "Path" -> {}, "DisplayedRowCount" -> 
     17, "DisplayedColumnCount" -> 10, "DataRowCount" -> 17, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0635848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000236566"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7173783302307133"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0774545"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000420808"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7210789620876304"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0856687"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000481244"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7522570376235718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0948794"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000103172"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7720713148787315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.100055"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000136515"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7670640214758322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.103049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000206171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7757376994110178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.105053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00025897"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7631571780890223"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107115"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000297669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8120835134642018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107852"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000316759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8079645605833732"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108535"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000395375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8676772182707603"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000405387"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8180262828457103"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000470478"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8298874673608225"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110198"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000499046"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.82"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000705939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8241151447318499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00063115"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8004849123070018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110801"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000610632"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8081029703559068"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.111019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000655899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8241044583242453"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{763., {339.91754150390625`, 347.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{763., {339.91754150390625`, 347.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.89246804185632*^9, 3.89248085705164*^9, 
  3.892530775729699*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"74735abb-7cb4-47b9-afd8-f3e517d649ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shM32N", "[", 
    RowBox[{"p_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Shipit", "[", 
         RowBox[{"32", ",", "#", ",", "10000000", ",", " ", "25", ",", " ", 
          RowBox[{"-", "1"}], ",", "1", ",", "35", ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", " ", "a"}], "}"}]}], "]"}], "&"}], ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.892282733134947*^9, 3.8922827459786177`*^9}, {
   3.892282876812405*^9, 3.892282925169712*^9}, {3.892284430174745*^9, 
   3.892284430370842*^9}, {3.892285128565845*^9, 3.892285158939155*^9}, 
   3.89228519254305*^9, {3.892285443275159*^9, 3.892285461443377*^9}, {
   3.8922854943258553`*^9, 3.892285496957378*^9}, {3.89228636115818*^9, 
   3.892286362499303*^9}, {3.8922882205077343`*^9, 3.8922882210308113`*^9}, {
   3.892288446071945*^9, 3.892288449264179*^9}, {3.8923984198318872`*^9, 
   3.8923984210479727`*^9}, {3.892405884532292*^9, 3.892405892523106*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"09df9589-9e2f-4d63-93c3-99c01b344a81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.77", ",", "0.83", ",", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM32N", "[", 
        RowBox[{"#", ",", "1.0", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM32N", "[", 
        RowBox[{"#", ",", "0.98", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM32N", "[", 
        RowBox[{"#", ",", "1.02", ",", "n"}], "]"}]}], "}"}], "&"}], "/@", 
    "range"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892282374317274*^9, 3.892282401709289*^9}, {
   3.892282438632196*^9, 3.892282451649353*^9}, {3.892282487348776*^9, 
   3.892282537592512*^9}, 3.8922827245337067`*^9, {3.892282793355856*^9, 
   3.8922827941833353`*^9}, {3.89228293045715*^9, 3.892282955263584*^9}, {
   3.892283044430337*^9, 3.8922830645823708`*^9}, {3.8922832632278633`*^9, 
   3.892283285549306*^9}, {3.8922835387703543`*^9, 3.892283547919845*^9}, {
   3.892283689816313*^9, 3.892283692582142*^9}, 3.892284411877531*^9, {
   3.892284488991322*^9, 3.892284508963543*^9}, 3.892285527548739*^9, {
   3.892285565338516*^9, 3.892285569305408*^9}, {3.8922856999940243`*^9, 
   3.892285737378387*^9}, {3.8922860841600037`*^9, 3.8922860965988092`*^9}, {
   3.8922864572237988`*^9, 3.892286505667172*^9}, {3.8922865654147043`*^9, 
   3.892286614841487*^9}, {3.8922867151040087`*^9, 3.892286715883219*^9}, {
   3.892286816983045*^9, 3.892286825248002*^9}, {3.892286946226022*^9, 
   3.8922869463588343`*^9}, {3.892288456868019*^9, 3.8922884629572906`*^9}, {
   3.892350879548347*^9, 3.89235088456612*^9}, {3.892357410009234*^9, 
   3.892357410306396*^9}, {3.892358603497036*^9, 3.89235864918707*^9}, {
   3.8924062243257103`*^9, 3.892406339703108*^9}, 3.8924064724896173`*^9, {
   3.892406601780075*^9, 3.8924066425109587`*^9}, {3.8924067950378036`*^9, 
   3.8924068163011017`*^9}, {3.8924069150330143`*^9, 3.892406916828528*^9}, {
   3.892439742966069*^9, 3.892439743123219*^9}, {3.892442810824926*^9, 
   3.892442817826147*^9}, {3.892471899861704*^9, 3.892471902105956*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"07425afe-0209-4425-8c82-ced216fd676f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g32", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2", ",", "l3"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892441499752686*^9, 3.892441505151773*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"ecef9d3f-f598-4eeb-ba07-f00dc24a2291"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.77, 0.1125625972007583}, {0.77, 0.11265075648225042`}}],
           LineBox[{{0.77, 0.11265075648225042`}, {0.77, 
           0.11273891576374255`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.78, 0.11264444744405072`}, {0.78, 
           0.11273294957229876`}}], 
          LineBox[{{0.78, 0.11273294957229876`}, {0.78, 
           0.1128214517005468}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.79, 0.11266206986098516`}, {0.79, 
           0.11275021252773353`}}], 
          LineBox[{{0.79, 0.11275021252773353`}, {0.79, 
           0.11283835519448189`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.8, 0.11266251527049367`}, {0.8, 0.11275087859783185`}}],
           LineBox[{{0.8, 0.11275087859783185`}, {0.8, 
           0.11283924192517003`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.81, 0.11263196620727767`}, {0.81, 
           0.11271990936362343`}}], 
          LineBox[{{0.81, 0.11271990936362343`}, {0.81, 
           0.11280785251996919`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.8200000000000001, 0.11264387897831904`}, {
           0.8200000000000001, 0.11273138911734809`}}], 
          LineBox[{{0.8200000000000001, 0.11273138911734809`}, {
           0.8200000000000001, 0.11281889925637714`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.83, 0.1125873181366627}, {0.83, 0.11267492956786855`}}],
           LineBox[{{0.83, 0.11267492956786855`}, {0.83, 
           0.1127625409990744}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.77, 0.11253223375167051`}, {0.77, 
           0.11262144594438644`}}], 
          LineBox[{{0.77, 0.11262144594438644`}, {0.77, 
           0.11271065813710238`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.78, 0.11255747203646874`}, {0.78, 
           0.11264742914565039`}}], 
          LineBox[{{0.78, 0.11264742914565039`}, {0.78, 
           0.11273738625483204`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.79, 0.11257270177644106`}, {0.79, 
           0.11266226823198712`}}], 
          LineBox[{{0.79, 0.11266226823198712`}, {0.79, 
           0.11275183468753318`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.8, 0.11252869149203781`}, {0.8, 0.11261768638144505`}}],
           LineBox[{{0.8, 0.11261768638144505`}, {0.8, 
           0.11270668127085229`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.81, 0.11252065356524539`}, {0.81, 
           0.11261077402739599`}}], 
          LineBox[{{0.81, 0.11261077402739599`}, {0.81, 
           0.11270089448954658`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.8200000000000001, 0.11252994130741344`}, {
           0.8200000000000001, 0.11262047312989062`}}], 
          LineBox[{{0.8200000000000001, 0.11262047312989062`}, {
           0.8200000000000001, 0.11271100495236781`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.83, 0.11242208820063826`}, {0.83, 
           0.11251216562551629`}}], 
          LineBox[{{0.83, 0.11251216562551629`}, {0.83, 
           0.11260224305039432`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.77, 0.11221108973951674`}, {0.77, 
           0.11229700457129822`}}], 
          LineBox[{{0.77, 0.11229700457129822`}, {0.77, 
           0.1123829194030797}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.78, 0.11229706214293826`}, {0.78, 
           0.11238266705094804`}}], 
          LineBox[{{0.78, 0.11238266705094804`}, {0.78, 
           0.11246827195895782`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.79, 0.11238412999111773`}, {0.79, 
           0.11247011011061346`}}], 
          LineBox[{{0.79, 0.11247011011061346`}, {0.79, 
           0.1125560902301092}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.8, 0.11245374391584172`}, {0.8, 0.11253992869061724`}}],
           LineBox[{{0.8, 0.11253992869061724`}, {0.8, 
           0.11262611346539277`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.81, 0.11247668590121528`}, {0.81, 
           0.11256243025089417`}}], 
          LineBox[{{0.81, 0.11256243025089417`}, {0.81, 
           0.11264817460057307`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.8200000000000001, 0.11250585692977555`}, {
           0.8200000000000001, 0.11259206167708669`}}], 
          LineBox[{{0.8200000000000001, 0.11259206167708669`}, {
           0.8200000000000001, 0.11267826642439782`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{{}, {
          LineBox[{{0.83, 0.11246961270710144`}, {0.83, 
           0.11255474342678301`}}], 
          LineBox[{{0.83, 0.11255474342678301`}, {0.83, 
           0.11263987414646458`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.77, 0.11273891576374255`}, 
             Offset[{3, 0}, {0.77, 0.11273891576374255`}]}, {{0.77, 
             0.11273891576374255`}, 
             Offset[{-3, 0}, {0.77, 0.11273891576374255`}]}, {{0.77, 
             0.1125625972007583}, 
             Offset[{3, 0}, {0.77, 0.1125625972007583}]}, {{0.77, 
             0.1125625972007583}, 
             Offset[{-3, 0}, {0.77, 0.1125625972007583}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.78, 0.1128214517005468}, 
             Offset[{3, 0}, {0.78, 0.1128214517005468}]}, {{0.78, 
             0.1128214517005468}, 
             Offset[{-3, 0}, {0.78, 0.1128214517005468}]}, {{0.78, 
             0.11264444744405072`}, 
             Offset[{3, 0}, {0.78, 0.11264444744405072`}]}, {{0.78, 
             0.11264444744405072`}, 
             Offset[{-3, 0}, {0.78, 0.11264444744405072`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.79, 0.11283835519448189`}, 
             Offset[{3, 0}, {0.79, 0.11283835519448189`}]}, {{0.79, 
             0.11283835519448189`}, 
             Offset[{-3, 0}, {0.79, 0.11283835519448189`}]}, {{0.79, 
             0.11266206986098516`}, 
             Offset[{3, 0}, {0.79, 0.11266206986098516`}]}, {{0.79, 
             0.11266206986098516`}, 
             Offset[{-3, 0}, {0.79, 0.11266206986098516`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8, 0.11283924192517003`}, 
             Offset[{3, 0}, {0.8, 0.11283924192517003`}]}, {{0.8, 
             0.11283924192517003`}, 
             Offset[{-3, 0}, {0.8, 0.11283924192517003`}]}, {{0.8, 
             0.11266251527049367`}, 
             Offset[{3, 0}, {0.8, 0.11266251527049367`}]}, {{0.8, 
             0.11266251527049367`}, 
             Offset[{-3, 0}, {0.8, 0.11266251527049367`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.81, 0.11280785251996919`}, 
             Offset[{3, 0}, {0.81, 0.11280785251996919`}]}, {{0.81, 
             0.11280785251996919`}, 
             Offset[{-3, 0}, {0.81, 0.11280785251996919`}]}, {{0.81, 
             0.11263196620727767`}, 
             Offset[{3, 0}, {0.81, 0.11263196620727767`}]}, {{0.81, 
             0.11263196620727767`}, 
             Offset[{-3, 0}, {0.81, 0.11263196620727767`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8200000000000001, 0.11281889925637714`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11281889925637714`}]}, {{
             0.8200000000000001, 0.11281889925637714`}, 
             Offset[{-3, 0}, {0.8200000000000001, 0.11281889925637714`}]}, {{
             0.8200000000000001, 0.11264387897831904`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11264387897831904`}]}, {{
             0.8200000000000001, 0.11264387897831904`}, 
             Offset[{-3, 0}, {0.8200000000000001, 
              0.11264387897831904`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.83, 0.1127625409990744}, 
             Offset[{3, 0}, {0.83, 0.1127625409990744}]}, {{0.83, 
             0.1127625409990744}, 
             Offset[{-3, 0}, {0.83, 0.1127625409990744}]}, {{0.83, 
             0.1125873181366627}, 
             Offset[{3, 0}, {0.83, 0.1125873181366627}]}, {{0.83, 
             0.1125873181366627}, 
             Offset[{-3, 0}, {0.83, 0.1125873181366627}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.77, 0.11271065813710238`}, 
             Offset[{3, 0}, {0.77, 0.11271065813710238`}]}, {{0.77, 
             0.11271065813710238`}, 
             Offset[{-3, 0}, {0.77, 0.11271065813710238`}]}, {{0.77, 
             0.11253223375167051`}, 
             Offset[{3, 0}, {0.77, 0.11253223375167051`}]}, {{0.77, 
             0.11253223375167051`}, 
             Offset[{-3, 0}, {0.77, 0.11253223375167051`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.78, 0.11273738625483204`}, 
             Offset[{3, 0}, {0.78, 0.11273738625483204`}]}, {{0.78, 
             0.11273738625483204`}, 
             Offset[{-3, 0}, {0.78, 0.11273738625483204`}]}, {{0.78, 
             0.11255747203646874`}, 
             Offset[{3, 0}, {0.78, 0.11255747203646874`}]}, {{0.78, 
             0.11255747203646874`}, 
             Offset[{-3, 0}, {0.78, 0.11255747203646874`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.79, 0.11275183468753318`}, 
             Offset[{3, 0}, {0.79, 0.11275183468753318`}]}, {{0.79, 
             0.11275183468753318`}, 
             Offset[{-3, 0}, {0.79, 0.11275183468753318`}]}, {{0.79, 
             0.11257270177644106`}, 
             Offset[{3, 0}, {0.79, 0.11257270177644106`}]}, {{0.79, 
             0.11257270177644106`}, 
             Offset[{-3, 0}, {0.79, 0.11257270177644106`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8, 0.11270668127085229`}, 
             Offset[{3, 0}, {0.8, 0.11270668127085229`}]}, {{0.8, 
             0.11270668127085229`}, 
             Offset[{-3, 0}, {0.8, 0.11270668127085229`}]}, {{0.8, 
             0.11252869149203781`}, 
             Offset[{3, 0}, {0.8, 0.11252869149203781`}]}, {{0.8, 
             0.11252869149203781`}, 
             Offset[{-3, 0}, {0.8, 0.11252869149203781`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.81, 0.11270089448954658`}, 
             Offset[{3, 0}, {0.81, 0.11270089448954658`}]}, {{0.81, 
             0.11270089448954658`}, 
             Offset[{-3, 0}, {0.81, 0.11270089448954658`}]}, {{0.81, 
             0.11252065356524539`}, 
             Offset[{3, 0}, {0.81, 0.11252065356524539`}]}, {{0.81, 
             0.11252065356524539`}, 
             Offset[{-3, 0}, {0.81, 0.11252065356524539`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8200000000000001, 0.11271100495236781`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11271100495236781`}]}, {{
             0.8200000000000001, 0.11271100495236781`}, 
             Offset[{-3, 0}, {0.8200000000000001, 0.11271100495236781`}]}, {{
             0.8200000000000001, 0.11252994130741344`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11252994130741344`}]}, {{
             0.8200000000000001, 0.11252994130741344`}, 
             Offset[{-3, 0}, {0.8200000000000001, 
              0.11252994130741344`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.83, 0.11260224305039432`}, 
             Offset[{3, 0}, {0.83, 0.11260224305039432`}]}, {{0.83, 
             0.11260224305039432`}, 
             Offset[{-3, 0}, {0.83, 0.11260224305039432`}]}, {{0.83, 
             0.11242208820063826`}, 
             Offset[{3, 0}, {0.83, 0.11242208820063826`}]}, {{0.83, 
             0.11242208820063826`}, 
             Offset[{-3, 0}, {0.83, 0.11242208820063826`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.77, 0.1123829194030797}, 
             Offset[{3, 0}, {0.77, 0.1123829194030797}]}, {{0.77, 
             0.1123829194030797}, 
             Offset[{-3, 0}, {0.77, 0.1123829194030797}]}, {{0.77, 
             0.11221108973951674`}, 
             Offset[{3, 0}, {0.77, 0.11221108973951674`}]}, {{0.77, 
             0.11221108973951674`}, 
             Offset[{-3, 0}, {0.77, 0.11221108973951674`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.78, 0.11246827195895782`}, 
             Offset[{3, 0}, {0.78, 0.11246827195895782`}]}, {{0.78, 
             0.11246827195895782`}, 
             Offset[{-3, 0}, {0.78, 0.11246827195895782`}]}, {{0.78, 
             0.11229706214293826`}, 
             Offset[{3, 0}, {0.78, 0.11229706214293826`}]}, {{0.78, 
             0.11229706214293826`}, 
             Offset[{-3, 0}, {0.78, 0.11229706214293826`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.79, 0.1125560902301092}, 
             Offset[{3, 0}, {0.79, 0.1125560902301092}]}, {{0.79, 
             0.1125560902301092}, 
             Offset[{-3, 0}, {0.79, 0.1125560902301092}]}, {{0.79, 
             0.11238412999111773`}, 
             Offset[{3, 0}, {0.79, 0.11238412999111773`}]}, {{0.79, 
             0.11238412999111773`}, 
             Offset[{-3, 0}, {0.79, 0.11238412999111773`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8, 0.11262611346539277`}, 
             Offset[{3, 0}, {0.8, 0.11262611346539277`}]}, {{0.8, 
             0.11262611346539277`}, 
             Offset[{-3, 0}, {0.8, 0.11262611346539277`}]}, {{0.8, 
             0.11245374391584172`}, 
             Offset[{3, 0}, {0.8, 0.11245374391584172`}]}, {{0.8, 
             0.11245374391584172`}, 
             Offset[{-3, 0}, {0.8, 0.11245374391584172`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.81, 0.11264817460057307`}, 
             Offset[{3, 0}, {0.81, 0.11264817460057307`}]}, {{0.81, 
             0.11264817460057307`}, 
             Offset[{-3, 0}, {0.81, 0.11264817460057307`}]}, {{0.81, 
             0.11247668590121528`}, 
             Offset[{3, 0}, {0.81, 0.11247668590121528`}]}, {{0.81, 
             0.11247668590121528`}, 
             Offset[{-3, 0}, {0.81, 0.11247668590121528`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.8200000000000001, 0.11267826642439782`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11267826642439782`}]}, {{
             0.8200000000000001, 0.11267826642439782`}, 
             Offset[{-3, 0}, {0.8200000000000001, 0.11267826642439782`}]}, {{
             0.8200000000000001, 0.11250585692977555`}, 
             Offset[{3, 0}, {0.8200000000000001, 0.11250585692977555`}]}, {{
             0.8200000000000001, 0.11250585692977555`}, 
             Offset[{-3, 0}, {0.8200000000000001, 
              0.11250585692977555`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.83, 0.11263987414646458`}, 
             Offset[{3, 0}, {0.83, 0.11263987414646458`}]}, {{0.83, 
             0.11263987414646458`}, 
             Offset[{-3, 0}, {0.83, 0.11263987414646458`}]}, {{0.83, 
             0.11246961270710144`}, 
             Offset[{3, 0}, {0.83, 0.11246961270710144`}]}, {{0.83, 
             0.11246961270710144`}, 
             Offset[{-3, 0}, {0.83, 0.11246961270710144`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.77, 0.11265075648225042`}, {0.78, 0.11273294957229876`}, {
       0.79, 0.11275021252773353`}, {0.8, 0.11275087859783185`}, {0.81, 
       0.11271990936362343`}, {0.8200000000000001, 0.11273138911734809`}, {
       0.83, 0.11267492956786855`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.77, 0.11262144594438644`}, {0.78, 0.11264742914565039`}, {
       0.79, 0.11266226823198712`}, {0.8, 0.11261768638144505`}, {0.81, 
       0.11261077402739599`}, {0.8200000000000001, 0.11262047312989062`}, {
       0.83, 0.11251216562551629`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.77, 0.11229700457129822`}, {0.78, 0.11238266705094804`}, {
       0.79, 0.11247011011061346`}, {0.8, 0.11253992869061724`}, {0.81, 
       0.11256243025089417`}, {0.8200000000000001, 0.11259206167708669`}, {
       0.83, 0.11255474342678301`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.768750000000002, 0.1121761923958698},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.768750000000002, 0.83}, {0.1121761923958698, 
   0.11283924192517003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8924929492527037`*^9, 3.8925307845075703`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"d5dd32a4-2ae1-4776-8739-94287527ebe8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pr", "[", "l_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"0.78", "/", "2.02"}]}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "l"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g14", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"pr", "/@", 
       RowBox[{"{", 
        RowBox[{"l14n1", ",", "l14n2", ",", "l14n3"}], "}"}]}], "]"}], ",", 
     " ", 
     RowBox[{"PlotStyle", "->", "palette1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"g32", ",", " ", "g14"}], "]"}]}], "Input",
 CellChangeTimes->{{3.892441508132124*^9, 3.8924415968869257`*^9}, {
   3.8924416479153013`*^9, 3.892441662839489*^9}, {3.8924417002848186`*^9, 
   3.892441737664797*^9}, {3.89244274503314*^9, 3.892442781456498*^9}, 
   3.892442880102994*^9, {3.892444246077093*^9, 3.892444312807691*^9}, {
   3.892444377485358*^9, 3.8924444183768263`*^9}, {3.892444493985228*^9, 
   3.892444580701071*^9}, {3.892444637241802*^9, 3.8924446629366217`*^9}, {
   3.892444849241233*^9, 3.892444900382159*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"eeaa0573-2a8b-4ee4-8bdf-bcca135324d7"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.77, 0.1125625972007583}, {0.77, 
            0.11265075648225042`}}], 
           LineBox[{{0.77, 0.11265075648225042`}, {0.77, 
            0.11273891576374255`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.78, 0.11264444744405072`}, {0.78, 
            0.11273294957229876`}}], 
           LineBox[{{0.78, 0.11273294957229876`}, {0.78, 
            0.1128214517005468}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.79, 0.11266206986098516`}, {0.79, 
            0.11275021252773353`}}], 
           LineBox[{{0.79, 0.11275021252773353`}, {0.79, 
            0.11283835519448189`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.8, 0.11266251527049367`}, {0.8, 
            0.11275087859783185`}}], 
           LineBox[{{0.8, 0.11275087859783185`}, {0.8, 
            0.11283924192517003`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.81, 0.11263196620727767`}, {0.81, 
            0.11271990936362343`}}], 
           LineBox[{{0.81, 0.11271990936362343`}, {0.81, 
            0.11280785251996919`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.8200000000000001, 0.11264387897831904`}, {
            0.8200000000000001, 0.11273138911734809`}}], 
           LineBox[{{0.8200000000000001, 0.11273138911734809`}, {
            0.8200000000000001, 0.11281889925637714`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{{}, {
           LineBox[{{0.83, 0.1125873181366627}, {0.83, 
            0.11267492956786855`}}], 
           LineBox[{{0.83, 0.11267492956786855`}, {0.83, 
            0.1127625409990744}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.77, 0.11253223375167051`}, {0.77, 
            0.11262144594438644`}}], 
           LineBox[{{0.77, 0.11262144594438644`}, {0.77, 
            0.11271065813710238`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.78, 0.11255747203646874`}, {0.78, 
            0.11264742914565039`}}], 
           LineBox[{{0.78, 0.11264742914565039`}, {0.78, 
            0.11273738625483204`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.79, 0.11257270177644106`}, {0.79, 
            0.11266226823198712`}}], 
           LineBox[{{0.79, 0.11266226823198712`}, {0.79, 
            0.11275183468753318`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.8, 0.11252869149203781`}, {0.8, 
            0.11261768638144505`}}], 
           LineBox[{{0.8, 0.11261768638144505`}, {0.8, 
            0.11270668127085229`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.81, 0.11252065356524539`}, {0.81, 
            0.11261077402739599`}}], 
           LineBox[{{0.81, 0.11261077402739599`}, {0.81, 
            0.11270089448954658`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.8200000000000001, 0.11252994130741344`}, {
            0.8200000000000001, 0.11262047312989062`}}], 
           LineBox[{{0.8200000000000001, 0.11262047312989062`}, {
            0.8200000000000001, 0.11271100495236781`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{{}, {
           LineBox[{{0.83, 0.11242208820063826`}, {0.83, 
            0.11251216562551629`}}], 
           LineBox[{{0.83, 0.11251216562551629`}, {0.83, 
            0.11260224305039432`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.77, 0.11221108973951674`}, {0.77, 
            0.11229700457129822`}}], 
           LineBox[{{0.77, 0.11229700457129822`}, {0.77, 
            0.1123829194030797}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.78, 0.11229706214293826`}, {0.78, 
            0.11238266705094804`}}], 
           LineBox[{{0.78, 0.11238266705094804`}, {0.78, 
            0.11246827195895782`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.79, 0.11238412999111773`}, {0.79, 
            0.11247011011061346`}}], 
           LineBox[{{0.79, 0.11247011011061346`}, {0.79, 
            0.1125560902301092}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.8, 0.11245374391584172`}, {0.8, 
            0.11253992869061724`}}], 
           LineBox[{{0.8, 0.11253992869061724`}, {0.8, 
            0.11262611346539277`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.81, 0.11247668590121528`}, {0.81, 
            0.11256243025089417`}}], 
           LineBox[{{0.81, 0.11256243025089417`}, {0.81, 
            0.11264817460057307`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.8200000000000001, 0.11250585692977555`}, {
            0.8200000000000001, 0.11259206167708669`}}], 
           LineBox[{{0.8200000000000001, 0.11259206167708669`}, {
            0.8200000000000001, 0.11267826642439782`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{{}, {
           LineBox[{{0.83, 0.11246961270710144`}, {0.83, 
            0.11255474342678301`}}], 
           LineBox[{{0.83, 0.11255474342678301`}, {0.83, 
            0.11263987414646458`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.77, 0.11273891576374255`}, 
              Offset[{3, 0}, {0.77, 0.11273891576374255`}]}, {{0.77, 
              0.11273891576374255`}, 
              Offset[{-3, 0}, {0.77, 0.11273891576374255`}]}, {{0.77, 
              0.1125625972007583}, 
              Offset[{3, 0}, {0.77, 0.1125625972007583}]}, {{0.77, 
              0.1125625972007583}, 
              Offset[{-3, 0}, {0.77, 0.1125625972007583}]}}], {{{1., 0.}, {0.,
             1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.78, 0.1128214517005468}, 
              Offset[{3, 0}, {0.78, 0.1128214517005468}]}, {{0.78, 
              0.1128214517005468}, 
              Offset[{-3, 0}, {0.78, 0.1128214517005468}]}, {{0.78, 
              0.11264444744405072`}, 
              Offset[{3, 0}, {0.78, 0.11264444744405072`}]}, {{0.78, 
              0.11264444744405072`}, 
              Offset[{-3, 0}, {0.78, 0.11264444744405072`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.79, 0.11283835519448189`}, 
              Offset[{3, 0}, {0.79, 0.11283835519448189`}]}, {{0.79, 
              0.11283835519448189`}, 
              Offset[{-3, 0}, {0.79, 0.11283835519448189`}]}, {{0.79, 
              0.11266206986098516`}, 
              Offset[{3, 0}, {0.79, 0.11266206986098516`}]}, {{0.79, 
              0.11266206986098516`}, 
              Offset[{-3, 0}, {0.79, 0.11266206986098516`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8, 0.11283924192517003`}, 
              Offset[{3, 0}, {0.8, 0.11283924192517003`}]}, {{0.8, 
              0.11283924192517003`}, 
              Offset[{-3, 0}, {0.8, 0.11283924192517003`}]}, {{0.8, 
              0.11266251527049367`}, 
              Offset[{3, 0}, {0.8, 0.11266251527049367`}]}, {{0.8, 
              0.11266251527049367`}, 
              Offset[{-3, 0}, {0.8, 0.11266251527049367`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.81, 0.11280785251996919`}, 
              Offset[{3, 0}, {0.81, 0.11280785251996919`}]}, {{0.81, 
              0.11280785251996919`}, 
              Offset[{-3, 0}, {0.81, 0.11280785251996919`}]}, {{0.81, 
              0.11263196620727767`}, 
              Offset[{3, 0}, {0.81, 0.11263196620727767`}]}, {{0.81, 
              0.11263196620727767`}, 
              Offset[{-3, 0}, {0.81, 0.11263196620727767`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8200000000000001, 0.11281889925637714`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11281889925637714`}]}, {{
              0.8200000000000001, 0.11281889925637714`}, 
              Offset[{-3, 0}, {0.8200000000000001, 0.11281889925637714`}]}, {{
              0.8200000000000001, 0.11264387897831904`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11264387897831904`}]}, {{
              0.8200000000000001, 0.11264387897831904`}, 
              Offset[{-3, 0}, {0.8200000000000001, 
               0.11264387897831904`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.83, 0.1127625409990744}, 
              Offset[{3, 0}, {0.83, 0.1127625409990744}]}, {{0.83, 
              0.1127625409990744}, 
              Offset[{-3, 0}, {0.83, 0.1127625409990744}]}, {{0.83, 
              0.1125873181366627}, 
              Offset[{3, 0}, {0.83, 0.1125873181366627}]}, {{0.83, 
              0.1125873181366627}, 
              Offset[{-3, 0}, {0.83, 0.1125873181366627}]}}], {{{1., 0.}, {0.,
             1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.77, 0.11271065813710238`}, 
              Offset[{3, 0}, {0.77, 0.11271065813710238`}]}, {{0.77, 
              0.11271065813710238`}, 
              Offset[{-3, 0}, {0.77, 0.11271065813710238`}]}, {{0.77, 
              0.11253223375167051`}, 
              Offset[{3, 0}, {0.77, 0.11253223375167051`}]}, {{0.77, 
              0.11253223375167051`}, 
              Offset[{-3, 0}, {0.77, 0.11253223375167051`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.78, 0.11273738625483204`}, 
              Offset[{3, 0}, {0.78, 0.11273738625483204`}]}, {{0.78, 
              0.11273738625483204`}, 
              Offset[{-3, 0}, {0.78, 0.11273738625483204`}]}, {{0.78, 
              0.11255747203646874`}, 
              Offset[{3, 0}, {0.78, 0.11255747203646874`}]}, {{0.78, 
              0.11255747203646874`}, 
              Offset[{-3, 0}, {0.78, 0.11255747203646874`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.79, 0.11275183468753318`}, 
              Offset[{3, 0}, {0.79, 0.11275183468753318`}]}, {{0.79, 
              0.11275183468753318`}, 
              Offset[{-3, 0}, {0.79, 0.11275183468753318`}]}, {{0.79, 
              0.11257270177644106`}, 
              Offset[{3, 0}, {0.79, 0.11257270177644106`}]}, {{0.79, 
              0.11257270177644106`}, 
              Offset[{-3, 0}, {0.79, 0.11257270177644106`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8, 0.11270668127085229`}, 
              Offset[{3, 0}, {0.8, 0.11270668127085229`}]}, {{0.8, 
              0.11270668127085229`}, 
              Offset[{-3, 0}, {0.8, 0.11270668127085229`}]}, {{0.8, 
              0.11252869149203781`}, 
              Offset[{3, 0}, {0.8, 0.11252869149203781`}]}, {{0.8, 
              0.11252869149203781`}, 
              Offset[{-3, 0}, {0.8, 0.11252869149203781`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.81, 0.11270089448954658`}, 
              Offset[{3, 0}, {0.81, 0.11270089448954658`}]}, {{0.81, 
              0.11270089448954658`}, 
              Offset[{-3, 0}, {0.81, 0.11270089448954658`}]}, {{0.81, 
              0.11252065356524539`}, 
              Offset[{3, 0}, {0.81, 0.11252065356524539`}]}, {{0.81, 
              0.11252065356524539`}, 
              Offset[{-3, 0}, {0.81, 0.11252065356524539`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8200000000000001, 0.11271100495236781`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11271100495236781`}]}, {{
              0.8200000000000001, 0.11271100495236781`}, 
              Offset[{-3, 0}, {0.8200000000000001, 0.11271100495236781`}]}, {{
              0.8200000000000001, 0.11252994130741344`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11252994130741344`}]}, {{
              0.8200000000000001, 0.11252994130741344`}, 
              Offset[{-3, 0}, {0.8200000000000001, 
               0.11252994130741344`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.83, 0.11260224305039432`}, 
              Offset[{3, 0}, {0.83, 0.11260224305039432`}]}, {{0.83, 
              0.11260224305039432`}, 
              Offset[{-3, 0}, {0.83, 0.11260224305039432`}]}, {{0.83, 
              0.11242208820063826`}, 
              Offset[{3, 0}, {0.83, 0.11242208820063826`}]}, {{0.83, 
              0.11242208820063826`}, 
              Offset[{-3, 0}, {0.83, 0.11242208820063826`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.77, 0.1123829194030797}, 
              Offset[{3, 0}, {0.77, 0.1123829194030797}]}, {{0.77, 
              0.1123829194030797}, 
              Offset[{-3, 0}, {0.77, 0.1123829194030797}]}, {{0.77, 
              0.11221108973951674`}, 
              Offset[{3, 0}, {0.77, 0.11221108973951674`}]}, {{0.77, 
              0.11221108973951674`}, 
              Offset[{-3, 0}, {0.77, 0.11221108973951674`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.78, 0.11246827195895782`}, 
              Offset[{3, 0}, {0.78, 0.11246827195895782`}]}, {{0.78, 
              0.11246827195895782`}, 
              Offset[{-3, 0}, {0.78, 0.11246827195895782`}]}, {{0.78, 
              0.11229706214293826`}, 
              Offset[{3, 0}, {0.78, 0.11229706214293826`}]}, {{0.78, 
              0.11229706214293826`}, 
              Offset[{-3, 0}, {0.78, 0.11229706214293826`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.79, 0.1125560902301092}, 
              Offset[{3, 0}, {0.79, 0.1125560902301092}]}, {{0.79, 
              0.1125560902301092}, 
              Offset[{-3, 0}, {0.79, 0.1125560902301092}]}, {{0.79, 
              0.11238412999111773`}, 
              Offset[{3, 0}, {0.79, 0.11238412999111773`}]}, {{0.79, 
              0.11238412999111773`}, 
              Offset[{-3, 0}, {0.79, 0.11238412999111773`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8, 0.11262611346539277`}, 
              Offset[{3, 0}, {0.8, 0.11262611346539277`}]}, {{0.8, 
              0.11262611346539277`}, 
              Offset[{-3, 0}, {0.8, 0.11262611346539277`}]}, {{0.8, 
              0.11245374391584172`}, 
              Offset[{3, 0}, {0.8, 0.11245374391584172`}]}, {{0.8, 
              0.11245374391584172`}, 
              Offset[{-3, 0}, {0.8, 0.11245374391584172`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.81, 0.11264817460057307`}, 
              Offset[{3, 0}, {0.81, 0.11264817460057307`}]}, {{0.81, 
              0.11264817460057307`}, 
              Offset[{-3, 0}, {0.81, 0.11264817460057307`}]}, {{0.81, 
              0.11247668590121528`}, 
              Offset[{3, 0}, {0.81, 0.11247668590121528`}]}, {{0.81, 
              0.11247668590121528`}, 
              Offset[{-3, 0}, {0.81, 0.11247668590121528`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8200000000000001, 0.11267826642439782`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11267826642439782`}]}, {{
              0.8200000000000001, 0.11267826642439782`}, 
              Offset[{-3, 0}, {0.8200000000000001, 0.11267826642439782`}]}, {{
              0.8200000000000001, 0.11250585692977555`}, 
              Offset[{3, 0}, {0.8200000000000001, 0.11250585692977555`}]}, {{
              0.8200000000000001, 0.11250585692977555`}, 
              Offset[{-3, 0}, {0.8200000000000001, 
               0.11250585692977555`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.83, 0.11263987414646458`}, 
              Offset[{3, 0}, {0.83, 0.11263987414646458`}]}, {{0.83, 
              0.11263987414646458`}, 
              Offset[{-3, 0}, {0.83, 0.11263987414646458`}]}, {{0.83, 
              0.11246961270710144`}, 
              Offset[{3, 0}, {0.83, 0.11246961270710144`}]}, {{0.83, 
              0.11246961270710144`}, 
              Offset[{-3, 0}, {0.83, 0.11246961270710144`}]}}], {{{1., 0.}, {
            0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.77, 0.11265075648225042`}, {0.78, 0.11273294957229876`}, {
        0.79, 0.11275021252773353`}, {0.8, 0.11275087859783185`}, {0.81, 
        0.11271990936362343`}, {0.8200000000000001, 0.11273138911734809`}, {
        0.83, 0.11267492956786855`}}],
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.77, 0.11262144594438644`}, {0.78, 0.11264742914565039`}, {
        0.79, 0.11266226823198712`}, {0.8, 0.11261768638144505`}, {0.81, 
        0.11261077402739599`}, {0.8200000000000001, 0.11262047312989062`}, {
        0.83, 0.11251216562551629`}}],
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.77, 0.11229700457129822`}, {0.78, 0.11238266705094804`}, {
        0.79, 0.11247011011061346`}, {0.8, 0.11253992869061724`}, {0.81, 
        0.11256243025089417`}, {0.8200000000000001, 0.11259206167708669`}, {
        0.83, 0.11255474342678301`}}],
       FontFamily->"Arial"]}}, {{}, {}}}, {{{{
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.7722772277227723, 0.11246602763030353`}, {
            0.7722772277227723, 0.1125465940138586}}], 
           LineBox[{{0.7722772277227723, 0.1125465940138586}, {
            0.7722772277227723, 0.11262716039741366`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.781930693069307, 0.11253360172109236`}, {
            0.781930693069307, 0.11261469634262355`}}], 
           LineBox[{{0.781930693069307, 0.11261469634262355`}, {
            0.781930693069307, 0.11269579096415475`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.7915841584158415, 0.11256738549484467`}, {
            0.7915841584158415, 0.11264795525018487`}}], 
           LineBox[{{0.7915841584158415, 0.11264795525018487`}, {
            0.7915841584158415, 0.11272852500552506`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.8012376237623763, 0.11255332809385842`}, {
            0.8012376237623763, 0.11263335285077844`}}], 
           LineBox[{{0.8012376237623763, 0.11263335285077844`}, {
            0.8012376237623763, 0.11271337760769846`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.810891089108911, 0.11248239115397655`}, {
            0.810891089108911, 0.11256268950378663`}}], 
           LineBox[{{0.810891089108911, 0.11256268950378663`}, {
            0.810891089108911, 0.11264298785359671`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.8205445544554456, 0.11247235484166321`}, {
            0.8205445544554456, 0.11255144680503675`}}], 
           LineBox[{{0.8205445544554456, 0.11255144680503675`}, {
            0.8205445544554456, 0.11263053876841028`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{{}, {
           LineBox[{{0.8301980198019802, 0.11244746343009025`}, {
            0.8301980198019802, 0.11252700937721014`}}], 
           LineBox[{{0.8301980198019802, 0.11252700937721014`}, {
            0.8301980198019802, 0.11260655532433002`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.7722772277227723, 0.11235272430875877`}, {
            0.7722772277227723, 0.1124320056127404}}], 
           LineBox[{{0.7722772277227723, 0.1124320056127404}, {
            0.7722772277227723, 0.11251128691672203`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.781930693069307, 0.11241824945883379`}, {
            0.781930693069307, 0.11249848338039424`}}], 
           LineBox[{{0.781930693069307, 0.11249848338039424`}, {
            0.781930693069307, 0.11257871730195469`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.7915841584158415, 0.11249112016242639`}, {
            0.7915841584158415, 0.11257099875899003`}}], 
           LineBox[{{0.7915841584158415, 0.11257099875899003`}, {
            0.7915841584158415, 0.11265087735555367`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.8012376237623763, 0.1125302707178562}, {
            0.8012376237623763, 0.11260867091430951`}}], 
           LineBox[{{0.8012376237623763, 0.11260867091430951`}, {
            0.8012376237623763, 0.11268707111076282`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.810891089108911, 0.11247376190714113`}, {
            0.810891089108911, 0.11255302489418832`}}], 
           LineBox[{{0.810891089108911, 0.11255302489418832`}, {
            0.810891089108911, 0.11263228788123551`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.8205445544554456, 0.11243705375925538`}, {
            0.8205445544554456, 0.11251589518042195`}}], 
           LineBox[{{0.8205445544554456, 0.11251589518042195`}, {
            0.8205445544554456, 0.11259473660158852`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{{}, {
           LineBox[{{0.8301980198019802, 0.11247390850955369`}, {
            0.8301980198019802, 0.11255207584343899`}}], 
           LineBox[{{0.8301980198019802, 0.11255207584343899`}, {
            0.8301980198019802, 0.11263024317732429`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.7722772277227723, 0.1125069489243619}, {
            0.7722772277227723, 0.11258812999044296`}}], 
           LineBox[{{0.7722772277227723, 0.11258812999044296`}, {
            0.7722772277227723, 0.11266931105652402`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.781930693069307, 0.11250581426516396`}, {
            0.781930693069307, 0.11258710380805718`}}], 
           LineBox[{{0.781930693069307, 0.11258710380805718`}, {
            0.781930693069307, 0.11266839335095041`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.7915841584158415, 0.11252219889510347`}, {
            0.7915841584158415, 0.11260355338631109`}}], 
           LineBox[{{0.7915841584158415, 0.11260355338631109`}, {
            0.7915841584158415, 0.11268490787751871`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.8012376237623763, 0.11250263153105886`}, {
            0.8012376237623763, 0.11258300871418031`}}], 
           LineBox[{{0.8012376237623763, 0.11258300871418031`}, {
            0.8012376237623763, 0.11266338589730177`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.810891089108911, 0.11248089089431101`}, {
            0.810891089108911, 0.1125612917101808}}], 
           LineBox[{{0.810891089108911, 0.1125612917101808}, {
            0.810891089108911, 0.11264169252605058`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.8205445544554456, 0.11244359517248136`}, {
            0.8205445544554456, 0.11252405710077956`}}], 
           LineBox[{{0.8205445544554456, 0.11252405710077956`}, {
            0.8205445544554456, 0.11260451902907777`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{{}, {
           LineBox[{{0.8301980198019802, 0.11236162664444178`}, {
            0.8301980198019802, 0.11244300340702491`}}], 
           LineBox[{{0.8301980198019802, 0.11244300340702491`}, {
            0.8301980198019802, 0.11252438016960804`}}]}},
         Antialiasing->False,
         FontFamily->"Arial"]}}}, {{
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7722772277227723, 0.11262716039741366`}, 
              Offset[{3, 0}, {0.7722772277227723, 0.11262716039741366`}]}, {{
              0.7722772277227723, 0.11262716039741366`}, 
              Offset[{-3, 0}, {0.7722772277227723, 0.11262716039741366`}]}, {{
              0.7722772277227723, 0.11246602763030353`}, 
              Offset[{3, 0}, {0.7722772277227723, 0.11246602763030353`}]}, {{
              0.7722772277227723, 0.11246602763030353`}, 
              Offset[{-3, 0}, {0.7722772277227723, 
               0.11246602763030353`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.781930693069307, 0.11269579096415475`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11269579096415475`}]}, {{
              0.781930693069307, 0.11269579096415475`}, 
              Offset[{-3, 0}, {0.781930693069307, 0.11269579096415475`}]}, {{
              0.781930693069307, 0.11253360172109236`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11253360172109236`}]}, {{
              0.781930693069307, 0.11253360172109236`}, 
              Offset[{-3, 0}, {0.781930693069307, 
               0.11253360172109236`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7915841584158415, 0.11272852500552506`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11272852500552506`}]}, {{
              0.7915841584158415, 0.11272852500552506`}, 
              Offset[{-3, 0}, {0.7915841584158415, 0.11272852500552506`}]}, {{
              0.7915841584158415, 0.11256738549484467`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11256738549484467`}]}, {{
              0.7915841584158415, 0.11256738549484467`}, 
              Offset[{-3, 0}, {0.7915841584158415, 
               0.11256738549484467`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8012376237623763, 0.11271337760769846`}, 
              Offset[{3, 0}, {0.8012376237623763, 0.11271337760769846`}]}, {{
              0.8012376237623763, 0.11271337760769846`}, 
              Offset[{-3, 0}, {0.8012376237623763, 0.11271337760769846`}]}, {{
              0.8012376237623763, 0.11255332809385842`}, 
              Offset[{3, 0}, {0.8012376237623763, 0.11255332809385842`}]}, {{
              0.8012376237623763, 0.11255332809385842`}, 
              Offset[{-3, 0}, {0.8012376237623763, 
               0.11255332809385842`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.810891089108911, 0.11264298785359671`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11264298785359671`}]}, {{
              0.810891089108911, 0.11264298785359671`}, 
              Offset[{-3, 0}, {0.810891089108911, 0.11264298785359671`}]}, {{
              0.810891089108911, 0.11248239115397655`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11248239115397655`}]}, {{
              0.810891089108911, 0.11248239115397655`}, 
              Offset[{-3, 0}, {0.810891089108911, 
               0.11248239115397655`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8205445544554456, 0.11263053876841028`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11263053876841028`}]}, {{
              0.8205445544554456, 0.11263053876841028`}, 
              Offset[{-3, 0}, {0.8205445544554456, 0.11263053876841028`}]}, {{
              0.8205445544554456, 0.11247235484166321`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11247235484166321`}]}, {{
              0.8205445544554456, 0.11247235484166321`}, 
              Offset[{-3, 0}, {0.8205445544554456, 
               0.11247235484166321`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8301980198019802, 0.11260655532433002`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11260655532433002`}]}, {{
              0.8301980198019802, 0.11260655532433002`}, 
              Offset[{-3, 0}, {0.8301980198019802, 0.11260655532433002`}]}, {{
              0.8301980198019802, 0.11244746343009025`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11244746343009025`}]}, {{
              0.8301980198019802, 0.11244746343009025`}, 
              Offset[{-3, 0}, {0.8301980198019802, 
               0.11244746343009025`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7722772277227723, 0.11251128691672203`}, 
              Offset[{3, 0}, {0.7722772277227723, 0.11251128691672203`}]}, {{
              0.7722772277227723, 0.11251128691672203`}, 
              Offset[{-3, 0}, {0.7722772277227723, 0.11251128691672203`}]}, {{
              0.7722772277227723, 0.11235272430875877`}, 
              Offset[{3, 0}, {0.7722772277227723, 0.11235272430875877`}]}, {{
              0.7722772277227723, 0.11235272430875877`}, 
              Offset[{-3, 0}, {0.7722772277227723, 
               0.11235272430875877`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.781930693069307, 0.11257871730195469`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11257871730195469`}]}, {{
              0.781930693069307, 0.11257871730195469`}, 
              Offset[{-3, 0}, {0.781930693069307, 0.11257871730195469`}]}, {{
              0.781930693069307, 0.11241824945883379`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11241824945883379`}]}, {{
              0.781930693069307, 0.11241824945883379`}, 
              Offset[{-3, 0}, {0.781930693069307, 
               0.11241824945883379`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7915841584158415, 0.11265087735555367`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11265087735555367`}]}, {{
              0.7915841584158415, 0.11265087735555367`}, 
              Offset[{-3, 0}, {0.7915841584158415, 0.11265087735555367`}]}, {{
              0.7915841584158415, 0.11249112016242639`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11249112016242639`}]}, {{
              0.7915841584158415, 0.11249112016242639`}, 
              Offset[{-3, 0}, {0.7915841584158415, 
               0.11249112016242639`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8012376237623763, 0.11268707111076282`}, 
              Offset[{3, 0}, {0.8012376237623763, 0.11268707111076282`}]}, {{
              0.8012376237623763, 0.11268707111076282`}, 
              Offset[{-3, 0}, {0.8012376237623763, 0.11268707111076282`}]}, {{
              0.8012376237623763, 0.1125302707178562}, 
              Offset[{3, 0}, {0.8012376237623763, 0.1125302707178562}]}, {{
              0.8012376237623763, 0.1125302707178562}, 
              Offset[{-3, 0}, {0.8012376237623763, 
               0.1125302707178562}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.810891089108911, 0.11263228788123551`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11263228788123551`}]}, {{
              0.810891089108911, 0.11263228788123551`}, 
              Offset[{-3, 0}, {0.810891089108911, 0.11263228788123551`}]}, {{
              0.810891089108911, 0.11247376190714113`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11247376190714113`}]}, {{
              0.810891089108911, 0.11247376190714113`}, 
              Offset[{-3, 0}, {0.810891089108911, 
               0.11247376190714113`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8205445544554456, 0.11259473660158852`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11259473660158852`}]}, {{
              0.8205445544554456, 0.11259473660158852`}, 
              Offset[{-3, 0}, {0.8205445544554456, 0.11259473660158852`}]}, {{
              0.8205445544554456, 0.11243705375925538`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11243705375925538`}]}, {{
              0.8205445544554456, 0.11243705375925538`}, 
              Offset[{-3, 0}, {0.8205445544554456, 
               0.11243705375925538`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8301980198019802, 0.11263024317732429`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11263024317732429`}]}, {{
              0.8301980198019802, 0.11263024317732429`}, 
              Offset[{-3, 0}, {0.8301980198019802, 0.11263024317732429`}]}, {{
              0.8301980198019802, 0.11247390850955369`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11247390850955369`}]}, {{
              0.8301980198019802, 0.11247390850955369`}, 
              Offset[{-3, 0}, {0.8301980198019802, 
               0.11247390850955369`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}, {
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7722772277227723, 0.11266931105652402`}, 
              Offset[{3, 0}, {0.7722772277227723, 0.11266931105652402`}]}, {{
              0.7722772277227723, 0.11266931105652402`}, 
              Offset[{-3, 0}, {0.7722772277227723, 0.11266931105652402`}]}, {{
              0.7722772277227723, 0.1125069489243619}, 
              Offset[{3, 0}, {0.7722772277227723, 0.1125069489243619}]}, {{
              0.7722772277227723, 0.1125069489243619}, 
              Offset[{-3, 0}, {0.7722772277227723, 
               0.1125069489243619}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.781930693069307, 0.11266839335095041`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11266839335095041`}]}, {{
              0.781930693069307, 0.11266839335095041`}, 
              Offset[{-3, 0}, {0.781930693069307, 0.11266839335095041`}]}, {{
              0.781930693069307, 0.11250581426516396`}, 
              Offset[{3, 0}, {0.781930693069307, 0.11250581426516396`}]}, {{
              0.781930693069307, 0.11250581426516396`}, 
              Offset[{-3, 0}, {0.781930693069307, 
               0.11250581426516396`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.7915841584158415, 0.11268490787751871`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11268490787751871`}]}, {{
              0.7915841584158415, 0.11268490787751871`}, 
              Offset[{-3, 0}, {0.7915841584158415, 0.11268490787751871`}]}, {{
              0.7915841584158415, 0.11252219889510347`}, 
              Offset[{3, 0}, {0.7915841584158415, 0.11252219889510347`}]}, {{
              0.7915841584158415, 0.11252219889510347`}, 
              Offset[{-3, 0}, {0.7915841584158415, 
               0.11252219889510347`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8012376237623763, 0.11266338589730177`}, 
              Offset[{3, 0}, {0.8012376237623763, 0.11266338589730177`}]}, {{
              0.8012376237623763, 0.11266338589730177`}, 
              Offset[{-3, 0}, {0.8012376237623763, 0.11266338589730177`}]}, {{
              0.8012376237623763, 0.11250263153105886`}, 
              Offset[{3, 0}, {0.8012376237623763, 0.11250263153105886`}]}, {{
              0.8012376237623763, 0.11250263153105886`}, 
              Offset[{-3, 0}, {0.8012376237623763, 
               0.11250263153105886`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.810891089108911, 0.11264169252605058`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11264169252605058`}]}, {{
              0.810891089108911, 0.11264169252605058`}, 
              Offset[{-3, 0}, {0.810891089108911, 0.11264169252605058`}]}, {{
              0.810891089108911, 0.11248089089431101`}, 
              Offset[{3, 0}, {0.810891089108911, 0.11248089089431101`}]}, {{
              0.810891089108911, 0.11248089089431101`}, 
              Offset[{-3, 0}, {0.810891089108911, 
               0.11248089089431101`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8205445544554456, 0.11260451902907777`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11260451902907777`}]}, {{
              0.8205445544554456, 0.11260451902907777`}, 
              Offset[{-3, 0}, {0.8205445544554456, 0.11260451902907777`}]}, {{
              0.8205445544554456, 0.11244359517248136`}, 
              Offset[{3, 0}, {0.8205445544554456, 0.11244359517248136`}]}, {{
              0.8205445544554456, 0.11244359517248136`}, 
              Offset[{-3, 0}, {0.8205445544554456, 
               0.11244359517248136`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}, 
       {RGBColor[0.513417, 0.72992, 0.440682], 
        StyleBox[{
          GeometricTransformationBox[
           LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
          GeometricTransformationBox[
           LineBox[{{{0.8301980198019802, 0.11252438016960804`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11252438016960804`}]}, {{
              0.8301980198019802, 0.11252438016960804`}, 
              Offset[{-3, 0}, {0.8301980198019802, 0.11252438016960804`}]}, {{
              0.8301980198019802, 0.11236162664444178`}, 
              Offset[{3, 0}, {0.8301980198019802, 0.11236162664444178`}]}, {{
              0.8301980198019802, 0.11236162664444178`}, 
              Offset[{-3, 0}, {0.8301980198019802, 
               0.11236162664444178`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
         Antialiasing->False,
         FontFamily->"Arial"]}}}}, {
     {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.7722772277227723, 0.1125465940138586}, {0.781930693069307,
         0.11261469634262355`}, {0.7915841584158415, 0.11264795525018487`}, {
        0.8012376237623763, 0.11263335285077844`}, {0.810891089108911, 
        0.11256268950378663`}, {0.8205445544554456, 0.11255144680503675`}, {
        0.8301980198019802, 0.11252700937721014`}}],
       FontFamily->"Arial"]}, 
     {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.7722772277227723, 0.1124320056127404}, {0.781930693069307,
         0.11249848338039424`}, {0.7915841584158415, 0.11257099875899003`}, {
        0.8012376237623763, 0.11260867091430951`}, {0.810891089108911, 
        0.11255302489418832`}, {0.8205445544554456, 0.11251589518042195`}, {
        0.8301980198019802, 0.11255207584343899`}}],
       FontFamily->"Arial"]}, 
     {RGBColor[0.513417, 0.72992, 0.440682], PointSize[0.012833333333333334`],
       AbsoluteThickness[1.6], 
      StyleBox[
       PointBox[{{0.7722772277227723, 0.11258812999044296`}, {
        0.781930693069307, 0.11258710380805718`}, {0.7915841584158415, 
        0.11260355338631109`}, {0.8012376237623763, 0.11258300871418031`}, {
        0.810891089108911, 0.1125612917101808}, {0.8205445544554456, 
        0.11252405710077956`}, {0.8301980198019802, 0.11244300340702491`}}],
       FontFamily->"Arial"]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.768750000000002, 0.1121761923958698},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{460.38749999999965`, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.768750000000002, 0.83}, {0.1121761923958698, 
   0.11283924192517003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892492949596197*^9, 3.8925307845651093`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"e06ce8ce-f93d-4349-a6b8-4f9c06b4fe7b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ship-it for params : ",
 StyleBox["m = 20",
  FontWeight->"Bold"],
 ", sigma = 1, mean = \[Dash]1, error = 35"
}], "Subsection",
 CellChangeTimes->{{3.892277368430962*^9, 3.892277391776228*^9}, {
  3.892285825734497*^9, 3.8922858432304287`*^9}, {3.892286257661607*^9, 
  3.892286260889318*^9}, {3.892286356315919*^9, 3.8922863575499697`*^9}, {
  3.8923612451184*^9, 3.892361246855735*^9}, {3.892398416863777*^9, 
  3.892398417201788*^9}, {3.892405749048023*^9, 3.892405751343892*^9}, {
  3.892447353497397*^9, 
  3.8924473546921186`*^9}},ExpressionUUID->"2b0d9248-cc9b-49b0-978b-\
32da002db8a6"],

Cell["\<\
Shipit[m_, seed_, weeks_, trials_, mean_, sigma_, error_, params_]\
\>", "Text",
 CellChangeTimes->{
  3.8922774786249437`*^9},ExpressionUUID->"83e7ce2e-d86c-40b9-bbc1-\
ffeb373f4986"],

Cell[CellGroupData[{

Cell[BoxData["d20"], "Input",
 CellChangeTimes->{{3.892405979257902*^9, 3.892405980183448*^9}, {
  3.8924473588185177`*^9, 3.892447359999831*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"a744ec68-f710-407c-9802-72f5e9c10607"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.015232912, "result_sigma" -> 2.8553318*^-6, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 0.5, "p1" -> 1.7479206911418554`17., 
        "p2" -> -0.0005497926699176107`19., "p3" -> 2, "p4" -> 
        0.7980983054842659`16.|>, <|
       "result" -> 0.036601243, "result_sigma" -> 9.4493559*^-6, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 1, "p1" -> 1.6275718369788006`17., 
        "p2" -> -0.00037216849575784496`20., "p3" -> 2, "p4" -> 
        1.1747107576474574`17.|>, <|
       "result" -> 0.063452313, "result_sigma" -> 0.000024805422, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 2, "p1" -> 0.5851455790501449`16., "p2" -> 
        10.448133864820493`17., "p3" -> 2, "p4" -> 2.291377563795419`16.|>, <|
       "result" -> 0.063526457, "result_sigma" -> 0.000028088732000000002`, 
        "m" -> 20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, 
        "mean" -> -1, "sigma" -> 1, "error" -> 2, "p1" -> 
        0.7485307201787403`16., "p2" -> 5.200715642445966`16., "p3" -> 
        1.6484038434149761`17., "p4" -> 1.9296833198814474`17.|>, <|
       "result" -> 0.077409895, "result_sigma" -> 0.000033204965, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 3, "p1" -> 0.7711791216823437`16., "p2" -> 
        5.141542179590905`16., "p3" -> 1.7485026609757743`17., "p4" -> 
        1.7223520408158497`17.|>, <|
       "result" -> 0.085565587, "result_sigma" -> 0.00005663259, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.7628384589323133`16., "p2" -> 
        5.513612455355359`16., "p3" -> 1.7342355379047552`17., "p4" -> 
        1.3632736385019668`17.|>, <|
       "result" -> 0.085570395, "result_sigma" -> 0.00005333599900000001, "m" -> 
        20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 4, "p1" -> 0.5305653546143787`16., "p2" -> 
        13.784909390498639`17., "p3" -> 2, "p4" -> 2.461072759223229`16.|>, <|
       "result" -> 0.094718817, "result_sigma" -> 0.000093825019, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.5637449105046811`16., "p2" -> 
        12.96658016004753`16., "p3" -> 2, "p4" -> 2.2372810985687837`17.|>, <|
       "result" -> 0.094755875, "result_sigma" -> 0.00008835069500000001, "m" -> 
        20, "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 6, "p1" -> 0.7662585629104995`16., "p2" -> 
        5.448228210239508`16., "p3" -> 1.6431560277996786`17., "p4" -> 
        1.5399456424423654`17.|>, <|
       "result" -> 0.099458291, "result_sigma" -> 0.00012682946, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.7592347581160193`16., "p2" -> 
        5.023893701527202`16., "p3" -> 1.6979644796517022`17., "p4" -> 
        1.8403252182636185`17.|>, <|
       "result" -> 0.099945554, "result_sigma" -> 0.00014850959, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 8, "p1" -> 0.605303456407232, "p2" -> 
        11.009436204784706`17., "p3" -> 2, "p4" -> 2.200146484215078`16.|>, <|
       "result" -> 0.1015181, "result_sigma" -> 0.00013560558, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 9, "p1" -> 0.7720915243008761`16., "p2" -> 
        5.3328012095546224`17., "p3" -> 1.6268929867115405`17., "p4" -> 
        1.7070038271795358`17.|>, <|
       "result" -> 0.10255221, "result_sigma" -> 0.00020993995, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 10, "p1" -> 0.7548384766895572`16., "p2" -> 
        5.328719707391471`16., "p3" -> 1.5748729379864996`17., "p4" -> 
        1.9712449219604609`17.|>, <|
       "result" -> 0.10486237, "result_sigma" -> 0.00025478381, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 12, "p1" -> 0.7554019476414615`16., "p2" -> 
        5.358565888363225`16., "p3" -> 1.6828078937509052`17., "p4" -> 
        1.8226019642673421`17.|>, <|
       "result" -> 0.10517994, "result_sigma" -> 0.00029667282, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 14, "p1" -> 0.7100832540764686`16., "p2" -> 
        5.097600773249422`16., "p3" -> 1.2876531481070395`17., "p4" -> 
        2.9963429630788303`17.|>, <|
       "result" -> 0.10679464, "result_sigma" -> 0.00029790215, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 15, "p1" -> 0.7670824969723535`16., "p2" -> 
        5.2780609802964555`17., "p3" -> 1.6193516433025184`17., "p4" -> 
        1.7480830431945498`17.|>, <|
       "result" -> 0.10711696, "result_sigma" -> 0.00032736512, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.7576632110744983`16., "p2" -> 
        5.1928350288421115`17., "p3" -> 1.6900623883796695`17., "p4" -> 
        1.6738887672048133`17.|>, <|
       "result" -> 0.10771739, "result_sigma" -> 0.00031319464, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 16, "p1" -> 0.5929603648059317`16., "p2" -> 
        11.851687067943502`17., "p3" -> 2, "p4" -> 1.8208248571624432`17.|>, <|
       "result" -> 0.10849649, "result_sigma" -> 0.00034931727, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 20, "p1" -> 0.7735237296846857`16., "p2" -> 
        5.631301480487547`16., "p3" -> 1.5872589800419186`17., "p4" -> 
        1.5873978837858402`17.|>, <|
       "result" -> 0.10942116, "result_sigma" -> 0.00038925289, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 22, "p1" -> 0.5528056806470549`16., "p2" -> 
        13.620225766249508`17., "p3" -> 2, "p4" -> 2.0310294883530364`17.|>, <|
       "result" -> 0.11006286, "result_sigma" -> 0.00051199024, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 25, "p1" -> 0.7522458379871574`16., "p2" -> 
        5.624025365435596`16., "p3" -> 1.6946465658272163`17., "p4" -> 
        3.2414842714940306`17.|>, <|
       "result" -> 0.11018282, "result_sigma" -> 0.00065108685, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 30, "p1" -> 0.7549875210219072`16., "p2" -> 
        5.529208204868553`16., "p3" -> 1.5784723655088941`17., "p4" -> 
        1.7042388304453806`17.|>, <|
       "result" -> 0.11070938, "result_sigma" -> 0.00072180239, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7841218733487192`16., "p2" -> 
        5.523138782118317`16., "p3" -> 1.7013870770787807`17., "p4" -> 
        1.3752708823543123`17.|>, <|
       "result" -> 0.11100421, "result_sigma" -> 0.00056608868, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 32, "p1" -> 0.781359996132614, "p2" -> 
        5.554598077466224`16., "p3" -> 1.8032986377318203`17., "p4" -> 
        1.1662334456821077`17.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[60], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[60], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 24, 
     "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0152329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000285533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.7479206911418554"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0366012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000944936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.6275718369788006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0634523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000248054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5851455790501449"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0635265"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000280887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7485307201787403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0774099"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000033205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7711791216823437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000566326"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7628384589323133"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0855704"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000053336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5305653546143787"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947188"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000093825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5637449105046811"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0947559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000883507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7662585629104995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0994583"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000126829"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7592347581160193"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0999456"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00014851"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.605303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.101518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000135606"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7720915243008761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.102552"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00020994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7548384766895572"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.104862"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000254784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7554019476414615"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.10518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000296673"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7100832540764686"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.106795"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000297902"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7670824969723535"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107117"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000327365"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7576632110744983"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.107717"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000313195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5929603648059317"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.108496"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000349317"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7735237296846857"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.109421"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000389253"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5528056806470549"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{803., {390.91754150390625`, 398.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{803., {390.91754150390625`, 398.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.892471916096219*^9, 3.892493970388546*^9, 
  3.892530784620943*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"ddd01aa1-2024-4f01-8921-d3fc64779ec5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shM20", "[", 
    RowBox[{"p_", ",", "l_", ",", "a_", ",", "b_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Shipit", "[", 
    RowBox[{"20", ",", "n", ",", "10000000", ",", " ", "25", ",", " ", 
     RowBox[{"-", "1"}], ",", "1", ",", "35", ",", " ", 
     RowBox[{"{", 
      RowBox[{"p", ",", "l", ",", "a", ",", " ", "b"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"shM20N", "[", 
    RowBox[{"p_", ",", "a_", ",", "b_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"shM20", "[", 
         RowBox[{"p", ",", "12.0", ",", "a", ",", "b", ",", " ", "#"}], "]"}],
         "&"}], ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"shM20N", "[", 
    RowBox[{"p_", ",", "l_", ",", " ", "a_", ",", "b_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"PlusMinus", "@@", 
    RowBox[{"AvgMeasurements", "[", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"shM20", "[", 
         RowBox[{"p", ",", "l", ",", "a", ",", "b", ",", "#"}], "]"}], "&"}], 
       ",", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.892282733134947*^9, 3.8922827459786177`*^9}, {
   3.892282876812405*^9, 3.892282925169712*^9}, {3.892284430174745*^9, 
   3.892284430370842*^9}, {3.892285128565845*^9, 3.892285158939155*^9}, 
   3.89228519254305*^9, {3.892285443275159*^9, 3.892285461443377*^9}, {
   3.8922854943258553`*^9, 3.892285496957378*^9}, {3.89228636115818*^9, 
   3.892286362499303*^9}, {3.8922882205077343`*^9, 3.8922882210308113`*^9}, {
   3.892288446071945*^9, 3.892288449264179*^9}, {3.8923984198318872`*^9, 
   3.8923984210479727`*^9}, {3.892405884532292*^9, 3.892405892523106*^9}, {
   3.89244736643857*^9, 3.8924473721268377`*^9}, {3.892447405745491*^9, 
   3.892447511937037*^9}, {3.892455948442984*^9, 3.89245604730372*^9}, {
   3.8924570833960953`*^9, 3.8924571322714787`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"c8b6ca69-488d-4aef-a338-d30d76239944"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shM20", "[", 
  RowBox[{"0.7", ",", "2.0", ",", "2.3", ",", " ", "1", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8924475274019117`*^9, 3.892447587342442*^9}, {
  3.8924571146782503`*^9, 3.892457117209711*^9}, {3.892471995154024*^9, 
  3.8924719956984253`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"03e633c8-f6ae-4aac-bc44-93106453b7c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00678657`", ",", "0.00097717219`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.892471916122113*^9, {3.8924719852111177`*^9, 3.892472007843302*^9}, 
   3.892493976814563*^9, 3.8925307846324997`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"c2512a93-f2c7-43cc-87e0-5872489eb49d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.55", ",", "0.61", ",", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"shM20N", "[", 
        RowBox[{"#", ",", "2.0", ",", "2.3", ",", "n"}], "]"}]}], "}"}], 
     "&"}], "/@", "range"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892282374317274*^9, 3.892282401709289*^9}, {
   3.892282438632196*^9, 3.892282451649353*^9}, {3.892282487348776*^9, 
   3.892282537592512*^9}, 3.8922827245337067`*^9, {3.892282793355856*^9, 
   3.8922827941833353`*^9}, {3.89228293045715*^9, 3.892282955263584*^9}, {
   3.892283044430337*^9, 3.8922830645823708`*^9}, {3.8922832632278633`*^9, 
   3.892283285549306*^9}, {3.8922835387703543`*^9, 3.892283547919845*^9}, {
   3.892283689816313*^9, 3.892283692582142*^9}, 3.892284411877531*^9, {
   3.892284488991322*^9, 3.892284508963543*^9}, 3.892285527548739*^9, {
   3.892285565338516*^9, 3.892285569305408*^9}, {3.8922856999940243`*^9, 
   3.892285737378387*^9}, {3.8922860841600037`*^9, 3.8922860965988092`*^9}, {
   3.8922864572237988`*^9, 3.892286505667172*^9}, {3.8922865654147043`*^9, 
   3.892286614841487*^9}, {3.8922867151040087`*^9, 3.892286715883219*^9}, {
   3.892286816983045*^9, 3.892286825248002*^9}, {3.892286946226022*^9, 
   3.8922869463588343`*^9}, {3.892288456868019*^9, 3.8922884629572906`*^9}, {
   3.892350879548347*^9, 3.89235088456612*^9}, {3.892357410009234*^9, 
   3.892357410306396*^9}, {3.892358603497036*^9, 3.89235864918707*^9}, {
   3.8924062243257103`*^9, 3.892406339703108*^9}, 3.8924064724896173`*^9, {
   3.892406601780075*^9, 3.8924066425109587`*^9}, {3.8924067950378036`*^9, 
   3.8924068163011017`*^9}, {3.8924069150330143`*^9, 3.892406916828528*^9}, {
   3.892439742966069*^9, 3.892439743123219*^9}, {3.892442810824926*^9, 
   3.892442817826147*^9}, {3.8924476104336348`*^9, 3.892447697487914*^9}, {
   3.892447781186249*^9, 3.8924477903629303`*^9}, {3.89244838800987*^9, 
   3.892448397003037*^9}, {3.892452394103215*^9, 3.8924524020448503`*^9}, {
   3.892455834288581*^9, 3.892455839493857*^9}, {3.892455930287393*^9, 
   3.892455940743657*^9}, {3.8924560601053534`*^9, 3.892456092398333*^9}, {
   3.8924570077407084`*^9, 3.892457020400813*^9}, {3.892458314691649*^9, 
   3.892458322170371*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7160e3b1-100f-40d0-b360-fe4cc0996f4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sm0", "=", "0.646"}], ";", 
  RowBox[{"l0", "=", "3.82"}], ";", " ", 
  RowBox[{"ksim0", "=", "3.62"}], ";"}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"dd126edb-4dfc-449f-8f22-fbed74af2365"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.98", ",", "1.02", ",", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "-", "0.4"}], ",", 
       RowBox[{"shM20N", "[", 
        RowBox[{"#", ",", "3.82", ",", " ", "2.0", ",", "3.62", ",", "n"}], 
        "]"}]}], "}"}], "&"}], "/@", "range"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.892456194361611*^9, 3.892456233390807*^9}, {
  3.892456339665936*^9, 3.892456381003249*^9}, {3.892456510666011*^9, 
  3.892456521774302*^9}, {3.89245660570461*^9, 3.892456639817802*^9}, {
  3.892456698627907*^9, 3.892456698806349*^9}, {3.8924567339321136`*^9, 
  3.892456755154916*^9}, {3.8924568295357103`*^9, 3.892456851816865*^9}, {
  3.89245691416536*^9, 3.8924569311515493`*^9}, {3.8924570099107943`*^9, 
  3.892457014764917*^9}, {3.8924583358447857`*^9, 3.892458335961912*^9}, {
  3.892458804980206*^9, 3.892458805385211*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"56b9b514-65e1-4857-8797-34ae041ada1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g20", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892441499752686*^9, 3.892441505151773*^9}, {
  3.892447673930769*^9, 3.8924476766063547`*^9}, {3.8924477455447702`*^9, 
  3.892447746802019*^9}, {3.8924561175392733`*^9, 3.89245612013244*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"3921fd9d-2e74-490c-adf9-648d263e3b15"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.55, 0.11231209377186432`}, {0.55, 
           0.11245370869239896`}}], 
          LineBox[{{0.55, 0.11245370869239896`}, {0.55, 
           0.11259532361293359`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.56, 0.11241303892495852`}, {0.56, 
           0.11255476954124459`}}], 
          LineBox[{{0.56, 0.11255476954124459`}, {0.56, 
           0.11269650015753066`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.5700000000000001, 0.11252805740208861`}, {
           0.5700000000000001, 0.11267233598851123`}}], 
          LineBox[{{0.5700000000000001, 0.11267233598851123`}, {
           0.5700000000000001, 0.11281661457493385`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.5800000000000001, 0.11252874998573435`}, {
           0.5800000000000001, 0.11267239471413532`}}], 
          LineBox[{{0.5800000000000001, 0.11267239471413532`}, {
           0.5800000000000001, 0.11281603944253628`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.5900000000000001, 0.11255574739254155`}, {
           0.5900000000000001, 0.11269680858926827`}}], 
          LineBox[{{0.5900000000000001, 0.11269680858926827`}, {
           0.5900000000000001, 0.11283786978599498`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.6000000000000001, 0.11233907129353961`}, {
           0.6000000000000001, 0.11248150360000429`}}], 
          LineBox[{{0.6000000000000001, 0.11248150360000429`}, {
           0.6000000000000001, 0.11262393590646898`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.61, 0.11204731626135991`}, {0.61, 
           0.11219298966064876`}}], 
          LineBox[{{0.61, 0.11219298966064876`}, {0.61, 
           0.11233866305993762`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.58, 0.11266438534252675`}, {0.58, 
           0.11280356856669965`}}], 
          LineBox[{{0.58, 0.11280356856669965`}, {0.58, 
           0.11294275179087256`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.59, 0.112702962944089}, {0.59, 0.11284137124634654`}}], 
          LineBox[{{0.59, 0.11284137124634654`}, {0.59, 
           0.11297977954860407`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.6, 0.11272292118764647`}, {0.6, 0.11286097111198014`}}],
           LineBox[{{0.6, 0.11286097111198014`}, {0.6, 0.1129990210363138}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.61, 0.11262917187402713`}, {0.61, 
           0.11276987543771995`}}], 
          LineBox[{{0.61, 0.11276987543771995`}, {0.61, 
           0.11291057900141277`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{{}, {
          LineBox[{{0.62, 0.11257470654650718`}, {0.62, 
           0.11271421754781392`}}], 
          LineBox[{{0.62, 0.11271421754781392`}, {0.62, 
           0.11285372854912067`}}]}},
        Antialiasing->False,
        FontFamily->"Arial"]}}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.55, 0.11259532361293359`}, 
             Offset[{3, 0}, {0.55, 0.11259532361293359`}]}, {{0.55, 
             0.11259532361293359`}, 
             Offset[{-3, 0}, {0.55, 0.11259532361293359`}]}, {{0.55, 
             0.11231209377186432`}, 
             Offset[{3, 0}, {0.55, 0.11231209377186432`}]}, {{0.55, 
             0.11231209377186432`}, 
             Offset[{-3, 0}, {0.55, 0.11231209377186432`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.56, 0.11269650015753066`}, 
             Offset[{3, 0}, {0.56, 0.11269650015753066`}]}, {{0.56, 
             0.11269650015753066`}, 
             Offset[{-3, 0}, {0.56, 0.11269650015753066`}]}, {{0.56, 
             0.11241303892495852`}, 
             Offset[{3, 0}, {0.56, 0.11241303892495852`}]}, {{0.56, 
             0.11241303892495852`}, 
             Offset[{-3, 0}, {0.56, 0.11241303892495852`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.5700000000000001, 0.11281661457493385`}, 
             Offset[{3, 0}, {0.5700000000000001, 0.11281661457493385`}]}, {{
             0.5700000000000001, 0.11281661457493385`}, 
             Offset[{-3, 0}, {0.5700000000000001, 0.11281661457493385`}]}, {{
             0.5700000000000001, 0.11252805740208861`}, 
             Offset[{3, 0}, {0.5700000000000001, 0.11252805740208861`}]}, {{
             0.5700000000000001, 0.11252805740208861`}, 
             Offset[{-3, 0}, {0.5700000000000001, 
              0.11252805740208861`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.5800000000000001, 0.11281603944253628`}, 
             Offset[{3, 0}, {0.5800000000000001, 0.11281603944253628`}]}, {{
             0.5800000000000001, 0.11281603944253628`}, 
             Offset[{-3, 0}, {0.5800000000000001, 0.11281603944253628`}]}, {{
             0.5800000000000001, 0.11252874998573435`}, 
             Offset[{3, 0}, {0.5800000000000001, 0.11252874998573435`}]}, {{
             0.5800000000000001, 0.11252874998573435`}, 
             Offset[{-3, 0}, {0.5800000000000001, 
              0.11252874998573435`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.5900000000000001, 0.11283786978599498`}, 
             Offset[{3, 0}, {0.5900000000000001, 0.11283786978599498`}]}, {{
             0.5900000000000001, 0.11283786978599498`}, 
             Offset[{-3, 0}, {0.5900000000000001, 0.11283786978599498`}]}, {{
             0.5900000000000001, 0.11255574739254155`}, 
             Offset[{3, 0}, {0.5900000000000001, 0.11255574739254155`}]}, {{
             0.5900000000000001, 0.11255574739254155`}, 
             Offset[{-3, 0}, {0.5900000000000001, 
              0.11255574739254155`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.6000000000000001, 0.11262393590646898`}, 
             Offset[{3, 0}, {0.6000000000000001, 0.11262393590646898`}]}, {{
             0.6000000000000001, 0.11262393590646898`}, 
             Offset[{-3, 0}, {0.6000000000000001, 0.11262393590646898`}]}, {{
             0.6000000000000001, 0.11233907129353961`}, 
             Offset[{3, 0}, {0.6000000000000001, 0.11233907129353961`}]}, {{
             0.6000000000000001, 0.11233907129353961`}, 
             Offset[{-3, 0}, {0.6000000000000001, 
              0.11233907129353961`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.61, 0.11233866305993762`}, 
             Offset[{3, 0}, {0.61, 0.11233866305993762`}]}, {{0.61, 
             0.11233866305993762`}, 
             Offset[{-3, 0}, {0.61, 0.11233866305993762`}]}, {{0.61, 
             0.11204731626135991`}, 
             Offset[{3, 0}, {0.61, 0.11204731626135991`}]}, {{0.61, 
             0.11204731626135991`}, 
             Offset[{-3, 0}, {0.61, 0.11204731626135991`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.58, 0.11294275179087256`}, 
             Offset[{3, 0}, {0.58, 0.11294275179087256`}]}, {{0.58, 
             0.11294275179087256`}, 
             Offset[{-3, 0}, {0.58, 0.11294275179087256`}]}, {{0.58, 
             0.11266438534252675`}, 
             Offset[{3, 0}, {0.58, 0.11266438534252675`}]}, {{0.58, 
             0.11266438534252675`}, 
             Offset[{-3, 0}, {0.58, 0.11266438534252675`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.59, 0.11297977954860407`}, 
             Offset[{3, 0}, {0.59, 0.11297977954860407`}]}, {{0.59, 
             0.11297977954860407`}, 
             Offset[{-3, 0}, {0.59, 0.11297977954860407`}]}, {{0.59, 
             0.112702962944089}, 
             Offset[{3, 0}, {0.59, 0.112702962944089}]}, {{0.59, 
             0.112702962944089}, 
             Offset[{-3, 0}, {0.59, 0.112702962944089}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.6, 0.1129990210363138}, 
             Offset[{3, 0}, {0.6, 0.1129990210363138}]}, {{0.6, 
             0.1129990210363138}, 
             Offset[{-3, 0}, {0.6, 0.1129990210363138}]}, {{0.6, 
             0.11272292118764647`}, 
             Offset[{3, 0}, {0.6, 0.11272292118764647`}]}, {{0.6, 
             0.11272292118764647`}, 
             Offset[{-3, 0}, {0.6, 0.11272292118764647`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.61, 0.11291057900141277`}, 
             Offset[{3, 0}, {0.61, 0.11291057900141277`}]}, {{0.61, 
             0.11291057900141277`}, 
             Offset[{-3, 0}, {0.61, 0.11291057900141277`}]}, {{0.61, 
             0.11262917187402713`}, 
             Offset[{3, 0}, {0.61, 0.11262917187402713`}]}, {{0.61, 
             0.11262917187402713`}, 
             Offset[{-3, 0}, {0.61, 0.11262917187402713`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.62, 0.11285372854912067`}, 
             Offset[{3, 0}, {0.62, 0.11285372854912067`}]}, {{0.62, 
             0.11285372854912067`}, 
             Offset[{-3, 0}, {0.62, 0.11285372854912067`}]}, {{0.62, 
             0.11257470654650718`}, 
             Offset[{3, 0}, {0.62, 0.11257470654650718`}]}, {{0.62, 
             0.11257470654650718`}, 
             Offset[{-3, 0}, {0.62, 0.11257470654650718`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False,
        FontFamily->"Arial"]}}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.55, 0.11245370869239896`}, {0.56, 0.11255476954124459`}, {
       0.5700000000000001, 0.11267233598851123`}, {0.5800000000000001, 
       0.11267239471413532`}, {0.5900000000000001, 0.11269680858926827`}, {
       0.6000000000000001, 0.11248150360000429`}, {0.61, 
       0.11219298966064876`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{0.58, 0.11280356856669965`}, {0.59, 0.11284137124634654`}, {
       0.6, 0.11286097111198014`}, {0.61, 0.11276987543771995`}, {0.62, 
       0.11271421754781392`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5485416666666683, 0.11199444377386295`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5485416666666683, 0.62}, {0.11199444377386295`, 
   0.1129990210363138}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.892496284379383*^9, 3.892530788806739*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"3c2b6798-c4ff-47cf-a208-9724020265d2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Top mean = -1, sigma = 1, error = 35", "Subsection",
 CellChangeTimes->{{3.892458766085561*^9, 3.8924587772037888`*^9}, {
  3.8925205420815077`*^9, 
  3.892520542485104*^9}},ExpressionUUID->"5936a48f-8b30-4a16-b0b9-\
e73071cf4351"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<mean\>\"", "]"}], "==", 
        RowBox[{"-", "1"}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<sigma\>\"", "]"}], "==", "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"#", "[", "\"\<error\>\"", "]"}], "==", "35"}]}], ")"}], 
     "&"}], "]"}], "]"}], " ", "//", " ", "Sort"}]], "Input",
 CellChangeTimes->{{3.892460017334794*^9, 3.892460059443842*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"f45d0cac-1f0c-4b64-bd2b-d606169fc40e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "result" -> 0.11034874, "result_sigma" -> 0.00068635246, "m" -> 14, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        0.00006700328775566819, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035533, "result_sigma" -> 0.00068723922, "m" -> 12, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        2.248123285654279`16., "p3" -> 0.555184537084243, "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035533, "result_sigma" -> 0.00068723922, "m" -> 15, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        Missing["NoInput"], "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11035921, "result_sigma" -> 0.00068810121, "m" -> 13, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 2.248123285654279`16., "p2" -> 
        2.24819028894203, "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11066879, "result_sigma" -> 0.00072564092, "m" -> 30, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7375824007923694`16., "p2" -> 
        1.0051553747283584`17., "p3" -> -0.023013424818385666`18., "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11069363, "result_sigma" -> 0.00070593882, "m" -> 32, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1., 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.8241151447318499`16., "p2" -> 
        0.9807262863019222`16., "p3" -> Missing["NoInput"], "p4" -> 
        Missing["NoInput"]|>, <|
       "result" -> 0.11070938, "result_sigma" -> 0.00072180239, "m" -> 20, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.7841218733487192`16., "p2" -> 
        5.523138782118317`16., "p3" -> 1.7013870770787807`17., "p4" -> 
        1.3752708823543123`17.|>, <|
       "result" -> 0.11093361, "result_sigma" -> 0.00074379096, "m" -> 21, 
        "seed" -> 4, "weeks" -> 20000000, "trials" -> 25, "mean" -> -1, 
        "sigma" -> 1, "error" -> 35, "p1" -> 0.5526730106019143`16., "p2" -> 
        14.303656366053831`17., "p3" -> 1.7954671906097197`17., "p4" -> 
        Missing["NoInput"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "result"} -> 
        1, {All, "result_sigma"} -> 1, {All, "m"} -> 1, {All, "seed"} -> 
        1, {All, "weeks"} -> 1, {All, "trials"} -> 1, {All, "mean"} -> 
        1, {All, "sigma"} -> 1, {All, "error"} -> 1, {All, "p1"} -> 
        1, {All, "p2"} -> 1, {All, "p3"} -> 1, {All, "p4"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "result" -> TypeSystem`PackageScope`AtomShape[60], "result_sigma" -> 
            TypeSystem`PackageScope`AtomShape[60], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "seed" -> 
            TypeSystem`PackageScope`AtomShape[34], "weeks" -> 
            TypeSystem`PackageScope`AtomShape[34], "trials" -> 
            TypeSystem`PackageScope`AtomShape[34], "mean" -> 
            TypeSystem`PackageScope`AtomShape[60], "sigma" -> 
            TypeSystem`PackageScope`AtomShape[34], "error" -> 
            TypeSystem`PackageScope`AtomShape[34], "p1" -> 
            TypeSystem`PackageScope`AtomShape[60], "p2" -> 
            TypeSystem`PackageScope`AtomShape[60], "p3" -> 
            TypeSystem`PackageScope`AtomShape[60], "p4" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "result", "result_sigma", "m", "seed", "weeks", "trials", "mean", 
         "sigma", "error", "p1", "p2", "p3", "p4"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Path" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 8, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result", 
                  Style[
                  "result", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["result_sigma", 
                  Style[
                  "result_sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "result_sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "result_sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["seed", 
                  Style[
                  "seed", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "seed"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "seed"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weeks", 
                  Style[
                  "weeks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weeks"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weeks"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["trials", 
                  Style[
                  "trials", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "trials"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "trials"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mean", 
                  Style[
                  "mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mean"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mean"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sigma", 
                  Style[
                  "sigma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sigma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sigma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["p1", 
                  Style[
                  "p1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "p1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "p1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000686352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000687239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000687239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110359"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000688101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.248123285654279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000725641"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7375824007923694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110694"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000705939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8241151447318499"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110709"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000721802"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7841218733487192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.110934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000743791"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["result_sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["seed"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weeks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["trials"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["mean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sigma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5526730106019143"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["p1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[13, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{732., {186.91754150390625`, 194.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{732., {186.91754150390625`, 194.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8924720334842043`*^9, 3.892496284465303*^9, 
  3.8925307888405952`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"99bd69b6-7334-44d8-9ba9-cdc24a7265bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "700"}], ";"}]], "Input",
 CellChangeTimes->{{3.892475822668208*^9, 3.892475824380602*^9}, {
  3.8925231361352587`*^9, 3.89252313634266*^9}, {3.8925267171168756`*^9, 
  3.892526717258822*^9}, {3.892530520486855*^9, 3.892530520604712*^9}, {
  3.8925308225424643`*^9, 3.892530822720326*^9}, {3.892531594673853*^9, 
  3.8925316174263897`*^9}, {3.892536053664662*^9, 3.8925360541082277`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"bdfd2139-e4be-4ac5-a92f-cd23a5cd1404"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.892475819790505*^9, 3.892475820626547*^9}, {
  3.8925312742335*^9, 
  3.892531274624014*^9}},ExpressionUUID->"defb9700-4ab4-4557-853c-\
753a94defee3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r20", "=", 
  RowBox[{"shM20N", "[", 
   RowBox[{"1.0", ",", "3.82", ",", " ", "2.0", ",", "3.62", ",", "n"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.892458783038447*^9, 3.892458817218967*^9}, {
  3.892458990129087*^9, 3.892458991258356*^9}, {3.892459144860362*^9, 
  3.892459145598254*^9}, {3.892460411985408*^9, 3.892460418411888*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"8589f797-ad33-45da-9167-4b7b0faaada3"],

Cell[BoxData[
 RowBox[{"0.11269088114181576`", "\[PlusMinus]", 
  "0.00003285076519902504`"}]], "Output",
 CellChangeTimes->{3.89253616184803*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"b407b72f-cd1d-4ab8-8176-49283e958d9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r30", "=", 
  RowBox[{"shM30N", "[", 
   RowBox[{"0.795", ",", "1.0", ",", 
    RowBox[{"-", "0.023"}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892460359418805*^9, 3.8924603831101294`*^9}, {
  3.892517851991547*^9, 3.89251785299536*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"5b7edc40-d390-430e-b5cb-186c839528c8"],

Cell[BoxData[
 RowBox[{"0.11255770931230112`", "\[PlusMinus]", 
  "0.000032841185597997955`"}]], "Output",
 CellChangeTimes->{3.892531731546015*^9, 3.892536349574072*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"2737f300-8dc1-4f55-ac71-78d41dea3500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r32", "=", 
  RowBox[{"shM32N", "[", 
   RowBox[{"0.795", ",", "1.0", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892458864645434*^9, 3.892458874175837*^9}, {
  3.8924589937708473`*^9, 3.8924589963961163`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"9a1b13af-07b0-42a1-9e21-16e749c4f0c0"],

Cell[BoxData[
 RowBox[{"0.11265632390609648`", "\[PlusMinus]", 
  "0.000033069324681752714`"}]], "Output",
 CellChangeTimes->{3.892526979854784*^9, 3.892530789917747*^9, 
  3.892532358867587*^9, 3.892536538347609*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"c1f27ab6-5075-4068-ae51-7b3108cba763"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r14", "=", 
  RowBox[{"shM14N", "[", 
   RowBox[{"2.05", ",", "0", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.892458918006386*^9, 3.892458919525056*^9}, {
  3.89245899976394*^9, 3.89245900151783*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"4df51481-e081-43c9-bffa-d838290fd27c"],

Cell[BoxData[
 RowBox[{"0.11255936677451019`", "\[PlusMinus]", 
  "0.00003325549653067814`"}]], "Output",
 CellChangeTimes->{3.892496285906851*^9, 3.892517663165183*^9, 
  3.8925203078074837`*^9, 3.8925307902894497`*^9, 3.892531296006085*^9, 
  3.892532560275774*^9, 3.892536625282343*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"317f51c0-3be3-42db-8155-af8d61c00392"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r14a", "=", 
  RowBox[{"shM14N", "[", 
   RowBox[{"2.045", ",", "0", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.89246061516192*^9, 3.892460633971552*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"07ddce57-b98d-4c15-9c7f-3e7034105d18"],

Cell[BoxData[
 RowBox[{"0.11255713986243689`", "\[PlusMinus]", 
  "0.00003322908846292604`"}]], "Output",
 CellChangeTimes->{3.892517793214509*^9, 3.89252723093583*^9, 
  3.892530790648061*^9, 3.892531296856689*^9, 3.892532653532854*^9, 
  3.89253671225491*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"eaa92b2e-beef-4790-92b0-7018bb74542d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r14b", "=", 
  RowBox[{"shM14N", "[", 
   RowBox[{"2.055", ",", "0", ",", "n"}], "]"}]}]], "Input",
 CellLabel->
  "In[200]:=",ExpressionUUID->"1d7f2b34-d1df-4035-8ad5-5f3e998ff948"],

Cell[BoxData[
 RowBox[{"0.11256735347411223`", "\[PlusMinus]", 
  "0.00004420637721705938`"}]], "Output",
 CellChangeTimes->{3.892496336580229*^9, 3.8925181559825287`*^9, 
  3.892525050005041*^9, 3.89253079100303*^9, 3.892531297713382*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"10a28cfe-5ddf-4de7-b55d-bc4197faf4a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "r14"}], "}"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "r20"}], "}"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "r32"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
   "}"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.892458951459372*^9, 3.892458978193233*^9}, {
  3.892459011324806*^9, 3.892459132637093*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"bfca53a3-8acf-4ff8-bb49-a7eb01b60a83"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{1., 0.11249455567065553`}, {1., 0.11262321772311584`}}], 
         LineBox[{{1., 0.11262321772311584`}, {1., 0.11275187977557616`}}]}},
       Antialiasing->False,
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], 
      StyleBox[{{}, {
         LineBox[{{2., 0.11268392495472483`}, {2., 0.11280773577640994`}}], 
         LineBox[{{2., 0.11280773577640994`}, {2., 0.11293154659809505`}}]}},
       Antialiasing->False,
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], 
      StyleBox[{{}, {
         LineBox[{{3., 0.11266366319501936`}, {3., 0.11279206057415236`}}], 
         LineBox[{{3., 0.11279206057415236`}, {3., 0.11292045795328537`}}]}},
       Antialiasing->False,
       FontFamily->"Arial"]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1., 0.11275187977557616`}, 
            Offset[{3, 0}, {1., 0.11275187977557616`}]}, {{1., 
            0.11275187977557616`}, 
            Offset[{-3, 0}, {1., 0.11275187977557616`}]}, {{1., 
            0.11249455567065553`}, 
            Offset[{3, 0}, {1., 0.11249455567065553`}]}, {{1., 
            0.11249455567065553`}, 
            Offset[{-3, 0}, {1., 0.11249455567065553`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False,
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2., 0.11293154659809505`}, 
            Offset[{3, 0}, {2., 0.11293154659809505`}]}, {{2., 
            0.11293154659809505`}, 
            Offset[{-3, 0}, {2., 0.11293154659809505`}]}, {{2., 
            0.11268392495472483`}, 
            Offset[{3, 0}, {2., 0.11268392495472483`}]}, {{2., 
            0.11268392495472483`}, 
            Offset[{-3, 0}, {2., 0.11268392495472483`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False,
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3., 0.11292045795328537`}, 
            Offset[{3, 0}, {3., 0.11292045795328537`}]}, {{3., 
            0.11292045795328537`}, 
            Offset[{-3, 0}, {3., 0.11292045795328537`}]}, {{3., 
            0.11266366319501936`}, 
            Offset[{3, 0}, {3., 0.11266366319501936`}]}, {{3., 
            0.11266366319501936`}, 
            Offset[{-3, 0}, {3., 0.11266366319501936`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False,
       FontFamily->"Arial"]}}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{1., 0.11262321772311584`}, {1., 0.11262321772311584`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{2., 0.11280773577640994`}, {2., 0.11280773577640994`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{3., 0.11279206057415236`}, {3., 0.11279206057415236`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9583333333333357, 0.11247027839690936`},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.9583333333333357, 3.}, {0.11247027839690936`, 
   0.11293154659809505`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8925203197591143`*^9, 3.892527231013391*^9, 
  3.892530791037032*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"8789d1b1-5fa6-4bda-8854-21bf83967feb"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"r14", ",", "r20", ",", "r32"}], "}"}], "\[IndentingNewLine]", 
    "}"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<p-Value\>\"", ",", " ", "\"\<Moss-index\>\"", ",", " ", 
      "\"\<g-index\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0.1123", ",", " ", "0.1129"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8924590673962173`*^9, 3.892459079305307*^9}, {
   3.8924592352444763`*^9, 3.892459281346641*^9}, 3.892459320815229*^9, {
   3.8924594996420803`*^9, 3.892459624780456*^9}, {3.892517941623369*^9, 
   3.8925179443351192`*^9}, {3.8925203304430037`*^9, 3.89252034059309*^9}, {
   3.892530552381898*^9, 3.892530559262486*^9}, {3.89253353687348*^9, 
   3.892533542423685*^9}, {3.892536939036677*^9, 3.892536966660976*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"983c2ef9-0f2f-42b5-89a7-a82f27ead282"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.07632920611798977, 0.1123}, {4.256008739985433, 
        0.1123}}]}, {{}, {{{}, {{}, {{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.6789999999999999]]], 
             RGBColor[0.982864, 0.7431472, 0.3262672]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
                   0.11255936677451019`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 0.11255936677451019`]& , TagBoxNote -> 
               "0.11255936677451019"], 
              StyleBox["0.11255936677451019`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.11255936677451019`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.6789999999999999]]], 
             RGBColor[0.784, 0.47519999999999996`, 0.2]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
                   0.11269088114181576`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 0.11269088114181576`]& , TagBoxNote -> 
               "0.11269088114181576"], 
              StyleBox["0.11269088114181576`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.11269088114181576`, {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.6789999999999999]]], 
             RGBColor[0.4992, 0.5552, 0.8309304]], 
            TagBox[
             TooltipBox[
              TagBox[
               TagBox[
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{2.7439912600145666`, 0.}, {3.64639475600874, 
                   0.11265632390609648`}, "RoundingRadius" -> 0]}], 
                "DelayedMouseEffectStyle"], 
               StatusArea[#, 0.11265632390609648`]& , TagBoxNote -> 
               "0.11265632390609648"], 
              StyleBox["0.11265632390609648`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.11265632390609648`, {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
       StyleBox[{Antialiasing -> False, {
          Directive[
           Thickness[Tiny]], {
           
           LineBox[{{0.07632920611798977, 0.1123}, {4.327410050983248, 
            0.1123}}]}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
         StyleBox[{{
            Directive[
             Thickness[Tiny]], 
            LineBox[{{0.7439912600145666, 0.1123}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 
               0.1123}]}], 
            LineBox[{{3.64639475600874, 0.1123}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {3.64639475600874, 
               0.1123}]}], {{}, {}, {}, {}, {}}}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
          "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
        StripOnInput -> False]}}, {{{Antialiasing -> False, 
        Directive[], {}, {
         LineBox[{{1.1951930080116533`, 0.11252611127797951`}, {
          1.1951930080116533`, 0.11255936677451019`}}], 
         LineBox[{{1.1951930080116533`, 0.11255936677451019`}, {
          1.1951930080116533`, 0.11259262227104086`}}]}}, {
       Antialiasing -> False, 
        Directive[], {}, {
         LineBox[{{2.1951930080116533`, 0.11265803037661673`}, {
          2.1951930080116533`, 0.11269088114181576`}}], 
         LineBox[{{2.1951930080116533`, 0.11269088114181576`}, {
          2.1951930080116533`, 0.11272373190701479`}}]}}, {
       Antialiasing -> False, 
        Directive[], {}, {
         LineBox[{{3.1951930080116533`, 0.11262325458141473`}, {
          3.1951930080116533`, 0.11265632390609648`}}], 
         LineBox[{{3.1951930080116533`, 0.11265632390609648`}, {
          3.1951930080116533`, 0.11268939323077823`}}]}}}, {{
       Antialiasing -> False, 
        Directive[], 
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.1951930080116533`, 0.11259262227104086`}, 
            Offset[{3, 0}, {1.1951930080116533`, 0.11259262227104086`}]}, {{
            1.1951930080116533`, 0.11259262227104086`}, 
            Offset[{-3, 0}, {1.1951930080116533`, 0.11259262227104086`}]}, {{
            1.1951930080116533`, 0.11252611127797951`}, 
            Offset[{3, 0}, {1.1951930080116533`, 0.11252611127797951`}]}, {{
            1.1951930080116533`, 0.11252611127797951`}, 
            
            Offset[{-3, 0}, {1.1951930080116533`, 
             0.11252611127797951`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
       Antialiasing -> False, 
        Directive[], 
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.1951930080116533`, 0.11272373190701479`}, 
            Offset[{3, 0}, {2.1951930080116533`, 0.11272373190701479`}]}, {{
            2.1951930080116533`, 0.11272373190701479`}, 
            Offset[{-3, 0}, {2.1951930080116533`, 0.11272373190701479`}]}, {{
            2.1951930080116533`, 0.11265803037661673`}, 
            Offset[{3, 0}, {2.1951930080116533`, 0.11265803037661673`}]}, {{
            2.1951930080116533`, 0.11265803037661673`}, 
            
            Offset[{-3, 0}, {2.1951930080116533`, 
             0.11265803037661673`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
       Antialiasing -> False, 
        Directive[], 
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.1951930080116533`, 0.11268939323077823`}, 
            Offset[{3, 0}, {3.1951930080116533`, 0.11268939323077823`}]}, {{
            3.1951930080116533`, 0.11268939323077823`}, 
            Offset[{-3, 0}, {3.1951930080116533`, 0.11268939323077823`}]}, {{
            3.1951930080116533`, 0.11262325458141473`}, 
            Offset[{3, 0}, {3.1951930080116533`, 0.11262325458141473`}]}, {{
            3.1951930080116533`, 0.11262325458141473`}, 
            
            Offset[{-3, 0}, {3.1951930080116533`, 
             0.11262325458141473`}]}}], {{{1., 0.}, {0., 1.}}, {0., 
          0.}}]}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.07632920611798977, 0.1123}, 
     BaseStyle -> {FontFamily -> "Arial"}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {0.1123, 0.1129}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"p-Value\"", "\"Moss-index\"", "\"g-index\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.784, 0.47519999999999996`, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8925311475932627`*^9, 3.892531578130801*^9, 3.892532653875486*^9, 
   3.892533494080517*^9, 3.8925335437430487`*^9, 3.892534208623765*^9, {
   3.8925369274947653`*^9, 3.892536968072234*^9}},
 CellLabel->
  "Out[230]=",ExpressionUUID->"ba774feb-ba2c-40b0-aa73-91f30c0f865f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1085, 593},
WindowMargins->{{156, Automatic}, {Automatic, 54}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c0a3dca8-10f0-4c05-a784-e71a84a97fb2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 153, 3, 42, "Subsection",ExpressionUUID->"4f4cf1d8-f2d1-49b2-b312-b41c649c86d0"],
Cell[736, 27, 168, 3, 43, "Text",ExpressionUUID->"c8efe1c7-01bc-49b3-b76c-cb7a0773460c"],
Cell[907, 32, 523, 12, 78, "Input",ExpressionUUID->"d8bf14b2-dc0a-40e1-a30b-8b7bcbcd44bc"],
Cell[1433, 46, 427, 9, 51, "Input",ExpressionUUID->"1d132e17-1033-4b33-98bf-7e1016d58862"],
Cell[1863, 57, 358, 8, 51, "Input",ExpressionUUID->"720a1e1f-02e0-4bab-8467-9b41316284d1"],
Cell[2224, 67, 2017, 55, 186, "Input",ExpressionUUID->"7bfe74ec-87bd-462d-a1f5-1f06cf9bf641"],
Cell[4244, 124, 1634, 43, 234, "Input",ExpressionUUID->"e55862e9-f56c-4767-80fb-8021be861057"],
Cell[5881, 169, 1375, 37, 248, "Input",ExpressionUUID->"53cf14ed-f079-45a3-8773-42ec02455173"],
Cell[7259, 208, 991, 25, 78, "Input",ExpressionUUID->"99d1b81c-810d-45d2-a29f-5a98cab26628"],
Cell[8253, 235, 450, 12, 82, "Input",ExpressionUUID->"71f1c380-61db-4fdd-a698-f40d657ddbd9"],
Cell[8706, 249, 160, 3, 51, "Input",ExpressionUUID->"565e36ec-b493-439c-9e9d-4434bd1e92d5"],
Cell[8869, 254, 3626, 88, 598, "Input",ExpressionUUID->"a8be6fec-fd30-4251-94a9-df5ecb9bf47c"],
Cell[CellGroupData[{
Cell[12520, 346, 733, 19, 78, "Input",ExpressionUUID->"a8c6977b-ebc7-49f7-ab1a-f348e278e430"],
Cell[13256, 367, 862, 18, 51, "Output",ExpressionUUID->"d9838aa7-a842-44a0-8e66-682f36ca4e7a"],
Cell[14121, 387, 1502, 36, 51, "Output",ExpressionUUID->"83124ace-d6c9-407e-9183-3e853a7fe69c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15672, 429, 169, 3, 42, "Subsection",ExpressionUUID->"08679477-d019-4a1e-9406-dedb27a8c78c"],
Cell[15844, 434, 620, 12, 51, "Input",ExpressionUUID->"38f9af7f-8d26-49f5-af85-be85fc6b7403"],
Cell[16467, 448, 594, 13, 51, "Input",ExpressionUUID->"02920c6b-51f4-4bd8-a999-52cd7bf860a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17098, 466, 390, 6, 42, "Subsection",ExpressionUUID->"5e7f1786-fb15-4f3b-ac11-3bd05c954d39"],
Cell[CellGroupData[{
Cell[17513, 476, 380, 7, 51, "Input",ExpressionUUID->"7694ba3d-a90a-49ac-9779-02768894680b"],
Cell[17896, 485, 238, 4, 70, "Output",ExpressionUUID->"abb2b0a5-62ce-42e4-8bd0-9140b1ded2f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18171, 494, 744, 13, 51, "Input",ExpressionUUID->"f95f5866-6295-41c9-b953-51a67ec23e2d"],
Cell[18918, 509, 309, 5, 70, "Output",ExpressionUUID->"9f1e81d1-08ee-4674-9768-154f26ca5be2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19264, 519, 655, 11, 51, "Input",ExpressionUUID->"c31bcb45-5180-408c-8ce9-0f6a1f07f214"],
Cell[19922, 532, 307, 5, 70, "Output",ExpressionUUID->"ee904451-c07a-44ae-8805-d15db37b0d85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20266, 542, 522, 10, 51, "Input",ExpressionUUID->"06723046-0a50-4dcc-8018-b80f264bb2a6"],
Cell[20791, 554, 307, 5, 70, "Output",ExpressionUUID->"5109a932-2c04-4025-bd56-107704ca2d89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21135, 564, 462, 7, 51, "Input",ExpressionUUID->"d3cddb5c-2500-4b78-89b1-db1e8c1d0d96"],
Cell[21600, 573, 306, 5, 70, "Output",ExpressionUUID->"5aadf246-54e9-4a08-b4d2-3125ca7cda87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21943, 583, 1093, 18, 51, "Input",ExpressionUUID->"3ad4cc1d-0033-437f-bc89-90b81446785b"],
Cell[23039, 603, 309, 5, 70, "Output",ExpressionUUID->"f33b57f0-0824-4d82-9410-dcdbb36634da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23385, 613, 699, 13, 51, "Input",ExpressionUUID->"8afb6bc9-e44c-432c-be57-ac25cf66fd0b"],
Cell[24087, 628, 313, 5, 70, "Output",ExpressionUUID->"a10f49a7-3ec4-495b-b8d2-5b479d6a7804"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24449, 639, 323, 5, 41, "Subsection",ExpressionUUID->"d5626012-6c5d-495a-b7c9-e10ed4edbb8e"],
Cell[24775, 646, 621, 11, 51, "Input",ExpressionUUID->"47669576-38a6-48d9-bd34-043292119571"],
Cell[25399, 659, 217, 4, 51, "Input",ExpressionUUID->"2e8ad3ab-2334-4d76-8160-51e9e60b99d3"],
Cell[CellGroupData[{
Cell[25641, 667, 570, 11, 51, "Input",ExpressionUUID->"87494a31-f1d6-4bd1-8995-0d7eb1065a57"],
Cell[26214, 680, 306, 5, 70, "Output",ExpressionUUID->"8d2e4cd1-712a-436e-a722-308d1eed5c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26557, 690, 468, 11, 51, "Input",ExpressionUUID->"917952fb-a8e7-4c88-ba0c-3d16c668fd32"],
Cell[27028, 703, 302, 5, 70, "Output",ExpressionUUID->"a2fae6ec-743c-48b9-86db-68964e724ac4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27367, 713, 558, 11, 51, "Input",ExpressionUUID->"a064c1d5-9dd8-476f-b8ff-dbc03374dcd1"],
Cell[27928, 726, 307, 5, 70, "Output",ExpressionUUID->"b87c5003-a87e-4ec3-a913-ff7e978bd750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28272, 736, 468, 10, 51, "Input",ExpressionUUID->"80eb4451-d2de-45da-89af-f23146f1d8d6"],
Cell[28743, 748, 288, 5, 70, "Output",ExpressionUUID->"4993919f-8062-43c1-8443-22a4fa4f9621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29068, 758, 422, 9, 51, "Input",ExpressionUUID->"19cd263b-7300-4475-be1e-f3a1bbf2c867"],
Cell[29493, 769, 285, 5, 70, "Output",ExpressionUUID->"e0ee02ae-b9f1-4ffc-b333-428d0161c76c"]
}, Open  ]],
Cell[29793, 777, 696, 11, 51, "Input",ExpressionUUID->"e506393a-4548-4a53-87c9-ffdf6005ea0d"],
Cell[30492, 790, 259, 5, 51, "Input",ExpressionUUID->"d8a496cd-a986-4f3f-8754-be3e0fa78fdd"],
Cell[30754, 797, 414, 9, 51, "Input",ExpressionUUID->"812eae1f-8bff-4f15-b828-5b26f9642d58"],
Cell[31171, 808, 376, 7, 51, "Input",ExpressionUUID->"2b029c60-2673-4760-b3fe-49f7a731e427"],
Cell[CellGroupData[{
Cell[31572, 819, 3293, 85, 520, "Input",ExpressionUUID->"5df03ea6-3bcf-4d5d-9c6a-4b7cc388400f"],
Cell[34868, 906, 3514, 66, 70, "Output",ExpressionUUID->"a8c6f566-dc48-43f3-b6b9-3ba5e2596251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38419, 977, 379, 8, 51, "Input",ExpressionUUID->"75e87854-97bd-4825-a8c6-802c29142dcb"],
Cell[38801, 987, 236, 3, 70, "Output",ExpressionUUID->"97ee6801-9548-4a72-bbba-d8f7af15d92a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39074, 995, 466, 11, 51, "Input",ExpressionUUID->"e470f69f-8b93-4c20-9a35-d3934d88258f"],
Cell[39543, 1008, 236, 3, 70, "Output",ExpressionUUID->"89713842-4f14-4cc8-8480-bb102a4ea352"]
}, Open  ]],
Cell[39794, 1014, 372, 10, 51, "Input",ExpressionUUID->"3855a7a2-a15f-4806-8508-f3570d3d968c"],
Cell[CellGroupData[{
Cell[40191, 1028, 336, 7, 51, "Input",ExpressionUUID->"04843c40-d761-4bd5-a724-5b51188ce08c"],
Cell[40530, 1037, 225, 3, 70, "Output",ExpressionUUID->"05645dec-63e4-4d49-a91a-52a69c9d8521"]
}, Open  ]],
Cell[40770, 1043, 528, 11, 104, "Input",ExpressionUUID->"870dbba3-148c-40f0-b3b2-3a7b51335c47"]
}, Closed]],
Cell[CellGroupData[{
Cell[41335, 1059, 248, 4, 41, "Subsection",ExpressionUUID->"bd8d119b-d1e7-44a4-a52e-87cfc5a6832b"],
Cell[41586, 1065, 309, 6, 51, "Input",ExpressionUUID->"60cee4bc-e606-4eb5-8a39-dba4a2812d39"],
Cell[CellGroupData[{
Cell[41920, 1075, 1234, 33, 208, "Input",ExpressionUUID->"3c244c23-0c4d-4a38-85ea-633840ecce39"],
Cell[43157, 1110, 1183, 20, 70, "Output",ExpressionUUID->"d81e6d58-fc5f-4421-8c1f-325f91a043af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44377, 1135, 620, 10, 51, "Input",ExpressionUUID->"4e325b7e-ef20-4324-92e3-924a577ad2ef"],
Cell[45000, 1147, 183113, 3510, 70, "Output",ExpressionUUID->"536c0853-5f81-41c8-ad70-b5457bfb7bea"]
}, Open  ]],
Cell[228128, 4660, 435, 11, 51, "Input",ExpressionUUID->"176b11b4-56c5-4e39-b54e-9d6be2de5a02"],
Cell[228566, 4673, 2669, 67, 390, "Input",ExpressionUUID->"cf960611-826b-45e3-bc8e-8532f989fa4a"],
Cell[CellGroupData[{
Cell[231260, 4744, 395, 8, 51, "Input",ExpressionUUID->"332717e4-74bd-4692-ae49-6a666b76c651"],
Cell[231658, 4754, 268, 5, 70, "Output",ExpressionUUID->"706da550-f1f6-41d6-925b-cfcfaeb760d9"]
}, Open  ]],
Cell[231941, 4762, 745, 18, 51, "Input",ExpressionUUID->"2f39dd8a-877f-4fd8-b498-99dcd78d6037"],
Cell[CellGroupData[{
Cell[232711, 4784, 521, 12, 51, "Input",ExpressionUUID->"30deb7bb-5bbf-430c-bd28-bb891ff26509"],
Cell[233235, 4798, 98807, 1934, 70, "Output",ExpressionUUID->"6e6a19bb-519e-4207-9740-f6d6bebfbf6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332079, 6737, 426, 10, 51, "Input",ExpressionUUID->"c1d66ae9-569f-46c3-9c6c-9fe99b3836ad"],
Cell[332508, 6749, 126047, 2509, 70, "Output",ExpressionUUID->"fda11108-e7a4-40f5-b97c-3415cd5502af"]
}, Open  ]],
Cell[458570, 9261, 3434, 92, 208, "Input",ExpressionUUID->"7d565826-7f76-41ed-9285-6e8766d7c391"],
Cell[462007, 9355, 441, 9, 51, "Input",ExpressionUUID->"b17f8ced-bbd9-40ad-8f29-4cf4f10d8560"]
}, Closed]],
Cell[CellGroupData[{
Cell[462485, 9369, 242, 4, 41, "Subsection",ExpressionUUID->"eac29dc3-ffb9-4189-ae37-62b0961b373e"],
Cell[CellGroupData[{
Cell[462752, 9377, 321, 4, 51, "Input",ExpressionUUID->"00815652-bf83-4001-8aa9-9b621f9df248"],
Cell[463076, 9383, 126021, 2509, 70, "Output",ExpressionUUID->"db732fab-aede-4776-8ded-b6c46c6415c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589134, 11897, 176, 2, 51, "Input",ExpressionUUID->"67358896-2e92-47c7-a66b-3bdda412471c"],
Cell[589313, 11901, 180668, 3618, 70, "Output",ExpressionUUID->"34a07f80-e552-4c94-9f48-e88fd1d8a99b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770018, 15524, 1860, 38, 234, "Input",ExpressionUUID->"001ea2e4-62e4-4aaa-a1d4-e3ae4b2d1829"],
Cell[771881, 15564, 5309, 127, 70, "Output",ExpressionUUID->"d65b73ec-76a7-4161-9e0e-9800acc5ae15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777227, 15696, 1784, 41, 234, "Input",ExpressionUUID->"6b6352dd-6c70-409c-a7ed-a70f45f3cac9"],
Cell[779014, 15739, 4599, 113, 70, "Output",ExpressionUUID->"0f4fa520-32dd-469f-88a1-367ed81d16b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783650, 15857, 576, 11, 51, "Input",ExpressionUUID->"1d72ea0a-69ea-4791-b7da-8dd5468a20f4"],
Cell[784229, 15870, 184297, 3466, 70, "Output",ExpressionUUID->"f878f154-87a9-4640-85fc-5ea8f80d04d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968563, 19341, 555, 13, 130, "Input",ExpressionUUID->"99731d28-9a44-468b-b117-9080e5dcafe9"],
Cell[969121, 19356, 5155, 123, 70, "Output",ExpressionUUID->"f1c22629-b53b-4257-bd5e-d6d5c5a1c1ec"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[974325, 19485, 289, 4, 41, "Subsection",ExpressionUUID->"64966230-c00f-4c00-9795-bad0c7ee1069"],
Cell[974617, 19491, 424, 9, 51, "Input",ExpressionUUID->"3122e93f-25ab-4f21-9466-64b09e6a48d7"],
Cell[CellGroupData[{
Cell[975066, 19504, 806, 13, 51, "Input",ExpressionUUID->"63f23d75-17c3-47ed-b54c-8ecb3f7bb301"],
Cell[975875, 19519, 4777, 118, 302, "Output",ExpressionUUID->"fd824bdf-bab9-4952-a590-7dfe93b9a51c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980689, 19642, 1043, 20, 130, "Input",ExpressionUUID->"9bb06c9a-b635-41de-88cc-73292431abac"],
Cell[981735, 19664, 4620, 115, 70, "Output",ExpressionUUID->"481b9bba-64fa-487c-856b-0452d3958d43"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[986404, 19785, 339, 5, 41, "Subsection",ExpressionUUID->"461467d7-8212-49d3-916c-b6def20576c3"],
Cell[986746, 19792, 452, 10, 51, "Input",ExpressionUUID->"2fdc68bc-65d0-4d05-8ff6-4b471c186d72"],
Cell[CellGroupData[{
Cell[987223, 19806, 806, 13, 51, "Input",ExpressionUUID->"3e382268-e028-4f51-9054-3ad0d574cabf"],
Cell[988032, 19821, 4793, 118, 70, "Output",ExpressionUUID->"f1641705-7819-4fbd-8a7d-559a2e3c4823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992862, 19944, 1096, 21, 130, "Input",ExpressionUUID->"23923018-d684-41d1-96fe-395a82c55278"],
Cell[993961, 19967, 4590, 115, 70, "Output",ExpressionUUID->"5f55fed8-17ea-4564-8b6f-3e338d7744fb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[998600, 20088, 229, 4, 41, "Subsection",ExpressionUUID->"3fbacd10-c07b-41af-b25c-d9cba457eef9"],
Cell[CellGroupData[{
Cell[998854, 20096, 216, 4, 41, "Subsubsection",ExpressionUUID->"8adf1496-2492-4465-89e2-41ea67ee9cec"],
Cell[999073, 20102, 235, 4, 51, "Input",ExpressionUUID->"e18a4dbb-dc6f-4359-9593-5949a867db27"],
Cell[CellGroupData[{
Cell[999333, 20110, 601, 15, 51, "Input",ExpressionUUID->"9c64219a-d132-435c-9f99-c78840f78893"],
Cell[999937, 20127, 60857, 1128, 70, "Output",ExpressionUUID->"68febbf0-1191-4c76-81e6-1b8d3cca35aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1060831, 21260, 2045, 46, 286, "Input",ExpressionUUID->"9d163b7f-4f28-4bd5-8413-3ddaa13eabdc"],
Cell[1062879, 21308, 19883, 347, 70, "Output",ExpressionUUID->"466134a1-a67c-4ecf-b94e-f1f809e77c43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082799, 21660, 2217, 49, 286, "Input",ExpressionUUID->"a2e28d99-75ee-4711-ba28-022aaadb6330"],
Cell[1085019, 21711, 19919, 347, 70, "Output",ExpressionUUID->"5971af18-0f4e-4013-9d22-db9005ea31f6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1104987, 22064, 261, 4, 40, "Subsubsection",ExpressionUUID->"1b28e14a-0ab9-443a-b381-2c7da4e680d8"],
Cell[CellGroupData[{
Cell[1105273, 22072, 548, 14, 51, "Input",ExpressionUUID->"565733fc-b3a9-41ff-aaa1-97daad2d241a"],
Cell[1105824, 22088, 60852, 1128, 70, "Output",ExpressionUUID->"ba143080-8739-4392-9ceb-3c2b86e5d29f"]
}, Open  ]],
Cell[1166691, 23219, 655, 15, 73, "Text",ExpressionUUID->"90abd3a3-2556-49ca-9f28-e159214f4f47"],
Cell[CellGroupData[{
Cell[1167371, 23238, 1918, 45, 286, "Input",ExpressionUUID->"ed6f1265-02a3-4031-8256-9b6380b6220a"],
Cell[1169292, 23285, 17215, 303, 70, "Output",ExpressionUUID->"3a811269-ba96-4df1-969d-0f699e077432"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1186556, 23594, 218, 4, 40, "Subsubsection",ExpressionUUID->"507022c4-24c1-4844-83a5-dcbf3a7836d1"],
Cell[CellGroupData[{
Cell[1186799, 23602, 596, 15, 51, "Input",ExpressionUUID->"84ce365c-f28b-4758-aa56-27df99d4d922"],
Cell[1187398, 23619, 60860, 1127, 70, "Output",ExpressionUUID->"63efd85b-17d5-486c-a0e1-0e649479f23e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1248295, 24751, 2155, 52, 312, "Input",ExpressionUUID->"42a5c055-f0c9-4623-89c4-7cfa56a30532"],
Cell[1250453, 24805, 19654, 343, 70, "Output",ExpressionUUID->"0bc12758-bd52-4a76-8c63-34834defdbd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1270144, 25153, 362, 8, 51, "Input",ExpressionUUID->"949685b9-8161-4e1a-84b9-1f19282cc285"],
Cell[1270509, 25163, 38331, 656, 70, "Output",ExpressionUUID->"c2aac3f2-0f74-4224-8fbb-920db9d615c8"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1308901, 25826, 268, 4, 41, "Subsection",ExpressionUUID->"6f934b23-5476-4ee8-b2b4-0542a1ea6f45"],
Cell[1309172, 25832, 2059, 49, 286, "Input",ExpressionUUID->"9fec5f42-608e-4f45-a0c2-1dde82975a15"]
}, Closed]],
Cell[CellGroupData[{
Cell[1311268, 25886, 462, 7, 41, "Subsection",ExpressionUUID->"22cb7753-475f-4950-8e9a-2aff206de546"],
Cell[1311733, 25895, 1005, 26, 156, "Input",ExpressionUUID->"020fd48c-7bdf-4092-a879-67c1ef5450dd"],
Cell[1312741, 25923, 1835, 40, 130, "Input",ExpressionUUID->"0ff4c4ee-e9b1-4fac-ba15-bbb8d9a9c570"],
Cell[1314579, 25965, 865, 20, 51, "Input",ExpressionUUID->"2ecd6576-b7fa-473d-97d0-c801e6b43e73"],
Cell[CellGroupData[{
Cell[1315469, 25989, 739, 16, 156, "Input",ExpressionUUID->"7d9851a0-5966-4a91-85d0-786c4c302217"],
Cell[1316211, 26007, 177015, 2973, 496, "Output",ExpressionUUID->"a43ca46c-8b5c-4999-a5e3-6e0a75ecf275"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1493275, 28986, 413, 6, 41, "Subsection",ExpressionUUID->"fa13ef44-6239-4d5f-a712-65f88cd56462"],
Cell[1493691, 28994, 1098, 27, 156, "Input",ExpressionUUID->"8c076681-fcb3-4e04-accd-4a49bfb8b6fc"],
Cell[1494792, 29023, 1931, 41, 182, "Input",ExpressionUUID->"eb3e0a7f-70f5-4c96-b38f-8dbaff4603fb"],
Cell[1496726, 29066, 877, 20, 51, "Input",ExpressionUUID->"355741b6-61ea-40ec-aba2-5fa6cb034e20"],
Cell[CellGroupData[{
Cell[1497628, 29090, 693, 16, 156, "Input",ExpressionUUID->"1cfaf6c4-f4b4-4626-9252-561875a44a0a"],
Cell[1498324, 29108, 163655, 2752, 70, "Output",ExpressionUUID->"2453f586-f51d-4413-90f8-75743b3afe7e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1662028, 31866, 309, 5, 41, "Subsection",ExpressionUUID->"7530264e-c265-4629-8d6b-082850e2e168"],
Cell[1662340, 31873, 1895, 41, 130, "Input",ExpressionUUID->"b3765f0e-452f-4f59-8b19-4d72aa3b2ca8"],
Cell[1664238, 31916, 1156, 24, 51, "Input",ExpressionUUID->"1b0025ef-0b6c-4620-b41e-dedfa5e54765"],
Cell[CellGroupData[{
Cell[1665419, 31944, 914, 21, 156, "Input",ExpressionUUID->"6c26f93b-a35c-474d-ac78-ccf2e673d3f6"],
Cell[1666336, 31967, 233093, 4113, 70, "Output",ExpressionUUID->"f50a44bb-d2a2-4366-8f56-f90823be8034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1899466, 36085, 893, 23, 51, "Input",ExpressionUUID->"78b59404-8355-476b-b78e-25f722c8fc40"],
Cell[1900362, 36110, 1169, 20, 70, "Message",ExpressionUUID->"c0358ea9-dbb8-40a8-8248-97319649b262"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1901568, 36135, 820, 20, 156, "Input",ExpressionUUID->"ea575283-d01f-4281-8ab2-8f3a74b6df3d"],
Cell[1902391, 36157, 232584, 4098, 70, "Output",ExpressionUUID->"ef9ef608-b17c-4206-97f9-411675d73a55"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2135024, 40261, 313, 5, 41, "Subsection",ExpressionUUID->"4dd19af3-465a-410d-9ea2-61faad231029"],
Cell[2135340, 40268, 1950, 39, 161, "Input",ExpressionUUID->"38395422-b3ea-4c19-b377-bc9972c313f5"],
Cell[CellGroupData[{
Cell[2137315, 40311, 642, 17, 51, "Input",ExpressionUUID->"31499883-a181-4119-b487-65659385c1eb"],
Cell[2137960, 40330, 93311, 1817, 70, "Output",ExpressionUUID->"1c1328e1-b26e-4b99-8889-f78dfe917bb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2231308, 42152, 943, 20, 51, "Input",ExpressionUUID->"d6972569-e99b-49f8-a0d3-b064e4bb7e98"],
Cell[2232254, 42174, 789, 15, 70, "Message",ExpressionUUID->"18144c9a-50b0-485f-a9af-537258e00852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2233080, 42194, 988, 22, 156, "Input",ExpressionUUID->"b1785ff8-2350-4f11-ac19-0dbd655c8b32"],
Cell[2234071, 42218, 2525, 55, 70, "Output",ExpressionUUID->"356a4cc2-a085-4063-8ba2-02cd3ff1457d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2236645, 42279, 480, 12, 41, "Subsection",ExpressionUUID->"05396c5d-6a83-4e1e-b5be-2a9bee19953c"],
Cell[CellGroupData[{
Cell[2237150, 42295, 227, 4, 51, "Input",ExpressionUUID->"f20de964-d944-4544-87e5-072e24b2866e"],
Cell[2237380, 42301, 126023, 2510, 70, "Output",ExpressionUUID->"38403c24-7058-44a0-bc0b-16b967e1f0c6"]
}, Open  ]],
Cell[2363418, 44814, 194, 5, 43, "Text",ExpressionUUID->"5c2a1a40-41ef-4d98-8b67-5f040fdc3947"],
Cell[2363615, 44821, 978, 20, 51, "Input",ExpressionUUID->"59f6ae0c-1718-472f-8bb9-0f8efd12891e"],
Cell[2364596, 44843, 1671, 46, 130, "Input",ExpressionUUID->"e08fdcb5-26ed-492f-97e5-cd6ec9bc829b"],
Cell[CellGroupData[{
Cell[2366292, 44893, 372, 8, 51, "Input",ExpressionUUID->"b281205c-88ce-4024-bae1-a557059b5aeb"],
Cell[2366667, 44903, 4734, 116, 70, "Output",ExpressionUUID->"0307b004-cd59-4564-b681-1c99f42a219a"]
}, Open  ]],
Cell[2371416, 45022, 1217, 25, 51, "Input",ExpressionUUID->"9eb61896-e99f-41b3-a1ed-4da7c4ed5cc8"],
Cell[2372636, 45049, 2014, 50, 156, "Input",ExpressionUUID->"40062b67-c874-4577-aa98-565de01e75f2"],
Cell[CellGroupData[{
Cell[2374675, 45103, 204, 5, 51, "Input",ExpressionUUID->"3814eae0-3b0b-4442-81a3-44aec2626ef8"],
Cell[2374882, 45110, 30629, 686, 70, "Output",ExpressionUUID->"87ffc9cb-eaa1-4303-94e3-54dfeaf02b40"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2405560, 45802, 550, 13, 41, "Subsection",ExpressionUUID->"fdb79382-5bdb-4bbd-93ae-c154c6bf6160"],
Cell[2406113, 45817, 194, 5, 43, "Text",ExpressionUUID->"20b0f8f7-69cc-48df-ace0-3da783ce3880"],
Cell[2406310, 45824, 1267, 25, 78, "Input",ExpressionUUID->"b12e0ff6-967a-4f0d-b121-95f778ecb8f8"],
Cell[2407580, 45851, 2441, 55, 156, "Input",ExpressionUUID->"759a6d8c-5e63-456a-ab66-07fd769d58d0"],
Cell[CellGroupData[{
Cell[2410046, 45910, 279, 6, 51, "Input",ExpressionUUID->"1ea0638f-fb43-45f6-a5a9-fea632adeef3"],
Cell[2410328, 45918, 26805, 612, 70, "Output",ExpressionUUID->"55708ebb-69fa-49dd-9199-08f8217c5c53"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2437182, 46536, 323, 9, 41, "Subsection",ExpressionUUID->"b8bd9fac-6881-472e-b919-59aeca396d17"],
Cell[2437508, 46547, 3024, 73, 390, "Input",ExpressionUUID->"8132e1b0-39ed-489c-bcdc-db27dff847e8"],
Cell[CellGroupData[{
Cell[2440557, 46624, 249, 5, 51, "Input",ExpressionUUID->"d9b44e0f-bceb-40ff-966b-03f5111e099f"],
Cell[2440809, 46631, 278, 6, 70, "Output",ExpressionUUID->"562f418d-78c1-4ee8-b649-94ff757054fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2441124, 46642, 247, 5, 51, "Input",ExpressionUUID->"088c9cfc-b01f-45a4-997c-08a7a9104304"],
Cell[2441374, 46649, 277, 6, 70, "Output",ExpressionUUID->"8977809f-4dc6-4615-8e9f-c297625ae082"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2441688, 46660, 248, 5, 51, "Input",ExpressionUUID->"74153d37-5fdb-4776-a232-f404ad2468e8"],
Cell[2441939, 46667, 276, 6, 70, "Output",ExpressionUUID->"28581898-60b8-4c1b-9f11-262910c8c9e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2442252, 46678, 248, 5, 51, "Input",ExpressionUUID->"6ac7f658-2acf-4841-ab61-6e8d720df27b"],
Cell[2442503, 46685, 279, 6, 70, "Output",ExpressionUUID->"c0b89db0-1e19-4cd2-8070-294ba12bf737"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2442819, 46696, 250, 5, 51, "Input",ExpressionUUID->"17f0c7c6-7966-4dab-8414-f04d3bedbb74"],
Cell[2443072, 46703, 280, 6, 70, "Output",ExpressionUUID->"78092191-17bb-40b9-a371-00701f001623"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2443389, 46714, 250, 5, 51, "Input",ExpressionUUID->"49a7fa23-6d7f-40aa-9a0a-04253b56d516"],
Cell[2443642, 46721, 276, 6, 70, "Output",ExpressionUUID->"0ca5d665-9a20-4eff-aaed-301619ae654f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2443955, 46732, 260, 5, 51, "Input",ExpressionUUID->"7394d3a8-2c04-45aa-9577-9c762941466d"],
Cell[2444218, 46739, 276, 6, 70, "Output",ExpressionUUID->"b2a35a1a-2ce1-4bd6-9df8-ab3ce4f22625"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2444543, 46751, 611, 13, 41, "Subsection",ExpressionUUID->"26410a42-65e1-4586-a893-64559b44608d"],
Cell[2445157, 46766, 194, 5, 43, "Text",ExpressionUUID->"143c9075-e3c0-4a23-8969-82bc36ad55f3"],
Cell[CellGroupData[{
Cell[2445376, 46775, 229, 4, 51, "Input",ExpressionUUID->"9e4b6359-884f-4903-b8db-90317f1625b3"],
Cell[2445608, 46781, 136856, 2738, 70, "Output",ExpressionUUID->"fa69b739-bd1b-4b9d-ad8b-de5b27c3355f"]
}, Open  ]],
Cell[2582479, 49522, 1408, 28, 78, "Input",ExpressionUUID->"a46439df-40d1-4e16-aec1-7d34481209fe"],
Cell[2583890, 49552, 530, 12, 78, "Input",ExpressionUUID->"c0f82535-18e3-4f27-9398-118165023fab"],
Cell[2584423, 49566, 1984, 34, 51, "Input",ExpressionUUID->"bd1f14ba-14f0-48d4-bc68-2348f965ee76"],
Cell[2586410, 49602, 577, 13, 78, "Input",ExpressionUUID->"9fa6429a-5505-4a3e-afef-80f2de7d74d4"],
Cell[2586990, 49617, 525, 15, 51, "Input",ExpressionUUID->"16b05afa-8afb-418b-b18d-ae9a45499ca6"],
Cell[CellGroupData[{
Cell[2587540, 49636, 386, 9, 51, "Input",ExpressionUUID->"a2218c17-c871-4834-b3f5-435737ab01f0"],
Cell[2587929, 49647, 27993, 638, 70, "Output",ExpressionUUID->"079e70f7-9a93-4175-89f9-837b885f1b3e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2615971, 50291, 562, 12, 41, "Subsection",ExpressionUUID->"b4ea1d94-cb04-48fc-9e15-d94c9ab7487d"],
Cell[2616536, 50305, 194, 5, 43, "Text",ExpressionUUID->"024adc26-0611-4f43-9ab9-df7b6f8ff795"],
Cell[CellGroupData[{
Cell[2616755, 50314, 178, 3, 51, "Input",ExpressionUUID->"c905f3bb-9b7e-43e5-9435-ebf01935a878"],
Cell[2616936, 50319, 147544, 2966, 70, "Output",ExpressionUUID->"74735abb-7cb4-47b9-afd8-f3e517d649ca"]
}, Open  ]],
Cell[2764495, 53288, 1267, 25, 73, "Input",ExpressionUUID->"09df9589-9e2f-4d63-93c3-99c01b344a81"],
Cell[2765765, 53315, 2640, 57, 156, "Input",ExpressionUUID->"07425afe-0209-4425-8c82-ced216fd676f"],
Cell[CellGroupData[{
Cell[2768430, 53376, 297, 7, 51, "Input",ExpressionUUID->"ecef9d3f-f598-4eeb-ba07-f00dc24a2291"],
Cell[2768730, 53385, 27306, 614, 70, "Output",ExpressionUUID->"d5dd32a4-2ae1-4776-8739-94287527ebe8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2796073, 54004, 1386, 36, 104, "Input",ExpressionUUID->"eeaa0573-2a8b-4ee4-8bdf-bcca135324d7"],
Cell[2797462, 54042, 56225, 1151, 70, "Output",ExpressionUUID->"e06ce8ce-f93d-4349-a6b8-4f9c06b4fe7b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2853736, 55199, 613, 13, 41, "Subsection",ExpressionUUID->"2b0d9248-cc9b-49b0-978b-32da002db8a6"],
Cell[2854352, 55214, 194, 5, 43, "Text",ExpressionUUID->"83e7ce2e-d86c-40b9-bbc1-ffeb373f4986"],
Cell[CellGroupData[{
Cell[2854571, 55223, 229, 4, 51, "Input",ExpressionUUID->"a744ec68-f710-407c-9802-72f5e9c10607"],
Cell[2854803, 55229, 180670, 3619, 70, "Output",ExpressionUUID->"ddd01aa1-2024-4f01-8921-d3fc64779ec5"]
}, Open  ]],
Cell[3035488, 58851, 2244, 51, 99, "Input",ExpressionUUID->"c8b6ca69-488d-4aef-a338-d30d76239944"],
Cell[CellGroupData[{
Cell[3037757, 58906, 378, 8, 51, "Input",ExpressionUUID->"03e633c8-f6ae-4aac-bc44-93106453b7c0"],
Cell[3038138, 58916, 322, 7, 70, "Output",ExpressionUUID->"c2512a93-f2c7-43cc-87e0-5872489eb49d"]
}, Open  ]],
Cell[3038475, 58926, 2541, 45, 104, "Input",ExpressionUUID->"7160e3b1-100f-40d0-b360-fe4cc0996f4b"],
Cell[3041019, 58973, 238, 6, 51, "Input",ExpressionUUID->"dd126edb-4dfc-449f-8f22-fbed74af2365"],
Cell[3041260, 58981, 1190, 27, 104, "Input",ExpressionUUID->"56b9b514-65e1-4857-8797-34ae041ada1c"],
Cell[CellGroupData[{
Cell[3042475, 59012, 435, 9, 51, "Input",ExpressionUUID->"3921fd9d-2e74-490c-adf9-648d263e3b15"],
Cell[3042913, 59023, 17547, 392, 70, "Output",ExpressionUUID->"3c2b6798-c4ff-47cf-a208-9724020265d2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3060509, 59421, 237, 4, 41, "Subsection",ExpressionUUID->"5936a48f-8b30-4a16-b0b9-e73071cf4351"],
Cell[CellGroupData[{
Cell[3060771, 59429, 637, 17, 51, "Input",ExpressionUUID->"f45d0cac-1f0c-4b64-bd2b-d606169fc40e"],
Cell[3061411, 59448, 98791, 1935, 432, "Output",ExpressionUUID->"99bd69b6-7334-44d8-9ba9-cdc24a7265bc"]
}, Open  ]],
Cell[3160217, 61386, 515, 9, 51, "Input",ExpressionUUID->"bdfd2139-e4be-4ac5-a92f-cd23a5cd1404"],
Cell[3160735, 61397, 242, 6, 51, "Input",ExpressionUUID->"defb9700-4ab4-4557-853c-753a94defee3"],
Cell[CellGroupData[{
Cell[3161002, 61407, 450, 9, 51, "Input",ExpressionUUID->"8589f797-ad33-45da-9167-4b7b0faaada3"],
Cell[3161455, 61418, 229, 5, 69, "Output",ExpressionUUID->"b407b72f-cd1d-4ab8-8176-49283e958d9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3161721, 61428, 357, 8, 51, "Input",ExpressionUUID->"5b7edc40-d390-430e-b5cb-186c839528c8"],
Cell[3162081, 61438, 253, 5, 69, "Output",ExpressionUUID->"2737f300-8dc1-4f55-ac71-78d41dea3500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3162371, 61448, 326, 7, 51, "Input",ExpressionUUID->"9a1b13af-07b0-42a1-9e21-16e749c4f0c0"],
Cell[3162700, 61457, 300, 6, 69, "Output",ExpressionUUID->"c1f27ab6-5075-4068-ae51-7b3108cba763"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3163037, 61468, 317, 7, 51, "Input",ExpressionUUID->"4df51481-e081-43c9-bffa-d838290fd27c"],
Cell[3163357, 61477, 372, 7, 69, "Output",ExpressionUUID->"317f51c0-3be3-42db-8155-af8d61c00392"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3163766, 61489, 271, 6, 51, "Input",ExpressionUUID->"07ddce57-b98d-4c15-9c7f-3e7034105d18"],
Cell[3164040, 61497, 344, 7, 69, "Output",ExpressionUUID->"eaa92b2e-beef-4790-92b0-7018bb74542d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3164421, 61509, 206, 5, 51, "Input",ExpressionUUID->"1d7f2b34-d1df-4035-8ad5-5f3e998ff948"],
Cell[3164630, 61516, 322, 6, 69, "Output",ExpressionUUID->"10a28cfe-5ddf-4de7-b55d-bc4197faf4a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3164989, 61527, 723, 19, 208, "Input",ExpressionUUID->"bfca53a3-8acf-4ff8-bb49-a7eb01b60a83"],
Cell[3165715, 61548, 7065, 173, 312, "Output",ExpressionUUID->"8789d1b1-5fa6-4bda-8854-21bf83967feb"]
}, Closed]],
Cell[CellGroupData[{
Cell[3172817, 61726, 1239, 26, 203, "Input",ExpressionUUID->"983c2ef9-0f2f-42b5-89a7-a82f27ead282"],
Cell[3174059, 61754, 16189, 354, 322, "Output",ExpressionUUID->"ba774feb-ba2c-40b0-aa73-91f30c0f865f"]
}, Open  ]]
}, Open  ]]
}
]
*)

